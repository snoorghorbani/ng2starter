{"version":3,"file":"soushians-diagram.js.map","sources":["ng://@soushians/diagram/lib/diagram.config.ts","ng://@soushians/diagram/lib/models/get-diagrams-api.model.ts","ng://@soushians/diagram/lib/actions/diagrams.actions.ts","ng://@soushians/diagram/lib/reducers/diagrams.reducer.ts","ng://@soushians/diagram/lib/models/edit-diagram-api.model.ts","ng://@soushians/diagram/lib/actions/edit-diagram.actions.ts","ng://@soushians/diagram/lib/reducers/edit-diagram.reducer.ts","ng://@soushians/diagram/lib/reducers/parent-guard.reducer.ts","ng://@soushians/diagram/lib/reducers/index.ts","ng://@soushians/diagram/lib/dumb-components/server-status-diagram/server-status-diagram.component.ts","ng://@soushians/diagram/lib/dumb-components/diagram-partial-config-edit/diagram-partial-config-edit.component.ts","ng://@soushians/diagram/lib/dumb-components/pie-diagram-partial-config/pie-diagram-partial-config.component.ts","ng://@soushians/diagram/lib/dumb-components/booleano-widget-partial-config/booleano-widget-partial-config.component.ts","ng://@soushians/diagram/lib/dumb-components/numeric-widget-partial-config/numeric-widget-partial-config.component.ts","ng://@soushians/diagram/lib/dumb-components/linear-diagram-partial-config/linear-diagram-partial-config.component.ts","ng://@soushians/diagram/lib/dumb-components/server-connecting-time-diagram/server-connecting-time-diagram.component.ts","ng://@soushians/diagram/lib/services/diagram-configuration.service.ts","ng://@soushians/diagram/lib/models/add-diagram-api.model.ts","ng://@soushians/diagram/lib/services/diagram.service.ts","ng://@soushians/diagram/lib/dumb-components/numeric-edit-diagram/numeric-edit-diagram.component.ts","ng://@soushians/diagram/lib/dumb-components/numeric-diagram/numeric-diagram.component.ts","ng://@soushians/diagram/lib/smart-components/diagram-module-container/diagram-module-container.component.ts","ng://@soushians/diagram/lib/smart-components/data-mapper/data-mapper.component.ts","ng://@soushians/diagram/lib/models/diagram.model.ts","ng://@soushians/diagram/lib/actions/add-diagram.actions.ts","ng://@soushians/diagram/lib/smart-components/add-diagram/add-diagram.component.ts","ng://@soushians/diagram/lib/smart-components/diagram-view/diagram-view.component.ts","ng://@soushians/diagram/lib/smart-components/diagrams/diagrams.component.ts","ng://@soushians/diagram/lib/smart-components/edit-diagram/edit-diagram.component.ts","ng://@soushians/diagram/lib/smart-components/diagram/diagram.component.ts","ng://@soushians/diagram/lib/smart-components/dynamic-component-selector/dynamic-component-selector.component.ts","ng://@soushians/diagram/lib/smart-components/dynamic-config-component-selector/dynamic-config-component-selector.component.ts","ng://@soushians/diagram/lib/effects/diagrams.effects.ts","ng://@soushians/diagram/lib/effects/add-diagram.effects.ts","ng://@soushians/diagram/lib/diagram-routing.module.ts","ng://@soushians/diagram/lib/smart-components/diagram-selector/diagram-selector.component.ts","ng://@soushians/diagram/lib/diagram.module.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface DiagramModuleConfig {\r\n\tendpoints?: {};\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t};\r\n}\r\n\r\nexport const MODULE_DEFAULT_CONFIG: DiagramModuleConfig = {\r\n\tendpoints: {},\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"frontend/server/did/not/set\"\r\n\t}\r\n};\r\n\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<DiagramModuleConfig>(\"DiagramModuleConfig\");\r\n","import { DiagramModel } from \"./diagram.model\";\r\n\r\nexport namespace GetDiagramsApiModel {\r\n\texport class Request {\r\n\t\tdiagram: string;\r\n\r\n\t\tconstructor(initValue: GetDiagramsApiModel.Request = {} as GetDiagramsApiModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\t//static get formGroup() {\r\n\t\t// return new FormGroup({\r\n\t\t//   diagram: new FormControl('', [Validators.minLength(8), Validators.required])\r\n\t\t// })\r\n\t\t//}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: DiagramModel[];\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetDiagramsApiModel } from \"../models/get-diagrams-api.model\";\r\n\r\nexport enum DiagramsActionTypes {\r\n\tGET_DIAGRAM = \"[DIAGRAM] GET_DIAGRAM\",\r\n\tGET_DIAGRAM_START = \"[DIAGRAM] GET_DIAGRAM_START\",\r\n\tGET_DIAGRAM_SUCCEED = \"[DIAGRAM] GET_DIAGRAM_SUCCEED\",\r\n\tGET_DIAGRAM_FAILED = \"[DIAGRAM] GET_DIAGRAM_FAILED\"\r\n}\r\n\r\nexport class GetDiagrams implements Action {\r\n\treadonly type = DiagramsActionTypes.GET_DIAGRAM;\r\n}\r\nexport class GetDiagramsStart implements Action {\r\n\treadonly type = DiagramsActionTypes.GET_DIAGRAM_START;\r\n}\r\nexport class GetDiagramsSucceed implements Action {\r\n\treadonly type = DiagramsActionTypes.GET_DIAGRAM_SUCCEED;\r\n\tconstructor(public payload: GetDiagramsApiModel.Response) {}\r\n}\r\nexport class GetDiagramsFailed implements Action {\r\n\treadonly type = DiagramsActionTypes.GET_DIAGRAM_FAILED;\r\n}\r\n\r\nexport type DiagramsAction = GetDiagrams | GetDiagramsStart | GetDiagramsSucceed | GetDiagramsFailed;\r\n","import { GetDiagramsApiModel } from \"../models/get-diagrams-api.model\";\r\nimport { DiagramsActionTypes, DiagramsAction } from \"../actions/diagrams.actions\";\r\n\r\nconsole.log(GetDiagramsApiModel);\r\n\r\nexport interface State {\r\n\tloaded: boolean;\r\n\tdiagram: GetDiagramsApiModel.Response;\r\n}\r\nexport const initialState: State = {\r\n\tloaded: false,\r\n\tdiagram: {\r\n\t\tResult: []\r\n\t}\r\n};\r\n\r\nexport function diagramReducer(state = initialState, action: DiagramsAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase DiagramsActionTypes.GET_DIAGRAM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloaded: true\r\n\t\t\t\t// diagram: action.payload,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase DiagramsActionTypes.GET_DIAGRAM_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloaded: true\r\n\t\t\t\t//  diagram: action.payload,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const DiagramInfo = (state: State) => state.diagram;\r\n","import { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\n\r\nimport { DiagramModel } from \"./diagram.model\";\r\n\r\nexport namespace EditDiagramApiModel {\r\n\texport class Request {\r\n\t\tconstructor(params: Request) {}\r\n\t\tgetRequestQueryParams() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t\t// TODO:\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tName: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tIsActive: new FormControl(\"true\", [ Validators.required ]),\r\n\t\t\t\tRoute: new FormControl(\"\", [ Validators.required ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: DiagramModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { EditDiagramApiModel } from \"../models/edit-diagram-api.model\";\r\n\r\nexport enum EditDiagramActionTypes {\r\n\tEDIT_DIAGRAM = \"[DIAGRAM][EDIT] EDIT_DIAGRAM\",\r\n\tEDIT_DIAGRAM_START = \"[DIAGRAM][EDIT] EDIT_DIAGRAM_START\",\r\n\tEDIT_DIAGRAM_SUCCEED = \"[DIAGRAM][EDIT] EDIT_DIAGRAM_SUCCEED\",\r\n\tEDIT_DIAGRAM_FAILED = \"[DIAGRAM][EDIT] EDIT_DIAGRAM_FAILED\"\r\n}\r\n\r\nexport class EditDiagramAction implements Action {\r\n\treadonly type = EditDiagramActionTypes.EDIT_DIAGRAM;\r\n\tconstructor(public payload: EditDiagramApiModel.Response) {}\r\n}\r\nexport class EditDiagramActionStart implements Action {\r\n\treadonly type = EditDiagramActionTypes.EDIT_DIAGRAM_START;\r\n\tconstructor(public payload: EditDiagramApiModel.Response) {}\r\n}\r\nexport class EditDiagramActionSucceed implements Action {\r\n\treadonly type = EditDiagramActionTypes.EDIT_DIAGRAM_SUCCEED;\r\n\tconstructor(public payload: EditDiagramApiModel.Response) {}\r\n}\r\nexport class EditDiagramActionFailed implements Action {\r\n\treadonly type = EditDiagramActionTypes.EDIT_DIAGRAM_FAILED;\r\n}\r\n\r\nexport type EditDiagramActions =\r\n\t| EditDiagramAction\r\n\t| EditDiagramActionStart\r\n\t| EditDiagramActionSucceed\r\n\t| EditDiagramActionFailed;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\n\r\nimport { EditDiagramApiModel } from \"../models/edit-diagram-api.model\";\r\nimport { EditDiagramActionTypes, EditDiagramActions } from \"../actions/edit-diagram.actions\";\r\n\r\nconsole.log(EditDiagramApiModel);\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n\tdata: EditDiagramApiModel.Response;\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\",\r\n\tdata: { Result: {} } as EditDiagramApiModel.Response\r\n};\r\nexport function Reducer(state = initialState, action: EditDiagramActions): State {\r\n\tswitch (action.type) {\r\n\t\tcase EditDiagramActionTypes.EDIT_DIAGRAM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"dirty\",\r\n\t\t\t\tdata: new EditDiagramApiModel.Response()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditDiagramActionTypes.EDIT_DIAGRAM_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"pending\",\r\n\t\t\t\tdata: new EditDiagramApiModel.Response()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditDiagramActionTypes.EDIT_DIAGRAM_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"succeed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditDiagramActionTypes.EDIT_DIAGRAM_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const EditDiagramInfo = (state: State) => state.data;\r\n","import { ParentGuardAction } from \"../actions/parent-guard.actions\";\r\n\r\nexport interface State {\r\n\troute: string;\r\n\tresult: boolean;\r\n}\r\nexport const initialState: State = {\r\n\troute: \"\",\r\n\tresult: false\r\n};\r\n\r\nexport function ParentGuardReducer(state = initialState, action: ParentGuardAction): State {\r\n\tswitch (action.type) {\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getParentRoutingGuard = (state: State) => state;\r\n","import { createSelector, createFeatureSelector, MemoizedSelector } from \"@ngrx/store\";\r\n\r\nimport * as DiagramsReducer from \"./diagrams.reducer\";\r\nimport * as fromEditDiagram from \"./edit-diagram.reducer\";\r\nimport * as parentGuardReducer from \"./parent-guard.reducer\";\r\n\r\nexport interface DiagramState {\r\n\tdiagrams: DiagramsReducer.State;\r\n\teditDiagram: fromEditDiagram.State;\r\n\tparentGuard: parentGuardReducer.State;\r\n}\r\n\r\nexport const DiagramReducers = {\r\n\tdiagrams: DiagramsReducer.diagramReducer,\r\n\teditDiagram: fromEditDiagram.Reducer,\r\n\tparentGuard: parentGuardReducer.ParentGuardReducer\r\n};\r\n\r\nexport interface FeatureState {\r\n\t\"diagram\": DiagramState;\r\n}\r\n\r\n//#region selectors\r\n\r\nexport const selectFeatureState = createFeatureSelector<DiagramState>(\"diagram\");\r\n\r\n// export const getDiagramInformationStatus = createSelector(\r\n//   selectFeatureState,\r\n//   (state: DiagramState) => state.diagram\r\n// );\r\n\r\n//#region edit diagram\r\nexport const selectEditDiagramState = createSelector(selectFeatureState, (state: DiagramState) => state.editDiagram);\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject, Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: \"diagram-server-status\",\r\n\ttemplateUrl: \"./server-status-diagram.component.html\",\r\n\tstyleUrls: [ \"./server-status-diagram.component.scss\" ]\r\n})\r\nexport class ServerStatusDiagramComponent implements OnInit {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\t}\r\n\r\n\ttimeChange(e) {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source._id, this.data.Source.Interval)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger\r\n\t\t//     this.chart.load({\r\n\t\t//       columns: this.diagramService.extract_columns_from_data(data, this.data.Chart.ColumnMappings)\r\n\t\t//     });\r\n\t\t//   })\r\n\t}\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"diagram-partial-config-edit\",\r\n\ttemplateUrl: \"./diagram-partial-config-edit.component.html\",\r\n\tstyleUrls: [ \"./diagram-partial-config-edit.component.scss\" ]\r\n})\r\nexport class DiagramPartialConfigEditComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\tdiagramService: DiagramService;\r\n\tformGroup: FormGroup;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n\tconfigChanged() {}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"pie-diagram-partial-config\",\r\n\ttemplateUrl: \"./pie-diagram-partial-config.component.html\",\r\n\tstyleUrls: [ \"./pie-diagram-partial-config.component.scss\" ]\r\n})\r\nexport class PieDiagramPartialConfigComponent implements OnInit, OnDestroy {\r\n\t@Output() ConfigChanged = new EventEmitter();\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_dataLoaded;\r\n\t@Input()\r\n\tset formGroup(data: FormGroup) {\r\n\t\tif (!data) return;\r\n\t\tthis._dataLoaded = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget formGroup() {\r\n\t\treturn this._dataLoaded;\r\n\t}\r\n\tdonutFormGroup: FormGroup;\r\n\tdiagramService: DiagramService;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t\tthis.donutFormGroup = this.formGroup.controls.donut as FormGroup;\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n\tconfigChanged() {\r\n\t\tthis.ConfigChanged.emit();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"booleano-widget-partial-config\",\r\n\ttemplateUrl: \"./booleano-widget-partial-config.component.html\",\r\n\tstyleUrls: [ \"./booleano-widget-partial-config.component.scss\" ]\r\n})\r\nexport class BooleanoWidgetPartialConfigComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_dataLoaded;\r\n\t@Input()\r\n\tset formGroup(data: FormGroup) {\r\n\t\tif (!data) return;\r\n\t\tthis._dataLoaded = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget formGroup() {\r\n\t\treturn this._dataLoaded;\r\n\t}\r\n\tbooleanoFormGroup: FormGroup;\r\n\tdiagramService: DiagramService;\r\n\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t\tthis.booleanoFormGroup = this.formGroup.controls.booleano as FormGroup;\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"numeric-widget-partial-config\",\r\n\ttemplateUrl: \"./numeric-widget-partial-config.component.html\",\r\n\tstyleUrls: [ \"./numeric-widget-partial-config.component.scss\" ]\r\n})\r\nexport class NumericWidgetPartialConfigComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_dataLoaded;\r\n\t@Input()\r\n\tset formGroup(data: FormGroup) {\r\n\t\tif (!data) return;\r\n\t\tthis._dataLoaded = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget formGroup() {\r\n\t\treturn this._dataLoaded;\r\n\t}\r\n\tdonutFormGroup: FormGroup;\r\n\tdiagramService: DiagramService;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t\tthis.donutFormGroup = this.formGroup.controls.donut as FormGroup;\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"linear-diagram-partial-config\",\r\n\ttemplateUrl: \"./linear-diagram-partial-config.component.html\",\r\n\tstyleUrls: [ \"./linear-diagram-partial-config.component.scss\" ]\r\n})\r\nexport class LinearDiagramPartialConfigComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\t@Output() ConfigChanged = new EventEmitter();\r\n\tdiagramService: DiagramService;\r\n\tformGroup: FormGroup;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n\tconfigChanged() {\r\n\t\tthis.ConfigChanged.emit();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: \"diagram-server-connecting-time\",\r\n\ttemplateUrl: \"./server-connecting-time-diagram.component.html\",\r\n\tstyleUrls: [ \"./server-connecting-time-diagram.component.scss\" ]\r\n})\r\nexport class ServerConnectingTimeDiagramComponent implements OnInit {\r\n\t@Input() time: number = 0;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\t\tsetInterval(() => {\r\n\t\t\tthis.time = this.time + 1;\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\ttimeChange(e) {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route, this.data.Source.Sync)\r\n\t\t//         .subscribe(data => {\r\n\t\t//                 this.chart.load({\r\n\t\t//                         columns: this.diagramService.extract_columns_from_data(data, this.data.Chart.ColumnMappings)\r\n\t\t//                 });\r\n\t\t//         })\r\n\t}\r\n}\r\n","import { Injectable, Inject } from \"@angular/core\";\r\n\r\nimport { MODULE_CONFIG_TOKEN, DiagramModuleConfig, MODULE_DEFAULT_CONFIG } from \"../diagram.config\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class DiagramConfigurationService {\r\n\tprivate _config: DiagramModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) config) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, config);\r\n\t}\r\n}\r\n","import { FormGroup, FormControl, Validators, FormArray } from \"@angular/forms\";\r\n\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\n\r\nimport { DiagramModel } from \"./diagram.model\";\r\nimport { SourceModel } from \"./source.model\";\r\n\r\nexport namespace AddDiagramApiModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\t_id: string;\r\n\t\tName: string;\r\n\t\tIsActive: Boolean;\r\n\t\tType: string;\r\n\t\tTypes: { [columnLabel: string]: string };\r\n\t\tLegend: Boolean;\r\n\t\tSubchart: Boolean;\r\n\t\tZoom: Boolean;\r\n\t\tTooltip: Boolean;\r\n\t\tRoute: string;\r\n\t\tSync: number;\r\n\t\tColors: string[];\r\n\t\tColumnMappings: { NamePath: string; ValuePath: string }[];\r\n\t\tFlow: string;\r\n\t\tcolumns: any[];\r\n\t\tCols: number;\r\n\t\tRows: number;\r\n\t\tTextColor: String;\r\n\t\tBackgroundColor: string;\r\n\t\tbooleano: any;\r\n\t\tSource: SourceModel;\r\n\t\tGroups: string[];\r\n\t\tconstructor(initValue: AddDiagramApiModel.Request = {} as AddDiagramApiModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {\r\n\t\t\t\t_id: this._id,\r\n\t\t\t\tName: this.Name,\r\n\t\t\t\tIsActive: this.IsActive,\r\n\t\t\t\tSource: this.Source,\r\n\t\t\t\tType: this.Type,\r\n\t\t\t\tGroups: this.Groups,\r\n\t\t\t\tWidget: {\r\n\t\t\t\t\tbooleano: this.booleano\r\n\t\t\t\t},\r\n\t\t\t\tChart: {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\ttype: this.Type,\r\n\t\t\t\t\t\tcolumns: this.columns,\r\n\t\t\t\t\t\tcolors: this.Colors,\r\n\t\t\t\t\t\ttypes: this.Types\r\n\t\t\t\t\t},\r\n\t\t\t\t\tColumnMappings: this.ColumnMappings,\r\n\t\t\t\t\tFlow: this.Flow,\r\n\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\tshow: this.Legend\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsubchart: {\r\n\t\t\t\t\t\tshow: this.Subchart\r\n\t\t\t\t\t},\r\n\t\t\t\t\tzoom: {\r\n\t\t\t\t\t\tenabled: this.Zoom\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttooltip: {\r\n\t\t\t\t\t\tgrouped: this.Tooltip\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tBox: {\r\n\t\t\t\t\tCols: this.Cols,\r\n\t\t\t\t\tRows: this.Rows,\r\n\t\t\t\t\tTextColor: this.TextColor,\r\n\t\t\t\t\tBackgroundColor: this.BackgroundColor\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\t_id: new FormControl(\"\", []),\r\n\t\t\t\tName: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tSync: new FormControl(0, [ Validators.required ]),\r\n\t\t\t\tIsActive: new FormControl(\"true\", [ Validators.required ]),\r\n\t\t\t\tType: new FormControl(\"pie\", [ Validators.required ]),\r\n\t\t\t\tGroups: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tLegend: new FormControl(\"true\", [ Validators.required ]),\r\n\t\t\t\tSubchart: new FormControl(\"false\", [ Validators.required ]),\r\n\t\t\t\tZoom: new FormControl(\"false\", [ Validators.required ]),\r\n\t\t\t\tTooltip: new FormControl(\"false\", [ Validators.required ]),\r\n\t\t\t\tRoute: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tSource: new FormControl({}, [ Validators.required ]),\r\n\t\t\t\tcolumns: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tCols: new FormControl(1, [ Validators.required ]),\r\n\t\t\t\tRows: new FormControl(1, [ Validators.required ]),\r\n\t\t\t\tTextColor: new FormControl(\"#000000\", [ Validators.required ]),\r\n\t\t\t\tBackgroundColor: new FormControl(\"#ffffff\", [ Validators.required ]),\r\n\t\t\t\tColors: new FormGroup({}),\r\n\t\t\t\tTypes: new FormGroup({}),\r\n\t\t\t\tColumnMappings: new FormArray([]),\r\n\t\t\t\tFlow: new FormControl(true),\r\n\t\t\t\tdonut: new FormGroup({\r\n\t\t\t\t\ttitle: new FormControl(\"Default Title\")\r\n\t\t\t\t}),\r\n\t\t\t\tbooleano: new FormGroup({\r\n\t\t\t\t\tSuccessMessage: new FormControl(\"SuccessMessage\"),\r\n\t\t\t\t\tFailureMessage: new FormControl(\"FailureMessage\")\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\texport class Response {\r\n\t\tResult: DiagramModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, Subscription, Subject } from \"rxjs/Rx\";\r\nimport { Store } from \"@ngrx/store\";\r\ndeclare var c3: any;\r\n\r\nimport { DiagramConfigurationService } from \"./diagram-configuration.service\";\r\nimport { FeatureState } from \"../reducers\";\r\nimport { GetDiagramsApiModel } from \"../models/get-diagrams-api.model\";\r\nimport { SourceModel } from \"../models/source.model\";\r\nimport { AddDiagramApiModel } from \"../models/add-diagram-api.model\";\r\nimport { DiagramModuleConfig } from \"../diagram.config\";\r\nimport { switchMap, map, takeUntil } from \"rxjs/operators\";\r\n\r\ndeclare var _: any;\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class DiagramService {\r\n\tconfig: DiagramModuleConfig;\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<FeatureState>,\r\n\t\tprivate configurationService: DiagramConfigurationService\r\n\t) {\r\n\t\tthis.config = this.configurationService.config;\r\n\t}\r\n\r\n\tgetDiagrams(): Observable<GetDiagramsApiModel.Response> {\r\n\t\treturn this.http\r\n\t\t\t.get<GetDiagramsApiModel.Response>(this.config.env.frontend_server + \"/api/diagram\")\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetSources(): Observable<SourceModel[]> {\r\n\t\treturn this.http\r\n\t\t\t.get(this.config.env.frontend_server + \"/api/source\")\r\n\t\t\t.map((response) => (response as any).Result)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetGroups(): Observable<string[]> {\r\n\t\treturn this.http\r\n\t\t\t.get(this.config.env.frontend_server + \"/api/diagram/groups\")\r\n\t\t\t.map((response) => (response as any).Result)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetDiagram(id: string): Observable<any> {\r\n\t\tif (!id) debugger;\r\n\t\treturn this.http\r\n\t\t\t.get(this.config.env.frontend_server + `/api/diagram/${id}`)\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\taddDiagram(data: any): Observable<AddDiagramApiModel.Response> {\r\n\t\tconst model = new AddDiagramApiModel.Request(data);\r\n\t\treturn this.http\r\n\t\t\t.post<AddDiagramApiModel.Response>(this.config.env.frontend_server + \"/api/diagram\", model.getRequestBody())\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tupdateDiagram(body: any): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.put(this.config.env.frontend_server + \"/api/diagram\", body)\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tdeleteDiagram(id: string): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.delete(`${this.config.env.frontend_server}/api/diagram/${id}`)\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetData(source: SourceModel, unsubscribe: Subject<void>, time: number = 0, once: Boolean = false): Observable<any> {\r\n\t\tif (once && time !== 0) {\r\n\t\t\treturn this.http\r\n\t\t\t\t.get(`${this.config.env.frontend_server}/api/data`, {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tsourceId: source._id,\r\n\t\t\t\t\t\ttime: this.getFloorTime(source.Interval, time).toString()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.map((res: any) => res.Result);\r\n\t\t} else if (source.Interval == 0) {\r\n\t\t\treturn this.http\r\n\t\t\t\t.get(`${this.config.env.frontend_server}/api/data`, {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tsourceId: source._id,\r\n\t\t\t\t\t\ttime: null\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.map((res: any) => res.Result);\r\n\t\t} else {\r\n\t\t\ttime = time || Date.now();\r\n\t\t\treturn Observable.timer(0, source.Interval).pipe(\r\n\t\t\t\ttakeUntil(unsubscribe),\r\n\t\t\t\tswitchMap((i) =>\r\n\t\t\t\t\tthis.http\r\n\t\t\t\t\t\t.get(`${this.config.env.frontend_server}/api/data`, {\r\n\t\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\t\tsourceId: source._id,\r\n\t\t\t\t\t\t\t\ttime: this.getFloorTime(source.Interval, time).toString()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}).pipe(\r\n\t\t\t\t\t\t\tmap((res: any) => res.Result)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\textract_columns_from_data(data: any, columnsMappings) {\r\n\t\tlet res = [];\r\n\r\n\t\tcolumnsMappings.forEach((item) => {\r\n\t\t\tconst ValueData = _.getValue(data, item.ValuePath);\r\n\r\n\t\t\tif (!item.NamePath) {\r\n\t\t\t\treturn res.push([item.ValuePath.split(\".\").pop()].concat(ValueData));\r\n\t\t\t}\r\n\t\t\tconst NameData = _.getValue(data, item.NamePath);\r\n\r\n\t\t\tif (_.is.array(NameData)) {\r\n\t\t\t\treturn (res = res.concat(NameData.map((_item, i) => [_item].concat(ValueData[i]))));\r\n\t\t\t} else {\r\n\t\t\t\treturn res.push([NameData].concat(ValueData));\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn res;\r\n\t}\r\n\tget_data_report(data: any) {\r\n\t\treturn _.report(data);\r\n\t}\r\n\tget_last_node_of_data(data: any) {\r\n\t\treturn (_.report(data) as any[]).filter((item) => item.isLastNode);\r\n\t}\r\n\tbuildChartConfig(columns) {\r\n\t\treturn {\r\n\t\t\tdata: {\r\n\t\t\t\tcolumns\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tshow: true\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t// TODO: implement interface of c3 config\r\n\tcharts = {};\r\n\tgenerateDiagram(config: any, id: string, route: string, sync: number): Subscription {\r\n\t\tthis.charts[id] = c3.generate({\r\n\t\t\t...config,\r\n\t\t\tbindto: `#diagram_${id}`\r\n\t\t});\r\n\r\n\t\treturn this.getData({} as SourceModel, new Subject<void>(), sync).subscribe((data) => {\r\n\t\t\tthis.charts[id].load({\r\n\t\t\t\tcolumns: this.extract_columns_from_data(data.Data, config.ColumnMappings)\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tgetFloorTime(precision = 60 * 1000, time: number = 0) {\r\n\t\treturn Math.floor((time || Date.now()) / precision);\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { takeUntil, filter } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: \"numeric-edit-diagram\",\r\n\ttemplateUrl: \"./numeric-edit-diagram.component.html\",\r\n\tstyleUrls: [\"./numeric-edit-diagram.component.scss\"]\r\n})\r\nexport class NumericEditDiagramComponent implements OnInit, OnDestroy {\r\n\tunsubscribe = new Subject<void>();\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\tconstructor(private injector: Injector, private diagramService: DiagramService) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\tthis.diagramService.getData(this.data.Source, this.unsubscribe).pipe(\r\n\t\t\tfilter(data => data != undefined),\r\n\t\t\ttakeUntil(this.unsubscribe)\r\n\t\t).subscribe(data => {\r\n\t\t\tdebugger;\r\n\t\t});\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t\tdebugger;\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subscription, Subject } from \"rxjs\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\tselector: \"diagram-numeric\",\r\n\ttemplateUrl: \"./numeric-diagram.component.html\",\r\n\tstyleUrls: [\"./numeric-diagram.component.scss\"]\r\n})\r\nexport class NumericDiagramComponent implements OnInit, OnDestroy {\r\n\tunsubscribe = new Subject<void>();\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\tcounter: number;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\tdataSubscribtion: Subscription;\r\n\tconstructor(private injector: Injector, private diagramService: DiagramService) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\t\tthis.counter = 0;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.dataSubscribtion = this.diagramService.getData(this.data.Source, this.unsubscribe).pipe(\r\n\t\t\ttakeUntil(this.unsubscribe)\r\n\t\t).subscribe(data => {\r\n\t\t\tconst counter = this.diagramService.extract_columns_from_data(data.Data, this.data.Chart.ColumnMappings);\r\n\t\t\tthis.counter = counter[0][1];\r\n\t\t});\r\n\t}\r\n\tngOnDestroy() {\r\n\t\tthis.dataSubscribtion.unsubscribe();\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n// import { UserModel } from 'app/models/authentication';\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n// import * as appReducer from 'app/reducers';\r\n\r\n@Component({\r\n\tselector: \"diagram-module-container\",\r\n\ttemplateUrl: \"./diagram-module-container.component.html\"\r\n})\r\nexport class DiagramModuleContainerComponent implements OnInit {\r\n\tconstructor(private service: DiagramService) {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport * as FeatureReducer from \"../../reducers\";\r\n\r\ndeclare var _: any;\r\n\r\n@Component({\r\n\tselector: \"data-mapper\",\r\n\ttemplateUrl: \"./data-mapper.component.html\",\r\n\tstyleUrls: [ \"./data-mapper.component.scss\" ]\r\n})\r\nexport class DataMapperComponent implements OnInit {\r\n\t@Input() destination: string;\r\n\t_data: any;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tif (!data) return;\r\n\t\tthis.dataReport = _.report(data);\r\n\t\tthis._data = data;\r\n\t}\r\n\tdataReport: any[] = [];\r\n\tconstructor(private diagramService: DiagramService, private store: Store<FeatureReducer.FeatureState>) {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { SourceModel } from \"./source.model\";\r\n\r\nexport class DiagramModel {\r\n\t_id: string;\r\n\tName: string;\r\n\tIsActive: boolean;\r\n\tDescription: string;\r\n\tGroups: string[];\r\n\tBox: {\r\n\t\tNumberOfColumns: number;\r\n\t\tOrder: number;\r\n\t\tBackgroundColor: string;\r\n\t};\r\n\tSource: SourceModel;\r\n\tWidget: {\r\n\t\t\"booleano\": {\r\n\t\t\t\"SuccessMessage\": string;\r\n\t\t\t\"FailureMessage\": string;\r\n\t\t};\r\n\t};\r\n\r\n\tChart: {\r\n\t\tdata: {\r\n\t\t\ttype: \"pie\" | \"linear\" | \"scatter\" | \"bar\" | \"line\";\r\n\t\t\ttypes: { [key: string]: string };\r\n\t\t\tcolumns: any[];\r\n\t\t\tcolors: any[];\r\n\t\t};\r\n\t\tFlow: boolean;\r\n\t\tColumnMappings: {\r\n\t\t\tNamePath: string;\r\n\t\t\tValuePath: string;\r\n\t\t}[];\r\n\t\tlegend: {\r\n\t\t\tshow: boolean;\r\n\t\t};\r\n\t\tsubchart: {\r\n\t\t\tshow: boolean;\r\n\t\t};\r\n\t\tzoom: {\r\n\t\t\tenabled: boolean;\r\n\t\t};\r\n\t\ttooltip: {\r\n\t\t\tgrouped: boolean;\r\n\t\t};\r\n\t};\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { AddDiagramApiModel } from \"../models/add-diagram-api.model\";\r\n\r\nexport enum AddDiagramActionTypes {\r\n\tADD_DIAGRAM = \"[DIAGRAM][ADD] ADD_DIAGRAM\",\r\n\tADD_DIAGRAM_START = \"[DIAGRAM][ADD] ADD_DIAGRAM_START\",\r\n\tADD_DIAGRAM_SUCCEED = \"[DIAGRAM][ADD] ADD_DIAGRAM_SUCCEED\",\r\n\tDIAGRAM_CONFIG_CHANGED = \"[DIAGRAM][ADD] DIAGRAM_CONFIG_CHANGED\",\r\n\tADD_DIAGRAM_FAILED = \"[DIAGRAM][ADD] ADD_DIAGRAM_FAILED\",\r\n\tSTRUCTURE_DEFINITION_START = \"[DIAGRAM][ADD] STRUCTURE_DEFINITION_START\",\r\n\tHAVE_ENDPOINT = \"[DIAGRAM][ADD] HAVE_STRUCTURE\",\r\n\tDATA_LOADED = \"[DIAGRAM][ADD] DATA_LOADED\",\r\n\tSTRUCTURE_DEFINITION_END = \"[DIAGRAM][ADD] STRUCTURE_DEFINITION_END\",\r\n\tCOLUMNS_MAPPING_CHANGED = \"[DIAGRAM][ADD] COLUMNS_MAPPING_CHANGED\",\r\n\tDATA_CALCULATED = \"[DIAGRAM][ADD] DATA_CALCULATED\",\r\n\tCOLUMN_ADDED = \"[DIAGRAM][ADD] COLUMN_ADDED\",\r\n\tGENERATE_DIAGRAM = \"[DIAGRAM][ADD] GENERATE_DIAGRAM\"\r\n}\r\n\r\nexport class AddDiagramAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.ADD_DIAGRAM;\r\n\tconstructor(public payload: AddDiagramApiModel.Response) {}\r\n}\r\nexport class AddDiagramActionStart implements Action {\r\n\treadonly type = AddDiagramActionTypes.ADD_DIAGRAM_START;\r\n\tconstructor(public payload: AddDiagramApiModel.Response) {}\r\n}\r\nexport class AddDiagramActionSucceed implements Action {\r\n\treadonly type = AddDiagramActionTypes.ADD_DIAGRAM_SUCCEED;\r\n\tconstructor(public payload: AddDiagramApiModel.Response) {}\r\n}\r\nexport class AddDiagramActionFailed implements Action {\r\n\treadonly type = AddDiagramActionTypes.ADD_DIAGRAM_FAILED;\r\n}\r\nexport class DiagramConfigChangedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.DIAGRAM_CONFIG_CHANGED;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class HaveEndpointAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.HAVE_ENDPOINT;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class DataLoadedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.DATA_LOADED;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class StructureDefinitionStartAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.STRUCTURE_DEFINITION_START;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class StructureDefinitionFinishedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.STRUCTURE_DEFINITION_END;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class ColumnsMappingChangedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.COLUMNS_MAPPING_CHANGED;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class DataCalculatedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.DATA_CALCULATED;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class GenerateDiagramAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.GENERATE_DIAGRAM;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport class ColumnAdded implements Action {\r\n\treadonly type = AddDiagramActionTypes.COLUMN_ADDED;\r\n}\r\n\r\nexport type AddDiagramActions =\r\n\t| AddDiagramAction\r\n\t| AddDiagramActionStart\r\n\t| AddDiagramActionSucceed\r\n\t| AddDiagramActionFailed\r\n\t| HaveEndpointAction\r\n\t| DataLoadedAction\r\n\t| StructureDefinitionStartAction\r\n\t| StructureDefinitionFinishedAction\r\n\t| ColumnsMappingChangedAction\r\n\t| DataCalculatedAction\r\n\t| GenerateDiagramAction\r\n\t| DiagramConfigChangedAction;\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder, AbstractControl } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Route, ActivatedRoute } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { publish } from \"rxjs/operator/publish\";\r\nimport { Effect } from \"@ngrx/effects\";\r\ndeclare var c3: any;\r\n\r\nimport { addDiagramReducer } from \"../../reducers/add-diagram.reducer\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\nimport { FeatureState } from \"../../reducers\";\r\nimport { AddDiagramApiModel } from \"../../models/add-diagram-api.model\";\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { SourceModel } from \"../../models/source.model\";\r\nimport {\r\n\tHaveEndpointAction,\r\n\tColumnsMappingChangedAction,\r\n\tDiagramConfigChangedAction,\r\n\tAddDiagramAction\r\n} from \"../../actions/add-diagram.actions\";\r\nimport { filter, takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: \"diagram-add\",\r\n\ttemplateUrl: \"./add-diagram.component.html\",\r\n\tstyleUrls: [\"./add-diagram.component.scss\"]\r\n})\r\nexport class AddDiagramComponent implements OnInit, OnDestroy {\r\n\tunsubscribe = new Subject<void>();\r\n\tformGroup: FormGroup = AddDiagramApiModel.Request.formGroup;\r\n\tdata: any;\r\n\tcolumns: any;\r\n\tchart;\r\n\tdiagramTypes: string[];\r\n\tpathOptions: {\r\n\t\tpath: string;\r\n\t\tname: string;\r\n\t\ttype: string;\r\n\t\tcolor: string;\r\n\t}[];\r\n\tcolumnsMappings: AbstractControl[];\r\n\tdataSubscription: Subscription;\r\n\tdiagramModel: DiagramModel;\r\n\tcomponentModel: { component: any; inputs: object };\r\n\ttypeMapToDiagram: { [type: string]: any };\r\n\tdiagramPartialConfig: { type: string; inputs: { formGroup: FormGroup; diagramService: DiagramService } };\r\n\tsources: Observable<SourceModel[]>;\r\n\tgroups: Observable<string[]>;\r\n\tsource: SourceModel;\r\n\tconstructor(\r\n\t\tprivate diagramService: DiagramService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate store: Store<FeatureState>,\r\n\t\tprivate route: ActivatedRoute\r\n\t) {\r\n\t\tthis.sources = this.diagramService.getSources();\r\n\t\tthis.groups = this.diagramService.getGroups();\r\n\t\t// this.diagramModel = new DiagramModel();\r\n\t\tthis.columnsMappings = (this.formGroup.controls.ColumnMappings as FormArray).controls;\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tconst diagramId: string = params[\"id\"];\r\n\t\t\t// tslint:disable-next-line:no-unused-expression\r\n\t\t\tdiagramId &&\r\n\t\t\t\tthis.diagramService.getDiagram(diagramId).subscribe(data => {\r\n\t\t\t\t\tthis.formGroup.patchValue({\r\n\t\t\t\t\t\t_id: data._id,\r\n\t\t\t\t\t\tName: data.Name,\r\n\t\t\t\t\t\tIsActive: data.IsActive,\r\n\t\t\t\t\t\tGroups: data.Groups,\r\n\t\t\t\t\t\tType: data.Chart.data.type,\r\n\t\t\t\t\t\tLegend: data.Chart.legend.show,\r\n\t\t\t\t\t\tSubchart: data.Chart.subchart.show,\r\n\t\t\t\t\t\tZoom: data.Chart.zoom.enabled,\r\n\t\t\t\t\t\tTooltip: data.Chart.tooltip.grouped,\r\n\t\t\t\t\t\tSync: data.Source.Interval,\r\n\t\t\t\t\t\tSource: data.Source,\r\n\t\t\t\t\t\tcolumns: data.Chart.data.columns,\r\n\t\t\t\t\t\tColumnMappings: data.Chart.ColumnMappings,\r\n\t\t\t\t\t\tCols: data.Box.Cols,\r\n\t\t\t\t\t\tFlow: data.Chart.Flow,\r\n\t\t\t\t\t\tRows: data.Box.Rows,\r\n\t\t\t\t\t\tBackgroundColor: data.Box.BackgroundColor,\r\n\t\t\t\t\t\tTextColor: data.Box.TextColor\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst colorsControl = <FormGroup>this.formGroup.controls[\"Colors\"];\r\n\t\t\t\t\tObject.keys(data.Chart.data.colors || {}).forEach(columnKey => {\r\n\t\t\t\t\t\tif (!(columnKey in colorsControl.controls))\r\n\t\t\t\t\t\t\tcolorsControl.addControl(columnKey, new FormControl(data.Chart.data.colors[columnKey]));\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst typesControl = <FormGroup>this.formGroup.controls[\"Types\"];\r\n\t\t\t\t\tObject.keys(data.Chart.data.types || {}).forEach(key => {\r\n\t\t\t\t\t\tif (!(key in typesControl.controls))\r\n\t\t\t\t\t\t\ttypesControl.addControl(key, new FormControl(data.Chart.data.types[key]));\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdata.Chart.ColumnMappings.forEach(mapping => this.addColumn(mapping.NamePath, mapping.ValuePath));\r\n\t\t\t\t\tthis.source = data.Source;\r\n\t\t\t\t\tthis.store.dispatch(new HaveEndpointAction(this));\r\n\r\n\t\t\t\t\tthis.diagramPartialConfig = {\r\n\t\t\t\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\t\t\t\tinputs: {\r\n\t\t\t\t\t\t\tformGroup: this.formGroup,\r\n\t\t\t\t\t\t\tdiagramService: this.diagramService\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\tthis.diagramPartialConfig = {\r\n\t\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\t\tinputs: {\r\n\t\t\t\t\tformGroup: this.formGroup,\r\n\t\t\t\t\tdiagramService: this.diagramService\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tthis.diagramTypes = [\r\n\t\t\t\"bar\",\r\n\t\t\t\"donut\",\r\n\t\t\t\"pie\",\r\n\t\t\t\"scatter\",\r\n\t\t\t\"line\",\r\n\t\t\t\"area\",\r\n\t\t\t\"area-spline\",\r\n\t\t\t\"numero\",\r\n\t\t\t\"booleano\",\r\n\t\t\t\"tempo\"\r\n\t\t];\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.formGroup.controls.ColumnMappings.statusChanges.subscribe(status => {\r\n\t\t\tif (\r\n\t\t\t\tstatus == \"VALID\" &&\r\n\t\t\t\t(this.formGroup.controls.ColumnMappings as FormArray).controls.length > 0 &&\r\n\t\t\t\tthis.data\r\n\t\t\t)\r\n\t\t\t\tthis.store.dispatch(new ColumnsMappingChangedAction(this));\r\n\t\t});\r\n\t}\r\n\tngOnDestroy() {\r\n\t\tif (this.dataSubscription) this.dataSubscription.unsubscribe();\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t}\r\n\t// getData() {\r\n\t//   const o$ = this.diagramService.getData(this.source);\r\n\t//   this.dataSubscription = o$.subscribe(data => new DataLoadedAction(this))\r\n\t//   return o$;\r\n\t// }\r\n\tgetDataStructure() {\r\n\t\tdebugger;\r\n\t\tconst observer = this.diagramService.getData({ ...this.source, Interval: 0 }, this.unsubscribe, Date.now() - 10000);\r\n\t\tthis.dataSubscription = observer.subscribe(data => {\r\n\t\t\tthis.data = data.Data;\r\n\t\t\tthis.pathOptions = this.diagramService.get_data_report(data.Data);\r\n\t\t});\r\n\t\treturn observer;\r\n\t}\r\n\tconfigChanged() {\r\n\t\tthis.store.dispatch(new DiagramConfigChangedAction(this));\r\n\t}\r\n\ttypeChanged() {\r\n\t\tconst typesFormGroup = (this.formGroup.controls.Types as FormGroup).controls;\r\n\t\t// tslint:disable-next-line:forin\r\n\t\tfor (const cb in typesFormGroup) {\r\n\t\t\ttypesFormGroup[cb].setValue(this.formGroup.value.Type);\r\n\t\t}\r\n\t\tthis.diagramPartialConfig = {\r\n\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\tinputs: {\r\n\t\t\t\tformGroup: this.formGroup,\r\n\t\t\t\tdiagramService: this.diagramService\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.store.dispatch(new DiagramConfigChangedAction(this));\r\n\t}\r\n\taddColumn(NamePath: string = \"\", ValuePath: string = \"\") {\r\n\t\tconst control = <FormArray>this.formGroup.controls[\"ColumnMappings\"];\r\n\t\tcontrol.push(\r\n\t\t\tthis.formBuilder.group({\r\n\t\t\t\tNamePath: [NamePath],\r\n\t\t\t\tValuePath: [ValuePath, Validators.required]\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\trouteEntered(event) {\r\n\t\tdebugger;\r\n\t\tthis.source = event.value;\r\n\t\tthis.formGroup.patchValue({ Source: event.value });\r\n\t\tthis.store.dispatch(new HaveEndpointAction(this));\r\n\t}\r\n\tremoveColumn(i: number) {\r\n\t\tconst control = <FormArray>this.formGroup.controls[\"ColumnMappings\"];\r\n\t\tcontrol.removeAt(i);\r\n\t}\r\n\tcalculateColumns(): Observable<void> {\r\n\t\treturn Observable.create(obser => {\r\n\t\t\tconst columnsMApping = {\r\n\t\t\t\t// NameVAlue:  (this.formGroup.controls.ColumnMappings as FormArray).controls.values\r\n\t\t\t};\r\n\t\t\tconst columns = this.diagramService.extract_columns_from_data(\r\n\t\t\t\tthis.data,\r\n\t\t\t\t(this.formGroup.controls.ColumnMappings as FormArray).value\r\n\t\t\t);\r\n\t\t\tthis.formGroup.controls.columns.setValue(columns);\r\n\t\t\t// add new item to this.formGroup.controls.colors form control\r\n\t\t\tconst colorsControl = <FormGroup>this.formGroup.controls[\"Colors\"];\r\n\t\t\tcolumns.forEach(column => {\r\n\t\t\t\tconst columnKey = column[0];\r\n\t\t\t\tif (!(columnKey in colorsControl.controls))\r\n\t\t\t\t\tcolorsControl.addControl(columnKey, new FormControl(\"#123456\"));\r\n\t\t\t});\r\n\r\n\t\t\tconst typesControl = <FormGroup>this.formGroup.controls[\"Types\"];\r\n\t\t\tcolumns.forEach(column => {\r\n\t\t\t\tconst key = column[0];\r\n\t\t\t\tif (!(key in typesControl.controls))\r\n\t\t\t\t\ttypesControl.addControl(key, new FormControl(this.formGroup.value.Type));\r\n\t\t\t});\r\n\t\t\tobser.next();\r\n\t\t});\r\n\t}\r\n\tgenerateDiagram(): Observable<any> {\r\n\t\tconst temp = new DiagramModel();\r\n\t\ttemp._id = \"template_id\";\r\n\t\ttemp.Name = this.formGroup.value.Name;\r\n\t\tdebugger;\r\n\t\ttemp.Source = this.source;\r\n\t\ttemp.Box = {\r\n\t\t\tNumberOfColumns: 1,\r\n\t\t\tOrder: 1,\r\n\t\t\tBackgroundColor: this.formGroup.value.BackgroundColor\r\n\t\t};\r\n\t\ttemp.Widget = {\r\n\t\t\tbooleano: this.formGroup.value.booleano\r\n\t\t};\r\n\t\ttemp.Chart = {\r\n\t\t\tColumnMappings: this.formGroup.value.ColumnMappings,\r\n\t\t\tdata: {\r\n\t\t\t\tcolumns: this.formGroup.controls.columns.value,\r\n\t\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\t\ttypes: this.formGroup.value.Types,\r\n\t\t\t\tcolors: this.formGroup.controls.Colors.value\r\n\t\t\t},\r\n\t\t\tFlow: this.formGroup.value.Flow,\r\n\t\t\tlegend: {\r\n\t\t\t\tshow: this.formGroup.value.Legend\r\n\t\t\t},\r\n\t\t\tsubchart: {\r\n\t\t\t\tshow: this.formGroup.value.Subchart\r\n\t\t\t},\r\n\t\t\tzoom: {\r\n\t\t\t\tenabled: this.formGroup.value.Zoom\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tgrouped: this.formGroup.value.Tooltip\r\n\t\t\t}\r\n\t\t\t// tooltip: {\r\n\t\t\t//         format: {\r\n\t\t\t//                 value: function (value) {\r\n\t\t\t//                         return value + \"%\";\r\n\t\t\t//                 }\r\n\t\t\t//         }\r\n\t\t\t// },\r\n\t\t\t// color: {\r\n\t\t\t//         pattern: ['#60B044', '#F6C600', '#F97600', '#FF0000'],\r\n\t\t\t//         threshold: {\r\n\t\t\t//                 //  unit: 'value', // percentage is default\r\n\t\t\t//                 values: [30, 60, 90, 100]\r\n\t\t\t//         }\r\n\t\t\t// },\r\n\t\t};\r\n\t\t// this.componentModel = {\r\n\t\t//   component: this.typeMapToDiagram[temp.Chart.data.type],\r\n\t\t//   inputs: { data: temp }\r\n\t\t// }\r\n\t\tthis.diagramModel = temp;\r\n\t\treturn Observable.empty();\r\n\t}\r\n\tadd(event) {\r\n\t\tthis.store.dispatch(new AddDiagramAction(this.formGroup.value));\r\n\t}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { GetDiagramsApiModel } from \"../../models/get-diagrams-api.model\";\r\n\r\n@Component({\r\n\tselector: \"diagram-view\",\r\n\ttemplateUrl: \"./diagram-view.component.html\",\r\n\tstyleUrls: [\"./diagram-view.component.scss\"]\r\n})\r\nexport class diagramViewComponent implements OnInit {\r\n\tdiagrams: Observable<GetDiagramsApiModel.Response>;\r\n\twidth = 100;\r\n\r\n\tdiagramData$: any;\r\n\t@Input(\"id\") diagramId: string;\r\n\r\n\tconstructor(private diagramService: DiagramService) {\r\n\t\tthis.diagrams = this.diagramService.getDiagrams();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.diagramData$ = this.diagramService.getDiagram(this.diagramId);\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { GetDiagramsApiModel } from \"../../models/get-diagrams-api.model\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n@Component({\r\n\tselector: \"diagrams\",\r\n\ttemplateUrl: \"./diagrams.component.html\",\r\n\tstyleUrls: [\"./diagrams.component.scss\"]\r\n})\r\nexport class DiagramsComponent implements OnInit {\r\n\tdiagrams: Observable<GetDiagramsApiModel.Response>;\r\n\twidth = 100;\r\n\tconstructor(private diagramService: DiagramService) {\r\n\t\tthis.diagrams = this.diagramService.getDiagrams();\r\n\r\n\t\t// this.diagrams\r\n\t\t//         .delay(100)\r\n\t\t//         .subscribe(diagrams =>\r\n\t\t//                 diagrams.Result.forEach(diagram =>\r\n\t\t//                         this.diagramService.generateDiagram(diagram.Chart, diagram._id, diagram.Source.Route, diagram.Source.Sync)));\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\t// this.socketService.initSocket();\r\n\t\t// this.socketService.send(\"add-message\");\r\n\t\t// this.socketService.onMessage().subscribe(msg=>{\r\n\t\t//         debugger\r\n\t\t// });\r\n\t}\r\n}\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { FeatureState } from \"../../reducers\";\r\nimport { EditDiagramApiModel } from \"../../models/edit-diagram-api.model\";\r\nimport { EditDiagramAction } from \"../../actions/edit-diagram.actions\";\r\n\r\n@Component({\r\n\tselector: \"diagram-edit\",\r\n\ttemplateUrl: \"./edit-diagram.component.html\",\r\n\tstyleUrls: [ \"./edit-diagram.component.scss\" ]\r\n})\r\nexport class EditDiagramComponent implements OnInit {\r\n\tformGroup: FormGroup = EditDiagramApiModel.Request.formGroup;\r\n\tconstructor(\r\n\t\tprivate diagramService: DiagramService,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate store: Store<FeatureState>\r\n\t) {\r\n\t\tlet Route = this.route.params.subscribe(params => {\r\n\t\t\tconst diagramId: string = params[\"id\"];\r\n\t\t\tthis.diagramService.getDiagram(diagramId).subscribe(data => this.formGroup.patchValue(data));\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\r\n\tadd(event) {\r\n\t\tthis.store.dispatch(new EditDiagramAction(this.formGroup.value));\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, AfterViewInit, OnDestroy, Injector } from \"@angular/core\";\r\nimport { Subscription, Subject } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { MatSliderChange } from \"@angular/material\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { FeatureState } from \"../../reducers\";\r\nimport { filter, takeUntil } from \"rxjs/operators\";\r\n\r\ndeclare var c3: any;\r\n\r\n@Component({\r\n\tselector: \"diagram\",\r\n\ttemplateUrl: \"./diagram.component.html\",\r\n\tstyleUrls: [ \"./diagram.component.scss\" ]\r\n})\r\nexport class DiagramComponent implements AfterViewInit, OnDestroy {\r\n\tunsubscribe = new Subject<void>();\r\n\tmodelIsCorrect: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\t_model: DiagramModel;\r\n\t@Input()\r\n\tset data(value: DiagramModel) {\r\n\t\tif (!(value.Chart && value._id)) return;\r\n\t\tthis._model = value;\r\n\t\tthis.modelIsCorrect.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._model;\r\n\t}\r\n\tdataSubscribtion: Subscription;\r\n\tchart: any;\r\n\ttime: number;\r\n\tnow: number = Date.now();\r\n\tconstructor(\r\n\t\tprivate store: Store<FeatureState>,\r\n\t\tprivate diagramService: DiagramService,\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate injector: Injector,\r\n\t\tprivate route: ActivatedRoute\r\n\t) {\r\n\t\tdebugger;\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tconst diagramId: string = params[\"id\"];\r\n\t\t\t// tslint:disable-next-line:no-unused-expression\r\n\t\t\tdiagramId &&\r\n\t\t\t\tthis.diagramService.getDiagram(diagramId).subscribe(data => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n\tngAfterViewInit() {\r\n\t\t// this.dataSubscribtion = IntervalObservable\r\n\t\t//         // .create(this.model.Source.Sync)\r\n\t\t//         .create(999)\r\n\t\t//         .switchMap(i =>\r\n\t\t//                 this.http.get(`http://localhost:3000/api/data`, {\r\n\t\t//                         params: {\r\n\t\t//                                 route: this.model.Source.Route,\r\n\t\t//                                 time: '0'\r\n\t\t//                         }\r\n\t\t//                 })\r\n\t\t//         )\r\n\t\t//         // .switchMap((res: any) => of(res.Result.Data))\r\n\t\t//         .map((res: any) => res.Result.Data)\r\n\t\tthis.modelIsCorrect.delay(300).filter(data => data).subscribe(state => {\r\n\t\t\tthis.chart = c3.generate({\r\n\t\t\t\t...this.data.Chart,\r\n\t\t\t\tbindto: `#diagram_${this.data._id}`\r\n\t\t\t\t// size: {\r\n\t\t\t\t//         height: 150\r\n\t\t\t\t// }\r\n\t\t\t});\r\n\t\t\tthis.dataSubscribtion = this.diagramService\r\n\t\t\t\t.getData(this.data.Source, this.unsubscribe)\r\n\t\t\t\t.pipe(filter(data => data != undefined), takeUntil(this.unsubscribe))\r\n\t\t\t\t.subscribe(data => {\r\n\t\t\t\t\tthis.now = Date.now();\r\n\t\t\t\t\tthis.time = data.Time;\r\n\t\t\t\t\tif (this.data.Chart.Flow) {\r\n\t\t\t\t\t\tthis.chart.flow({\r\n\t\t\t\t\t\t\tcolumns: this.diagramService.extract_columns_from_data(\r\n\t\t\t\t\t\t\t\tdata.Data,\r\n\t\t\t\t\t\t\t\tthis.data.Chart.ColumnMappings\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tduration: 1500\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.chart.load({\r\n\t\t\t\t\t\t\tcolumns: this.diagramService.extract_columns_from_data(\r\n\t\t\t\t\t\t\t\tdata.Data,\r\n\t\t\t\t\t\t\t\tthis.data.Chart.ColumnMappings\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t});\r\n\r\n\t\t// this.dataSubscribtion = this.diagramService.generateDiagram(\r\n\t\t//         this.model.Chart,\r\n\t\t//         this.model._id,\r\n\t\t//         this.model.Source.Route,\r\n\t\t//         this.model.Source.Sync\r\n\t\t// );\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t\tdebugger;\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t}\r\n\ttimeChange(e: MatSliderChange) {\r\n\t\tthis.dataSubscribtion.unsubscribe();\r\n\t\t// this.diagramService.getData(this.data.Source, Date.now() - ((1000 - e.value) * this.data.Source.Interval), true)\r\n\t\tthis.dataSubscribtion = this.diagramService\r\n\t\t\t.getData(\r\n\t\t\t\tthis.data.Source,\r\n\t\t\t\tthis.unsubscribe,\r\n\t\t\t\tDate.now() - (1000 - e.value) * this.data.Source.Interval,\r\n\t\t\t\ttrue\r\n\t\t\t)\r\n\t\t\t.subscribe(data => {\r\n\t\t\t\tthis.time = data.Time;\r\n\t\t\t\tthis.now = Date.now();\r\n\t\t\t\t// const columns = this.diagramService\r\n\t\t\t\t//         .extract_columns_from_data(data.Data, this.data.Chart.ColumnMappings)\r\n\t\t\t\t//         .map(column => {\r\n\t\t\t\t//                 debugger;\r\n\t\t\t\t//                 column[0] += '_historic';\r\n\t\t\t\t//                 return column;\r\n\t\t\t\t//         });\r\n\t\t\t\tthis.chart.load({\r\n\t\t\t\t\tcolumns: this.diagramService.extract_columns_from_data(data.Data, this.data.Chart.ColumnMappings)\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tInput,\r\n\tAfterViewInit,\r\n\tComponentFactoryResolver,\r\n\tViewChild,\r\n\tViewContainerRef,\r\n\tReflectiveInjector,\r\n\tOnDestroy\r\n} from \"@angular/core\";\r\n\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { NumericDiagramComponent } from \"../../dumb-components/numeric-diagram/numeric-diagram.component\";\r\nimport { ServerStatusDiagramComponent } from \"../../dumb-components/server-status-diagram/server-status-diagram.component\";\r\nimport { ServerConnectingTimeDiagramComponent } from \"../../dumb-components/server-connecting-time-diagram/server-connecting-time-diagram.component\";\r\nimport { DiagramComponent } from \"../../smart-components/diagram/diagram.component\";\r\n\r\n@Component({\r\n\tselector: \"dynamic-component-selector\",\r\n\ttemplateUrl: \"./dynamic-component-selector.component.html\",\r\n\tstyleUrls: [ \"./dynamic-component-selector.component.scss\" ],\r\n\tentryComponents: [\r\n\t\tNumericDiagramComponent,\r\n\t\tServerConnectingTimeDiagramComponent,\r\n\t\tServerStatusDiagramComponent,\r\n\t\tDiagramComponent\r\n\t]\r\n})\r\nexport class DynamicComponentSelectorComponent implements AfterViewInit {\r\n\ttypeMapToDiagram = {\r\n\t\tbar: DiagramComponent,\r\n\t\tdonut: DiagramComponent,\r\n\t\tpie: DiagramComponent,\r\n\t\tscatter: DiagramComponent,\r\n\t\tline: DiagramComponent,\r\n\t\tarea: DiagramComponent,\r\n\t\t\"area-spline\": DiagramComponent,\r\n\t\tnumero: NumericDiagramComponent,\r\n\t\ttempo: ServerConnectingTimeDiagramComponent,\r\n\t\tbooleano: ServerStatusDiagramComponent\r\n\t};\r\n\t@ViewChild(\"dynamicComponentContainer\", { read: ViewContainerRef })\r\n\tdynamicComponentContainer: ViewContainerRef;\r\n\t@ViewChild(DiagramComponent) widgetComponent: DiagramComponent;\r\n\tcurrentComponent: any = null;\r\n\t_data: any;\r\n\t@Input()\r\n\tset data(data: any) {\r\n\t\tif (!data || Object.keys(data).length == 0) return;\r\n\t\tthis.backgroundColor = data.Box.BackgroundColor;\r\n\t\tthis._data = data;\r\n\t\tlet raw = { data };\r\n\t\tlet _component = this.typeMapToDiagram[data.Chart.data.type];\r\n\t\tlet inputProviders = Object.keys(raw).map(inputName => {\r\n\t\t\treturn { provide: inputName, useValue: raw[inputName] };\r\n\t\t});\r\n\t\tlet resolvedInputs = ReflectiveInjector.resolve(inputProviders);\r\n\r\n\t\tlet injector = ReflectiveInjector.fromResolvedProviders(\r\n\t\t\tresolvedInputs,\r\n\t\t\tthis.dynamicComponentContainer.parentInjector\r\n\t\t);\r\n\t\tlet factory = this.resolver.resolveComponentFactory(_component);\r\n\r\n\t\tlet component = factory.create(injector);\r\n\r\n\t\tthis.dynamicComponentContainer.insert(component.hostView);\r\n\r\n\t\tif (this.currentComponent) {\r\n\t\t\tthis.currentComponent.destroy();\r\n\t\t}\r\n\r\n\t\tthis.currentComponent = component;\r\n\t}\r\n\tbackgroundColor: String = \"\";\r\n\tconstructor(private resolver: ComponentFactoryResolver) {}\r\n\tngAfterViewInit() {}\r\n\ttimeChange(e) {\r\n\t\tthis.currentComponent._component.timeChange(e);\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tInput,\r\n\tAfterViewInit,\r\n\tComponentFactoryResolver,\r\n\tViewChild,\r\n\tViewContainerRef,\r\n\tReflectiveInjector,\r\n\tOnDestroy,\r\n\tOutput,\r\n\tEventEmitter\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { DiagramPartialConfigEditComponent } from \"../../dumb-components/diagram-partial-config-edit/diagram-partial-config-edit.component\";\r\nimport { PieDiagramPartialConfigComponent } from \"../../dumb-components/pie-diagram-partial-config/pie-diagram-partial-config.component\";\r\nimport { BooleanoWidgetPartialConfigComponent } from \"../../dumb-components/booleano-widget-partial-config/booleano-widget-partial-config.component\";\r\nimport { LinearDiagramPartialConfigComponent } from \"../../dumb-components/linear-diagram-partial-config/linear-diagram-partial-config.component\";\r\n\r\ndeclare var c3: any;\r\n\r\n@Component({\r\n\tselector: \"dynamic-config-component-selector\",\r\n\ttemplateUrl: \"./dynamic-config-component-selector.component.html\",\r\n\tstyleUrls: [ \"./dynamic-config-component-selector.component.scss\" ],\r\n\tentryComponents: [\r\n\t\tDiagramPartialConfigEditComponent,\r\n\t\tPieDiagramPartialConfigComponent,\r\n\t\tLinearDiagramPartialConfigComponent,\r\n\t\tBooleanoWidgetPartialConfigComponent\r\n\t]\r\n})\r\nexport class DynamicConfigComponentSelectorComponent implements AfterViewInit {\r\n\ttypeMapToDiagram = {\r\n\t\tbar: DiagramPartialConfigEditComponent,\r\n\t\tarea: LinearDiagramPartialConfigComponent,\r\n\t\t\"area-spline\": LinearDiagramPartialConfigComponent,\r\n\t\tdonut: DiagramPartialConfigEditComponent,\r\n\t\tpie: PieDiagramPartialConfigComponent,\r\n\t\tscatter: DiagramPartialConfigEditComponent,\r\n\t\tline: LinearDiagramPartialConfigComponent,\r\n\t\tbooleano: BooleanoWidgetPartialConfigComponent\r\n\t};\r\n\t@ViewChild(\"dynamicComponentContainer\", { read: ViewContainerRef })\r\n\tdynamicComponentContainer: ViewContainerRef;\r\n\t@Output() ConfigChanged = new EventEmitter();\r\n\tcurrentComponent: any = null;\r\n\t@Input()\r\n\tset data(data: any) {\r\n\t\tif (!data || Object.keys(data).length == 0) return;\r\n\t\tif (!(data.type in this.typeMapToDiagram)) {\r\n\t\t\tif (this.currentComponent) this.currentComponent.destroy();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet _component = this.typeMapToDiagram[data.type];\r\n\t\tlet inputProviders = Object.keys(data.inputs).map(inputName => {\r\n\t\t\treturn { provide: inputName, useValue: data.inputs[inputName] };\r\n\t\t});\r\n\t\tlet resolvedInputs = ReflectiveInjector.resolve(inputProviders);\r\n\r\n\t\tlet injector = ReflectiveInjector.fromResolvedProviders(\r\n\t\t\tresolvedInputs,\r\n\t\t\tthis.dynamicComponentContainer.parentInjector\r\n\t\t);\r\n\t\tlet factory = this.resolver.resolveComponentFactory(_component);\r\n\t\tlet component = factory.create(injector);\r\n\t\tif ((<any>component.instance).ConfigChanged)\r\n\t\t\t(<any>component.instance).ConfigChanged.subscribe(() => {\r\n\t\t\t\tthis.ConfigChanged.emit();\r\n\t\t\t});\r\n\r\n\t\tthis.dynamicComponentContainer.insert(component.hostView);\r\n\r\n\t\tif (this.currentComponent) {\r\n\t\t\tthis.currentComponent.destroy();\r\n\t\t}\r\n\r\n\t\tthis.currentComponent = component;\r\n\t}\r\n\tconstructor(private resolver: ComponentFactoryResolver) {}\r\n\tngAfterViewInit() {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\n\r\nimport { DiagramService } from \"../services/diagram.service\";\r\nimport { GetDiagramsApiModel } from \"../models/get-diagrams-api.model\";\r\nimport { GetDiagramsSucceed, GetDiagramsFailed, GetDiagramsStart } from \"../actions/diagrams.actions\";\r\nimport { of } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class DiagramEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private diagramService: DiagramService) {}\r\n\r\n\t@Effect()\r\n\tDiagramRequest$ = this.actions$.pipe(\r\n\t\tofType<any>(),\r\n\t\tmap(action => action.payload),\r\n\t\tmap(data => new GetDiagramsStart())\r\n\t);\r\n\r\n\t@Effect()\r\n\tgetDiagram$ = this.actions$.pipe(\r\n\t\tofType<any>(),\r\n\t\tmap(action => action.payload),\r\n\t\tswitchMap((data: GetDiagramsApiModel.Request) =>\r\n\t\t\tthis.diagramService\r\n\t\t\t\t.getDiagrams()\r\n\t\t\t\t.pipe(map(res => new GetDiagramsSucceed(res)), catchError(() => of(new GetDiagramsFailed())))\r\n\t\t)\r\n\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map, switchMap, catchError, pluck } from \"rxjs/operators\";\r\n\r\nimport { DiagramService } from \"../services/diagram.service\";\r\nimport { AddDiagramApiModel } from \"../models/add-diagram-api.model\";\r\nimport {\r\n\tAddDiagramActionTypes,\r\n\tAddDiagramActionStart,\r\n\tAddDiagramActionSucceed,\r\n\tAddDiagramActionFailed,\r\n\tDataLoadedAction,\r\n\tStructureDefinitionStartAction,\r\n\tGenerateDiagramAction,\r\n\tStructureDefinitionFinishedAction\r\n} from \"../actions/add-diagram.actions\";\r\n\r\n@Injectable()\r\nexport class AddDiagramEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private diagramService: DiagramService) {}\r\n\r\n\t@Effect()\r\n\taddDiagramRequest$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.ADD_DIAGRAM),\r\n\t\tpluck<any, any>(\"payload\"),\r\n\t\tmap(data => new AddDiagramActionStart(data))\r\n\t);\r\n\r\n\t@Effect()\r\n\taddDiagram$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.ADD_DIAGRAM_START),\r\n\t\tpluck<any, any>(\"payload\"),\r\n\t\tswitchMap((data: AddDiagramApiModel.Request) =>\r\n\t\t\tthis.diagramService\r\n\t\t\t\t.addDiagram(data)\r\n\t\t\t\t.pipe(map(res => new AddDiagramActionSucceed(res)), catchError(() => of(new AddDiagramActionFailed())))\r\n\t\t)\r\n\t);\r\n\r\n\t@Effect({ dispatch: false })\r\n\tADD_DIAGRAM_SUCCEED$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.ADD_DIAGRAM_SUCCEED),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap(data => {\r\n\t\t\tthis.router.navigate([ \"diagrams\" ]);\r\n\t\t\treturn Observable.empty();\r\n\t\t})\r\n\t);\r\n\r\n\t@Effect()\r\n\tHAVE_ENDPOINT$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.HAVE_ENDPOINT),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap(data => new DataLoadedAction(data))\r\n\t);\r\n\r\n\t@Effect()\r\n\tDATA_LOADED$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.DATA_LOADED),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap(data => new StructureDefinitionStartAction(data))\r\n\t);\r\n\r\n\t@Effect()\r\n\tDIAGRAM_CONFIG_CHANGED$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.DIAGRAM_CONFIG_CHANGED),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap(data => new GenerateDiagramAction(data))\r\n\t);\r\n\r\n\t@Effect()\r\n\tSTRUCTURE_DEFINITION_START$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.STRUCTURE_DEFINITION_START),\r\n\t\tpluck<any, any>(\"payload\"),\r\n\t\tswitchMap(data => data.getDataStructure().map(() => new StructureDefinitionFinishedAction(data)))\r\n\t);\r\n\r\n\t@Effect()\r\n\tCOLUMNS_MAPPING_CHANGED$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.COLUMNS_MAPPING_CHANGED),\r\n\t\tpluck<any, any>(\"payload\"),\r\n\t\tswitchMap(data => data.calculateColumns().map(() => new StructureDefinitionFinishedAction(data)))\r\n\t);\r\n\r\n\t@Effect()\r\n\tSTRUCTURE_DEFINITION_END$ = this.actions$\r\n\t\t// .skipUntil(this.actions$.ofType(AddDiagramActionTypes.DATA_LOADED))\r\n\t\t.pipe(\r\n\t\t\tofType(AddDiagramActionTypes.STRUCTURE_DEFINITION_END),\r\n\t\t\tpluck<any, any>(\"payload\"),\r\n\t\t\tswitchMap(data => data.calculateColumns().map(() => new GenerateDiagramAction(data)))\r\n\t\t);\r\n\r\n\t@Effect({ dispatch: false })\r\n\tGenerateDiagram$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.GENERATE_DIAGRAM),\r\n\t\tpluck<any, any>(\"payload\"),\r\n\t\tmap(data => data.generateDiagram())\r\n\t);\r\n}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { DiagramModuleContainerComponent } from \"./smart-components/diagram-module-container/diagram-module-container.component\";\r\nimport { DiagramsComponent } from \"./smart-components/diagrams/diagrams.component\";\r\nimport { AddDiagramComponent } from \"./smart-components/add-diagram/add-diagram.component\";\r\nimport { NumericDiagramComponent } from \"./dumb-components/numeric-diagram/numeric-diagram.component\";\r\nimport { ServerConnectingTimeDiagramComponent } from \"./dumb-components/server-connecting-time-diagram/server-connecting-time-diagram.component\";\r\nimport { ServerStatusDiagramComponent } from \"./dumb-components/server-status-diagram/server-status-diagram.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"diagrams\",\r\n\t\tcomponent: DiagramModuleContainerComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"\",\r\n\t\t\t\tcomponent: DiagramsComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"add\",\r\n\t\t\t\tcomponent: AddDiagramComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"edit/:id\",\r\n\t\t\t\tcomponent: AddDiagramComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"numero\",\r\n\t\t\t\tcomponent: NumericDiagramComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"tempo\",\r\n\t\t\t\tcomponent: ServerConnectingTimeDiagramComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"booleano\",\r\n\t\t\t\tcomponent: ServerStatusDiagramComponent\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const RoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { IGridItemComponent } from \"@soushians/grid\";\r\n\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\ttemplateUrl: \"diagram-selector.component.html\"\r\n})\r\nexport class DiagramSelectorComponent implements OnInit, IGridItemComponent<{ diagramId: string }> {\r\n\tdiagrams$: Observable<DiagramModel[]>;\r\n\tselectedDiagramId: string;\r\n\tget valid() {\r\n\t\treturn this.config.diagramId != undefined;\r\n\t}\r\n\tget config() {\r\n\t\treturn {\r\n\t\t\tdiagramId: this.selectedDiagramId\r\n\t\t};\r\n\t}\r\n\tconstructor(private diagramService: DiagramService) {\r\n\t\tthis.diagrams$ = this.diagramService.getDiagrams().pipe(map(res => res.Result));\r\n\t}\r\n\tngOnInit() {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatTooltipModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule,\r\n\tMatCheckboxModule,\r\n\tMatGridListModule,\r\n\tMatSliderModule,\r\n\tMatAutocompleteModule\r\n} from \"@angular/material\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { EffectsModule, mergeEffects } from \"@ngrx/effects\";\r\n\r\nimport { SharedModule } from \"@soushians/shared\";\r\n\r\nimport { DiagramModuleConfig, MODULE_CONFIG_TOKEN } from \"./diagram.config\";\r\n\r\nimport { DiagramReducers } from \"./reducers/index\";\r\n\r\nimport { ServerStatusDiagramComponent } from \"./dumb-components/server-status-diagram/server-status-diagram.component\";\r\nimport { DiagramPartialConfigEditComponent } from \"./dumb-components/diagram-partial-config-edit/diagram-partial-config-edit.component\";\r\nimport { PieDiagramPartialConfigComponent } from \"./dumb-components/pie-diagram-partial-config/pie-diagram-partial-config.component\";\r\nimport { BooleanoWidgetPartialConfigComponent } from \"./dumb-components/booleano-widget-partial-config/booleano-widget-partial-config.component\";\r\nimport { NumericWidgetPartialConfigComponent } from \"./dumb-components/numeric-widget-partial-config/numeric-widget-partial-config.component\";\r\nimport { LinearDiagramPartialConfigComponent } from \"./dumb-components/linear-diagram-partial-config/linear-diagram-partial-config.component\";\r\nimport { ServerConnectingTimeDiagramComponent } from \"./dumb-components/server-connecting-time-diagram/server-connecting-time-diagram.component\";\r\nimport { NumericEditDiagramComponent } from \"./dumb-components/numeric-edit-diagram/numeric-edit-diagram.component\";\r\nimport { NumericDiagramComponent } from \"./dumb-components/numeric-diagram/numeric-diagram.component\";\r\n\r\nimport { DiagramModuleContainerComponent } from \"./smart-components/diagram-module-container/diagram-module-container.component\";\r\nimport { DataMapperComponent } from \"./smart-components/data-mapper/data-mapper.component\";\r\n\r\nimport { AddDiagramComponent } from \"./smart-components/add-diagram/add-diagram.component\";\r\nimport { diagramViewComponent } from \"./smart-components/diagram-view/diagram-view.component\";\r\nimport { DiagramsComponent } from \"./smart-components/diagrams/diagrams.component\";\r\nimport { EditDiagramComponent } from \"./smart-components/edit-diagram/edit-diagram.component\";\r\nimport { DiagramComponent } from \"./smart-components/diagram/diagram.component\";\r\nimport { DynamicComponentSelectorComponent } from \"./smart-components/dynamic-component-selector/dynamic-component-selector.component\";\r\nimport { DynamicConfigComponentSelectorComponent } from \"./smart-components/dynamic-config-component-selector/dynamic-config-component-selector.component\";\r\n\r\nimport { DiagramEffects } from \"./effects/diagrams.effects\";\r\nimport { AddDiagramEffects } from \"./effects/add-diagram.effects\";\r\n\r\nimport { RoutingModule } from \"./diagram-routing.module\";\r\nimport { DiagramSelectorComponent } from \"./smart-components/diagram-selector/diagram-selector.component\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tRouterModule,\r\n\t\tCommonModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSelectModule,\r\n\t\tMatSliderModule,\r\n\t\tMatInputModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatRadioModule,\r\n\t\tMatTooltipModule,\r\n\t\tMatGridListModule,\r\n\t\tMatAutocompleteModule,\r\n\t\tReactiveFormsModule,\r\n\t\tBrowserAnimationsModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tAddDiagramComponent,\r\n\t\tDiagramsComponent,\r\n\t\tdiagramViewComponent,\r\n\t\tEditDiagramComponent,\r\n\t\tDynamicConfigComponentSelectorComponent,\r\n\t\tDiagramComponent,\r\n\t\tDynamicComponentSelectorComponent,\r\n\t\tDiagramModuleContainerComponent,\r\n\t\tDataMapperComponent,\r\n\t\tNumericDiagramComponent,\r\n\t\tServerStatusDiagramComponent,\r\n\t\tDiagramPartialConfigEditComponent,\r\n\t\tPieDiagramPartialConfigComponent,\r\n\t\tBooleanoWidgetPartialConfigComponent,\r\n\t\tNumericWidgetPartialConfigComponent,\r\n\t\tServerConnectingTimeDiagramComponent,\r\n\t\tNumericEditDiagramComponent,\r\n\t\tLinearDiagramPartialConfigComponent,\r\n\t\tDiagramSelectorComponent\r\n\t],\r\n\tentryComponents: [ DiagramSelectorComponent, diagramViewComponent ],\r\n\texports: [ DiagramSelectorComponent ],\r\n\tproviders: []\r\n})\r\nexport class NgsDiagramModule {\r\n\tstatic forRoot(config?: DiagramModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: RootNgsDiagramModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config } ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsDiagramModule,\r\n\t\tStoreModule.forFeature(\"diagram\", DiagramReducers),\r\n\t\tEffectsModule.forFeature([ DiagramEffects, AddDiagramEffects ]),\r\n\t\tRoutingModule\r\n\t],\r\n\texports: [ NgsDiagramModule ]\r\n})\r\nexport class RootNgsDiagramModule {}\r\n"],"names":["initialState","DiagramsReducer.diagramReducer","fromEditDiagram.Reducer","parentGuardReducer.ParentGuardReducer","BehaviorSubject","Subject","Observable","tslib_1.__decorate","of"],"mappings":"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"}
