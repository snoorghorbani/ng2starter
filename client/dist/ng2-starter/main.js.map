{"version":3,"sources":["webpack:///./dist/@soushians/authentication/fesm5/soushians-authentication.js","webpack:///./dist/@soushians/config/fesm5/soushians-config.js","webpack:///./dist/@soushians/diagram/fesm5/soushians-diagram.js","webpack:///./dist/@soushians/form/fesm5/soushians-form.js","webpack:///./dist/@soushians/frontend-authentication/fesm5/soushians-frontend-authentication.js","webpack:///./dist/@soushians/grid/fesm5/soushians-grid.js","webpack:///./dist/@soushians/gwt-steps/fesm5/soushians-gwt-steps.js","webpack:///./dist/@soushians/layout/fesm5/soushians-layout.js","webpack:///./dist/@soushians/page/fesm5/soushians-page.js","webpack:///./dist/@soushians/rule/fesm5/soushians-rule.js","webpack:///./dist/@soushians/shared/fesm5/soushians-shared.js","webpack:///./dist/@soushians/socket/fesm5/soushians-socket.js","webpack:///./dist/@soushians/source/fesm5/soushians-source.js","webpack:///./dist/@soushians/user/fesm5/soushians-user.js","webpack:///./dist/@soushians/widget-types/fesm5/soushians-widget-types.js","webpack:///./dist/@soushians/widget/fesm5/soushians-widget.js","webpack:///./projects/configs/src/lib/lib-configs/env.ts","webpack:///./projects/configs/src/lib/lib-configs/ngs-authentication.module-config.ts","webpack:///./projects/configs/src/lib/lib-configs/ngs-config.module-config.ts","webpack:///./projects/configs/src/lib/lib-configs/ngs-diagram.module-config.ts","webpack:///./projects/configs/src/lib/lib-configs/ngs-form.module-config.ts","webpack:///./projects/configs/src/lib/lib-configs/ngs-frontend-authentication.module-config.ts","webpack:///./projects/configs/src/lib/lib-configs/ngs-grid.module-config.ts","webpack:///./projects/configs/src/lib/lib-configs/ngs-layout.module-config.ts","webpack:///./projects/configs/src/lib/lib-configs/ngs-page.module-config.ts","webpack:///./projects/configs/src/lib/lib-configs/ngs-rule.module-config.ts","webpack:///./projects/configs/src/lib/lib-configs/ngs-socket.module-config.ts","webpack:///./projects/configs/src/lib/lib-configs/ngs-user.module-config.ts","webpack:///./projects/configs/src/lib/lib-configs/ngs-widget.module-config.ts","webpack:///./projects/configs/src/public_api.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.reducers.ts","webpack:///./src/app/dashboard/dashboard-routing.module.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/smart-components/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/smart-components/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/smart-components/dashboard/dashboard.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+I;AACxF;AACiC;AACtB;AACsD;AACsO;AACxQ;AAC3B;AACgB;AACpB;AACzB;AAC2B;AACM;AAChC;AACK;AACW;AACS;AACuB;AACb;AAClB;;AAEhD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC,aAAa;AACb;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClcAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,QAAQ,+CAAE,OAAO,EAAE;AAC1D,kCAAkC,EAAE;AACpC,qCAAqC,aAAa;AAClD;AACA,WAAW,EAAE;AACb,8BAA8B,4DAAc;;AAE5C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,2BAA2B,oDAAe;AAC1C,uCAAuC;AACvC;AACA,0BAA0B,+EAA6B;AACvD;AACA;AACA,4CAA4C;AAC5C;AACA,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qEAAqE;AACrE,SAAS,gCAAgC,OAAO,oDAAM,gCAAgC,GAAG;AACzF,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN,4EAA4E,sEAAgB,EAAE,iEAAiE,+CAA+C,4DAAM,uBAAuB,4DAAM,CAAC,iDAAK,GAAG,EAAE,iEAAiE;AAC7T;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iDAAiD,EAAE;AACnF;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,sDAAsD,6DAAM,oBAAoB,sCAAsC,EAAE,GAAG,2DAAI,KAAK,gEAAS;AAC7I;AACA,SAAS,GAAG,0DAAG;AACf,uBAAuB,EAAE;AACzB,uCAAuC;AACvC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,sDAAsD,6DAAM,oBAAoB,sCAAsC,EAAE,GAAG,2DAAI,KAAK,gEAAS;AAC7I;AACA,SAAS,GAAG,0DAAG,mDAAmD,0DAAG;AACrE;AACA;AACA;AACA;AACA,SAAS,GAAG,0DAAG;AACf;AACA,gBAAgB,wDAAM;AACtB,SAAS,GAAG,0DAAG,kBAAkB,4DAA4D,EAAE;AAC/F;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ,wDAAM;AACd;AACA;AACA,kBAAkB,0DAAG;AACrB,YAAY,wDAAM;AAClB,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,kCAAkC,wDAAM;AACxC;AACA,2BAA2B;AAC3B;AACA,sDAAsD,6DAAM,oBAAoB,sCAAsC,EAAE,GAAG,2DAAI,KAAK,gEAAS;AAC7I,kCAAkC,wEAAc,uDAAuD,aAAa;AACpH,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,+DAAU,EAAE;AAC5B,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS,2CAA2C;AACpD,SAAS,OAAO,6DAAW;AAC3B,MAAM;AACN,uDAAuD,sEAAgB,EAAE,4CAA4C,0BAA0B,4DAAM,CAAC,+DAAU,GAAG,4DAAM,CAAC,iDAAK,GAAG,4DAAM,sCAAsC,4DAAM,CAAC,uEAAa,GAAG,EAAE,4CAA4C;AACnS;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC,gFAAgF,4BAA4B,EAAE;AAC9G;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,2DAA2D;AAC3D,SAAS,2CAA2C;AACpD,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,qBAAqB,OAAO,oDAAM,EAAE;AACpC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC,gFAAgF,4BAA4B,EAAE;AAC9G;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kBAAkB,2DAAI,KAAK,gEAAS,oBAAoB,0CAA0C,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,2DAA2D;AAC3D,SAAS,2CAA2C;AACpD,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS,OAAO,6DAAW;AAC3B,MAAM;AACN;AACA,qBAAqB,OAAO,oDAAM,EAAE;AACpC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,kCAAkC,4DAAY;;AAE9C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,oBAAoB,OAAO,oDAAM,EAAE;AACnC,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,4DAA4D;AAC5D,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAA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,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB,2CAA2C,EAAE;AACrE,aAAa;AACb,uBAAuB,EAAE;AACzB,iCAAiC,gEAAkB;AACnD,uBAAuB,EAAE;AACzB,2BAA2B,gEAAkB;AAC7C,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,oCAAoC,WAAW,aAAa,YAAY,iBAAiB,cAAc;AACvG;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0EAA0E;AAC1E,SAAS,OAAO,sEAAwB;AACxC,MAAM;AACN;AACA,qCAAqC,OAAO,uDAAS,uCAAuC,OAAO,8DAAgB,EAAE,IAAI;AACzH,yBAAyB,OAAO,oDAAM,EAAE;AACxC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gDAAgD,EAAE;AAClD,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoO;AAC3K;AACqE;AACtC;AACvB;AACW;AACR;AACtB;AACiC;AAClB;AACU;AACR;AACf;AACD;AACS;AACuB;AAC8N;;AAE7S;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,8BAA8B,4DAAc;;AAE5C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,uCAAuC,wBAAwB,EAAE,OAAO,EAAE;AAC1E;AACA,2DAA2D,sCAAsC,EAAE;AACnG;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,kDAAkD;;AAEnD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,eAAe;AACvD;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,eAAe;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,wDAAS;AACpC,8BAA8B,0DAAW,MAAM,yDAAU;AACzD,kCAAkC,0DAAW,UAAU,yDAAU;AACjE,+BAA+B,0DAAW,MAAM,yDAAU;AAC1D,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,kDAAkD;;AAEnD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA,qBAAqB,EAAE,MAAM,WAAW,EAAE;AAC1C;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,4DAA4D;AACpG;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,8DAA8D;AACtG;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,oBAAoB;AAC5D;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,yBAAyB,yEAAqB;AAC9C,WAAW,EAAE;AACb,6BAA6B,kEAAc,uCAAuC,0BAA0B,EAAE;;AAE9G;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,8BAA8B,oDAAe;AAC7C;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,cAAc;AACd;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,gOAAgO,qCAAqC,0CAA0C,qCAAqC;AACpV,4CAA4C,cAAc,WAAW,cAAc,SAAS,gBAAgB,gBAAgB,eAAe,kCAAkC,gBAAgB;AAC7L,iBAAiB,IAAI;AACrB;AACA;AACA,+DAA+D;AAC/D,SAAS,OAAO,sDAAQ;AACxB,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,8BAA8B,oEAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,oCAAoC,WAAW,aAAa,YAAY,SAAS,cAAc,gBAAgB,kCAAkC,eAAe,gBAAgB;AAChL,iBAAiB,IAAI;AACrB;AACA;AACA,oEAAoE;AACpE,SAAS,OAAO,sDAAQ;AACxB,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C,8BAA8B,oEAAiB;AAC/C;AACA;AACA,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,oCAAoC,WAAW,aAAa,YAAY,SAAS,cAAc,gBAAgB,kCAAkC,eAAe,gBAAgB;AAChL,iBAAiB,IAAI;AACrB;AACA;AACA,mEAAmE;AACnE,SAAS,OAAO,sDAAQ;AACxB,MAAM;AACN;AACA,yBAAyB,OAAO,oDAAM,EAAE;AACxC,qBAAqB,OAAO,mDAAK,EAAE;AACnC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,8BAA8B,oEAAiB;AAC/C;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,oCAAoC,WAAW,aAAa,YAAY,SAAS,cAAc,gBAAgB,kCAAkC,eAAe,gBAAgB;AAChL,iBAAiB,IAAI;AACrB;AACA;AACA,uEAAuE;AACvE,SAAS,OAAO,sDAAQ;AACxB,MAAM;AACN;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,8BAA8B,oEAAiB;AAC/C;AACA;AACA,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,oCAAoC,WAAW,aAAa,YAAY,SAAS,cAAc,gBAAgB,kCAAkC,eAAe,gBAAgB;AAChL,iBAAiB,IAAI;AACrB;AACA;AACA,sEAAsE;AACtE,SAAS,OAAO,sDAAQ;AACxB,MAAM;AACN;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,8BAA8B,oEAAiB;AAC/C,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AAC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AACrB,kCAAkC,wDAAS;AAC3C,4CAA4C,0DAAW;AACvD,4CAA4C,0DAAW;AACvD,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,gDAAgD;;AAEjD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sCAAsC,iBAAiB,EAAE;AACzD;AACA,mBAAmB,kDAAU;AAC7B,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sCAAsC,oBAAoB,EAAE,uBAAuB,EAAE;AACrF;AACA,mBAAmB,kDAAU;AAC7B,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sCAAsC,oBAAoB,EAAE,uBAAuB,EAAE;AACrF;AACA,mBAAmB,kDAAU;AAC7B,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iBAAiB,EAAE;AACzD;AACA,mBAAmB,kDAAU;AAC7B,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,sCAAsC,iBAAiB,EAAE;AACzD;AACA,mBAAmB,kDAAU;AAC7B,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sCAAsC,iBAAiB,EAAE;AACzD;AACA,mBAAmB,kDAAU;AAC7B,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sCAAsC,iBAAiB,EAAE;AACzD;AACA,mBAAmB,kDAAU;AAC7B,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,8BAA8B,UAAU;AACxC,8BAA8B,cAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,qCAAqC,mBAAmB,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,qCAAqC,mBAAmB,EAAE;AAC1D;AACA;AACA;AACA,mBAAmB,kDAAU,gCAAgC,gEAAS,eAAe,gEAAS;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO,0DAAG,iBAAiB,mBAAmB,EAAE;AACjE,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2EAA2E,qCAAqC,EAAE;AAClH;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE,8CAA8C,wBAAwB,EAAE;AACrG;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,sCAAsC,sDAAQ,GAAG,WAAW,2BAA2B;AACvF,uCAAuC,EAAE,OAAO,OAAO,+CAAO;AAC9D;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mCAAmC,uBAAuB;AAC1D,8BAA8B,UAAU;AACxC;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,+DAAU,EAAE;AAC5B,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS;AACT,MAAM;AACN,wDAAwD,sEAAgB,EAAE,6CAA6C,2BAA2B,4DAAM,CAAC,+DAAU,GAAG,4DAAM,CAAC,iDAAK,GAAG,4DAAM,+BAA+B,EAAE,6CAA6C;AACzQ;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAS;AACxC,8BAA8B,oEAAiB;AAC/C;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,6EAA6E,6DAAM,kBAAkB,0BAA0B,EAAE,GAAG,gEAAS;AAC7I;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,oCAAoC,WAAW,aAAa,YAAY,SAAS,cAAc,gBAAgB,kCAAkC,eAAe,gBAAgB;AAChL,iBAAiB,IAAI;AACrB;AACA;AACA,8DAA8D;AAC9D,SAAS,OAAO,sDAAQ,EAAE;AAC1B,SAAS;AACT,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAS;AACxC,8BAA8B,oEAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,qGAAqG,gEAAS;AAC9G,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,mIAAmI,yBAAyB,uEAAuE,SAAS;AAC5O,oCAAoC,WAAW,SAAS,cAAc,gBAAgB,kCAAkC,eAAe,gBAAgB,UAAU,UAAU;AAC3K,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D;AAC1D,SAAS,OAAO,sDAAQ,EAAE;AAC1B,SAAS;AACT,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kEAAkE;AAClE,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,yWAAyW,WAAW,qDAAqD,WAAW;AACpb,+CAA+C,WAAW,cAAc,YAAY,kBAAkB,YAAY,kBAAkB;AACpI,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,uBAAuB;AAChC,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClcAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAS;AACxC;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B,EAAE;AACjC,mDAAmD,EAAE;AACrD,4DAA4D;AAC5D;AACA,oEAAoE,0DAAW;AAC/E,qBAAqB;AACrB,+BAA+B,EAAE;AACjC,kDAAkD,EAAE;AACpD,2DAA2D;AAC3D;AACA,6DAA6D,0DAAW;AACxE,qBAAqB;AACrB,0EAA0E,6DAA6D,EAAE;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mDAAmD,sDAAQ,GAAG,gBAAgB,cAAc;AAC5F;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kCAAkC,eAAe;AACjD,mCAAmC,gBAAgB;AACnD,mBAAmB,EAAE;AACrB,iCAAiC,EAAE;AACnC;AACA;AACA,mCAAmC,yDAAU;AAC7C,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE;AACnC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,0DAAY;AAC3B,uBAAuB,EAAE;AACzB,iGAAiG,EAAE;AACnG;AACA,uBAAuB,EAAE;AACzB,2CAA2C,EAAE;AAC7C;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,4DAA4D,0DAAW;AACvE,aAAa;AACb,uBAAuB,EAAE;AACzB,0CAA0C,EAAE;AAC5C;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,qDAAqD,0DAAW;AAChE,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,eAAe,0DAAY;AAC3B;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,o6BAAo6B,eAAe,qlBAAqlB,MAAM,8PAA8P,2EAA2E,sGAAsG,4CAA4C,2JAA2J,MAAM,01CAA01C,0vBAA0vB,WAAW,mrBAAmrB,WAAW,m8BAAm8B,uGAAuG,SAAS,KAAK,SAAS,8wBAA8wB,MAAM;AAC5vN,qCAAqC,YAAY,cAAc,qBAAqB,gBAAgB,aAAa,cAAc,cAAc,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,mBAAmB,UAAU,cAAc;AACvR,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,uBAAuB;AAChC,SAAS,OAAO,0DAAW,EAAE;AAC7B,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS,OAAO,+DAAc;AAC9B,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,oCAAoC,WAAW,cAAc,aAAa,YAAY,iBAAiB,cAAc,cAAc,2BAA2B;AAC9J,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD;AACvD,SAAS;AACT,MAAM;AACN;AACA,qBAAqB,OAAO,mDAAK,iBAAiB;AAClD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,oCAAoC,WAAW,aAAa,YAAY,SAAS,eAAe,YAAY,UAAU,UAAU;AAChI,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,EAAE;AACzB;AACA,kFAAkF,yCAAyC,EAAE;AAC7H,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD;AACvD,SAAS,uBAAuB;AAChC,SAAS,OAAO,+DAAc,EAAE;AAChC,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAS;AACxC,kCAAkC,oEAAiB;AACnD;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,+DAA+D,aAAa,EAAE;AAC9E,sCAAsC,sDAAQ,GAAG,qBAAqB,uCAAuC;AAC7G;AACA;AACA,sBAAsB,6DAAM,kBAAkB,0BAA0B,EAAE,GAAG,gEAAS;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,6KAA6K,4BAA4B,gFAAgF,6BAA6B,6EAA6E,4BAA4B;AAC/Z,oCAAoC,WAAW,iBAAiB,cAAc,WAAW,WAAW,WAAW,cAAc,kBAAkB,MAAM,kBAAkB,UAAU,kBAAkB,SAAS,OAAO,QAAQ,gBAAgB,UAAU,2BAA2B;AAChR,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD;AACnD,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS,uBAAuB;AAC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AAE;AAC1E;AACA,2DAA2D,sCAAsC,EAAE;AACnG;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,wDAAS;AACpC,6BAA6B,0DAAW,MAAM,yDAAU;AACxD,8BAA8B,0DAAW,MAAM,yDAAU;AACzD,8BAA8B,0DAAW,GAAG;AAC5C,gCAAgC,wDAAS;AACzC,oCAAoC,wDAAS;AAC7C,sCAAsC,0DAAW;AACjD,sCAAsC,0DAAW;AACjD,yBAAyB;AACzB,oCAAoC,wDAAS;AAC7C,sCAAsC,0DAAW;AACjD,sCAAsC,0DAAW;AACjD,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,4CAA4C;;AAE7C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,uCAAuC,wBAAwB,EAAE,OAAO,EAAE;AAC1E;AACA,2DAA2D,sCAAsC,EAAE;AACnG;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,wDAAS;AACpC,8BAA8B,0DAAW,MAAM,yDAAU;AACzD,kCAAkC,wDAAS,GAAG;AAC9C,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,4CAA4C;;AAE7C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,EAAE;AACb,8BAA8B,4DAAc;;AAE5C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,2BAA2B,oDAAe;AAC1C,uCAAuC;AACvC;AACA,0BAA0B,qEAAmB;AAC7C;AACA;AACA,4CAA4C;AAC5C;AACA,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,2DAA2D;AAC3D,SAAS,gCAAgC,OAAO,oDAAM,gCAAgC,GAAG;AACzF,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN,kEAAkE,sEAAgB,EAAE,uDAAuD,qCAAqC,4DAAM,uBAAuB,4DAAM,CAAC,iDAAK,GAAG,EAAE,uDAAuD;AACrR;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uCAAuC,uCAAuC,EAAE;AAChF;AACA;AACA;AACA,SAAS;AACT,sCAAsC,wBAAwB,EAAE;AAChE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uCAAuC,uCAAuC,EAAE;AAChF;AACA;AACA,kCAAkC,wEAAc,yDAAyD,WAAW;AACpH,SAAS;AACT,sCAAsC,wBAAwB,EAAE;AAChE;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uCAAuC,uCAAuC,EAAE;AAChF,0CAA0C,8EAA8E,EAAE;AAC1H,sCAAsC,wBAAwB,EAAE;AAChE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uCAAuC,wCAAwC,EAAE;AACjF;AACA;AACA;AACA,SAAS;AACT,sCAAsC,wBAAwB,EAAE;AAChE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uCAAuC,0CAA0C,EAAE;AACnF,0CAA0C,iFAAiF,EAAE;AAC7H;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,0BAA0B,oEAAiB;AAC3C;AACA,sCAAsC,6BAA6B,EAAE;AACrE,kBAAkB,6DAAM,mBAAmB,sBAAsB,EAAE,GAAG,0DAAG,mBAAmB,oCAAoC,wBAAwB,EAAE,EAAE,EAAE;AAC9J,mDAAmD,sCAAsC,EAAE;AAC3F;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8CAA8C;AAC9C,SAAS,OAAO,+DAAU,EAAE;AAC5B,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS;AACT,MAAM;AACN,qDAAqD,sEAAgB,EAAE,0CAA0C,wBAAwB,4DAAM,CAAC,+DAAU,GAAG,4DAAM,CAAC,iDAAK,GAAG,4DAAM,4BAA4B,EAAE,0CAA0C;AAC1P;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,uPAAuP,YAAY;AACnQ,oCAAoC,cAAc,gBAAgB,WAAW;AAC7E,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,4HAA4H,cAAc;AAC1I,oCAAoC,cAAc,gBAAgB,WAAW;AAC7E,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,oCAAoC,cAAc,gBAAgB,WAAW;AAC7E,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,oCAAoC,cAAc,gBAAgB,WAAW;AAC7E,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,6BAA6B,wEAAc;AAC3C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oEAAkB;AACrD,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,qCAAqC;AACrC;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,sDAAsD;AACtD;AACA,qDAAqD;AACrD,gBAAgB;AAChB;AACA;AACA,qDAAqD;AACrD,gBAAgB;AAChB;AACA;AACA;AACA,qGAAqG,oCAAoC,EAAE;AAC3I;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,k8BAAk8B,KAAK,wEAAwE,cAAc,2iBAA2iB,2BAA2B,8VAA8V,mCAAmC,yFAAyF,oCAAoC,wFAAwF,gCAAgC;AACztE,oCAAoC,cAAc,gBAAgB,WAAW;AAC7E,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,+DAAU;AAC1B,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,oCAAoC,cAAc,gBAAgB,WAAW;AAC7E,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,mSAAmS,mCAAmC,0FAA0F,oCAAoC,8FAA8F,gCAAgC;AAClkB,oCAAoC,cAAc,gBAAgB,WAAW;AAC7E,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,2jBAA2jB,mCAAmC,0FAA0F,oCAAoC,8FAA8F,gCAAgC,+3BAA+3B,eAAe,uEAAuE,uCAAuC;AACt1D,oCAAoC,cAAc,gBAAgB,WAAW;AAC7E,iBAAiB,IAAI;AACrB;AACA;AACA,gEAAgE,WAAW;AAC3E;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,8ZAA8Z,mCAAmC,0FAA0F,oCAAoC,8FAA8F,gCAAgC,o3BAAo3B,eAAe,uEAAuE,uCAAuC;AAC9qD,oCAAoC,cAAc,gBAAgB,WAAW;AAC7E,iBAAiB,IAAI;AACrB;AACA;AACA,gEAAgE,WAAW;AAC3E;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sDAAsD,6DAAM,qBAAqB,2CAA2C,EAAE,GAAG,2DAAI,KAAK,gEAAS;AACnJ;AACA,SAAS,GAAG,0DAAG,sBAAsB,wBAAwB,EAAE;AAC/D;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,sDAAsD,6DAAM,oBAAoB,uCAAuC,EAAE,GAAG,gEAAS,oBAAoB,qEAAqE,EAAE,GAAG,0DAAG,sBAAsB,wBAAwB,EAAE;AACtR;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,+DAAU,EAAE;AAC5B,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS;AACT,MAAM;AACN,4DAA4D,sEAAgB,EAAE,iDAAiD,+BAA+B,4DAAM,CAAC,+DAAU,GAAG,4DAAM,CAAC,iDAAK,GAAG,4DAAM,4BAA4B,EAAE,iDAAiD;AACtR;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA,2DAA2D,sCAAsC,EAAE;AACnG;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,sDAAsD;;AAEvD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,+CAA+C,0DAAG,oBAAoB,wDAAwD,EAAE;AAChI;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,kCAAkC,yBAAyB;AAC3D,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD;AACvD,SAAS,2BAA2B;AACpC,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC,0BAA0B,0DAAY;AACtC,0BAA0B,0DAAY;AACtC;AACA;AACA,2BAA2B,oEAAiB;AAC5C,0BAA0B,gEAAS;AACnC;AACA;AACA,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAS;AAC/B,8CAA8C,mCAAmC,EAAE;AACnF,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,sEAAsE,EAAE;AACxE;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,gCAAgC,yDAAU;AAC1C;AACA;AACA,gCAAgC,yDAAU;AAC1C;AACA;AACA,gCAAgC,yDAAU;AAC1C;AACA,uBAAuB,EAAE;AACzB,0BAA0B,0DAAW;AACrC,wBAAwB,EAAE;AAC1B,wBAAwB,EAAE;AAC1B,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,kCAAkC,wDAAS,GAAG;AAC9C;AACA,yCAAyC,EAAE;AAC3C;AACA;AACA,sEAAsE,EAAE;AACxE;AACA;AACA,sEA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AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,+sBAA+sB;AAC/sB,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD,WAAW;AAChE;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,mBAAmB,OAAO,oDAAM,EAAE;AAClC,kBAAkB,OAAO,oDAAM,EAAE;AACjC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD,WAAW;AAChE;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,oDAAM,EAAE;AAClC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC,0BAA0B,0DAAY;AACtC;AACA,2BAA2B,wDAAS;AACpC,gBAAgB,wDAAS;AACzB,yBAAyB,0DAAW;AACpC,2BAA2B,0DAAW;AACtC,aAAa;AACb;AACA,gCAAgC,wDAAS;AACzC,8BAA8B,0DAAW;AACzC,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+FAA+F,cAAc,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,8BAA8B,wDAAS;AACvC,qBAAqB,0DAAW;AAChC,uBAAuB,0DAAW;AAClC,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,8TAA8T,aAAa,0/CAA0/C,MAAM,olBAAolB,yBAAyB,GAAG;AAC37E,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,oDAAM,EAAE;AAClC,kBAAkB,OAAO,oDAAM,EAAE;AACjC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4DAA4D;AAC5D,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA,IAAI,wDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oCAAoC,sBAAsB,EAAE;AAC5D,sCAAsC,0DAA0D,EAAE;AAClG;AACA,oCAAoC,sBAAsB,EAAE;AAC5D,sCAAsC,yCAAyC,EAAE;AACjF,qCAAqC,qBAAqB,EAAE;AAC5D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6DAA6D;AAC7D,SAAS,oBAAoB;AAC7B,SAAS,OAAO,+DAAc,EAAE;AAChC,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,2BAA2B,0DAAY;AACvC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mCAAmC,yBAAyB;AAC5D;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mCAAmC,yBAAyB;AAC5D;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,uBAAuB;AACvB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,mBAAmB,OAAO,oDAAM,EAAE;AAClC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA,IAAI,wDAAS;AAC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Ac,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAE66B;;AAE76B,2CAA2C,cAAc,2kgK;;;;;;;;;;;;ACxxEzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAC+B;AACuD;AACpG;AACY;AACa;AAC0R;AACxQ;AACX;AACZ;AACb;AACH;AACS;AACuB;AACb;AAClB;;AAEhD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC,aAAa;AACb;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,uCAAuC;AAC/E;AACA;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,yCAAyC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,oCAAoC,uBAAuB;AAC3D,WAAW,EAAE;AACb,gCAAgC,mBAAmB;AACnD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb,wCAAwC,yEAAqB;AAC7D,WAAW,EAAE;AACb,sBAAsB,kEAAc,sDAAsD,yBAAyB,EAAE;AACrH,WAAW,EAAE;AACb,qCAAqC,kEAAc;AACnD,WAAW,EAAE;AACb,sBAAsB,kEAAc;;AAEpC;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,8BAA8B,4DAAc;;AAE5C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,2BAA2B,oDAAe;AAC1C,uCAAuC;AACvC;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,YAAY;AACZ;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6EAA6E;AAC7E,SAAS,gCAAgC,OAAO,oDAAM,gCAAgC,GAAG;AACzF,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN,oFAAoF,sEAAgB,EAAE,yEAAyE,uDAAuD,4DAAM,uBAAuB,4DAAM,CAAC,iDAAK,GAAG,EAAE,yEAAyE;AAC7V;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC,gFAAgF,4BAA4B,EAAE;AAC9G;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,2DAA2D;AAC3D,SAAS,mDAAmD;AAC5D,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,qBAAqB,OAAO,oDAAM,EAAE;AACpC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,0CAA0C,4DAAY;;AAEtD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,oBAAoB,OAAO,oDAAM,EAAE;AACnC,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,sDAAsD,6DAAM,oBAAoB,sCAAsC,EAAE,GAAG,2DAAI,KAAK,gEAAS,oBAAoB,+EAA+E,eAAe,EAAE,EAAE,GAAG,0DAAG;AACzQ,uBAAuB,EAAE;AACzB,uCAAuC;AACvC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,sCAAsC,iBAAiB,EAAE;AACzD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sCAAsC,iBAAiB,EAAE;AACzD;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD;AACxD,SAAS,OAAO,+DAAU,EAAE;AAC5B,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS,mDAAmD;AAC5D,SAAS,OAAO,6DAAW;AAC3B,MAAM;AACN,+DAA+D,sEAAgB,EAAE,oDAAoD,kCAAkC,4DAAM,CAAC,+DAAU,GAAG,4DAAM,CAAC,iDAAK,GAAG,4DAAM,8CAA8C,4DAAM,CAAC,uEAAa,GAAG,EAAE,oDAAoD;AAC3U;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAS,cAAc,6CAA6C,EAAE,GAAG,0DAAG,kBAAkB,gCAAgC,EAAE,GAAG,iEAAU,mBAAmB,QAAQ,+CAAE,0BAA0B,EAAE;AACxN;AACA;AACA,kBAAkB,4DAAK,aAAa,gEAAS,qBAAqB,oDAAoD,EAAE,GAAG,0DAAG,kBAAkB,gCAAgC,EAAE,GAAG,iEAAU,mBAAmB,QAAQ,+CAAE,0BAA0B,EAAE;AACxP,4FAA4F,0DAAG;AAC/F,uBAAuB,EAAE;AACzB;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,0FAA0F,0DAAG;AAC7F;AACA;AACA;AACA,SAAS;AACT,kFAAkF,gEAAS;AAC3F,8DAA8D,0DAAG,cAAc,4BAA4B,EAAE,GAAG,iEAAU;AAC1H;AACA;AACA,uBAAuB,+CAAE;AACzB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,kBAAkB,0DAAG,oBAAoB,+CAA+C,EAAE;AAC1F;AACA;AACA,kBAAkB,0DAAG,oBAAoB,sGAAsG,EAAE;AACjJ;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,qDAAO,EAAE;AACzB,SAAS,OAAO,sDAAM,EAAE;AACxB,SAAS,8BAA8B;AACvC,SAAS,mDAAmD;AAC5D,SAAS,OAAO,gEAAc;AAC9B,MAAM;AACN,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM,EAAE,kBAAkB;AAClC,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM,EAAE,kBAAkB;AAClC,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM,EAAE,kBAAkB;AAClC,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM,EAAE,kBAAkB;AAClC,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,gEAAe,yBAAyB,0DAAG,oBAAoB,uBAAuB,EAAE,GAAG,6DAAM,kBAAkB,2BAA2B,EAAE,GAAG,gEAAS;AAC1M;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,sEAAsE;AACtE,SAAS,OAAO,qDAAO,EAAE;AACzB,SAAS;AACT,MAAM;AACN,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,gCAAgC,qBAAqB,EAAE,OAAO,EAAE;AAChE;AACA;AACA,yBAAyB,iDAAiD;AAC1E;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,6DAAY;AACpC,wBAAwB,4DAAY;AACpC,wBAAwB,2DAAW;AACnC,wBAAwB,qEAAgB;AACxC,wBAAwB,sEAAgB;AACxC,wBAAwB,+DAAa;AACrC,wBAAwB,iEAAe;AACvC,wBAAwB,+DAAa;AACrC,wBAAwB,mEAAiB;AACzC,wBAAwB,kEAAgB;AACxC,wBAAwB,oEAAkB;AAC1C,wBAAwB,iEAAe;AACvC,wBAAwB,sEAAoB;AAC5C,wBAAwB,oEAAkB;AAC1C,wBAAwB,+DAAa;AACrC,wBAAwB,+DAAa;AACrC,wBAAwB,gEAAc;AACtC,wBAAwB,gEAAc;AACtC,wBAAwB,kEAAgB;AACxC,wBAAwB,qEAAmB;AAC3C,wBAAwB,sEAAoB;AAC5C,wBAAwB,6FAAuB;AAC/C,wBAAwB,mEAAmB;AAC3C,wBAAwB,2DAAW;AACnC,wBAAwB,8DAAa;AACrC;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,uDAAW;AACnC,wBAAwB,2DAAa;AACrC;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEmqB;;AAEnqB,2CAA2C,cAAc,uswC;;;;;;;;;;;;AC/lBzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiN;AAClK;AACJ;AACM;AACgD;AAC/C;AACmB;AACD;AACjB;AACM;AACM;AACuT;AAC5R;AAC3C;AACS;AACL;;AAEnD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,8BAA8B,4DAAc;;AAE5C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,wBAAwB,4DAAY;;AAEpC;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,gDAAgD;;AAEjD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,2BAA2B,oDAAe;AAC1C,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,YAAY;AACZ;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,2DAA2D;AAC3D,SAAS,gCAAgC,OAAO,oDAAM,gCAAgC,GAAG;AACzF,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,sDAAsD,6DAAM,oBAAoB,oCAAoC,EAAE,GAAG,2DAAI,KAAK,gEAAS,mBAAmB,k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,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,mBAAmB,sDAAQ,GAAG,UAAU,cAAc;AACtD;AACA,oCAAoC;AACpC,uBAAuB,EAAE;AACzB,+DAA+D,oCAAoC,EAAE;AACrG;AACA,mBAAmB,sDAAQ,GAAG,UAAU,cAAc;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4DAAK,aAAa,0DAAG,kBAAkB,qCAAqC,EAAE;AAChG;AACA;AACA,kBAAkB,4DAAK,aAAa,0DAAG,mBAAmB,oCAAoC,EAAE;AAChG;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,sDAAO;AACvB,MAAM;AACN,IAAI,wDAAU;AACd,QAAQ,6DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,6DAAM;AACd,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AA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A;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wCAAwC,EAAE,OAAO;AACjD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;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,sDAAQ;AACxB;AACA;AACA;AACA,wBAAwB,uDAAW;AACnC,wBAAwB,4DAAa;AACrC;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAE2e;;AAE3e,2CAA2C,cAAc,miqF;;;;;;;;;;;;AC1tCzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACsC;AACtD;AACS;AACuB;AACrB;AACJ;AACI;AACA;AACS;AACA;AACuB;AACgO;;AAE/S;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,6BAA6B,wDAAS;AACtC,sBAAsB,0DAAW;AACjC,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,oCAAoC,WAAW;AAC/C,iBAAiB,IAAI;AACrB;AACA;AACA,wEAAwE,WAAW;AACnF;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAY;AAChC,uCAAuC,iDAAK;AAC5C,mDAAmD,iEAAiB;AACpE;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4DAA4D,0DAAG;AAC/D;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,6BAA6B,wDAAS;AACtC,sBAAsB,0DAAW;AACjC,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,oCAAoC,WAAW;AAC/C,iBAAiB,IAAI;AACrB;AACA;AACA,sEAAsE,WAAW;AACjF;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAY;AAChC,uCAAuC,iDAAK;AAC5C;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB,8DAAc;AAClC,kBAAkB,6DAAM,kBAAkB,qBAAqB,EAAE,GAAG,6DAAM,kBAAkB,8BAA8B,EAAE;AAC5H,0BAA0B,0DAAG;AAC7B;AACA,gCAAgC,EAAE,uCAAuC,2BAA2B,EAAE;AACtG,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,2BAA2B,oDAAe,YAAY,EAAE,OAAO;AAC/D;AACA,kDAAkD,2CAA2C,EAAE;AAC/F;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mCAAmC;AACnC,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,wDAAS;AAC5B,sBAAsB,0DAAW;AACjC,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,oCAAoC,WAAW;AAC/C,iBAAiB,IAAI;AACrB;AACA;AACA,gEAAgE,WAAW;AAC3E;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBA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B,IAAI;AACrB;AACA;AACA,qDAAqD,WAAW;AAChE;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,6CAA6C,YAAY,eAAe,UAAU,YAAY,kBAAkB,MAAM,QAAQ,YAAY,YAAY;AACtJ,iBAAiB,IAAI;AACrB;AACA;AACA,yDAAyD;AACzD,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,8DAAc;AACrD;AACA;AACA,kDAAkD,gCAAgC,EAAE;AACpF;AACA;AACA;AACA;AACA,oCAAoC,8CAA8C,EAAE;AACpF,oCAAoC,8CAA8C,EAAE;AACpF,oCAAoC,+CAA+C,EAAE;AACrF,oCAAoC,iDAAiD,EAAE;AACvF,SAAS;AACT;AACA,QAAQ,4EAAS;AACjB,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iEAAiE,0DAAG,o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CA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA,iCAAiC,8DAAa;AAC9C,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,4EAA4E,KAAE;AAC9E;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,yDAAyD,gBAAgB;AACzE,qCAAqC,mBAAmB,mBAAmB,eAAe,kBAAkB;AAC5G,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS,OAAO,uDAAM;AACtB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qDAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qDAAqD,oBAAoB,EAAE,wBAAwB,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA,6DAA6D,yCAAyC,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,wBAAwB,8DAAa,CAAC,EAAE;AAC3F,uBAAuB,EAAE;AACzB;AACA,4BAA4B,EAAE;AAC9B,4BAA4B,EAAE;AAC9B,4BAA4B,EAAE;AAC9B,4BAA4B,EAAE;AAC9B;AACA,kDAAkD,UAAU,EAAE;AAC9D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,mDAAmD,eAAe,YAAY,UAAU,gBAAgB,4BAA4B,iCAAiC,gBAAgB,mBAAmB,kBAAkB,gBAAgB,YAAY,aAAa,WAAW,sBAAsB,aAAa,kBAAkB,UAAU,yBAAyB,UAAU,eAAe,eAAe,mBAAmB,gBAAgB,OAAO,6BAA6B,gBAAgB,yBAAyB;AAC9f;AACA,wBAAwB,mEAAO;AAC/B,4BAA4B,iEAAK,YAAY,iEAAK,EAAE,uCAAuC;AAC3F,4BAA4B,iEAAK,cAAc,iEAAK,EAAE,uDAAuD;AAC7G,4BAA4B,sEAAU,0BAA0B,mEAAO;AACvE,4BAA4B,sEAAU,0BAA0B,mEAAO;AACvE;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,yDAAyD;AACzD,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS,OAAO,uDAAM,EAAE;AACxB,SAAS,mCAAmC;AAC5C,SAAS,OAAO,qEAAgB,EAAE;AAClC,SAAS,OAAO,iEAAiB;AACjC,MAAM;AACN;AACA,sBAAsB,OAAO,mDAAK,yBAAyB;AAC3D,uBAAuB,OAAO,uDAAS,0BAA0B;AACjE,mBAAmB,OAAO,yDAAW,4BAA4B;AACjE,mBAAmB,OAAO,yDAAW,4BAA4B;AACjE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,0DAAG,cAAc,YAAY,yEAAe,GAAG,EAAE;AACnI,mFAAmF,0DAAG,cAAc,qCAAqC,EAAE;AAC3I;AACA;AACA,kBAAkB,0DAAG,cAAc,mCAAmC,EAAE;AACxE,iGAAiG,qEAAc,0CAA0C,0DAAG;AAC5J,qBAAqB,oDAAM;AAC3B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,sDAAO,EAAE;AACzB,SAAS,OAAO,uDAAM,EAAE;AACxB,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN,IAAI,wDAAU;AACd,QAAQ,6DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,6DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,6DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,6DAAM;AACd,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,8DAAc;AACrD;AACA;AACA,kDAAkD,gCAAgC,EAAE;AACpF;AACA;AACA;AACA;AACA,oCAAoC,8CAA8C,EAAE;AACpF,oCAAoC,8CAA8C,EAAE;AACpF,oCAAoC,+CAA+C,EAAE;AACrF,oCAAoC,iDAAiD,EAAE;AACvF,SAAS;AACT;AACA,QAAQ,4EAAS;AACjB,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAg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;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,6BAA6B,UAAU;AACvC;AACA,0BAA0B,WAAW;AACrC;AACA;AACA,WAAW,EAAE;AACb,8BAA8B,4DAAc;;AAE5C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,2BAA2B,oDAAe;AAC1C,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,YAAY;AACZ;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,2DAA2D;AAC3D,SAAS,gCAAgC,OAAO,oDAAM,gCAAgC,GAAG;AACzF,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA,2DAA2D,sCAAsC,EAAE;AACnG;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,4CAA4C;;AAE7C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA,2DAA2D,sCAAsC,EAAE;AACnG;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,0CAA0C;;AAE3C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA,2DAA2D,sCAAsC,EAAE;AACnG;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,gDAAgD;;AAEjD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,gDAAgD;;AAEjD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE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hB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,6BAA6B,yDAAS;AACtC,qBAAqB,2DAAW;AAChC,sBAAsB,2DAAW;AACjC,sBAAsB,2DAAW;AACjC,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,4CAA4C,4DAAK,UAAU,6DAAM,kBAAkB,0BAA0B,EAAE,GAAG,gEAAS,kBAAkB,yCAAyC,EAAE,GAAG,6DAAM,kBAAkB,0BAA0B,EAAE;AAC/O;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS,OAAO,8DAAc,EAAE;AAChC,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,0DAA0D,4BAA4B,EAAE;AACxF;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB,+7CAA+7C,WAAW,qGAAqG,WAAW;AAC1jD,4CAA4C,kBAAkB,WAAW,sBAAsB;AAC/F,iBAAiB,IAAI;AACrB;AACA;AACA,2DAA2D;AAC3D,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;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AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8N;AAC/K;AACU;AACR;AACM;AAC8B;AACtB;AACK;AACjB;AACqC;AACuO;AACrO;AAC3B;AACqB;AACrC;AACS;AACuB;;AAE/E;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,8BAA8B,4DAAc;;AAE5C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,oBAAoB,4DAAY;;AAEhC;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,eAAe;AACvD;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,gBAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,kBAAkB;AAC1D;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,oBAAoB;AAC5D;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,0CAA0C;AAClF;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,mBAAmB;AAC3D;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,kEAAkE,uCAAuC,EAAE;AAC3G;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,aAAa;AACrD;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,kEAAkE,uCAAuC,EAAE;AAC3G;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,aAAa;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,kBAAkB;AAC1D;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,oBAAoB;AAC5D;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,0CAA0C;AAClF;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,mBAAmB;AAC3D;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,kEAAkE,uCAAuC,EAAE;AAC3G;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,aAAa;AACrD;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,kEAAkE,uCAAuC,EAAE;AAC3G;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,aAAa;AACrD;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B,sEAAsE,iCAAiC,EAAE;AACzG;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA,aAAa;AACb,mBAAmB,sDAAQ,GAAG,UAAU,eAAe;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oEAAe;AAC1C;AACA,uEAAuE,iCAAiC,EAAE;AAC1G,uCAAuC;AACvC;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,YAAY;AACZ;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,2DAA2D;AAC3D,SAAS,gCAAgC,OAAO,oDAAM,gCAAgC,GAAG;AACzF,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS,OAAO,sDAAQ;AACxB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,aAAa,EAAE,EAAE;AACjB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,sEAAwB,EAAE;AAC1C,SAAS,OAAO,8DAAgB;AAChC,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,qBAAqB,OAAO,uDAAS,uBAAuB,OAAO,8DAAgB,EAAE,IAAI;AACzF;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC,EAAE;AACpF;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,kBAAkB,0DAAG,sBAAsB,mBAAmB,EAAE,GAAG,4DAAK;AACxE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mDAAmD,wEAAc,6BAA6B,qBAAqB;AACnH,sCAAsC,0BAA0B,EAAE;AAClE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,0BAA0B,uDAAiB;AAC3C;AACA,sCAAsC,kCAAkC,EAAE;AAC1E,kBAAkB,6DAAM,uBAAuB,0BAA0B,EAAE,GAAG,0DAAG;AACjF,uDAAuD,4BAA4B,EAAE;AACrF,SAAS,GAAG,6DAAM,sBAAsB,8BAA8B,EAAE;AACxE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,0BAA0B,uDAAiB;AAC3C;AACA,sCAAsC,kCAAkC,EAAE;AAC1E,kBAAkB,gEAAS,MAAM,6DAAM,uBAAuB,0BAA0B,EAAE,GAAG,0DAAG;AAChG,yDAAyD,iCAAiC,EAAE;AAC5F,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,+DAAU,EAAE;AAC5B,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC,6BAA6B,oDAAiB;AAC9C,8BAA8B,oDAAiB;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,sDAAsD,0DAAG,oBAAoB,qBAAqB,EAAE,GAAG,gEAAS;AAChH,gDAAgD,8BAA8B,EAAE;AAChF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iDAAiD,2CAA2C,EAAE;AAC9F,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,wEAAwE,gCAAgC,EAAE;AAC1G;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,qBAAqB;AACrB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,qBAAqB;AACrB;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,0DAA0D,oCAAoC,EAAE;AAChG,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAS;AAC3B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,qCAAqC,yDAAS;AAC9C,2BAA2B,2DAAW;AACtC,sBAAsB,2DAAW;AACjC,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,i0BAAi0B,kBAAkB,ynBAAynB,sBAAsB,KAAK,iBAAiB,gsBAAgsB,WAAW;AACnsE,oCAAoC,YAAY,kBAAkB,YAAY,mBAAmB;AACjG,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD;AACnD,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS,iCAAiC;AAC1C,SAAS,wBAAwB;AACjC,SAAS,OAAO,sDAAQ,EAAE;AAC1B,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wEAAqB,IAAI;AACxF,MAAM;AACN;AACA,uBAAuB,OAAO,0DAAY,gCAAgC;AAC1E;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC,uDAAuD,kCAAkC,EAAE,OAAO,gEAAS;AAC3G,kDAAkD,gCAAgC,EAAE;AACpF;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAS,oBAAoB,6DAAM,sBAAsB,+BAA+B,EAAE;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,iEAAiE,oCAAoC,EAAE;AACvG,+BAA+B,EAAE;AACjC;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;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jB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,kDAAI,UAAU,mBAAmB,IAAI;AACrD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,kCAAkC,gBAAgB,EAAE;AACpD,+BAA+B,gBAAgB,EAAE;AACjD;AACA;AACA,SAAS,OAAO,kDAAI,UAAU,mBAAmB,IAAI;AACrD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,8DAA8D,qBAAqB;AACnF,8DAA8D,qBAAqB;AACnF,8DAA8D,qBAAqB;AACnF;AACA;AACA;AACA,SAAS,OAAO,kDAAI,UAAU,sBAAsB,IAAI;AACxD;AACA;AACA,CAAC;AACD;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,4BAA4B;AAC5B;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,uCAAuC;AACvC,SAAS;AACT;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,uCAAuC;AACvC,SAAS;AACT;AACA;AACA,CAAC;AACD,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,SAAI;AACjB;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,SAAS,OAAO,kDAAI,UAAU,uBAAuB,IAAI;AACzD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS,OAAO,kDAAI,UAAU,wBAAwB,IAAI;AAC1D;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,+BAA+B,gBAAgB,EAAE;AACjD;AACA;AACA,SAAS,OAAO,kDAAI,UAAU,sBAAsB,IAAI;AACxD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,oCAAoC;AACpC;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,iBAAiB;AACjB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,sCAAsC,aAAa,EAAE;AACrD,gDAAgD,aAAa,EAAE;AAC/D,qDAAqD,aAAa,EAAE;AACpE,sDAAsD,aAAa,EAAE;AACrE,sDAAsD,WAAW,EAAE;AACnE;AACA,+CAA+C,aAAa,EAAE;AAC9D,6CAA6C,aAAa;AAC1D;AACA,iBAAiB;AACjB;AACA;AACA,+CAA+C,aAAa,EAAE;AAC9D,8CAA8C,aAAa;AAC3D;AACA,iBAAiB;AACjB;AACA;AACA,sCAAsC,aAAa,EAAE;AACrD,kDAAkD,aAAa,EAAE;AACjE,4CAA4C,aAAa,EAAE;AAC3D;AACA,8CAA8C,aAAa,EAAE;AAC7D,6CAA6C,aAAa;AAC1D;AACA,iBAAiB;AACjB;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAM;AAC/B;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,sDAAsD,+BAA+B;AACrF;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,eAAe;AAC9C,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,wEAAwE,6CAA6C,EAAE;AACvH;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,aAAa;AACb;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA,wDAAwD,sEAAgB,EAAE,6CAA6C,6BAA6B,EAAE,6CAA6C;AACnM;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yCAAyC;AACzC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,8BAA8B,WAAW;AACzC,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,6BAA6B;AAC7B,iDAAiD;AACjD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEyU;;AAEzU,2CAA2C,cAAc,2/5F;;;;;;;;;;;;ACh0CzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuG;AACpD;AACF;AACS;AACrB;AACG;AACO;;AAE/C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,8BAA8B,4DAAc;;AAE5C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,2BAA2B,oDAAe;AAC1C,uCAAuC;AACvC;AACA,0BAA0B,uEAAqB;AAC/C;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,6DAA6D;AAC7D,SAAS,gCAAgC,OAAO,oDAAM,gCAAgC,GAAG;AACzF,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb,SAAS,6CAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAAG,oBAAoB,mCAAmC,EAAE,GAAG,0DAAG;AACpF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,4BAA4B,+CAAU;AACtC;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA,gDAAgD,SAAS;AACzD,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gDAAgD,SAAS;AACzD,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD;AAChD,SAAS,mCAAmC;AAC5C,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN,uDAAuD,sEAAgB,EAAE,4CAA4C,0BAA0B,4DAAM,8BAA8B,4DAAM,CAAC,iDAAK,GAAG,EAAE,4CAA4C;AAChP;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,yBAAyB,iDAAiD;AAC1E;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,4DAAY;AAC1C,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,+CAA+C,uDAAW;AAC1D,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEsK;;AAEtK,2CAA2C,cAAc,u8W;;;;;;;;;;;;ACjQzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAC+B;AACsC;AACpC;AACtB;AAC/B;AACkC;AACV;AACE;AACvB;AACoB;AACb;AACS;AACsQ;AACpQ;AACqB;AAC9B;;AAEjD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA,mBAAmB,sDAAQ,GAAG;AAC9B;AACA,mBAAmB,sDAAQ,GAAG;AAC9B;AACA,mBAAmB,sDAAQ,GAAG;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb,wBAAwB,yEAAqB;AAC7C,WAAW,EAAE;AACb,oBAAoB,kEAAc,sCAAsC,mBAAmB,EAAE;AAC7F;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,uCAAuC,wBAAwB,EAAE,OAAO,EAAE;AAC1E;AACA,2DAA2D,sCAAsC,EAAE;AACnG;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,gDAAgD;;AAEjD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,uCAAuC,wBAAwB,EAAE,OAAO,EAAE;AAC1E;AACA,2DAA2D,sCAAsC,EAAE;AACnG;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,wDAAS;AACpC,6BAA6B,0DAAW,MAAM,yDAAU;AACxD,kCAAkC,0DAAW,MAAM,yDAAU;AAC7D,kCAAkC,0DAAW,MAAM,yDAAU;AAC7D,kCAAkC,0DAAW,WAAW,yDAAU;AAClE,oCAAoC,wDAAS;AAC7C,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,oDAAoD;;AAErD;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,kDAAU;AAC7B,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,sCAAsC,wBAAwB,EAAE;AAChE;AACA,mBAAmB,kDAAU;AAC7B,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,8EAA8E,yBAAyB;AACvG,sCAAsC,iBAAiB,EAAE;AACzD;AACA,mBAAmB,kDAAU;AAC7B,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,iCAAiC,mBAAmB,EAAE;AACtD;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,+DAAU;AAC1B,MAAM;AACN,uDAAuD,sEAAgB,EAAE,4CAA4C,0BAA0B,4DAAM,CAAC,+DAAU,GAAG,EAAE,4CAA4C;AACjN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iEAAiE;AACjE,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,UAAU;AACrD;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,0iBAA0iB,iBAAiB;AAC3jB,oCAAoC,WAAW,YAAY,WAAW,cAAc,qBAAqB,SAAS,eAAe,YAAY,UAAU,UAAU;AACjK,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS;AACT,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,EAAE;AACxC;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,8BAA8B,WAAW;AACzC,iCAAiC,cAAc;AAC/C,iCAAiC,cAAc;AAC/C,8BAA8B,mBAAmB;AACjD,mBAAmB,EAAE;AACrB,iCAAiC,EAAE;AACnC,yBAAyB,wDAAS;AAClC,sBAAsB,0DAAW,QAAQ,yDAAU;AACnD,yBAAyB,0DAAW,WAAW,yDAAU;AACzD,yBAAyB,0DAAW,WAAW,yDAAU;AACzD,sBAAsB,0DAAW,QAAQ,yDAAU;AACnD,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE;AACnC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,0uDAA0uD,m+BAAm+B,MAAM;AACntF,uCAAuC,WAAW,UAAU,yBAAyB,aAAa,aAAa,aAAa,gBAAgB,oBAAoB,gBAAgB,KAAK,cAAc,qBAAqB,gBAAgB;AACxO,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD;AACxD,SAAS,sBAAsB;AAC/B,SAAS,OAAO,0DAAW,EAAE;AAC7B,SAAS,OAAO,8DAAc,EAAE;AAChC,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,oBAAoB,4DAAY;;AAEhC;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,2DAAG,oBAAoB,uBAAuB,EAAE,GAAG,iEAAS;AACzJ;AACA;AACA,sBAAsB,2DAAG,iBAAiB,kCAAkC,EAAE,GAAG,kEAAU,cAAc,QAAQ,6DAAE,2BAA2B,EAAE;AAChJ,SAAS;AACT,iGAAiG,iEAAS;AAC1G;AACA,mBAAmB,0DAAY;AAC/B,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,qDAAO,EAAE;AACzB,SAAS,OAAO,sDAAM,EAAE;AACxB,SAAS;AACT,MAAM;AACN,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,6DAAY;AACpC,wBAAwB,4DAAY;AACpC,wBAAwB,0DAAW;AACnC,wBAAwB,kEAAmB;AAC3C,wBAAwB,qEAAgB;AACxC,wBAAwB,sEAAgB;AACxC,wBAAwB,gEAAa;AACrC,wBAAwB,kEAAe;AACvC,wBAAwB,gEAAa;AACrC,wBAAwB,oEAAiB;AACzC,wBAAwB,mEAAgB;AACxC,wBAAwB,qEAAkB;AAC1C,wBAAwB,kEAAe;AACvC,wBAAwB,qEAAkB;AAC1C,wBAAwB,gEAAa;AACrC,wBAAwB,gEAAa;AACrC,wBAAwB,oEAAiB;AACzC,wBAAwB,iEAAc;AACtC,wBAAwB,iEAAc;AACtC,wBAAwB,mEAAgB;AACxC,wBAAwB,sEAAmB;AAC3C,wBAAwB,uEAAoB;AAC5C,wBAAwB,wEAAa;AACrC,wBAAwB,uDAAW;AACnC,wBAAwB,6FAAuB;AAC/C;AACA,wBAAwB,2DAAa;AACrC,wBAAwB,+DAAY;AACpC;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAE0N;;AAE1N,2CAA2C,cAAc,miuC;;;;;;;;;;;;AClmBzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+I;AAC3C;AACZ;AACjC;AACe;AACM;AAC0B;AAClC;AACD;AACI;AACP;AACO;AACR;AAClB;AAC6K;AAC3K;AACS;AACuB;AAC/B;;AAEhD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,0CAA0C,cAAc,EAAE;AAC1D,0CAA0C,mBAAmB,0DAAG,kBAAkB,sBAAsB,EAAE,GAAG;AAC7G;AACA,WAAW,EAAE;AACb,8BAA8B,4DAAc;;AAE5C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,2BAA2B,oEAAe;AAC1C,uCAAuC;AACvC;AACA,0BAA0B,qEAAmB;AAC7C;AACA;AACA,4CAA4C;AAC5C;AACA,SAAS;AACT;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,2DAA2D;AAC3D,SAAS,gCAAgC,OAAO,oDAAM,gCAAgC,GAAG;AACzF,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN,kEAAkE,sEAAgB,EAAE,uDAAuD,qCAAqC,4DAAM,uBAAuB,4DAAM,CAAC,iDAAK,GAAG,EAAE,uDAAuD;AACrR;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,qCAAqC;AAC7E;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,qCAAqC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,uCAAuC,mBAAmB;;AAE1D;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,sCAAsC,EAAE;AACnG;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,wDAAS;AACpC,kCAAkC,0DAAW,MAAM,yDAAU,eAAe,yDAAU;AACtF,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,QAAQ,uDAAS;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,4CAA4C;;AAE7C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,uCAAuC,wBAAwB,EAAE,OAAO,EAAE;AAC1E;AACA,2DAA2D,sCAAsC,EAAE;AACnG;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,wDAAS;AACpC,+BAA+B,0DAAW,QAAQ,yDAAU;AAC5D,+BAA+B,0DAAW,QAAQ,yDAAU;AAC5D,gCAAgC,0DAAW,QAAQ,yDAAU;AAC7D,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,uCAAuC,wBAAwB,EAAE,OAAO,EAAE;AAC1E;AACA,2DAA2D,sCAAsC,EAAE;AACnG;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,oDAAoD;;AAErD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,gCAAgC,EAAE;AACzG;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,sDAAsD,6DAAM,oBAAoB,kDAAkD,EAAE,GAAG,2DAAI,KAAK,oEAAa,mBAAmB,iEAAO,IAAI,6DAAM;AACjM,qBAAqB,oDAAM;AAC3B;AACA,SAAS,GAAG,gEAAS;AACrB,qBAAqB,oDAAM;AAC3B;AACA,qBAAqB,wEAAc;AACnC;AACA,aAAa;AACb;AACA,sBAAsB,0DAAG;AACzB,2BAA2B,EAAE;AAC7B,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,aAAa,GAAG,iEAAU,iBAAiB,QAAQ,gDAAE,QAAQ,EAAE;AAC/D,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iBAAiB,wEAAc;AAC/B,kBAAkB,0DAAG,sBAAsB,kEAAkE,EAAE;AAC/G;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,iBAAiB,wEAAc;AAC/B,kBAAkB,0DAAG,sBAAsB,iBAAiB,EAAE;AAC9D;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kBAAkB,6DAAM,kBAAkB,wCAAwC,EAAE,GAAG,2DAAI,KAAK,0DAAG,kBAAkB,sCAAsC,EAAE;AAC7J;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8CAA8C;AAC9C,SAAS,OAAO,+DAAU,EAAE;AAC5B,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS;AACT,MAAM;AACN,qDAAqD,sEAAgB,EAAE,0CAA0C,wBAAwB,4DAAM,CAAC,+DAAU,GAAG,4DAAM,CAAC,iDAAK,GAAG,4DAAM,4BAA4B,EAAE,0CAA0C;AAC1P;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAAG,oBAAoB,uBAAuB,EAAE,GAAG,0DAAG,kBAAkB,mCAAmC,EAAE;AAC/H;AACA;AACA,kBAAkB,0DAAG,oBAAoB,uBAAuB,EAAE,GAAG,gEAAS,kBAAkB,wCAAwC,EAAE,GAAG,0DAAG,iBAAiB,oCAAoC,EAAE,GAAG,iEAAU,cAAc,QAAQ,gDAAE,0BAA0B,EAAE;AACxQ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,gGAAgG,0DAAG;AACnG;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,sDAAO,EAAE;AACzB,SAAS,OAAO,uDAAM,EAAE;AACxB,SAAS;AACT,MAAM;AACN,IAAI,wDAAU;AACd,QAAQ,6DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,6DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,6DAAM;AACd,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAAG,oBAAoB,uBAAuB,EAAE,GAAG,0DAAG,kBAAkB,8BAA8B,EAAE;AAC1H;AACA;AACA,kBAAkB,0DAAG,oBAAoB,uBAAuB,EAAE,GAAG,gEAAS;AAC9E;AACA;AACA,sBAAsB,0DAAG,iBAAiB,mCAAmC,EAAE,GAAG,iEAAU,cAAc,QAAQ,gDAAE,yBAAyB,EAAE;AAC/I,SAAS;AACT;AACA;AACA,kBAAkB,0DAAG,oBAAoB,uBAAuB,EAAE,GAAG,0DAAG,kBAAkB,wCAAwC,EAAE;AACpI;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,sDAAO,EAAE;AACzB,SAAS;AACT,MAAM;AACN,IAAI,wDAAU;AACd,QAAQ,6DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,6DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,6DAAM;AACd,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,oDAAoD,2EAAiB,sBAAsB,0DAAG;AAC9F;AACA,SAAS;AACT;AACA,oBAAoB,2EAAiB;AACrC,kBAAkB,0DAAG,cAAc,6CAA6C,EAAE,OAAO,GAAG,EAAE;AAC9F;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,8CAA8C;AAC9C,SAAS,OAAO,sDAAO,EAAE;AACzB,SAAS,OAAO,uDAAM,EAAE;AACxB,SAAS;AACT,MAAM;AACN,IAAI,wDAAU;AACd,QAAQ,6DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,6DAAM;AACd,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA,mBAAmB,sDAAQ,GAAG;AAC9B;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,2FAA2F;AACnI;AACA;AACA,mBAAmB,sDAAQ,GAAG;AAC9B;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,gBAAgB;AACxD;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,iBAAiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,8CAA8C,gCAAgC;AAC9E,WAAW,EAAE;AACb,kCAAkC,sBAAsB;;AAExD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA,qBAAqB,EAAE,OAAO;AAC9B;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,yDAAyD;AACjG;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,oBAAoB;AAC5D;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,0CAA0C;AAClF;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,oCAAoC,qBAAqB;;AAEzD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,yBAAyB,yEAAqB;AAC9C,WAAW,EAAE;AACb,+BAA+B,kEAAc,uCAAuC,0BAA0B,EAAE;AAChH,WAAW,EAAE;AACb,iBAAiB,kEAAc,uCAAuC,0BAA0B,EAAE;AAClG,WAAW,EAAE;AACb,sCAAsC,kEAAc,uCAAuC,mCAAmC,EAAE;AAChI,WAAW,EAAE;AACb,8BAA8B,kEAAc;AAC5C,WAAW,EAAE;AACb,oCAAoC,kEAAc;AAClD,WAAW,EAAE;AACb,gCAAgC,kEAAc,uCAAuC,mBAAmB,EAAE;AAC1G,WAAW,EAAE;AACb,uBAAuB,kEAAc;AACrC,WAAW,EAAE;AACb,wBAAwB,kEAAc,uCAAuC,yBAAyB,EAAE;AACxG,WAAW,EAAE;AACb,sBAAsB,kEAAc;AACpC;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,mCAAmC,qDAAiB;AACpD,iCAAiC,qDAAiB;AAClD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,qDAAqD,8EAA8E,EAAE;AACrI;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,oQAAoQ,0BAA0B,SAAS,2BAA2B,wEAAwE,sBAAsB,sZAAsZ,qBAAqB,+VAA+V,uBAAuB;AACjsC;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,oBAAoB,OAAO,oDAAM,EAAE;AACnC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD;AACvD,SAAS,OAAO,uDAAM;AACtB,MAAM;AACN;AACA,oBAAoB,OAAO,oDAAM,EAAE;AACnC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,kBAAkB,OAAO,mDAAK,oBAAoB;AAClD,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,iEAAiE,0DAAG,kBAAkB,4BAA4B,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,oSAAoS,WAAW,6CAA6C,YAAY,8CAA8C,kBAAkB,uQAAuQ,WAAW,6CAA6C,YAAY,8CAA8C,kBAAkB;AACnzB,4CAA4C,kBAAkB,MAAM,WAAW,oBAAoB,gBAAgB,eAAe,WAAW,YAAY,YAAY,kBAAkB,mBAAmB,OAAO,aAAa,kBAAkB,aAAa,gBAAgB,uBAAuB,mBAAmB,UAAU;AACjU,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D;AAC1D,SAAS,iCAAiC;AAC1C,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC,4CAA4C,oEAAe;AAC3D,sBAAsB,2DAAU,oBAAoB,0DAAG,eAAe,cAAc,EAAE,GAAG,gEAAS,eAAe,wBAAwB,EAAE,GAAG,0DAAG,eAAe,uBAAuB,EAAE;AACzL;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,yxDAAyxD,gBAAgB;AACzyD;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gEAAgE;AAChE,SAAS,OAAO,8DAAW;AAC3B,MAAM;AACN;AACA,qBAAqB,OAAO,oDAAM,EAAE;AACpC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,yBAAyB,OAAO,mDAAK,EAAE;AACvC,mBAAmB,OAAO,mDAAK,EAAE;AACjC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,gEAAgE,EAAE,MAAM,yBAAyB;AACjG;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4DAA4D;AAC5D,SAAS,OAAO,+DAAc,EAAE;AAChC,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,uCAAuC,wBAAwB,EAAE,OAAO,EAAE;AAC1E;AACA,2DAA2D,sCAAsC,EAAE;AACnG;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,wDAAS;AACpC,kCAAkC,0DAAW,QAAQ,yDAAU,WAAW,yDAAU;AACpF,iCAAiC,0DAAW,QAAQ,yDAAU,WAAW,wEAAc;AACvF,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,kDAAkD;;AAEnD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AAC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B;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,yBAAyB,iDAAiD;AAC1E;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,qEAAgB;AACxC,wBAAwB,0DAAW;AACnC,wBAAwB,6DAAY;AACpC,wBAAwB,6DAAY;AACpC,wBAAwB,qEAAkB;AAC1C,wBAAwB,oEAAiB;AACzC,wBAAwB,gEAAa;AACrC,wBAAwB,kEAAe;AACvC,wBAAwB,gEAAa;AACrC,wBAAwB,kEAAe;AACvC,wBAAwB,iEAAc;AACtC,wBAAwB,qEAAkB;AAC1C,wBAAwB,gEAAa;AACrC,wBAAwB,sEAAgB;AACxC,wBAAwB,iEAAc;AACtC,wBAAwB,kEAAmB;AAC3C,wBAAwB,6FAAuB;AAC/C,wBAAwB,8DAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA,wBAAwB,uDAAW;AACnC,wBAAwB,4DAAa;AACrC;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB,gDAAgD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,2BAA2B,6DAAY;;AAEvC;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS;AACT,MAAM;AACN,2DAA2D,sEAAgB,EAAE,gDAAgD,8BAA8B,4DAAM,CAAC,iDAAK,GAAG,4DAAM,4BAA4B,EAAE,gDAAgD;AAC9P;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAE02B;;AAE12B,2CAA2C,cAAc,mkmH;;;;;;;;;;;;ACjiDzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AAC0B;AAC0C;AACjE;AACqC;AACW;AACrC;AACA;AACwP;AACzN;AACtB;;AAExD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,0BAA0B,6DAAW,EAAE,kBAAkB;AACzD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB,sDAAQ,GAAG,4CAA4C,qCAAqC;AACjH,gCAAgC,yEAAuB;AACvD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mCAAmC,wDAAS;AAC5C,yBAAyB,0DAAW;AACpC,SAAS;AACT,mCAAmC,wDAAS;AAC5C,sBAAsB,0DAAW;AACjC,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,yDAAyD;AACzD,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iDAAiD,iGAA8B;AAC/E;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,oCAAoC,kBAAkB,cAAc,cAAc,kBAAkB,UAAU,YAAY,SAAS,cAAc,iBAAiB,iBAAiB;AACnL,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD;AACvD,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,0BAA0B,6DAAW,EAAE,gBAAgB;AACvD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB,sDAAQ,GAAG,4CAA4C,qCAAqC;AACjH,gCAAgC,yEAAuB;AACvD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,8BAA8B,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mCAAmC,wDAAS;AAC5C,uBAAuB,wDAAS;AAChC,SAAS;AACT,mCAAmC,wDAAS;AAC5C,sBAAsB,0DAAW;AACjC,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,wDAAS;AAC5B,qBAAqB,0DAAW;AAChC,uBAAuB,0DAAW;AAClC,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,wBAAwB,EAAE;AAC1B,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,o9CAAo9C;AACp9C;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,uDAAuD;AACvD,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,yDAAyD,4FAA4F,EAAE;AACvJ,yDAAyD,sDAAsD,EAAE;AACjH;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iDAAiD,iGAA8B;AAC/E;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,maAAma,aAAa,0UAA0U,YAAY,oIAAoI,YAAY;AACt5B,oCAAoC,kBAAkB,YAAY,cAAc,qBAAqB,UAAU,mBAAmB,WAAW,qBAAqB,SAAS,mCAAmC,UAAU,kBAAkB,kBAAkB,cAAc,GAAG,mBAAmB;AAChS,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iDAAiD,iGAA8B;AAC/E;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,maAAma,aAAa,8QAA8Q,YAAY,4BAA4B,eAAe,4BAA4B,kBAAkB;AACnyB,oCAAoC,kBAAkB,YAAY,cAAc,qBAAqB,UAAU,mBAAmB,WAAW,qBAAqB,SAAS,mCAAmC,UAAU,kBAAkB,kBAAkB,cAAc,GAAG,mBAAmB,YAAY,yBAAyB,qBAAqB,sBAAsB,WAAW,SAAS,cAAc;AAClZ,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,0BAA0B,6DAAW,EAAE,eAAe;AACtD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB,sDAAQ,GAAG,4CAA4C,qCAAqC;AACjH,gCAAgC,yEAAuB;AACvD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,8BAA8B,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mCAAmC,wDAAS;AAC5C,sBAAsB,wDAAS;AAC/B,SAAS;AACT,mCAAmC,wDAAS;AAC5C,sBAAsB,0DAAW;AACjC,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,wDAAS;AAC5B,uBAAuB,0DAAW;AAClC,0BAA0B,0DAAW;AACrC,6BAA6B,0DAAW;AACxC,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,wBAAwB,EAAE;AAC1B,SAAS;AACT;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,80CAA80C;AAC90C;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,4DAAY;AACpC,wBAAwB,oEAAkB;AAC1C,wBAAwB,mEAAiB;AACzC,wBAAwB,+DAAa;AACrC,wBAAwB,iEAAe;AACvC,wBAAwB,+DAAa;AACrC,wBAAwB,iEAAe;AACvC,wBAAwB,gEAAc;AACtC,wBAAwB,oEAAkB;AAC1C,wBAAwB,+DAAa;AACrC,wBAAwB,gEAAc;AACtC,wBAAwB,kEAAgB;AACxC,wBAAwB,0DAAW;AACnC,wBAAwB,kEAAmB;AAC3C,wBAAwB,sEAAoB;AAC5C,wBAAwB,kEAAgB;AACxC,wBAAwB,mEAAiB;AACzC,wBAAwB,gEAAc;AACtC,wBAAwB,+DAAa;AACrC,wBAAwB,sEAAgB;AACxC,wBAAwB,yEAAkB;AAC1C,wBAAwB,uEAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEgK;;AAEhK,2CAA2C,cAAc,uipC;;;;;;;;;;;;ACngBzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsJ;AAC3G;AACM;AACgD;AAC/C;AACC;AACM;AACM;AACN;AACM;AACG;AACqO;AAC/O;;AAExD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,8BAA8B,UAAU;AACxC,qCAAqC,eAAe;AACpD,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,8BAA8B,4DAAc;;AAE5C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,2BAA2B,oDAAe;AAC1C,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,YAAY;AACZ;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,6DAA6D;AAC7D,SAAS,gCAAgC,OAAO,oDAAM,gCAAgC,GAAG;AACzF,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA,2DAA2D,sCAAsC,EAAE;AACnG;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,gDAAgD;;AAEjD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA,2DAA2D,sCAAsC,EAAE;AACnG;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,8CAA8C;;AAE/C;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,4CAA4C,EAAE,OAAO;AACrD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,oDAAoD;;AAErD;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC,oDAAoD;;AAErD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,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A;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,4DAA4D,8BAA8B,EAAE;AAC5F;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB,uaAAua,WAAW,QAAQ,WAAW;AACrc,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D;AAC1D,SAAS,OAAO,iDAAK;AACrB,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,4DAA4D,8BAA8B,EAAE;AAC5F;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB,ugDAAugD,yBAAyB,gJAAgJ,WAAW,wDAAwD,WAAW,iSAAiS,sBAAsB,gLAAgL,oBAAoB,8KAA8K,mBAAmB;AAC17E,oCAAoC,WAAW,sBAAsB,kBAAkB,UAAU,qBAAqB,eAAe,WAAW,YAAY,SAAS,SAAS,aAAa,kBAAkB,MAAM,OAAO,YAAY,aAAa,kBAAkB,kCAAkC,kBAAkB,cAAc,eAAe,kBAAkB,UAAU,mCAAmC,wCAAwC,mBAA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BAAmB,sDAAQ,GAAG,UAAU,cAAc;AACtD;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,iEAAiE,oCAAoC,EAAE;AACvG;AACA;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,cAAc;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4DAAK,aAAa,0DAAG,oBAAoB,yCAAyC,EAAE;AACtG;AACA;AACA,kBAAkB,4DAAK,aAAa,0DAAG,qBAAqB,wCAAwC,EAAE;AACtG;AACA;AACA,kBAAkB,4DAAK,aAAa,0DAAG,oBAAoB,uCAAuC,EAAE;AACpG;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,qDAAO;AACvB,MAAM;AACN,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,+CAA+C,0DAAG,oBAAoB,qBAAqB,EAAE,GAAG,gEAAS,GAAG;AAC5G;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+DAA+D;AAC/D,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS,OAAO,8DAAc,EAAE;AAChC,SAAS,sBAAsB;AAC/B,SAAS,mCAAmC;AAC5C,SAAS,OAAO,sEAAwB,EAAE;AAC1C,SAAS,OAAO,8DAAgB;AAChC,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,0BAA0B,6DAAM,oBAAoB,4BAA4B,EAAE;AAClF;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,+CAA+C,0DAAG,oBAAoB,qBAAqB,EAAE,GAAG,gEAAS,GAAG;AAC5G;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,6CAA6C,8CAA8C,EAAE;AAC7F;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6DAA6D;AAC7D,SAAS,OAAO,iDAAK,EAAE;AACvB,SAAS,OAAO,8DAAc,EAAE;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","file":"main.js","sourcesContent":["import { InjectionToken, Injectable, Inject, NgModule, Component, Input, Output, EventEmitter, defineInjectable, inject } from '@angular/core';\nimport { of, BehaviorSubject, throwError } from 'rxjs';\nimport { Store, createSelector, createFeatureSelector, StoreModule } from '@ngrx/store';\nimport { getAuthenticationModuleConfig } from '@soushians/config';\nimport { HttpClient, HttpResponse, HttpErrorResponse, HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { MatSnackBar, MatBottomSheet, MatIconModule, MatButtonModule, MatCardModule, MatSnackBarModule, MatSidenavModule, MatExpansionModule, MatSelectModule, MatFormFieldModule, MatListModule, MatMenuModule, MatRadioModule, MatInputModule, MatToolbarModule, MatDatepickerModule, MatProgressBarModule, MatBottomSheetModule } from '@angular/material';\nimport { map, switchMap, take, filter, tap, catchError, pluck } from 'rxjs/operators';\nimport { stringTemplate, Cookie } from '@soushians/shared';\nimport { MatSnackBar as MatSnackBar$1 } from '@angular/material/snack-bar';\nimport { RouterModule, Router } from '@angular/router';\nimport 'rxjs/add/operator/do';\nimport { __decorate, __metadata, __assign } from 'tslib';\nimport { Actions, Effect, EffectsModule } from '@ngrx/effects';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgsFormModule } from '@soushians/form';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UserModel = /** @class */ (function () {\r\n    function UserModel(params) {\r\n        var _this = this;\r\n        // IdentificationNo: string;\r\n        // IdentifierType: string;\r\n        // RegisterDate: string;\r\n        // UserType: string;\r\n        this.Roles = [];\r\n        params &&\r\n            Object.keys(params).forEach(function (key) {\r\n                if (key in params)\r\n                    (/** @type {?} */ (_this))[key] = params[key];\r\n            });\r\n    }\r\n    return UserModel;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar SignInActionTypes = {\r\n    WHO_AM_I: \"[AUTHENTICATION] who am i\",\r\n    SIGNUP: \"[AUTHENTICATION][SIGNUP] start\",\r\n    SIGNUP_SUCCEED: \"[AUTHENTICATION][SIGNUP] Success\",\r\n    SIGNUP_FAILURE: \"[AUTHENTICATION][SIGNUP] Failure\",\r\n    SIGNIN: \"[AUTHENTICATION] Signin\",\r\n    DO_SIGNOUT: \"[AUTHENTICATION] Do Signout\",\r\n    SIGNOUT: \"[AUTHENTICATION] Signout\",\r\n    SIGNIN_SUCCEED: \"[AUTHENTICATION][Signin] Success\",\r\n    SIGNIN_FAILURE: \"[AUTHENTICATION][Signin] Failure\",\r\n    SIGNIN_REDIRECT: \"[AUTHENTICATION][Signin] Redirect\",\r\n    SIGNIN_REQUIRED: \"[AUTHENTICATION][Signin] Required\",\r\n};\r\nvar WhoAmIAction = /** @class */ (function () {\r\n    function WhoAmIAction() {\r\n        this.type = SignInActionTypes.WHO_AM_I;\r\n    }\r\n    return WhoAmIAction;\r\n}());\r\n/**\r\n * \tsign up\r\n */\r\nvar /**\r\n * \tsign up\r\n */\r\nSignup = /** @class */ (function () {\r\n    function Signup(payload) {\r\n        this.payload = payload;\r\n        this.type = SignInActionTypes.SIGNUP;\r\n    }\r\n    return Signup;\r\n}());\r\nvar SignupSecceed = /** @class */ (function () {\r\n    function SignupSecceed(payload) {\r\n        this.payload = payload;\r\n        this.type = SignInActionTypes.SIGNUP_SUCCEED;\r\n    }\r\n    return SignupSecceed;\r\n}());\r\nvar SignupFailed = /** @class */ (function () {\r\n    function SignupFailed(payload) {\r\n        this.payload = payload;\r\n        this.type = SignInActionTypes.SIGNUP_FAILURE;\r\n    }\r\n    return SignupFailed;\r\n}());\r\n/**\r\n * Sign in\r\n */\r\nvar /**\r\n * Sign in\r\n */\r\nSignin = /** @class */ (function () {\r\n    function Signin(payload) {\r\n        this.payload = payload;\r\n        this.type = SignInActionTypes.SIGNIN;\r\n    }\r\n    return Signin;\r\n}());\r\nvar SigninSecceed = /** @class */ (function () {\r\n    function SigninSecceed(payload) {\r\n        this.payload = payload;\r\n        this.type = SignInActionTypes.SIGNIN_SUCCEED;\r\n    }\r\n    return SigninSecceed;\r\n}());\r\nvar SigninFailed = /** @class */ (function () {\r\n    function SigninFailed(payload) {\r\n        this.payload = payload;\r\n        this.type = SignInActionTypes.SIGNIN_FAILURE;\r\n    }\r\n    return SigninFailed;\r\n}());\r\nvar DoSignoutAction = /** @class */ (function () {\r\n    function DoSignoutAction() {\r\n        this.type = SignInActionTypes.DO_SIGNOUT;\r\n    }\r\n    return DoSignoutAction;\r\n}());\r\nvar SignoutAction = /** @class */ (function () {\r\n    function SignoutAction() {\r\n        this.type = SignInActionTypes.SIGNOUT;\r\n    }\r\n    return SignoutAction;\r\n}());\r\nvar SigninRequiredAction = /** @class */ (function () {\r\n    function SigninRequiredAction() {\r\n        this.type = SignInActionTypes.SIGNIN_REQUIRED;\r\n    }\r\n    return SigninRequiredAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar MODULE_DEFAULT_CONFIG = {\r\n    mode: \"cookie-base\",\r\n    token: {\r\n        time: 24 * 12 * 60 * 60\r\n    },\r\n    server: \"frontend_server\",\r\n    endpoints: {\r\n        signOut: \"\",\r\n        signIn: \"\",\r\n        signUp: \"\",\r\n        whoAmI: \"\"\r\n    },\r\n    forms: {\r\n        signIn: \"\",\r\n        signUp: \"\"\r\n    },\r\n    env: {\r\n        production: false,\r\n        frontend_server: \"auth/module/frontend_server/did/not/set\",\r\n        server: \"auth/module/server/did/not/set\"\r\n    },\r\n    afterSignoutRedirectTo: \"/\",\r\n    signupValidator: function (value) { return of(true); },\r\n    afterSignin: function (user) { },\r\n    responseToUser: function (user) { return user; }\r\n};\r\n/** @type {?} */\r\nvar MODULE_CONFIG_TOKEN = new InjectionToken(\"ModuleConfig\");\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar AuthenticationConfigurationService = /** @class */ (function () {\r\n    function AuthenticationConfigurationService(configFile, store) {\r\n        var _this = this;\r\n        this.store = store;\r\n        this.config$ = new BehaviorSubject(this._config);\r\n        this._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n        this.config$.next(this._config);\r\n        this.store.select(getAuthenticationModuleConfig).subscribe(function (storeConfig) {\r\n            if (!storeConfig)\r\n                return;\r\n            _this._config = Object.assign({}, _this._config, storeConfig.Config);\r\n            _this.config$.next(_this._config);\r\n        });\r\n    }\r\n    Object.defineProperty(AuthenticationConfigurationService.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._config;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AuthenticationConfigurationService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    AuthenticationConfigurationService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [MODULE_CONFIG_TOKEN,] }] },\r\n        { type: Store }\r\n    ]; };\r\n    /** @nocollapse */ AuthenticationConfigurationService.ngInjectableDef = defineInjectable({ factory: function AuthenticationConfigurationService_Factory() { return new AuthenticationConfigurationService(inject(MODULE_CONFIG_TOKEN), inject(Store)); }, token: AuthenticationConfigurationService, providedIn: \"root\" });\r\n    return AuthenticationConfigurationService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ProgressingStarted = /** @class */ (function () {\r\n    function ProgressingStarted() {\r\n        this.type = \"[AUTHENTICATION] PROGRESSING_STARTED\" /* PROGRESSING_STARTED */;\r\n    }\r\n    return ProgressingStarted;\r\n}());\r\nvar ProgressingFinished = /** @class */ (function () {\r\n    function ProgressingFinished() {\r\n        this.type = \"[AUTHENTICATION] PROGRESSING_FINISHED\" /* PROGRESSING_FINISHED */;\r\n    }\r\n    return ProgressingFinished;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar NEW_CAPTCHA = '[captcha] new captcha';\r\nvar NewCaptcha = /** @class */ (function () {\r\n    function NewCaptcha() {\r\n        this.type = NEW_CAPTCHA;\r\n    }\r\n    return NewCaptcha;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar COOKIE_NAME = \"ngs-authentication\";\r\nvar SigninService = /** @class */ (function () {\r\n    function SigninService(http, store, configurationService, snackBar) {\r\n        var _this = this;\r\n        this.http = http;\r\n        this.store = store;\r\n        this.configurationService = configurationService;\r\n        this.snackBar = snackBar;\r\n        setTimeout(function () { return _this.store.dispatch(new WhoAmIAction()); }, 300);\r\n    }\r\n    /**\r\n     * @param {?} model\r\n     * @return {?}\r\n     */\r\n    SigninService.prototype.signup = /**\r\n     * @param {?} model\r\n     * @return {?}\r\n     */\r\n    function (model) {\r\n        var _this = this;\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.signUp != \"\"; }), take(1), switchMap(function (config) {\r\n            return _this.http.post(config.env[config.server] + config.endpoints.signUp, model);\r\n        }), map(function (response) {\r\n            /** @type {?} */\r\n            var user = Object.assign({}, response.Result);\r\n            if (user.Role) {\r\n                user.Roles = [user.Role];\r\n            }\r\n            return user;\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} model\r\n     * @return {?}\r\n     */\r\n    SigninService.prototype.signin = /**\r\n     * @param {?} model\r\n     * @return {?}\r\n     */\r\n    function (model) {\r\n        var _this = this;\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.signIn != \"\"; }), take(1), switchMap(function (config) {\r\n            return _this.http.post(config.env[config.server] + config.endpoints.signIn, model);\r\n        }), map(this.configurationService.config.responseToUser), map(function (user) {\r\n            if (user.Role) {\r\n                user.Roles = [user.Role];\r\n            }\r\n            return user;\r\n        }), tap(function (user) {\r\n            if (_this.configurationService.config.mode == \"token-base\")\r\n                Cookie.setCookie(COOKIE_NAME, JSON.stringify(user), _this.configurationService.config.token.time);\r\n        }), tap(function (user) { return _this.configurationService.config.afterSignin(user); }));\r\n    };\r\n    // TODO:\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SigninService.prototype.signout = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        Cookie.deleteCookie(COOKIE_NAME);\r\n        return this.http\r\n            .get(this.configurationService.config.env[this.configurationService.config.server] + this.configurationService.config.endpoints.signOut)\r\n            .pipe(tap(function () {\r\n            Cookie.deleteCookie(COOKIE_NAME);\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SigninService.prototype.whoAmI = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        debugger;\r\n        /** @type {?} */\r\n        var user = { Token: \"--\" };\r\n        if (this.configurationService.config.mode == \"token-base\") {\r\n            try {\r\n                user = JSON.parse(Cookie.getCookie(COOKIE_NAME));\r\n            }\r\n            catch (error) { }\r\n        }\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.whoAmI != \"\"; }), take(1), switchMap(function (config) {\r\n            return _this.http.get(stringTemplate(config.env[config.server] + config.endpoints.whoAmI, { user: user }));\r\n        }));\r\n    };\r\n    SigninService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SigninService.ctorParameters = function () { return [\r\n        { type: HttpClient },\r\n        { type: Store },\r\n        { type: AuthenticationConfigurationService },\r\n        { type: MatSnackBar }\r\n    ]; };\r\n    /** @nocollapse */ SigninService.ngInjectableDef = defineInjectable({ factory: function SigninService_Factory() { return new SigninService(inject(HttpClient), inject(Store), inject(AuthenticationConfigurationService), inject(MatSnackBar$1)); }, token: SigninService, providedIn: \"root\" });\r\n    return SigninService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SigninContainerComponent = /** @class */ (function () {\r\n    function SigninContainerComponent(configurationService, store) {\r\n        this.configurationService = configurationService;\r\n        this.store = store;\r\n        this.signedIn$ = new EventEmitter();\r\n        this.formId$ = this.configurationService.config$.map(function (config) { return config.forms.signIn; });\r\n    }\r\n    /**\r\n     * @param {?} formValue\r\n     * @return {?}\r\n     */\r\n    SigninContainerComponent.prototype.signIn = /**\r\n     * @param {?} formValue\r\n     * @return {?}\r\n     */\r\n    function (formValue) {\r\n        this.store.dispatch(new Signin(formValue));\r\n        this.signedIn$.emit(true);\r\n    };\r\n    SigninContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"\\n        <auth-signin \\n                [formId]='(formId$ | async)'\\n                (signedin)=\\\"signIn($event)\\\"\\n        ></auth-signin>\\n  \"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SigninContainerComponent.ctorParameters = function () { return [\r\n        { type: AuthenticationConfigurationService },\r\n        { type: Store }\r\n    ]; };\r\n    SigninContainerComponent.propDecorators = {\r\n        signedIn$: [{ type: Output }]\r\n    };\r\n    return SigninContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar AuthenticationContainerComponent = /** @class */ (function () {\r\n    function AuthenticationContainerComponent() {\r\n    }\r\n    AuthenticationContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"\\n          <router-outlet></router-outlet>\\n        \"\r\n                },] },\r\n    ];\r\n    return AuthenticationContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SignupContainerComponent = /** @class */ (function () {\r\n    function SignupContainerComponent(configurationService, store, snackBar) {\r\n        this.configurationService = configurationService;\r\n        this.store = store;\r\n        this.snackBar = snackBar;\r\n        this.signedUp$ = new EventEmitter();\r\n        this.formId$ = this.configurationService.config$.map(function (config) { return config.forms.signUp; });\r\n    }\r\n    /**\r\n     * @param {?} formValue\r\n     * @return {?}\r\n     */\r\n    SignupContainerComponent.prototype.signup = /**\r\n     * @param {?} formValue\r\n     * @return {?}\r\n     */\r\n    function (formValue) {\r\n        var _this = this;\r\n        this.configurationService.config$\r\n            .pipe(take(1), switchMap(function (config) { return config.signupValidator(formValue); }))\r\n            .subscribe(function (validation) {\r\n            if (validation) {\r\n                _this.store.dispatch(new Signup(formValue));\r\n                _this.signedUp$.emit(true);\r\n            }\r\n            else {\r\n                _this.snackBar.open(\"رمز عبور یکسان نیست\", null, {\r\n                    duration: 2222\r\n                });\r\n            }\r\n        });\r\n    };\r\n    SignupContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"\\n        <auth-signup \\n                [formId]='(formId$ | async)'\\n                (signedup)=\\\"signup($event)\\\"\\n        ></auth-signup>\\n  \"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SignupContainerComponent.ctorParameters = function () { return [\r\n        { type: AuthenticationConfigurationService },\r\n        { type: Store },\r\n        { type: MatSnackBar }\r\n    ]; };\r\n    SignupContainerComponent.propDecorators = {\r\n        signedUp$: [{ type: Output }]\r\n    };\r\n    return SignupContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar routes = [\r\n    {\r\n        path: \"auth\",\r\n        component: AuthenticationContainerComponent,\r\n        children: [\r\n            {\r\n                path: \"signin\",\r\n                // canActivate: [ SigninGuard ],\r\n                component: SigninContainerComponent\r\n            },\r\n            {\r\n                path: \"signup\",\r\n                // canActivate: [ SigninGuard ],\r\n                component: SignupContainerComponent\r\n            }\r\n        ]\r\n    }\r\n];\r\n/** @type {?} */\r\nvar AuthenticationRoutingModule = RouterModule.forChild(routes);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SigninComponent = /** @class */ (function () {\r\n    function SigninComponent() {\r\n        this.signedin = new EventEmitter();\r\n    }\r\n    /**\r\n     * @param {?} formGroup\r\n     * @return {?}\r\n     */\r\n    SigninComponent.prototype.signin = /**\r\n     * @param {?} formGroup\r\n     * @return {?}\r\n     */\r\n    function (formGroup) {\r\n        if (!formGroup.valid)\r\n            return;\r\n        this.signedin.emit(formGroup.value);\r\n    };\r\n    SigninComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"auth-signin\",\r\n                    template: \"<div fxLayout='row' fxLayoutAlign=\\\"center center\\\">\\n    <ngs-form-view \\n        [id]=\\\"formId\\\"\\n        [card]=\\\"true\\\"\\n        (accept)=\\\"signin($event)\\\"\\n    ></ngs-form-view>\\n</div>\\n<!-- <div>\\n    <a fxFlex=\\\"nogrow\\\" routerLink=\\\"/user/password/reset\\\" mat-raised-button fxFlexFill>\\u06A9\\u0644\\u0645\\u0647 \\u0639\\u0628\\u0648\\u0631 \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0641\\u0631\\u0627\\u0645\\u0648\\u0634 \\u06A9\\u0631\\u062F\\u0647 \\u0627\\u06CC\\u062F\\u061F</a>\\n</div> -->\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SigninComponent.ctorParameters = function () { return []; };\r\n    SigninComponent.propDecorators = {\r\n        signedin: [{ type: Output }],\r\n        formId: [{ type: Input }]\r\n    };\r\n    return SigninComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar WithCredentialInterceptor = /** @class */ (function () {\r\n    function WithCredentialInterceptor(configurationService) {\r\n        this.configurationService = configurationService;\r\n    }\r\n    /**\r\n     * @param {?} request\r\n     * @param {?} next\r\n     * @return {?}\r\n     */\r\n    WithCredentialInterceptor.prototype.intercept = /**\r\n     * @param {?} request\r\n     * @param {?} next\r\n     * @return {?}\r\n     */\r\n    function (request, next) {\r\n        // if (!this.configurationService.config.env.production)\r\n        (/** @type {?} */ (request)).withCredentials = true;\r\n        return next.handle(request);\r\n    };\r\n    WithCredentialInterceptor.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    WithCredentialInterceptor.ctorParameters = function () { return [\r\n        { type: AuthenticationConfigurationService }\r\n    ]; };\r\n    return WithCredentialInterceptor;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UnauthorizedInterceptor = /** @class */ (function () {\r\n    function UnauthorizedInterceptor(router, store // private signinService: SigninService\r\n    ) {\r\n        this.router = router;\r\n        this.store = store;\r\n    }\r\n    /**\r\n     * @param {?} request\r\n     * @param {?} next\r\n     * @return {?}\r\n     */\r\n    UnauthorizedInterceptor.prototype.intercept = /**\r\n     * @param {?} request\r\n     * @param {?} next\r\n     * @return {?}\r\n     */\r\n    function (request, next) {\r\n        var _this = this;\r\n        return next\r\n            .handle(request)\r\n            .map(function (event) {\r\n            if (event instanceof HttpResponse)\r\n                return event;\r\n        })\r\n            .catch(function (err) {\r\n            if (!(err instanceof HttpErrorResponse))\r\n                return throwError(err);\r\n            if (err.status != 401)\r\n                return throwError(err);\r\n            if (err.url.includes(\"logout\"))\r\n                return throwError(err);\r\n            if (err.url.includes(\"user/account/profile\"))\r\n                return throwError(err);\r\n            _this.store.dispatch(new SignoutAction());\r\n            return throwError(\"Unauthorized\");\r\n        });\r\n    };\r\n    UnauthorizedInterceptor.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    UnauthorizedInterceptor.ctorParameters = function () { return [\r\n        { type: Router },\r\n        { type: Store }\r\n    ]; };\r\n    return UnauthorizedInterceptor;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar initialState = {\r\n    loggedIn: false,\r\n    user: new UserModel({ Id: 1 })\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction UserReducer(state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    switch (action.type) {\r\n        case SignInActionTypes.SIGNIN_SUCCEED: {\r\n            return __assign({}, state, { loggedIn: true, user: action.payload });\r\n        }\r\n        case SignInActionTypes.SIGNOUT: {\r\n            return __assign({}, state, { loggedIn: false, user: new UserModel() });\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n/** @type {?} */\r\nvar getLoggedIn = function (state) { return state.loggedIn; };\r\n/** @type {?} */\r\nvar getUser = function (state) { return state.user; };\r\n//#endregion\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar AuthenticationReducers = {\r\n    userStatus: UserReducer\r\n};\r\n/** @type {?} */\r\nvar selectAuthenticationState = createFeatureSelector(\"authentication\");\r\n/** @type {?} */\r\nvar selectAuthState = createSelector(selectAuthenticationState, function (state) { return state.userStatus; });\r\n/** @type {?} */\r\nvar getLoggedIn$1 = createSelector(selectAuthState, getLoggedIn);\r\n/** @type {?} */\r\nvar getUser$1 = createSelector(selectAuthState, getUser);\r\n// export const selectCaptchaState = createSelector(selectAuthenticationState, (state: AuthenticationState) => {\r\n// \treturn state.captcha;\r\n// });\r\n// export const getCaptcha = createSelector(selectCaptchaState, captchaReducer.getCaptcha);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SigninEffects = /** @class */ (function () {\r\n    function SigninEffects(actions$, router, signinService, configurationService, bottomSheet) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.router = router;\r\n        this.signinService = signinService;\r\n        this.configurationService = configurationService;\r\n        this.bottomSheet = bottomSheet;\r\n        this.whoAmI$ = this.actions$\r\n            .ofType(SignInActionTypes.WHO_AM_I)\r\n            .pipe(switchMap(function () {\r\n            return _this.signinService\r\n                .whoAmI()\r\n                .pipe(map(function (user) { return new SigninSecceed(user); }), catchError(function (error) { return of(new SigninFailed(error)); }));\r\n        }));\r\n        this.Signin$ = this.actions$\r\n            .ofType(SignInActionTypes.SIGNIN)\r\n            .pipe(pluck(\"payload\"), switchMap(function (payload) {\r\n            return _this.signinService\r\n                .signin(payload)\r\n                .pipe(map(function (user) { return new SigninSecceed(user); }), catchError(function (error) { return of(new SigninFailed(error)); }));\r\n        }));\r\n        this.signup$ = this.actions$\r\n            .ofType(SignInActionTypes.SIGNUP)\r\n            .pipe(pluck(\"payload\"), switchMap(function (payload) {\r\n            return _this.signinService\r\n                .signup(payload)\r\n                .pipe(map(function (user) { return new SignupSecceed(user); }), catchError(function (error) { return of(new SignupFailed(error)); }));\r\n        }));\r\n        this.signupSucceed$ = this.actions$.ofType(SignInActionTypes.SIGNUP_SUCCEED).pipe(tap(function () {\r\n            debugger;\r\n            _this.router.navigate([\"auth/signin\"]);\r\n        }));\r\n        this.SignInRequired$ = this.actions$.ofType(SignInActionTypes.SIGNIN_REQUIRED).pipe(tap(function (data) {\r\n            /** @type {?} */\r\n            var signinBottomSheetRef = _this.bottomSheet.open(SigninContainerComponent, {\r\n                panelClass: \"clear-mat-card-box\"\r\n            });\r\n            signinBottomSheetRef.instance.signedIn$.subscribe(function () {\r\n                signinBottomSheetRef.dismiss();\r\n            });\r\n            return signinBottomSheetRef;\r\n        }));\r\n        this.SigninSucceed$ = this.actions$.ofType(SignInActionTypes.SIGNIN_SUCCEED).pipe(tap(function (data) {\r\n            if (location.pathname.indexOf(\"signin\") > -1)\r\n                _this.router.navigate([\"/\"]);\r\n        }));\r\n        this.AfterSigninFiled$ = this.actions$.ofType(SignInActionTypes.SIGNIN_FAILURE).map(function () { return new NewCaptcha(); });\r\n        this.DoSignout$ = this.actions$.ofType(SignInActionTypes.DO_SIGNOUT).pipe(switchMap(function (data) {\r\n            return _this.signinService.signout().pipe(map(function () { return new SignoutAction(); }), catchError(function (err) {\r\n                // TODO: dispatch valid action\r\n                debugger;\r\n                return of(err);\r\n            }));\r\n        }));\r\n        // TODO\r\n        // @Effect() Signout$ = this.actions$.ofType(SignInActionTypes.DO_SIGNOUT).pipe(map(() => new SignoutAction()));\r\n        this.redirectToLoginPage$ = this.actions$\r\n            .ofType(SignInActionTypes.SIGNIN_REDIRECT)\r\n            .pipe(tap(function (authed) { return _this.router.navigate([\"auth/signin\"]); }));\r\n        this.redirectAfterSignout$ = this.actions$\r\n            .ofType(SignInActionTypes.SIGNOUT)\r\n            .pipe(tap(function (authed) { return _this.router.navigate([_this.configurationService.config$.getValue().afterSignoutRedirectTo]); }));\r\n    }\r\n    SigninEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    SigninEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: Router },\r\n        { type: SigninService },\r\n        { type: AuthenticationConfigurationService },\r\n        { type: MatBottomSheet }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"whoAmI$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"Signin$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"signup$\", void 0);\r\n    __decorate([\r\n        Effect({ dispatch: false }),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"signupSucceed$\", void 0);\r\n    __decorate([\r\n        Effect({ dispatch: false }),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"SignInRequired$\", void 0);\r\n    __decorate([\r\n        Effect({ dispatch: false }),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"SigninSucceed$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"AfterSigninFiled$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"DoSignout$\", void 0);\r\n    __decorate([\r\n        Effect({ dispatch: false }),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"redirectToLoginPage$\", void 0);\r\n    __decorate([\r\n        Effect({ dispatch: false }),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"redirectAfterSignout$\", void 0);\r\n    return SigninEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar AuthenticationEffects = /** @class */ (function () {\r\n    function AuthenticationEffects(actions$, router) {\r\n        this.actions$ = actions$;\r\n        this.router = router;\r\n        this.dispachProgressingStarted$ = this.actions$\r\n            .ofType(SignInActionTypes.SIGNIN)\r\n            .pipe(map(function () { return new ProgressingStarted(); }));\r\n        this.dispachProgressingFinished$ = this.actions$\r\n            .ofType(SignInActionTypes.SIGNIN_FAILURE, SignInActionTypes.SIGNIN_SUCCEED)\r\n            .pipe(map(function () { return new ProgressingFinished(); }));\r\n    }\r\n    AuthenticationEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    AuthenticationEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: Router }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], AuthenticationEffects.prototype, \"dispachProgressingStarted$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], AuthenticationEffects.prototype, \"dispachProgressingFinished$\", void 0);\r\n    return AuthenticationEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SignupComponent = /** @class */ (function () {\r\n    function SignupComponent() {\r\n        this.signedup = new EventEmitter();\r\n    }\r\n    /**\r\n     * @param {?} formGroup\r\n     * @return {?}\r\n     */\r\n    SignupComponent.prototype.signup = /**\r\n     * @param {?} formGroup\r\n     * @return {?}\r\n     */\r\n    function (formGroup) {\r\n        if (!formGroup.valid)\r\n            return;\r\n        this.signedup.emit(formGroup.value);\r\n    };\r\n    SignupComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"auth-signup\",\r\n                    template: \"<div fxLayout='row' fxLayoutAlign=\\\"center center\\\">\\n    <ngs-form-view \\n        [id]=\\\"formId\\\"\\n        [card]=\\\"true\\\"\\n        (accept)=\\\"signup($event)\\\"\\n    ></ngs-form-view>\\n</div>\\n<!-- <div>\\n    <a fxFlex=\\\"nogrow\\\" routerLink=\\\"/user/password/reset\\\" mat-raised-button fxFlexFill>\\u06A9\\u0644\\u0645\\u0647 \\u0639\\u0628\\u0648\\u0631 \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0641\\u0631\\u0627\\u0645\\u0648\\u0634 \\u06A9\\u0631\\u062F\\u0647 \\u0627\\u06CC\\u062F\\u061F</a>\\n</div> -->\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SignupComponent.ctorParameters = function () { return []; };\r\n    SignupComponent.propDecorators = {\r\n        signedup: [{ type: Output }],\r\n        formId: [{ type: Input }]\r\n    };\r\n    return SignupComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SigninGuard = /** @class */ (function () {\r\n    function SigninGuard(store) {\r\n        this.store = store;\r\n    }\r\n    /**\r\n     * @param {?} route\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    SigninGuard.prototype.canActivate = /**\r\n     * @param {?} route\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    function (route, state) {\r\n        return this.store.select(getLoggedIn$1).take(1).map(function (authed) { return !authed; });\r\n    };\r\n    SigninGuard.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    SigninGuard.ctorParameters = function () { return [\r\n        { type: Store }\r\n    ]; };\r\n    return SigninGuard;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NgsAuthenticationModule = /** @class */ (function () {\r\n    function NgsAuthenticationModule() {\r\n    }\r\n    /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    NgsAuthenticationModule.forRoot = /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        if (config === void 0) { config = /** @type {?} */ ({}); }\r\n        return {\r\n            ngModule: RootNgsAuthenticationModule,\r\n            providers: [\r\n                { provide: MODULE_CONFIG_TOKEN, useValue: config },\r\n                {\r\n                    provide: HTTP_INTERCEPTORS,\r\n                    useClass: UnauthorizedInterceptor,\r\n                    multi: true\r\n                },\r\n                {\r\n                    provide: HTTP_INTERCEPTORS,\r\n                    useClass: WithCredentialInterceptor,\r\n                    multi: true\r\n                },\r\n                SigninService\r\n            ]\r\n        };\r\n    };\r\n    NgsAuthenticationModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        RouterModule,\r\n                        FormsModule,\r\n                        HttpClientModule,\r\n                        FlexLayoutModule,\r\n                        MatIconModule,\r\n                        MatButtonModule,\r\n                        MatCardModule,\r\n                        MatSnackBarModule,\r\n                        MatSidenavModule,\r\n                        MatExpansionModule,\r\n                        MatSelectModule,\r\n                        MatBottomSheetModule,\r\n                        MatFormFieldModule,\r\n                        MatListModule,\r\n                        MatMenuModule,\r\n                        MatRadioModule,\r\n                        MatInputModule,\r\n                        MatToolbarModule,\r\n                        MatDatepickerModule,\r\n                        MatProgressBarModule,\r\n                        BrowserAnimationsModule,\r\n                        ReactiveFormsModule,\r\n                        FormsModule,\r\n                        NgsFormModule\r\n                    ],\r\n                    declarations: [\r\n                        SigninContainerComponent,\r\n                        SigninComponent,\r\n                        AuthenticationContainerComponent,\r\n                        SignupContainerComponent,\r\n                        SignupComponent\r\n                    ],\r\n                    entryComponents: [SigninContainerComponent],\r\n                    providers: [SigninGuard],\r\n                    exports: []\r\n                },] },\r\n    ];\r\n    return NgsAuthenticationModule;\r\n}());\r\nvar RootNgsAuthenticationModule = /** @class */ (function () {\r\n    function RootNgsAuthenticationModule() {\r\n    }\r\n    RootNgsAuthenticationModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        StoreModule.forFeature(\"authentication\", AuthenticationReducers),\r\n                        EffectsModule.forFeature([SigninEffects, AuthenticationEffects]),\r\n                        AuthenticationRoutingModule,\r\n                        NgsAuthenticationModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return RootNgsAuthenticationModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { UserModel, SignInActionTypes, DoSignoutAction, SigninRequiredAction, SigninService, SigninContainerComponent, NgsAuthenticationModule, getUser$1 as getUser, AuthenticationRoutingModule as ɵr, MODULE_CONFIG_TOKEN as ɵa, RootNgsAuthenticationModule as ɵb, SigninComponent as ɵi, SignupComponent as ɵl, AuthenticationEffects as ɵq, SigninEffects as ɵp, UnauthorizedInterceptor as ɵs, WithCredentialInterceptor as ɵt, AuthenticationReducers as ɵc, selectAuthState as ɵe, selectAuthenticationState as ɵd, UserReducer as ɵn, getUser as ɵo, SigninGuard as ɵm, AuthenticationConfigurationService as ɵh, AuthenticationContainerComponent as ɵj, SignupContainerComponent as ɵk };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { FormGroup, FormControl, Validators, FormArray, FormBuilder, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InjectionToken, Injectable, Inject, Component, Output, EventEmitter, Input, Injector, ViewChild, ComponentFactoryResolver, ViewContainerRef, ReflectiveInjector, NgModule, defineInjectable, inject } from '@angular/core';\nimport { __decorate, __metadata, __assign } from 'tslib';\nimport { createSelector, createFeatureSelector, Store, StoreModule } from '@ngrx/store';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { take, map, catchError, filter, switchMap } from 'rxjs/operators';\nimport { ActivatedRoute, RouterModule } from '@angular/router';\nimport { Actions, Effect, EffectsModule } from '@ngrx/effects';\nimport { of } from 'rxjs/observable/of';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule, MatButtonModule, MatCardModule, MatSnackBarModule, MatSidenavModule, MatExpansionModule, MatSelectModule, MatFormFieldModule, MatListModule, MatMenuModule, MatRadioModule, MatInputModule, MatToolbarModule, MatDatepickerModule, MatProgressBarModule, MatSlideToggleModule } from '@angular/material';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @template T\r\n */\r\nvar  /**\r\n * @template T\r\n */\r\nConfigModel = /** @class */ (function () {\r\n    function ConfigModel() {\r\n    }\r\n    return ConfigModel;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetConfigsApiModel;\r\n(function (GetConfigsApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = /** @type {?} */ ({}); }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return ((/** @type {?} */ (_this))[key] = (/** @type {?} */ (initValue))[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {};\r\n        };\r\n        return Request;\r\n    }());\r\n    GetConfigsApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    GetConfigsApiModel.Response = Response;\r\n})(GetConfigsApiModel || (GetConfigsApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar EditConfigApiModel;\r\n(function (EditConfigApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = /** @type {?} */ ({}); }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return ((/** @type {?} */ (_this))[key] = (/** @type {?} */ (initValue))[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {\r\n                Name: this.Name,\r\n                Config: this.Config\r\n            };\r\n        };\r\n        Object.defineProperty(Request, \"formGroup\", {\r\n            get: /**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                return new FormGroup({\r\n                    Name: new FormControl(\"\", [Validators.required]),\r\n                    Config: new FormGroup({})\r\n                });\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Request;\r\n    }());\r\n    EditConfigApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    EditConfigApiModel.Response = Response;\r\n})(EditConfigApiModel || (EditConfigApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar MODULE_DEFAULT_CONFIG = {\r\n    env: {\r\n        production: false,\r\n        frontend_server: \"config/module/front_end/did/not/set\"\r\n    }\r\n};\r\n/** @type {?} */\r\nvar MODULE_CONFIG_TOKEN = new InjectionToken(\"UserModuleConfig\");\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar ConfigActionTypes = {\r\n    GET_CONFIGS: \"[CONFIG] get config\",\r\n    CONFIG_LOADED_SUCCEED: \"[CONFIG] load config succeed\",\r\n    UPDATE_CONFIG: \"[CONFIG] update config\",\r\n    CONFIG_LOADED_FAILED: \"[CONFIG] load config failed\",\r\n};\r\nvar GetConfigAction = /** @class */ (function () {\r\n    function GetConfigAction() {\r\n        this.type = ConfigActionTypes.GET_CONFIGS;\r\n    }\r\n    return GetConfigAction;\r\n}());\r\nvar ConfigLoadedSucceedAction = /** @class */ (function () {\r\n    function ConfigLoadedSucceedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = ConfigActionTypes.CONFIG_LOADED_SUCCEED;\r\n    }\r\n    return ConfigLoadedSucceedAction;\r\n}());\r\nvar ConfigLoadedFailedAction = /** @class */ (function () {\r\n    function ConfigLoadedFailedAction() {\r\n        this.type = ConfigActionTypes.CONFIG_LOADED_FAILED;\r\n    }\r\n    return ConfigLoadedFailedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ɵ0 = [];\r\n/** @type {?} */\r\nvar initialState = {\r\n    data: ɵ0\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction Reducer(state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    switch (action.type) {\r\n        case ConfigActionTypes.CONFIG_LOADED_SUCCEED:\r\n            return __assign({}, state, { data: action.payload });\r\n        case ConfigActionTypes.UPDATE_CONFIG:\r\n            return __assign({}, state, { data: state.data.map(function (config) {\r\n                    if (config._id == action.payload._id)\r\n                        config.Config = action.payload.Config;\r\n                    return config;\r\n                }) });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n/** @type {?} */\r\nvar getConfigs = function (state) { return state.data; };\r\n/** @type {?} */\r\nvar getAppConfig = function (state) { return state.data.find(function (config) { return config.Name == \"app_config\"; }); };\r\n/** @type {?} */\r\nvar getAuthenticationModuleConfig = function (state) {\r\n    return state.data.find(function (config) { return config.Name == \"authentication_module_config\"; });\r\n};\r\n/** @type {?} */\r\nvar getUserModuleConfig = function (state) { return state.data.find(function (config) { return config.Name == \"user_module_config\"; }); };\r\n/** @type {?} */\r\nvar getConfigModuleConfig = function (state) { return (state.data.find(function (config) { return config.Name == \"config_module_config\"; })); };\r\n/** @type {?} */\r\nvar getFormModuleConfig = function (state) { return (state.data.find(function (config) { return config.Name == \"form_module_config\"; })); };\r\n/** @type {?} */\r\nvar getSocketModuleConfig = function (state) { return (state.data.find(function (config) { return config.Name == \"socket_module_config\"; })); };\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar ConfigReducers = {\r\n    list: Reducer\r\n};\r\n/** @type {?} */\r\nvar selectConfigState = createFeatureSelector(\"config\");\r\n/** @type {?} */\r\nvar getConfigListState = createSelector(selectConfigState, function (state) { return state.list; });\r\n/** @type {?} */\r\nvar getConfigs$1 = createSelector(getConfigListState, getConfigs);\r\n/** @type {?} */\r\nvar getAppConfig$1 = createSelector(getConfigListState, getAppConfig);\r\n/** @type {?} */\r\nvar getAuthenticationModuleConfig$1 = createSelector(getConfigListState, getAuthenticationModuleConfig);\r\n/** @type {?} */\r\nvar getUserModuleConfig$1 = createSelector(getConfigListState, getUserModuleConfig);\r\n/** @type {?} */\r\nvar getConfigModuleConfig$1 = createSelector(getConfigListState, getConfigModuleConfig);\r\n/** @type {?} */\r\nvar getFormModuleConfig$1 = createSelector(getConfigListState, getFormModuleConfig);\r\n/** @type {?} */\r\nvar getSocketModuleConfig$1 = createSelector(getConfigListState, getSocketModuleConfig);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ConfigurationService = /** @class */ (function () {\r\n    function ConfigurationService(configFile, store) {\r\n        var _this = this;\r\n        this.store = store;\r\n        this.config$ = new BehaviorSubject(this._config);\r\n        this._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n        this.config$.next(this._config);\r\n        this.store.select(getConfigModuleConfig$1).subscribe(function (configConfig) {\r\n            if (!configConfig)\r\n                return;\r\n            _this._config = Object.assign({}, _this._config, configConfig.Config);\r\n            _this.config$.next(_this._config);\r\n        });\r\n    }\r\n    Object.defineProperty(ConfigurationService.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._config;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ConfigurationService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ConfigurationService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [MODULE_CONFIG_TOKEN,] }] },\r\n        { type: Store }\r\n    ]; };\r\n    /** @nocollapse */ ConfigurationService.ngInjectableDef = defineInjectable({ factory: function ConfigurationService_Factory() { return new ConfigurationService(inject(MODULE_CONFIG_TOKEN), inject(Store)); }, token: ConfigurationService, providedIn: \"root\" });\r\n    return ConfigurationService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ConfigService = /** @class */ (function () {\r\n    function ConfigService(http, store, configurationService) {\r\n        var _this = this;\r\n        this.http = http;\r\n        this.store = store;\r\n        this.configurationService = configurationService;\r\n        setTimeout(function () {\r\n            _this.store.dispatch(new GetConfigAction());\r\n        }, 999);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ConfigService.prototype.getConfigs = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.http\r\n            .get(this.configurationService.config.env.frontend_server + \"/api/config\")\r\n            .pipe(take(1), map(function (response) { return response.Result; }), catchError(function (err) { return Observable.throw(err); }));\r\n    };\r\n    /**\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    ConfigService.prototype.getConfigByName = /**\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function (name) {\r\n        return this.http.get(this.configurationService.config.env.frontend_server + \"/api/config/\" + name).pipe(map(function (response) { return response; }), catchError(function (err) {\r\n            return Observable.throw(err);\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} body\r\n     * @return {?}\r\n     */\r\n    ConfigService.prototype.editConfig = /**\r\n     * @param {?} body\r\n     * @return {?}\r\n     */\r\n    function (body) {\r\n        /** @type {?} */\r\n        var model = new EditConfigApiModel.Request(body);\r\n        return this.http\r\n            .put(this.configurationService.config.env.frontend_server + \"/api/config/\" + model.Name, model.getRequestBody())\r\n            .pipe(map(function (response) { return response; }), catchError(function (err) {\r\n            return Observable.throw(err);\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ConfigService.prototype.getLayoutConfigs = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.http.get(this.configurationService.config.env.frontend_server + \"/api/layout-config\").pipe(map(function (response) { return response; }), catchError(function (err) {\r\n            return Observable.throw(err);\r\n        }));\r\n    };\r\n    ConfigService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ConfigService.ctorParameters = function () { return [\r\n        { type: HttpClient },\r\n        { type: Store },\r\n        { type: ConfigurationService }\r\n    ]; };\r\n    /** @nocollapse */ ConfigService.ngInjectableDef = defineInjectable({ factory: function ConfigService_Factory() { return new ConfigService(inject(HttpClient), inject(Store), inject(ConfigurationService)); }, token: ConfigService, providedIn: \"root\" });\r\n    return ConfigService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ConfigsComponent = /** @class */ (function () {\r\n    function ConfigsComponent(store) {\r\n        this.store = store;\r\n        this.configs = this.store.select(getConfigs$1);\r\n    }\r\n    ConfigsComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"configs\",\r\n                    template: \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"25px\\\" class=\\\"main-container\\\">\\n\\n  <div class=\\\"content-action\\\">\\n    <mat-card class=\\\"with-sticky-action\\\">\\n      <mat-card-header>\\n        <mat-card-title fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\n          <mat-icon>settings_input_component</mat-icon>\\n          <span>\\u062A\\u0646\\u0638\\u06CC\\u0645\\u0627\\u062A \\u0633\\u0627\\u0645\\u0627\\u0646\\u0647 \\u0648 \\u0645\\u0627\\u0698\\u0648\\u0644 \\u0647\\u0627</span>\\n        </mat-card-title>\\n        <!-- <mat-card-subtitle fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n          <span>\\n            \\u0634\\u0627\\u0645\\u0644 \\u062A\\u0645\\u0627\\u0645\\u06CC \\u062F\\u0631\\u062E\\u0648\\u0627\\u0633\\u062A\\u200C\\u0647\\u0627 \\u0627\\u0632 \\u0642\\u0628\\u06CC\\u0644 \\u062F\\u0627\\u0626\\u0631\\u06CC\\u060C \\u062C\\u0645\\u0639\\u200C\\u0622\\u0648\\u0631\\u06CC \\u0648 ...\\n          </span>\\n        </mat-card-subtitle> -->\\n      </mat-card-header>\\n\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start\\\">\\n\\n        <button fxFlex.lt-lg=\\\"18\\\" fxFlex.lg=\\\"23.5\\\" fxFlex.md=\\\"31\\\" fxFlex.sm=\\\"48\\\" fxFlex.xs=\\\"100\\\" class='link'\\n          mat-raised-button [routerLink]=\\\"['edit' ,  config.Name]\\\" *ngFor=\\\"let config of (configs | async)\\\">\\n          <div fxLayout='column' fxLayoutAlign='center center'>\\n            <mat-icon color='primary'>settings</mat-icon>\\n            <h3 class='title'>{{config.Name}}</h3>\\n          </div>\\n        </button>\\n\\n      </div>\\n\\n    </mat-card>\\n  </div>\\n</div>\",\r\n                    styles: [\":host{width:100%}.config-box{margin:15px}button.link{padding:25px 15px;margin:.5%;box-sizing:border-box}button mat-icon{font-size:34px;width:34px;height:34px}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ConfigsComponent.ctorParameters = function () { return [\r\n        { type: Store }\r\n    ]; };\r\n    return ConfigsComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar AuthenticationModuleConfigComponent = /** @class */ (function () {\r\n    function AuthenticationModuleConfigComponent(injector) {\r\n        this.injector = injector;\r\n        this.formGroup = new FormGroup({\r\n            endpoints: new FormGroup({\r\n                signIn: new FormControl(\"\", [Validators.required]),\r\n                signOut: new FormControl(\"\", [Validators.required]),\r\n                whoAmI: new FormControl(\"\", [Validators.required]),\r\n                captchaUrl: new FormControl(\"\", [Validators.required])\r\n            }),\r\n            forms: new FormGroup({\r\n                signIn: new FormControl(\"\", [Validators.required])\r\n            })\r\n        });\r\n        this.configChanged = new EventEmitter();\r\n        this.configFormGroup = this.injector.get(\"configFormGroup\");\r\n    }\r\n    Object.defineProperty(AuthenticationModuleConfigComponent.prototype, \"configFormGroup\", {\r\n        set: /**\r\n         * @param {?} configFormGroup\r\n         * @return {?}\r\n         */\r\n        function (configFormGroup) {\r\n            var _this = this;\r\n            this.formGroup.patchValue(configFormGroup.value);\r\n            configFormGroup.valueChanges.subscribe(function (data) {\r\n                _this.formGroup.patchValue(data);\r\n            });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} formId\r\n     * @param {?} formName\r\n     * @return {?}\r\n     */\r\n    AuthenticationModuleConfigComponent.prototype.setFormId = /**\r\n     * @param {?} formId\r\n     * @param {?} formName\r\n     * @return {?}\r\n     */\r\n    function (formId, formName) {\r\n        var _a;\r\n        this.formGroup.patchValue((_a = {}, _a[formName] = formId, _a));\r\n    };\r\n    AuthenticationModuleConfigComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"config-authentication-module-config\",\r\n                    template: \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"25px\\\" class=\\\"main-container\\\">\\n\\n    <div class=\\\"content-action\\\">\\n        <mat-card class=\\\"with-sticky-action\\\">\\n            <mat-card-header>\\n                <mat-card-title fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\n                    <mat-icon>settings_input_component</mat-icon>\\n                    <span>\\u062A\\u0646\\u0638\\u06CC\\u0645\\u0627\\u062A \\u0645\\u0627\\u0698\\u0648\\u0644 \\u0627\\u062D\\u0631\\u0627\\u0632 \\u0647\\u0648\\u06CC\\u062A</span>\\n                </mat-card-title>\\n                <!-- <mat-card-subtitle fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                    <span>\\n                        \\u0634\\u0627\\u0645\\u0644 \\u062A\\u0645\\u0627\\u0645\\u06CC \\u062F\\u0631\\u062E\\u0648\\u0627\\u0633\\u062A\\u200C\\u0647\\u0627 \\u0627\\u0632 \\u0642\\u0628\\u06CC\\u0644 \\u062F\\u0627\\u0626\\u0631\\u06CC\\u060C \\u062C\\u0645\\u0639\\u200C\\u0622\\u0648\\u0631\\u06CC \\u0648 ...\\n                    </span>\\n                </mat-card-subtitle> -->\\n            </mat-card-header>\\n\\n            <div>\\n\\n                <h2>Endpoints</h2>\\n                <div [formGroup]=\\\"formGroup.controls.endpoints\\\" fxLayout=\\\"column\\\">\\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" (change)=\\\"configChanged.emit(formGroup.value)\\\" matInput placeholder=\\\"sign in\\\"\\n                            formControlName=\\\"signIn\\\">\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" (change)=\\\"configChanged.emit(formGroup.value)\\\" matInput placeholder=\\\"sign out\\\"\\n                            formControlName=\\\"signOut\\\">\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" (change)=\\\"configChanged.emit(formGroup.value)\\\" matInput placeholder=\\\"who am i\\\"\\n                            formControlName=\\\"whoAmI\\\">\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" (change)=\\\"configChanged.emit(formGroup.value)\\\" matInput placeholder=\\\"captcha url\\\"\\n                            formControlName=\\\"captchaUrl\\\">\\n                    </mat-form-field>\\n                </div>\\n                <h2>Forms</h2>\\n                <div [formGroup]=\\\"formGroup.controls.forms\\\" fxLayout=\\\"column\\\">\\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" (change)=\\\"configChanged.emit(formGroup.value)\\\" matInput placeholder=\\\"SignIn Forms\\\"\\n                            formControlName=\\\"signIn\\\">\\n                    </mat-form-field>\\n                    <!-- <ngs-form-selector (select)=\\\"setFormId($event,'signIn')\\\"></ngs-form-selector> -->\\n                </div>\\n            </div>\\n        </mat-card>\\n    </div>\\n</div>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    AuthenticationModuleConfigComponent.ctorParameters = function () { return [\r\n        { type: Injector }\r\n    ]; };\r\n    AuthenticationModuleConfigComponent.propDecorators = {\r\n        configFormGroup: [{ type: Input }],\r\n        configChanged: [{ type: Output }]\r\n    };\r\n    return AuthenticationModuleConfigComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ConfigAppConfigComponent = /** @class */ (function () {\r\n    function ConfigAppConfigComponent(injector) {\r\n        this.injector = injector;\r\n        this.formGroup = new FormGroup({ AppTitle: new FormControl(\"\", [Validators.required]) });\r\n        this.configChanged = new EventEmitter();\r\n        this.configFormGroup = this.injector.get(\"configFormGroup\");\r\n    }\r\n    Object.defineProperty(ConfigAppConfigComponent.prototype, \"configFormGroup\", {\r\n        set: /**\r\n         * @param {?} configFormGroup\r\n         * @return {?}\r\n         */\r\n        function (configFormGroup) {\r\n            var _this = this;\r\n            this.formGroup.patchValue(configFormGroup.value);\r\n            configFormGroup.valueChanges.subscribe(function (data) {\r\n                _this.formGroup.patchValue(data);\r\n            });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ConfigAppConfigComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"config-app-config\",\r\n                    template: \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"25px\\\" class=\\\"main-container\\\">\\n\\n    <div class=\\\"content-action\\\">\\n        <mat-card class=\\\"with-sticky-action\\\">\\n            <mat-card-header>\\n                <mat-card-title fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\n                    <mat-icon>settings_input_component</mat-icon>\\n                    <span>\\u062A\\u0646\\u0638\\u06CC\\u0645\\u0627\\u062A \\u0633\\u0627\\u0645\\u0627\\u0646\\u0647</span>\\n                </mat-card-title>\\n                <mat-card-subtitle fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                    <span>\\n                        \\u0634\\u0627\\u0645\\u0644 \\u062A\\u0645\\u0627\\u0645\\u06CC \\u062F\\u0631\\u062E\\u0648\\u0627\\u0633\\u062A\\u200C\\u0647\\u0627 \\u0627\\u0632 \\u0642\\u0628\\u06CC\\u0644 \\u062F\\u0627\\u0626\\u0631\\u06CC\\u060C \\u062C\\u0645\\u0639\\u200C\\u0622\\u0648\\u0631\\u06CC \\u0648 ...\\n                    </span>\\n                </mat-card-subtitle>\\n            </mat-card-header>\\n\\n            <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start\\\">\\n\\n                <div [formGroup]=\\\"formGroup\\\">\\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" (change)=\\\"configChanged.emit(formGroup.value)\\\" matInput placeholder=\\\"\\u0646\\u0627\\u0645 \\u067E\\u0631\\u0648\\u0698\\u0647\\\"\\n                            formControlName=\\\"AppTitle\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n\\n        </mat-card>\\n    </div>\\n</div>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ConfigAppConfigComponent.ctorParameters = function () { return [\r\n        { type: Injector }\r\n    ]; };\r\n    ConfigAppConfigComponent.propDecorators = {\r\n        configFormGroup: [{ type: Input }],\r\n        configChanged: [{ type: Output }]\r\n    };\r\n    return ConfigAppConfigComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UserModuleConfigComponent = /** @class */ (function () {\r\n    function UserModuleConfigComponent(injector) {\r\n        this.injector = injector;\r\n        this.formGroup = new FormGroup({\r\n            endpoints: new FormGroup({\r\n                changePassword: new FormControl(\"\", [Validators.required]),\r\n                editProfile: new FormControl(\"\", [Validators.required]),\r\n                getUserInfo: new FormControl(\"\", [Validators.required]),\r\n                whoAmI: new FormControl(\"\", [Validators.required])\r\n            }),\r\n            forms: new FormGroup({\r\n                profile_edit: new FormControl(\"\", [Validators.required])\r\n            }),\r\n            dashboardLinks: new FormArray([])\r\n        });\r\n        this.configChanged = new EventEmitter();\r\n        this.configFormGroup = this.injector.get(\"configFormGroup\");\r\n    }\r\n    Object.defineProperty(UserModuleConfigComponent.prototype, \"configFormGroup\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._configFormGroup;\r\n        },\r\n        set: /**\r\n         * @param {?} configFormGroup\r\n         * @return {?}\r\n         */\r\n        function (configFormGroup) {\r\n            var _this = this;\r\n            this._configFormGroup = configFormGroup;\r\n            (/** @type {?} */ (configFormGroup.controls[\"dashboardLinks\"])).controls.forEach(function (control) {\r\n                (/** @type {?} */ (_this.formGroup.controls[\"dashboardLinks\"])).push(new FormGroup({\r\n                    route: new FormControl(\"\", [Validators.required]),\r\n                    icon: new FormControl(\"\", [Validators.required]),\r\n                    title: new FormControl(\"\", [Validators.required])\r\n                }));\r\n            });\r\n            this.formGroup.patchValue(configFormGroup.value);\r\n            configFormGroup.valueChanges.subscribe(function (data) {\r\n                _this.formGroup.patchValue(data);\r\n            });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserModuleConfigComponent.prototype.addMenu = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var menuItem = new FormGroup({\r\n            route: new FormControl(\"\", [Validators.required]),\r\n            icon: new FormControl(\"\", [Validators.required]),\r\n            title: new FormControl(\"\", [Validators.required])\r\n        });\r\n        (/** @type {?} */ (this.formGroup.get(\"dashboardLinks\"))).push(menuItem);\r\n        (/** @type {?} */ (this.configFormGroup.get(\"dashboardLinks\"))).push(menuItem);\r\n    };\r\n    UserModuleConfigComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"config-user-module-config\",\r\n                    template: \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"25px\\\" class=\\\"main-container\\\">\\n\\n    <div class=\\\"content-action\\\">\\n        <mat-card fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"\\\" class=\\\"with-sticky-action\\\">\\n            <h2>Endpoints</h2>\\n            <div [formGroup]=\\\"formGroup.get('endpoints')\\\" fxLayout=\\\"column\\\">\\n                <mat-form-field>\\n                    <input type=\\\"text\\\" (change)=\\\"configChanged.emit(formGroup.value)\\\" matInput placeholder=\\\"change password\\\"\\n                        formControlName=\\\"changePassword\\\">\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <input type=\\\"text\\\" (change)=\\\"configChanged.emit(formGroup.value)\\\" matInput placeholder=\\\"edit profile\\\"\\n                        formControlName=\\\"editProfile\\\">\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <input type=\\\"text\\\" (change)=\\\"configChanged.emit(formGroup.value)\\\" matInput placeholder=\\\"get user info\\\"\\n                        formControlName=\\\"getUserInfo\\\">\\n                </mat-form-field>\\n                <mat-form-field>\\n                    <input type=\\\"text\\\" (change)=\\\"configChanged.emit(formGroup.value)\\\" matInput placeholder=\\\"Who Am I\\\"\\n                        formControlName=\\\"whoAmI\\\">\\n                </mat-form-field>\\n            </div>\\n            <h2>Forms</h2>\\n            <div [formGroup]=\\\"formGroup.get('forms')\\\" fxLayout=\\\"column\\\">\\n                <mat-form-field>\\n                    <input type=\\\"text\\\" (change)=\\\"configChanged.emit(formGroup.value)\\\" matInput placeholder=\\\"profile edit\\\"\\n                        formControlName=\\\"profile_edit\\\">\\n                </mat-form-field>\\n                <!-- <ngs-form-selector (select)=\\\"setFormId($event,'signIn')\\\"></ngs-form-selector> -->\\n            </div>\\n\\n\\n            <h2 fxFlex=\\\"100\\\">\\n                Dashobard Links\\n                <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addMenu()\\\">\\n                    <mat-icon aria-label=\\\"icon-button icon\\\">add</mat-icon>\\n                </button>\\n            </h2>\\n            <div fxFlex=\\\"100\\\" *ngFor=\\\"let item of $any(formGroup.get('dashboardLinks')).controls\\\">\\n                <div [formGroup]=\\\"item\\\">\\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" (change)=\\\"configChanged.emit(formGroup.value)\\\" matInput placeholder=\\\"route\\\"\\n                            formControlName=\\\"route\\\">\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" (change)=\\\"configChanged.emit(formGroup.value)\\\" matInput placeholder=\\\"icon\\\"\\n                            formControlName=\\\"icon\\\">\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                        <input type=\\\"text\\\" (change)=\\\"configChanged.emit(formGroup.value)\\\" matInput placeholder=\\\"title\\\"\\n                            formControlName=\\\"title\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </mat-card>\\n    </div>\\n</div>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UserModuleConfigComponent.ctorParameters = function () { return [\r\n        { type: Injector }\r\n    ]; };\r\n    UserModuleConfigComponent.propDecorators = {\r\n        configFormGroup: [{ type: Input }],\r\n        configChanged: [{ type: Output }]\r\n    };\r\n    return UserModuleConfigComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar LayoutModuleConfigComponent = /** @class */ (function () {\r\n    function LayoutModuleConfigComponent(injector, store) {\r\n        this.injector = injector;\r\n        this.store = store;\r\n        this.configChanged = new EventEmitter();\r\n        this.formGroup = new FormGroup({\r\n            layoutMode: new FormControl(\"\", [Validators.required]),\r\n            showLeftNavBar: new FormControl(\"\", [Validators.required]),\r\n            mainSideNavMode: new FormControl(\"\", [Validators.required]),\r\n            showMainSidenav: new FormControl(\"\", [Validators.required]),\r\n            stickyLeftNavBar: new FormControl(\"\", [Validators.required]),\r\n            showSecondSideNav: new FormControl(\"\", [Validators.required]),\r\n            secondSideNavMode: new FormControl(\"\", [Validators.required]),\r\n            menuItems: new FormArray([])\r\n        });\r\n        this.sideNavModes = [\"over\", \"push\", \"side\"];\r\n        this.layoutModes = [\"with-margin\", \"without-margin\", \"default\"];\r\n        this.configFormGroup = this.injector.get(\"configFormGroup\");\r\n        this.roleItems$ = this.store\r\n            .select(getAppConfig$1)\r\n            .pipe(filter(function (config) { return config != null; }), map(function (appconfig) { return appconfig.Config.Roles; }));\r\n        // this.configChanged.\r\n        // this.formGroup.valueChanges.subscribe(value => {\r\n        // \tdebugger;\r\n        // \tthis.configChanged.emit(value);\r\n        // });\r\n    }\r\n    Object.defineProperty(LayoutModuleConfigComponent.prototype, \"configFormGroup\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._configFormGroup;\r\n        },\r\n        set: /**\r\n         * @param {?} configFormGroup\r\n         * @return {?}\r\n         */\r\n        function (configFormGroup) {\r\n            var _this = this;\r\n            this._configFormGroup = configFormGroup;\r\n            (/** @type {?} */ (configFormGroup.controls[\"menuItems\"])).controls.forEach(function (control) {\r\n                (/** @type {?} */ (_this.formGroup.controls[\"menuItems\"])).push(new FormGroup({\r\n                    route: new FormControl(\"\", [Validators.required]),\r\n                    icon: new FormControl(\"\", [Validators.required]),\r\n                    // roles: new FormArray(control.value.roles.map((i) => new FormControl(\"Admin\"))),\r\n                    roles: new FormControl(),\r\n                    title: new FormControl(\"\", [Validators.required])\r\n                }));\r\n            });\r\n            this.formGroup.patchValue(configFormGroup.value);\r\n            configFormGroup.valueChanges.subscribe(function (data) { return _this.formGroup.patchValue(data); });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LayoutModuleConfigComponent.prototype.addMenu = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var menuItem = new FormGroup({\r\n            route: new FormControl(\"\", [Validators.required]),\r\n            icon: new FormControl(\"\", [Validators.required]),\r\n            roles: new FormControl(),\r\n            title: new FormControl(\"\", [Validators.required])\r\n        });\r\n        (/** @type {?} */ (this.formGroup.get(\"menuItems\"))).push(menuItem);\r\n        (/** @type {?} */ (this.configFormGroup.get(\"menuItems\"))).push(menuItem);\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    LayoutModuleConfigComponent.prototype.removeMenu = /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        debugger;\r\n        /** @type {?} */\r\n        var index = (/** @type {?} */ (this.formGroup.get(\"menuItems\"))).controls.indexOf(item);\r\n        (/** @type {?} */ (this.formGroup.get(\"menuItems\"))).removeAt(index);\r\n    };\r\n    LayoutModuleConfigComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"25px\\\" class=\\\"main-container\\\">\\n\\n    <div class=\\\"content-action\\\">\\n        <mat-card class=\\\"with-sticky-action\\\">\\n            <mat-card-header>\\n                <mat-card-title fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\n                    <mat-icon>settings_input_component</mat-icon>\\n                    <span>\\u062A\\u0646\\u0638\\u06CC\\u0645\\u0627\\u062A \\u0645\\u0627\\u0698\\u0648\\u0644 Layout</span>\\n                </mat-card-title>\\n                <mat-card-subtitle fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                    <span>\\n                        \\u0634\\u0627\\u0645\\u0644 \\u062A\\u0645\\u0627\\u0645\\u06CC \\u062F\\u0631\\u062E\\u0648\\u0627\\u0633\\u062A\\u200C\\u0647\\u0627 \\u0627\\u0632 \\u0642\\u0628\\u06CC\\u0644 \\u062F\\u0627\\u0626\\u0631\\u06CC\\u060C \\u062C\\u0645\\u0639\\u200C\\u0622\\u0648\\u0631\\u06CC \\u0648 ...\\n                    </span>\\n                </mat-card-subtitle>\\n            </mat-card-header>\\n            <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"25px\\\">\\n                <mat-card fxFlex=\\\"20\\\" fxFlexLayout=\\\"row\\\">\\n                    <div [formGroup]=\\\"formGroup\\\">\\n                        <mat-form-field>\\n                            <mat-select placeholder=\\\"layout mode\\\" formControlName=\\\"layoutMode\\\">\\n                                <mat-option *ngFor=\\\"let item of layoutModes\\\" [value]=\\\"item\\\">{{item}}</mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                        <mat-slide-toggle formControlName=\\\"showLeftNavBar\\\">show left navbar</mat-slide-toggle>\\n                        <mat-form-field>\\n                            <mat-select placeholder=\\\"main side nav mode\\\" formControlName=\\\"mainSideNavMode\\\">\\n                                <mat-option *ngFor=\\\"let item of sideNavModes\\\" [value]=\\\"item\\\">{{item}}</mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                        <mat-slide-toggle formControlName=\\\"showMainSidenav\\\">show main side nav</mat-slide-toggle>\\n                        <mat-slide-toggle formControlName=\\\"stickyLeftNavBar\\\">sticky left navbar</mat-slide-toggle>\\n                        <mat-slide-toggle formControlName=\\\"showSecondSideNav\\\">show second side nav</mat-slide-toggle>\\n                        <mat-form-field>\\n                            <mat-select placeholder=\\\"second side nav mode\\\" formControlName=\\\"secondSideNavMode\\\">\\n                                <mat-option *ngFor=\\\"let item of sideNavModes\\\" [value]=\\\"item\\\">{{item}}</mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                </mat-card>\\n\\n                <mat-card fxFlex fxLayout=\\\"column\\\">\\n                    <h2 fxFlex>\\n                        Menu Items\\n                        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addMenu()\\\">\\n                            <mat-icon aria-label=\\\"icon-button icon\\\">add</mat-icon>\\n                        </button>\\n                    </h2>\\n                    <div fxFlex=\\\"nogrow\\\" *ngFor=\\\"let item of $any(formGroup).get('menuItems').controls\\\">\\n                        <div [formGroup]=\\\"item\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"25px\\\">\\n                            <button mat-icon-button (click)=\\\"removeMenu(item)\\\">\\n                                <mat-icon>delete</mat-icon>\\n                            </button>\\n                            <mat-form-field>\\n                                <input type=\\\"text\\\" matInput placeholder=\\\"route\\\" formControlName=\\\"route\\\">\\n                            </mat-form-field>\\n                            <mat-form-field>\\n                                <input type=\\\"text\\\" matInput placeholder=\\\"icon\\\" formControlName=\\\"icon\\\">\\n                            </mat-form-field>\\n                            <mat-form-field>\\n                                <input type=\\\"text\\\" matInput placeholder=\\\"title\\\" formControlName=\\\"title\\\">\\n                            </mat-form-field>\\n                            <mat-form-field>\\n                                <mat-select placeholder=\\\"roles\\\" formControlName=\\\"roles\\\" multiple>\\n                                    <mat-option *ngFor=\\\"let role of roleItems$ | async\\\" [value]=\\\"role\\\">{{role}}</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n                    </div>\\n                </mat-card>\\n            </div>\\n        </mat-card>\\n    </div>\\n</div>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    LayoutModuleConfigComponent.ctorParameters = function () { return [\r\n        { type: Injector },\r\n        { type: Store }\r\n    ]; };\r\n    LayoutModuleConfigComponent.propDecorators = {\r\n        configChanged: [{ type: Output, args: [\"configChanged\",] }],\r\n        configFormGroup: [{ type: Input }]\r\n    };\r\n    return LayoutModuleConfigComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DynamicConfigComponentSelectorComponent = /** @class */ (function () {\r\n    function DynamicConfigComponentSelectorComponent(resolver) {\r\n        this.resolver = resolver;\r\n        this.typeMapToDiagram = {\r\n            authentication_module_config: AuthenticationModuleConfigComponent,\r\n            app_config: ConfigAppConfigComponent,\r\n            user_module_config: UserModuleConfigComponent,\r\n            layout_config: LayoutModuleConfigComponent\r\n        };\r\n        this.configChanged = new EventEmitter();\r\n        this.currentComponent = null;\r\n    }\r\n    Object.defineProperty(DynamicConfigComponentSelectorComponent.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            if (!this.currentComponent)\r\n                return {};\r\n            return this.currentComponent.instance.formGroup.value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DynamicConfigComponentSelectorComponent.prototype, \"data\", {\r\n        set: /**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            if (!data || Object.keys(data).length == 0)\r\n                return;\r\n            if (!(data.type in this.typeMapToDiagram)) {\r\n                if (this.currentComponent)\r\n                    this.currentComponent.destroy();\r\n                return;\r\n            }\r\n            /** @type {?} */\r\n            var _component = this.typeMapToDiagram[data.type];\r\n            /** @type {?} */\r\n            var inputProviders = Object.keys(data.inputs).map(function (inputName) {\r\n                return { provide: inputName, useValue: (/** @type {?} */ (data.inputs))[inputName] };\r\n            });\r\n            /** @type {?} */\r\n            var resolvedInputs = ReflectiveInjector.resolve(inputProviders);\r\n            /** @type {?} */\r\n            var injector = ReflectiveInjector.fromResolvedProviders(resolvedInputs, this.dynamicComponentContainer.parentInjector);\r\n            /** @type {?} */\r\n            var factory = this.resolver.resolveComponentFactory(_component);\r\n            /** @type {?} */\r\n            var component = factory.create(injector);\r\n            // (<any>component.instance).configChanged.add.subscribe((data: any) => {\r\n            // \tthis.configChanged.emit(data);\r\n            // });\r\n            this.dynamicComponentContainer.insert(component.hostView);\r\n            if (this.currentComponent) {\r\n                this.currentComponent.destroy();\r\n            }\r\n            this.currentComponent = component;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DynamicConfigComponentSelectorComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    DynamicConfigComponentSelectorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"dynamic-config-component-selector\",\r\n                    template: \"<div #dynamicComponentContainer></div>\",\r\n                    styles: [\":host{width:100%}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}\"],\r\n                    entryComponents: [\r\n                        AuthenticationModuleConfigComponent,\r\n                        ConfigAppConfigComponent,\r\n                        UserModuleConfigComponent,\r\n                        LayoutModuleConfigComponent\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DynamicConfigComponentSelectorComponent.ctorParameters = function () { return [\r\n        { type: ComponentFactoryResolver }\r\n    ]; };\r\n    DynamicConfigComponentSelectorComponent.propDecorators = {\r\n        dynamicComponentContainer: [{ type: ViewChild, args: [\"dynamicComponentContainer\", { read: ViewContainerRef },] }],\r\n        configChanged: [{ type: Output }],\r\n        data: [{ type: Input }]\r\n    };\r\n    return DynamicConfigComponentSelectorComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ConfigEditComponent = /** @class */ (function () {\r\n    function ConfigEditComponent(configService, formBuilder, route) {\r\n        var _this = this;\r\n        this.configService = configService;\r\n        this.formBuilder = formBuilder;\r\n        this.route = route;\r\n        this.formGroup = EditConfigApiModel.Request.formGroup;\r\n        this.route.params.subscribe(function (params) {\r\n            /** @type {?} */\r\n            var configName = params[\"name\"];\r\n            _this.configService.getConfigByName(configName).subscribe(function (data) {\r\n                debugger;\r\n                _this.partialConfigModel = {\r\n                    type: data.Result.Name,\r\n                    inputs: {\r\n                        configFormGroup: /** @type {?} */ (_this.formGroup.controls[\"Config\"])\r\n                    }\r\n                };\r\n                _this.formGroup.patchValue({\r\n                    _id: data.Result._id,\r\n                    Name: data.Result.Name\r\n                });\r\n                Object.keys(data.Result.Config).forEach(function (key) {\r\n                    _this.addControl(/** @type {?} */ (_this.formGroup.controls[\"Config\"]), key, data.Result.Config[key]);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @param {?} formGroup\r\n     * @param {?} key\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    ConfigEditComponent.prototype.addControl = /**\r\n     * @param {?} formGroup\r\n     * @param {?} key\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (formGroup, key, value) {\r\n        if (value instanceof Array) {\r\n            formGroup.addControl(key, this.formBuilder.array(value));\r\n        }\r\n        else if (value instanceof Object) {\r\n            formGroup.addControl(key, this.formBuilder.group(value));\r\n        }\r\n        else {\r\n            formGroup.addControl(key, new FormControl(value));\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ConfigEditComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ConfigEditComponent.prototype.configChanged = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        console.log(\"-\");\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ConfigEditComponent.prototype.edit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.formGroup.controls[\"Config\"].patchValue(this.dynConfig.config);\r\n        if (!this.formGroup.valid)\r\n            return;\r\n        this.configService.editConfig(this.formGroup.value).subscribe(function (config) { });\r\n    };\r\n    ConfigEditComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"config-config-edit\",\r\n                    template: \"<form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"edit()\\\" fxLayout=\\\"column\\\">\\n  <dynamic-config-component-selector #dynConfig (configChanged)=\\\"configChanged($event)\\\" [data]=\\\"partialConfigModel\\\"></dynamic-config-component-selector>\\n  <button mat-fab  type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"edit\\\">\\n    <mat-icon>done</mat-icon>\\n  </button>\\n  <!-- <button  type=\\\"button\\\" routerLink=\\\"/configs\\\" mat-raised-button>\\u0628\\u0627\\u0632\\u06AF\\u0634\\u062A</button> -->\\n</form>\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ConfigEditComponent.ctorParameters = function () { return [\r\n        { type: ConfigService },\r\n        { type: FormBuilder },\r\n        { type: ActivatedRoute }\r\n    ]; };\r\n    ConfigEditComponent.propDecorators = {\r\n        dynConfig: [{ type: ViewChild, args: [\"dynConfig\",] }]\r\n    };\r\n    return ConfigEditComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ConfigModuleContainerComponent = /** @class */ (function () {\r\n    function ConfigModuleContainerComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ConfigModuleContainerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    ConfigModuleContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"config-module-container\",\r\n                    template: \"<div fxLayoutAlign=\\\"\\\" fxflex=\\\"100\\\" fxLayout=\\\"column\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ConfigModuleContainerComponent.ctorParameters = function () { return []; };\r\n    return ConfigModuleContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar LoadConfigEffects = /** @class */ (function () {\r\n    function LoadConfigEffects(actions$, configService) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.configService = configService;\r\n        this.getConfigs$ = this.actions$\r\n            .ofType(ConfigActionTypes.GET_CONFIGS)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (data) { return _this.configService.getConfigs(); }), map(function (configs) { return new ConfigLoadedSucceedAction(configs); }), catchError(function () { return of(new ConfigLoadedFailedAction()); }));\r\n    }\r\n    LoadConfigEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    LoadConfigEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: ConfigService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], LoadConfigEffects.prototype, \"getConfigs$\", void 0);\r\n    return LoadConfigEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar routes = [\r\n    {\r\n        path: \"configs\",\r\n        component: ConfigModuleContainerComponent,\r\n        children: [\r\n            {\r\n                path: \"\",\r\n                component: ConfigsComponent\r\n            },\r\n            {\r\n                path: \"edit/:name\",\r\n                component: ConfigEditComponent\r\n            }\r\n        ]\r\n    }\r\n];\r\n/** @type {?} */\r\nvar RoutingModule = RouterModule.forChild(routes);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NgsConfigModule = /** @class */ (function () {\r\n    function NgsConfigModule() {\r\n    }\r\n    /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    NgsConfigModule.forRoot = /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        return {\r\n            ngModule: RootNgsConfigModule,\r\n            providers: [{ provide: MODULE_CONFIG_TOKEN, useValue: config }]\r\n        };\r\n    };\r\n    NgsConfigModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        RouterModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule,\r\n                        HttpClientModule,\r\n                        FlexLayoutModule,\r\n                        MatIconModule,\r\n                        MatButtonModule,\r\n                        MatCardModule,\r\n                        MatSnackBarModule,\r\n                        MatSidenavModule,\r\n                        MatExpansionModule,\r\n                        MatSelectModule,\r\n                        MatFormFieldModule,\r\n                        MatListModule,\r\n                        MatMenuModule,\r\n                        MatRadioModule,\r\n                        MatInputModule,\r\n                        MatSlideToggleModule,\r\n                        MatToolbarModule,\r\n                        MatDatepickerModule,\r\n                        MatProgressBarModule,\r\n                        BrowserAnimationsModule\r\n                    ],\r\n                    declarations: [\r\n                        ConfigsComponent,\r\n                        ConfigEditComponent,\r\n                        ConfigAppConfigComponent,\r\n                        UserModuleConfigComponent,\r\n                        LayoutModuleConfigComponent,\r\n                        ConfigModuleContainerComponent,\r\n                        AuthenticationModuleConfigComponent,\r\n                        DynamicConfigComponentSelectorComponent\r\n                    ],\r\n                    providers: []\r\n                },] },\r\n    ];\r\n    return NgsConfigModule;\r\n}());\r\nvar RootNgsConfigModule = /** @class */ (function () {\r\n    function RootNgsConfigModule() {\r\n    }\r\n    RootNgsConfigModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        NgsConfigModule,\r\n                        StoreModule.forFeature(\"config\", ConfigReducers),\r\n                        EffectsModule.forFeature([LoadConfigEffects]),\r\n                        RoutingModule\r\n                    ],\r\n                    exports: [NgsConfigModule]\r\n                },] },\r\n    ];\r\n    return RootNgsConfigModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { ConfigService, ConfigModel, GetConfigsApiModel, EditConfigApiModel, MODULE_DEFAULT_CONFIG, MODULE_CONFIG_TOKEN, ConfigReducers, selectConfigState, getConfigListState, getConfigs$1 as getConfigs, getAppConfig$1 as getAppConfig, getAuthenticationModuleConfig$1 as getAuthenticationModuleConfig, getUserModuleConfig$1 as getUserModuleConfig, getConfigModuleConfig$1 as getConfigModuleConfig, getFormModuleConfig$1 as getFormModuleConfig, getSocketModuleConfig$1 as getSocketModuleConfig, NgsConfigModule, RootNgsConfigModule, RoutingModule as ɵu, ConfigAppConfigComponent as ɵn, AuthenticationModuleConfigComponent as ɵr, LayoutModuleConfigComponent as ɵp, UserModuleConfigComponent as ɵo, LoadConfigEffects as ɵt, Reducer as ɵa, getAppConfig as ɵc, getAuthenticationModuleConfig as ɵd, getConfigModuleConfig as ɵf, getConfigs as ɵb, getFormModuleConfig as ɵg, getSocketModuleConfig as ɵh, getUserModuleConfig as ɵe, ConfigurationService as ɵk, ConfigEditComponent as ɵm, ConfigModuleContainerComponent as ɵq, ConfigsComponent as ɵl, DynamicConfigComponentSelectorComponent as ɵs };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { InjectionToken, Component, Input, Injector, Output, EventEmitter, Injectable, Inject, NgModule, ComponentFactoryResolver, ViewChild, ViewContainerRef, ReflectiveInjector, defineInjectable, inject } from '@angular/core';\nimport { __decorate, __metadata, __assign } from 'tslib';\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { createSelector, createFeatureSelector, Store, StoreModule } from '@ngrx/store';\nimport { BehaviorSubject, Subject as Subject$1, of } from 'rxjs';\nimport { BehaviorSubject as BehaviorSubject$1 } from 'rxjs/BehaviorSubject';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs/Rx';\nimport { switchMap, map, takeUntil, filter, catchError } from 'rxjs/operators';\nimport { Observable as Observable$1 } from 'rxjs/Observable';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { Actions, Effect, EffectsModule } from '@ngrx/effects';\nimport { of as of$1 } from 'rxjs/observable/of';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatExpansionModule, MatSnackBarModule, MatIconModule, MatButtonModule, MatCardModule, MatTooltipModule, MatSelectModule, MatInputModule, MatFormFieldModule, MatTabsModule, MatRadioModule, MatCheckboxModule, MatGridListModule, MatSliderModule, MatAutocompleteModule } from '@angular/material';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar MODULE_DEFAULT_CONFIG = {\r\n    endpoints: {},\r\n    env: {\r\n        production: false,\r\n        frontend_server: \"frontend/server/did/not/set\"\r\n    }\r\n};\r\n/** @type {?} */\r\nvar MODULE_CONFIG_TOKEN = new InjectionToken(\"DiagramModuleConfig\");\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetDiagramsApiModel;\r\n(function (GetDiagramsApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = /** @type {?} */ ({}); }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {};\r\n        };\r\n        return Request;\r\n    }());\r\n    GetDiagramsApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    GetDiagramsApiModel.Response = Response;\r\n})(GetDiagramsApiModel || (GetDiagramsApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar DiagramsActionTypes = {\r\n    GET_DIAGRAM: \"[DIAGRAM] GET_DIAGRAM\",\r\n    GET_DIAGRAM_START: \"[DIAGRAM] GET_DIAGRAM_START\",\r\n    GET_DIAGRAM_SUCCEED: \"[DIAGRAM] GET_DIAGRAM_SUCCEED\",\r\n    GET_DIAGRAM_FAILED: \"[DIAGRAM] GET_DIAGRAM_FAILED\",\r\n};\r\nvar GetDiagramsStart = /** @class */ (function () {\r\n    function GetDiagramsStart() {\r\n        this.type = DiagramsActionTypes.GET_DIAGRAM_START;\r\n    }\r\n    return GetDiagramsStart;\r\n}());\r\nvar GetDiagramsSucceed = /** @class */ (function () {\r\n    function GetDiagramsSucceed(payload) {\r\n        this.payload = payload;\r\n        this.type = DiagramsActionTypes.GET_DIAGRAM_SUCCEED;\r\n    }\r\n    return GetDiagramsSucceed;\r\n}());\r\nvar GetDiagramsFailed = /** @class */ (function () {\r\n    function GetDiagramsFailed() {\r\n        this.type = DiagramsActionTypes.GET_DIAGRAM_FAILED;\r\n    }\r\n    return GetDiagramsFailed;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nconsole.log(GetDiagramsApiModel);\r\n/** @type {?} */\r\nvar initialState = {\r\n    loaded: false,\r\n    diagram: {\r\n        Result: []\r\n    }\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction diagramReducer(state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    switch (action.type) {\r\n        case DiagramsActionTypes.GET_DIAGRAM: {\r\n            return __assign({}, state, { loaded: true });\r\n        }\r\n        case DiagramsActionTypes.GET_DIAGRAM_START: {\r\n            return __assign({}, state, { loaded: true });\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar EditDiagramApiModel;\r\n(function (EditDiagramApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(params) {\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestQueryParams = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {};\r\n        };\r\n        Object.defineProperty(Request, \"formGroup\", {\r\n            // TODO:\r\n            get: /**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                return new FormGroup({\r\n                    Name: new FormControl(\"\", [Validators.required]),\r\n                    IsActive: new FormControl(\"true\", [Validators.required]),\r\n                    Route: new FormControl(\"\", [Validators.required])\r\n                });\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Request;\r\n    }());\r\n    EditDiagramApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    EditDiagramApiModel.Response = Response;\r\n})(EditDiagramApiModel || (EditDiagramApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar EditDiagramActionTypes = {\r\n    EDIT_DIAGRAM: \"[DIAGRAM][EDIT] EDIT_DIAGRAM\",\r\n    EDIT_DIAGRAM_START: \"[DIAGRAM][EDIT] EDIT_DIAGRAM_START\",\r\n    EDIT_DIAGRAM_SUCCEED: \"[DIAGRAM][EDIT] EDIT_DIAGRAM_SUCCEED\",\r\n    EDIT_DIAGRAM_FAILED: \"[DIAGRAM][EDIT] EDIT_DIAGRAM_FAILED\",\r\n};\r\nvar EditDiagramAction = /** @class */ (function () {\r\n    function EditDiagramAction(payload) {\r\n        this.payload = payload;\r\n        this.type = EditDiagramActionTypes.EDIT_DIAGRAM;\r\n    }\r\n    return EditDiagramAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nconsole.log(EditDiagramApiModel);\r\n/** @type {?} */\r\nvar initialState$1 = {\r\n    status: \"pristine\",\r\n    data: /** @type {?} */ ({ Result: {} })\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction Reducer(state, action) {\r\n    if (state === void 0) { state = initialState$1; }\r\n    switch (action.type) {\r\n        case EditDiagramActionTypes.EDIT_DIAGRAM: {\r\n            return __assign({}, state, { status: \"dirty\", data: new EditDiagramApiModel.Response() });\r\n        }\r\n        case EditDiagramActionTypes.EDIT_DIAGRAM_START: {\r\n            return __assign({}, state, { status: \"pending\", data: new EditDiagramApiModel.Response() });\r\n        }\r\n        case EditDiagramActionTypes.EDIT_DIAGRAM_SUCCEED: {\r\n            return __assign({}, state, { status: \"succeed\" });\r\n        }\r\n        case EditDiagramActionTypes.EDIT_DIAGRAM_FAILED: {\r\n            return __assign({}, state, { status: \"failed\" });\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar initialState$2 = {\r\n    route: \"\",\r\n    result: false\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction ParentGuardReducer(state, action) {\r\n    if (state === void 0) { state = initialState$2; }\r\n    switch (action.type) {\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar DiagramReducers = {\r\n    diagrams: diagramReducer,\r\n    editDiagram: Reducer,\r\n    parentGuard: ParentGuardReducer\r\n};\r\n/** @type {?} */\r\nvar selectFeatureState = createFeatureSelector(\"diagram\");\r\n/** @type {?} */\r\nvar selectEditDiagramState = createSelector(selectFeatureState, function (state) { return state.editDiagram; });\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ServerStatusDiagramComponent = /** @class */ (function () {\r\n    function ServerStatusDiagramComponent(injector) {\r\n        this.injector = injector;\r\n        this.dataLoaded = new BehaviorSubject(false);\r\n        this.data = this.injector.get(\"data\");\r\n    }\r\n    Object.defineProperty(ServerStatusDiagramComponent.prototype, \"data\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._data;\r\n        },\r\n        set: /**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            this._data = data;\r\n            this.dataLoaded.next(true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    ServerStatusDiagramComponent.prototype.timeChange = /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    function (e) {\r\n        // this.dataSubscribtion.unsubscribe();\r\n        // this.dataSubscribtion = this.diagramService.getData(this.data.Source._id, this.data.Source.Interval)\r\n        //   .subscribe(data => {\r\n        //     debugger\r\n        //     this.chart.load({\r\n        //       columns: this.diagramService.extract_columns_from_data(data, this.data.Chart.ColumnMappings)\r\n        //     });\r\n        //   })\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ServerStatusDiagramComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    ServerStatusDiagramComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"diagram-server-status\",\r\n                    template: \"<div *ngIf=\\\"dataLoaded | async\\\">\\n  <!-- <mat-icon [ngClass]=\\\"dataStatus$ ? 'connected' : 'disconnected'\\\">\\n    fiber_manual_record\\n  </mat-icon> -->\\n  <!-- <span *ngIf=\\\"dataStatus$\\\">{{data.Widget.booleano.SuccessMessage}}</span>\\n  <span *ngIf=\\\"!dataStatus$\\\">{{data.Widget.booleano.FailureMessage}}</span> -->\\n</div>\",\r\n                    styles: [\".disconnected{color:#ba3030}.connected{color:#30ae1c}.numeric{font-size:2.4em;line-height:1.8}.numeric.title{font-family:iran-sans-bold,Tahoma;font-size:1.1em}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ServerStatusDiagramComponent.ctorParameters = function () { return [\r\n        { type: Injector }\r\n    ]; };\r\n    ServerStatusDiagramComponent.propDecorators = {\r\n        data: [{ type: Input }]\r\n    };\r\n    return ServerStatusDiagramComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DiagramPartialConfigEditComponent = /** @class */ (function () {\r\n    function DiagramPartialConfigEditComponent(injector) {\r\n        this.injector = injector;\r\n        this.dataLoaded = new BehaviorSubject$1(false);\r\n        this.formGroup = this.injector.get(\"formGroup\");\r\n        this.diagramService = this.injector.get(\"diagramService\");\r\n    }\r\n    Object.defineProperty(DiagramPartialConfigEditComponent.prototype, \"data\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._data;\r\n        },\r\n        set: /**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            this._data = data;\r\n            this.dataLoaded.next(true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DiagramPartialConfigEditComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n        //   .subscribe(data => {\r\n        //     debugger;\r\n        //   });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DiagramPartialConfigEditComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.dataSubscribtion.unsubscribe();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DiagramPartialConfigEditComponent.prototype.configChanged = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    DiagramPartialConfigEditComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"diagram-partial-config-edit\",\r\n                    template: \"<form [formGroup]=\\\"formGroup\\\" fxLayout='column'>\\n  <div>\\n    <mat-checkbox (change)=\\\"configChanged()\\\" formControlName=\\\"Legend\\\" fxFlexFill>\\u0646\\u0645\\u0627\\u06CC\\u0634 \\u062A\\u0648\\u0636\\u06CC\\u062D\\u0627\\u062A</mat-checkbox>\\n  </div>\\n  <div>\\n    <mat-checkbox (change)=\\\"configChanged()\\\" formControlName=\\\"Zoom\\\" fxFlexFill>\\u0628\\u0632\\u0631\\u06AF\\u0646\\u0645\\u0627\\u06CC\\u06CC</mat-checkbox>\\n  </div>\\n  <div>\\n    <mat-checkbox (change)=\\\"configChanged()\\\" formControlName=\\\"Subchart\\\" fxFlexFill>\\u0646\\u0645\\u0627\\u06CC\\u0634 \\u0628\\u0632\\u0631\\u06AF\\u0646\\u0645\\u0627\\u06CC\\u06CC \\u062F\\u0631 \\u0632\\u06CC\\u0631 \\u0646\\u0645\\u0648\\u062F\\u0627\\u0631</mat-checkbox>\\n  </div>\\n  <div>\\n    <mat-checkbox (change)=\\\"configChanged()\\\" formControlName=\\\"Tooltip\\\" fxFlexFill>\\u0646\\u0645\\u0627\\u06CC\\u0634 \\u062A\\u0648\\u0636\\u06CC\\u062D\\u0627\\u062A \\u0628\\u0647 \\u0635\\u0648\\u0631\\u062A \\u06AF\\u0631\\u0648\\u0647\\u06CC</mat-checkbox>\\n  </div>\\n</form>\",\r\n                    styles: [\":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DiagramPartialConfigEditComponent.ctorParameters = function () { return [\r\n        { type: Injector }\r\n    ]; };\r\n    DiagramPartialConfigEditComponent.propDecorators = {\r\n        data: [{ type: Input }]\r\n    };\r\n    return DiagramPartialConfigEditComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar PieDiagramPartialConfigComponent = /** @class */ (function () {\r\n    function PieDiagramPartialConfigComponent(injector) {\r\n        this.injector = injector;\r\n        this.ConfigChanged = new EventEmitter();\r\n        this.dataLoaded = new BehaviorSubject$1(false);\r\n        this.formGroup = this.injector.get(\"formGroup\");\r\n        this.diagramService = this.injector.get(\"diagramService\");\r\n        this.donutFormGroup = /** @type {?} */ (this.formGroup.controls[\"donut\"]);\r\n    }\r\n    Object.defineProperty(PieDiagramPartialConfigComponent.prototype, \"formGroup\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._dataLoaded;\r\n        },\r\n        set: /**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            if (!data)\r\n                return;\r\n            this._dataLoaded = data;\r\n            this.dataLoaded.next(true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PieDiagramPartialConfigComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n        //   .subscribe(data => {\r\n        //     debugger;\r\n        //   });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PieDiagramPartialConfigComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.dataSubscribtion.unsubscribe();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PieDiagramPartialConfigComponent.prototype.configChanged = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ConfigChanged.emit();\r\n    };\r\n    PieDiagramPartialConfigComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"pie-diagram-partial-config\",\r\n                    template: \"<div *ngIf=\\\"dataLoaded | async\\\" class=\\\"diagram-box\\\">\\n  <form [formGroup]=\\\"formGroup\\\" fxLayout='column'>\\n    <div>\\n      <mat-checkbox (change)=\\\"configChanged()\\\" formControlName=\\\"Legend\\\" fxFlexFill>\\u0646\\u0645\\u0627\\u06CC\\u0634 \\u062A\\u0648\\u0636\\u06CC\\u062D\\u0627\\u062A</mat-checkbox>\\n    </div>\\n    <div>\\n      <mat-checkbox (change)=\\\"configChanged()\\\" formControlName=\\\"IsActive\\\" fxFlexFill>\\u0648\\u0636\\u0639\\u06CC\\u062A</mat-checkbox>\\n    </div>\\n    <div>\\n      <mat-checkbox (change)=\\\"configChanged()\\\" formControlName=\\\"Legend\\\" fxFlexFill>\\u0646\\u0645\\u0627\\u06CC\\u0634 \\u062A\\u0648\\u0636\\u06CC\\u062D\\u0627\\u062A</mat-checkbox>\\n    </div>\\n    <div>\\n      <mat-checkbox (change)=\\\"configChanged()\\\" formControlName=\\\"IsActive\\\" fxFlexFill>\\u0648\\u0636\\u0639\\u06CC\\u062A</mat-checkbox>\\n    </div>\\n  </form>\\n  <form [formGroup]=\\\"donutFormGroup\\\">\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"\\u0639\\u0646\\u0648\\u0627\\u0646\\\" formControlName=\\\"title\\\">\\n    </mat-form-field>\\n  </form>\\n</div>\",\r\n                    styles: [\":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PieDiagramPartialConfigComponent.ctorParameters = function () { return [\r\n        { type: Injector }\r\n    ]; };\r\n    PieDiagramPartialConfigComponent.propDecorators = {\r\n        ConfigChanged: [{ type: Output }],\r\n        formGroup: [{ type: Input }]\r\n    };\r\n    return PieDiagramPartialConfigComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar BooleanoWidgetPartialConfigComponent = /** @class */ (function () {\r\n    function BooleanoWidgetPartialConfigComponent(injector) {\r\n        this.injector = injector;\r\n        this.dataLoaded = new BehaviorSubject$1(false);\r\n        this.formGroup = this.injector.get(\"formGroup\");\r\n        this.diagramService = this.injector.get(\"diagramService\");\r\n        this.booleanoFormGroup = /** @type {?} */ (this.formGroup.controls[\"booleano\"]);\r\n    }\r\n    Object.defineProperty(BooleanoWidgetPartialConfigComponent.prototype, \"formGroup\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._dataLoaded;\r\n        },\r\n        set: /**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            if (!data)\r\n                return;\r\n            this._dataLoaded = data;\r\n            this.dataLoaded.next(true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    BooleanoWidgetPartialConfigComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n        //   .subscribe(data => {\r\n        //     debugger;\r\n        //   });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    BooleanoWidgetPartialConfigComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.dataSubscribtion.unsubscribe();\r\n    };\r\n    BooleanoWidgetPartialConfigComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"booleano-widget-partial-config\",\r\n                    template: \"<div *ngIf=\\\"dataLoaded | async\\\" class=\\\"diagram-box\\\">\\n  <form [formGroup]=\\\"booleanoFormGroup\\\">\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"\\u0639\\u0646\\u0648\\u0627\\u0646\\\" formControlName=\\\"SuccessMessage\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"\\u0639\\u0646\\u0648\\u0627\\u0646\\\" formControlName=\\\"FailureMessage\\\">\\n    </mat-form-field>\\n  </form>\\n</div>\",\r\n                    styles: [\":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    BooleanoWidgetPartialConfigComponent.ctorParameters = function () { return [\r\n        { type: Injector }\r\n    ]; };\r\n    BooleanoWidgetPartialConfigComponent.propDecorators = {\r\n        formGroup: [{ type: Input }]\r\n    };\r\n    return BooleanoWidgetPartialConfigComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NumericWidgetPartialConfigComponent = /** @class */ (function () {\r\n    function NumericWidgetPartialConfigComponent(injector) {\r\n        this.injector = injector;\r\n        this.dataLoaded = new BehaviorSubject$1(false);\r\n        this.formGroup = this.injector.get(\"formGroup\");\r\n        this.diagramService = this.injector.get(\"diagramService\");\r\n        this.donutFormGroup = /** @type {?} */ (this.formGroup.controls[\"donut\"]);\r\n    }\r\n    Object.defineProperty(NumericWidgetPartialConfigComponent.prototype, \"formGroup\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._dataLoaded;\r\n        },\r\n        set: /**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            if (!data)\r\n                return;\r\n            this._dataLoaded = data;\r\n            this.dataLoaded.next(true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NumericWidgetPartialConfigComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n        //   .subscribe(data => {\r\n        //     debugger;\r\n        //   });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NumericWidgetPartialConfigComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.dataSubscribtion.unsubscribe();\r\n    };\r\n    NumericWidgetPartialConfigComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"numeric-widget-partial-config\",\r\n                    template: \"<div *ngIf=\\\"dataLoaded | async\\\" class=\\\"diagram-box\\\">\\n  <form [formGroup]=\\\"donutFormGroup\\\">\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"\\u0639\\u0646\\u0648\\u0627\\u0646\\\" formControlName=\\\"title\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"\\u0639\\u0646\\u0648\\u0627\\u0646\\\" formControlName=\\\"title\\\">\\n    </mat-form-field>\\n  </form>\\n</div>\",\r\n                    styles: [\":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NumericWidgetPartialConfigComponent.ctorParameters = function () { return [\r\n        { type: Injector }\r\n    ]; };\r\n    NumericWidgetPartialConfigComponent.propDecorators = {\r\n        formGroup: [{ type: Input }]\r\n    };\r\n    return NumericWidgetPartialConfigComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar LinearDiagramPartialConfigComponent = /** @class */ (function () {\r\n    function LinearDiagramPartialConfigComponent(injector) {\r\n        this.injector = injector;\r\n        this.dataLoaded = new BehaviorSubject$1(false);\r\n        this.ConfigChanged = new EventEmitter();\r\n        this.formGroup = this.injector.get(\"formGroup\");\r\n        this.diagramService = this.injector.get(\"diagramService\");\r\n    }\r\n    Object.defineProperty(LinearDiagramPartialConfigComponent.prototype, \"data\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._data;\r\n        },\r\n        set: /**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            this._data = data;\r\n            this.dataLoaded.next(true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LinearDiagramPartialConfigComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n        //   .subscribe(data => {\r\n        //     debugger;\r\n        //   });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LinearDiagramPartialConfigComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.dataSubscribtion.unsubscribe();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LinearDiagramPartialConfigComponent.prototype.configChanged = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.ConfigChanged.emit();\r\n    };\r\n    LinearDiagramPartialConfigComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"linear-diagram-partial-config\",\r\n                    template: \"<form [formGroup]=\\\"formGroup\\\" fxLayout='column'>\\n  <div>\\n    <mat-checkbox (change)=\\\"configChanged()\\\" formControlName=\\\"Legend\\\" fxFlexFill>\\u0646\\u0645\\u0627\\u06CC\\u0634 \\u062A\\u0648\\u0636\\u06CC\\u062D\\u0627\\u062A</mat-checkbox>\\n  </div>\\n  <div>\\n    <mat-checkbox (change)=\\\"configChanged()\\\" formControlName=\\\"Zoom\\\" fxFlexFill>\\u0628\\u0632\\u0631\\u06AF\\u0646\\u0645\\u0627\\u06CC\\u06CC</mat-checkbox>\\n  </div>\\n  <div>\\n    <mat-checkbox (change)=\\\"configChanged()\\\" formControlName=\\\"Subchart\\\" fxFlexFill>\\u0646\\u0645\\u0627\\u06CC\\u0634 \\u0628\\u0632\\u0631\\u06AF\\u0646\\u0645\\u0627\\u06CC\\u06CC \\u062F\\u0631 \\u0632\\u06CC\\u0631 \\u0646\\u0645\\u0648\\u062F\\u0627\\u0631</mat-checkbox>\\n  </div>\\n  <div>\\n    <mat-checkbox (change)=\\\"configChanged()\\\" formControlName=\\\"Tooltip\\\" fxFlexFill>\\u0646\\u0645\\u0627\\u06CC\\u0634 \\u062A\\u0648\\u0636\\u06CC\\u062D\\u0627\\u062A \\u0628\\u0647 \\u0635\\u0648\\u0631\\u062A \\u06AF\\u0631\\u0648\\u0647\\u06CC</mat-checkbox>\\n  </div>\\n  <div>\\n    <mat-checkbox (change)=\\\"configChanged()\\\" formControlName=\\\"Flow\\\" fxFlexFill>Flow</mat-checkbox>\\n  </div>\\n</form>\",\r\n                    styles: [\":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    LinearDiagramPartialConfigComponent.ctorParameters = function () { return [\r\n        { type: Injector }\r\n    ]; };\r\n    LinearDiagramPartialConfigComponent.propDecorators = {\r\n        data: [{ type: Input }],\r\n        ConfigChanged: [{ type: Output }]\r\n    };\r\n    return LinearDiagramPartialConfigComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ServerConnectingTimeDiagramComponent = /** @class */ (function () {\r\n    function ServerConnectingTimeDiagramComponent(injector) {\r\n        var _this = this;\r\n        this.injector = injector;\r\n        this.time = 0;\r\n        this.dataLoaded = new BehaviorSubject(false);\r\n        this.data = this.injector.get(\"data\");\r\n        setInterval(function () {\r\n            _this.time = _this.time + 1;\r\n        }, 1000);\r\n    }\r\n    Object.defineProperty(ServerConnectingTimeDiagramComponent.prototype, \"data\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._data;\r\n        },\r\n        set: /**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            this._data = data;\r\n            this.dataLoaded.next(true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ServerConnectingTimeDiagramComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    ServerConnectingTimeDiagramComponent.prototype.timeChange = /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    function (e) {\r\n        // this.dataSubscribtion.unsubscribe();\r\n        // this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route, this.data.Source.Sync)\r\n        //         .subscribe(data => {\r\n        //                 this.chart.load({\r\n        //                         columns: this.diagramService.extract_columns_from_data(data, this.data.Chart.ColumnMappings)\r\n        //                 });\r\n        //         })\r\n    };\r\n    ServerConnectingTimeDiagramComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"diagram-server-connecting-time\",\r\n                    template: \"<div *ngIf=\\\"dataLoaded | async\\\">\\n  <div fxLayoutAlign=\\\"center center\\\" class=\\\"numeric title\\\">{{data.Description}}</div>\\n  <!-- <div fxLayoutAlign=\\\"center center\\\" class=\\\"numeric\\\">{{time | timeCounter}}</div> -->\\n  <div [id]=\\\"'diagram_' + data._id\\\"></div>\\n</div>\",\r\n                    styles: [\".numeric{font-size:2.4em;line-height:1.8}.numeric.title{font-family:iran-sans-bold,Tahoma;font-size:1.1em}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ServerConnectingTimeDiagramComponent.ctorParameters = function () { return [\r\n        { type: Injector }\r\n    ]; };\r\n    ServerConnectingTimeDiagramComponent.propDecorators = {\r\n        time: [{ type: Input }],\r\n        data: [{ type: Input }]\r\n    };\r\n    return ServerConnectingTimeDiagramComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DiagramConfigurationService = /** @class */ (function () {\r\n    function DiagramConfigurationService(config) {\r\n        this._config = Object.assign({}, MODULE_DEFAULT_CONFIG, config);\r\n    }\r\n    Object.defineProperty(DiagramConfigurationService.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._config;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DiagramConfigurationService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DiagramConfigurationService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [MODULE_CONFIG_TOKEN,] }] }\r\n    ]; };\r\n    /** @nocollapse */ DiagramConfigurationService.ngInjectableDef = defineInjectable({ factory: function DiagramConfigurationService_Factory() { return new DiagramConfigurationService(inject(MODULE_CONFIG_TOKEN)); }, token: DiagramConfigurationService, providedIn: \"root\" });\r\n    return DiagramConfigurationService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar AddDiagramApiModel;\r\n(function (AddDiagramApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = /** @type {?} */ ({}); }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {\r\n                _id: this._id,\r\n                Name: this.Name,\r\n                IsActive: this.IsActive,\r\n                Source: this.Source,\r\n                Type: this.Type,\r\n                Groups: this.Groups,\r\n                Widget: {\r\n                    booleano: this.booleano\r\n                },\r\n                Chart: {\r\n                    data: {\r\n                        type: this.Type,\r\n                        columns: this.columns,\r\n                        colors: this.Colors,\r\n                        types: this.Types\r\n                    },\r\n                    ColumnMappings: this.ColumnMappings,\r\n                    Flow: this.Flow,\r\n                    legend: {\r\n                        show: this.Legend\r\n                    },\r\n                    subchart: {\r\n                        show: this.Subchart\r\n                    },\r\n                    zoom: {\r\n                        enabled: this.Zoom\r\n                    },\r\n                    tooltip: {\r\n                        grouped: this.Tooltip\r\n                    }\r\n                },\r\n                Box: {\r\n                    Cols: this.Cols,\r\n                    Rows: this.Rows,\r\n                    TextColor: this.TextColor,\r\n                    BackgroundColor: this.BackgroundColor\r\n                }\r\n            };\r\n        };\r\n        Object.defineProperty(Request, \"formGroup\", {\r\n            get: /**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                return new FormGroup({\r\n                    _id: new FormControl(\"\", []),\r\n                    Name: new FormControl(\"\", [Validators.required]),\r\n                    Sync: new FormControl(0, [Validators.required]),\r\n                    IsActive: new FormControl(\"true\", [Validators.required]),\r\n                    Type: new FormControl(\"pie\", [Validators.required]),\r\n                    Groups: new FormControl(\"\", [Validators.required]),\r\n                    Legend: new FormControl(\"true\", [Validators.required]),\r\n                    Subchart: new FormControl(\"false\", [Validators.required]),\r\n                    Zoom: new FormControl(\"false\", [Validators.required]),\r\n                    Tooltip: new FormControl(\"false\", [Validators.required]),\r\n                    Route: new FormControl(\"\", [Validators.required]),\r\n                    Source: new FormControl({}, [Validators.required]),\r\n                    columns: new FormControl(\"\", [Validators.required]),\r\n                    Cols: new FormControl(1, [Validators.required]),\r\n                    Rows: new FormControl(1, [Validators.required]),\r\n                    TextColor: new FormControl(\"#000000\", [Validators.required]),\r\n                    BackgroundColor: new FormControl(\"#ffffff\", [Validators.required]),\r\n                    Colors: new FormGroup({}),\r\n                    Types: new FormGroup({}),\r\n                    ColumnMappings: new FormArray([]),\r\n                    Flow: new FormControl(true),\r\n                    donut: new FormGroup({\r\n                        title: new FormControl(\"Default Title\")\r\n                    }),\r\n                    booleano: new FormGroup({\r\n                        SuccessMessage: new FormControl(\"SuccessMessage\"),\r\n                        FailureMessage: new FormControl(\"FailureMessage\")\r\n                    })\r\n                });\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Request;\r\n    }());\r\n    AddDiagramApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    AddDiagramApiModel.Response = Response;\r\n})(AddDiagramApiModel || (AddDiagramApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DiagramService = /** @class */ (function () {\r\n    function DiagramService(http, store, configurationService) {\r\n        this.http = http;\r\n        this.store = store;\r\n        this.configurationService = configurationService;\r\n        // TODO: implement interface of c3 config\r\n        this.charts = {};\r\n        this.config = this.configurationService.config;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DiagramService.prototype.getDiagrams = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.http\r\n            .get(this.config.env.frontend_server + \"/api/diagram\")\r\n            .map(function (response) { return response; })\r\n            .catch(function (err) {\r\n            return Observable.throw(err);\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DiagramService.prototype.getSources = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.http\r\n            .get(this.config.env.frontend_server + \"/api/source\")\r\n            .map(function (response) { return (/** @type {?} */ (response)).Result; })\r\n            .catch(function (err) {\r\n            return Observable.throw(err);\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DiagramService.prototype.getGroups = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.http\r\n            .get(this.config.env.frontend_server + \"/api/diagram/groups\")\r\n            .map(function (response) { return (/** @type {?} */ (response)).Result; })\r\n            .catch(function (err) {\r\n            return Observable.throw(err);\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    DiagramService.prototype.getDiagram = /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (id) {\r\n        if (!id)\r\n            debugger;\r\n        return this.http\r\n            .get(this.config.env.frontend_server + (\"/api/diagram/\" + id))\r\n            .map(function (response) { return response; })\r\n            .catch(function (err) {\r\n            return Observable.throw(err);\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    DiagramService.prototype.addDiagram = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        /** @type {?} */\r\n        var model = new AddDiagramApiModel.Request(data);\r\n        return this.http\r\n            .post(this.config.env.frontend_server + \"/api/diagram\", model.getRequestBody())\r\n            .map(function (response) { return response; })\r\n            .catch(function (err) {\r\n            return Observable.throw(err);\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} body\r\n     * @return {?}\r\n     */\r\n    DiagramService.prototype.updateDiagram = /**\r\n     * @param {?} body\r\n     * @return {?}\r\n     */\r\n    function (body) {\r\n        return this.http\r\n            .put(this.config.env.frontend_server + \"/api/diagram\", body)\r\n            .map(function (response) { return response; })\r\n            .catch(function (err) {\r\n            return Observable.throw(err);\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    DiagramService.prototype.deleteDiagram = /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (id) {\r\n        return this.http\r\n            .delete(this.config.env.frontend_server + \"/api/diagram/\" + id)\r\n            .map(function (response) { return response; })\r\n            .catch(function (err) {\r\n            return Observable.throw(err);\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} source\r\n     * @param {?} unsubscribe\r\n     * @param {?=} time\r\n     * @param {?=} once\r\n     * @return {?}\r\n     */\r\n    DiagramService.prototype.getData = /**\r\n     * @param {?} source\r\n     * @param {?} unsubscribe\r\n     * @param {?=} time\r\n     * @param {?=} once\r\n     * @return {?}\r\n     */\r\n    function (source, unsubscribe, time, once) {\r\n        var _this = this;\r\n        if (time === void 0) { time = 0; }\r\n        if (once === void 0) { once = false; }\r\n        if (once && time !== 0) {\r\n            return this.http\r\n                .get(this.config.env.frontend_server + \"/api/data\", {\r\n                params: {\r\n                    sourceId: source._id,\r\n                    time: this.getFloorTime(source.Interval, time).toString()\r\n                }\r\n            })\r\n                .map(function (res) { return res.Result; });\r\n        }\r\n        else if (source.Interval == 0) {\r\n            return this.http\r\n                .get(this.config.env.frontend_server + \"/api/data\", {\r\n                params: {\r\n                    sourceId: source._id,\r\n                    time: null\r\n                }\r\n            })\r\n                .map(function (res) { return res.Result; });\r\n        }\r\n        else {\r\n            time = time || Date.now();\r\n            return Observable.timer(0, source.Interval).pipe(takeUntil(unsubscribe), switchMap(function (i) {\r\n                return _this.http\r\n                    .get(_this.config.env.frontend_server + \"/api/data\", {\r\n                    params: {\r\n                        sourceId: source._id,\r\n                        time: _this.getFloorTime(source.Interval, time).toString()\r\n                    }\r\n                }).pipe(map(function (res) { return res.Result; }));\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @param {?} columnsMappings\r\n     * @return {?}\r\n     */\r\n    DiagramService.prototype.extract_columns_from_data = /**\r\n     * @param {?} data\r\n     * @param {?} columnsMappings\r\n     * @return {?}\r\n     */\r\n    function (data, columnsMappings) {\r\n        /** @type {?} */\r\n        var res = [];\r\n        columnsMappings.forEach(function (item) {\r\n            /** @type {?} */\r\n            var ValueData = _.getValue(data, item.ValuePath);\r\n            if (!item.NamePath) {\r\n                return res.push([item.ValuePath.split(\".\").pop()].concat(ValueData));\r\n            }\r\n            /** @type {?} */\r\n            var NameData = _.getValue(data, item.NamePath);\r\n            if (_.is.array(NameData)) {\r\n                return (res = res.concat(NameData.map(function (_item, i) { return [_item].concat(ValueData[i]); })));\r\n            }\r\n            else {\r\n                return res.push([NameData].concat(ValueData));\r\n            }\r\n        });\r\n        return res;\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    DiagramService.prototype.get_data_report = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        return _.report(data);\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    DiagramService.prototype.get_last_node_of_data = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        return (/** @type {?} */ (_.report(data))).filter(function (item) { return item.isLastNode; });\r\n    };\r\n    /**\r\n     * @param {?} columns\r\n     * @return {?}\r\n     */\r\n    DiagramService.prototype.buildChartConfig = /**\r\n     * @param {?} columns\r\n     * @return {?}\r\n     */\r\n    function (columns) {\r\n        return {\r\n            data: {\r\n                columns: columns\r\n            },\r\n            legend: {\r\n                show: true\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * @param {?} config\r\n     * @param {?} id\r\n     * @param {?} route\r\n     * @param {?} sync\r\n     * @return {?}\r\n     */\r\n    DiagramService.prototype.generateDiagram = /**\r\n     * @param {?} config\r\n     * @param {?} id\r\n     * @param {?} route\r\n     * @param {?} sync\r\n     * @return {?}\r\n     */\r\n    function (config, id, route, sync) {\r\n        var _this = this;\r\n        this.charts[id] = c3.generate(__assign({}, config, { bindto: \"#diagram_\" + id }));\r\n        return this.getData(/** @type {?} */ ({}), new Subject(), sync).subscribe(function (data) {\r\n            _this.charts[id].load({\r\n                columns: _this.extract_columns_from_data(data.Data, config.ColumnMappings)\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {?=} precision\r\n     * @param {?=} time\r\n     * @return {?}\r\n     */\r\n    DiagramService.prototype.getFloorTime = /**\r\n     * @param {?=} precision\r\n     * @param {?=} time\r\n     * @return {?}\r\n     */\r\n    function (precision, time) {\r\n        if (precision === void 0) { precision = 60 * 1000; }\r\n        if (time === void 0) { time = 0; }\r\n        return Math.floor((time || Date.now()) / precision);\r\n    };\r\n    DiagramService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DiagramService.ctorParameters = function () { return [\r\n        { type: HttpClient },\r\n        { type: Store },\r\n        { type: DiagramConfigurationService }\r\n    ]; };\r\n    /** @nocollapse */ DiagramService.ngInjectableDef = defineInjectable({ factory: function DiagramService_Factory() { return new DiagramService(inject(HttpClient), inject(Store), inject(DiagramConfigurationService)); }, token: DiagramService, providedIn: \"root\" });\r\n    return DiagramService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NumericEditDiagramComponent = /** @class */ (function () {\r\n    function NumericEditDiagramComponent(injector, diagramService) {\r\n        this.injector = injector;\r\n        this.diagramService = diagramService;\r\n        this.unsubscribe = new Subject$1();\r\n        this.dataLoaded = new BehaviorSubject$1(false);\r\n        this.data = this.injector.get(\"data\");\r\n    }\r\n    Object.defineProperty(NumericEditDiagramComponent.prototype, \"data\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._data;\r\n        },\r\n        set: /**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            this._data = data;\r\n            this.dataLoaded.next(true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NumericEditDiagramComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n        this.diagramService.getData(this.data.Source, this.unsubscribe).pipe(filter(function (data) { return data != undefined; }), takeUntil(this.unsubscribe)).subscribe(function (data) {\r\n            debugger;\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NumericEditDiagramComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.dataSubscribtion.unsubscribe();\r\n        debugger;\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    };\r\n    NumericEditDiagramComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"numeric-edit-diagram\",\r\n                    template: \"<mat-card *ngIf=\\\"dataLoaded | async\\\" class=\\\"diagram-box\\\">\\n  <mat-card-header>\\n    <mat-card-title fxLayoutAlign=\\\"space-between center\\\">\\n    </mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n  </mat-card-content>\\n</mat-card>\",\r\n                    styles: [\":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NumericEditDiagramComponent.ctorParameters = function () { return [\r\n        { type: Injector },\r\n        { type: DiagramService }\r\n    ]; };\r\n    NumericEditDiagramComponent.propDecorators = {\r\n        data: [{ type: Input }]\r\n    };\r\n    return NumericEditDiagramComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NumericDiagramComponent = /** @class */ (function () {\r\n    function NumericDiagramComponent(injector, diagramService) {\r\n        this.injector = injector;\r\n        this.diagramService = diagramService;\r\n        this.unsubscribe = new Subject$1();\r\n        this.dataLoaded = new BehaviorSubject$1(false);\r\n        this.data = this.injector.get(\"data\");\r\n        this.counter = 0;\r\n    }\r\n    Object.defineProperty(NumericDiagramComponent.prototype, \"data\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._data;\r\n        },\r\n        set: /**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            this._data = data;\r\n            this.dataLoaded.next(true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NumericDiagramComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.dataSubscribtion = this.diagramService.getData(this.data.Source, this.unsubscribe).pipe(takeUntil(this.unsubscribe)).subscribe(function (data) {\r\n            /** @type {?} */\r\n            var counter = _this.diagramService.extract_columns_from_data(data.Data, _this.data.Chart.ColumnMappings);\r\n            _this.counter = counter[0][1];\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NumericDiagramComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.dataSubscribtion.unsubscribe();\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    };\r\n    NumericDiagramComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"diagram-numeric\",\r\n                    template: \"<div *ngIf=\\\"dataLoaded | async\\\">\\n  <!-- <div fxLayoutAlign=\\\"center center\\\" class=\\\"numeric\\\">{{data.Source.Data | json}}</div> -->\\n  <div fxLayoutAlign=\\\"center center\\\" class=\\\"numeric\\\">{{counter}}</div>\\n  <div [id]=\\\"'diagram_' + data._id\\\"></div>\\n</div>\",\r\n                    styles: [\":host{width:100%}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}.mat-card{padding:0}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NumericDiagramComponent.ctorParameters = function () { return [\r\n        { type: Injector },\r\n        { type: DiagramService }\r\n    ]; };\r\n    NumericDiagramComponent.propDecorators = {\r\n        data: [{ type: Input }]\r\n    };\r\n    return NumericDiagramComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DiagramModuleContainerComponent = /** @class */ (function () {\r\n    function DiagramModuleContainerComponent(service) {\r\n        this.service = service;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DiagramModuleContainerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    DiagramModuleContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"diagram-module-container\",\r\n                    template: \"<div fxflex=\\\"100\\\" fxLayout=\\\"column\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DiagramModuleContainerComponent.ctorParameters = function () { return [\r\n        { type: DiagramService }\r\n    ]; };\r\n    return DiagramModuleContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DataMapperComponent = /** @class */ (function () {\r\n    function DataMapperComponent(diagramService, store) {\r\n        this.diagramService = diagramService;\r\n        this.store = store;\r\n        this.dataReport = [];\r\n    }\r\n    Object.defineProperty(DataMapperComponent.prototype, \"data\", {\r\n        set: /**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            if (!data)\r\n                return;\r\n            this.dataReport = _.report(data);\r\n            this._data = data;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DataMapperComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    DataMapperComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"data-mapper\",\r\n                    template: \"<div fxLayout=\\\"row\\\">\\n    <div fxFlex=\\\"grow\\\">\\n        <b>\\n            Key\\n        </b>\\n    </div>\\n    <div fxFlex=\\\"nogrow\\\">\\n        <b>\\n            Type\\n        </b>\\n    </div>\\n</div>\\n<div *ngFor=\\\"let item of dataReport\\\" [class]=\\\"'depts_' + item.depts\\\" fxLayout=\\\"row\\\">\\n    <div fxFlex=\\\"grow\\\">\\n        {{item.name}}\\n    </div>\\n    <div fxFlex=\\\"nogrow\\\">\\n        {{item.type}}\\n    </div>\\n</div>\\n\",\r\n                    styles: [\"mat-radio-button{width:100%;display:block}div.depts_2{margin-right:25px}div.depts_3{margin-right:50px}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DataMapperComponent.ctorParameters = function () { return [\r\n        { type: DiagramService },\r\n        { type: Store }\r\n    ]; };\r\n    DataMapperComponent.propDecorators = {\r\n        destination: [{ type: Input }],\r\n        data: [{ type: Input }]\r\n    };\r\n    return DataMapperComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DiagramModel = /** @class */ (function () {\r\n    function DiagramModel() {\r\n    }\r\n    return DiagramModel;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar AddDiagramActionTypes = {\r\n    ADD_DIAGRAM: \"[DIAGRAM][ADD] ADD_DIAGRAM\",\r\n    ADD_DIAGRAM_START: \"[DIAGRAM][ADD] ADD_DIAGRAM_START\",\r\n    ADD_DIAGRAM_SUCCEED: \"[DIAGRAM][ADD] ADD_DIAGRAM_SUCCEED\",\r\n    DIAGRAM_CONFIG_CHANGED: \"[DIAGRAM][ADD] DIAGRAM_CONFIG_CHANGED\",\r\n    ADD_DIAGRAM_FAILED: \"[DIAGRAM][ADD] ADD_DIAGRAM_FAILED\",\r\n    STRUCTURE_DEFINITION_START: \"[DIAGRAM][ADD] STRUCTURE_DEFINITION_START\",\r\n    HAVE_ENDPOINT: \"[DIAGRAM][ADD] HAVE_STRUCTURE\",\r\n    DATA_LOADED: \"[DIAGRAM][ADD] DATA_LOADED\",\r\n    STRUCTURE_DEFINITION_END: \"[DIAGRAM][ADD] STRUCTURE_DEFINITION_END\",\r\n    COLUMNS_MAPPING_CHANGED: \"[DIAGRAM][ADD] COLUMNS_MAPPING_CHANGED\",\r\n    DATA_CALCULATED: \"[DIAGRAM][ADD] DATA_CALCULATED\",\r\n    COLUMN_ADDED: \"[DIAGRAM][ADD] COLUMN_ADDED\",\r\n    GENERATE_DIAGRAM: \"[DIAGRAM][ADD] GENERATE_DIAGRAM\",\r\n};\r\nvar AddDiagramAction = /** @class */ (function () {\r\n    function AddDiagramAction(payload) {\r\n        this.payload = payload;\r\n        this.type = AddDiagramActionTypes.ADD_DIAGRAM;\r\n    }\r\n    return AddDiagramAction;\r\n}());\r\nvar AddDiagramActionStart = /** @class */ (function () {\r\n    function AddDiagramActionStart(payload) {\r\n        this.payload = payload;\r\n        this.type = AddDiagramActionTypes.ADD_DIAGRAM_START;\r\n    }\r\n    return AddDiagramActionStart;\r\n}());\r\nvar AddDiagramActionSucceed = /** @class */ (function () {\r\n    function AddDiagramActionSucceed(payload) {\r\n        this.payload = payload;\r\n        this.type = AddDiagramActionTypes.ADD_DIAGRAM_SUCCEED;\r\n    }\r\n    return AddDiagramActionSucceed;\r\n}());\r\nvar AddDiagramActionFailed = /** @class */ (function () {\r\n    function AddDiagramActionFailed() {\r\n        this.type = AddDiagramActionTypes.ADD_DIAGRAM_FAILED;\r\n    }\r\n    return AddDiagramActionFailed;\r\n}());\r\nvar DiagramConfigChangedAction = /** @class */ (function () {\r\n    function DiagramConfigChangedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = AddDiagramActionTypes.DIAGRAM_CONFIG_CHANGED;\r\n    }\r\n    return DiagramConfigChangedAction;\r\n}());\r\nvar HaveEndpointAction = /** @class */ (function () {\r\n    function HaveEndpointAction(payload) {\r\n        this.payload = payload;\r\n        this.type = AddDiagramActionTypes.HAVE_ENDPOINT;\r\n    }\r\n    return HaveEndpointAction;\r\n}());\r\nvar DataLoadedAction = /** @class */ (function () {\r\n    function DataLoadedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = AddDiagramActionTypes.DATA_LOADED;\r\n    }\r\n    return DataLoadedAction;\r\n}());\r\nvar StructureDefinitionStartAction = /** @class */ (function () {\r\n    function StructureDefinitionStartAction(payload) {\r\n        this.payload = payload;\r\n        this.type = AddDiagramActionTypes.STRUCTURE_DEFINITION_START;\r\n    }\r\n    return StructureDefinitionStartAction;\r\n}());\r\nvar StructureDefinitionFinishedAction = /** @class */ (function () {\r\n    function StructureDefinitionFinishedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = AddDiagramActionTypes.STRUCTURE_DEFINITION_END;\r\n    }\r\n    return StructureDefinitionFinishedAction;\r\n}());\r\nvar ColumnsMappingChangedAction = /** @class */ (function () {\r\n    function ColumnsMappingChangedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = AddDiagramActionTypes.COLUMNS_MAPPING_CHANGED;\r\n    }\r\n    return ColumnsMappingChangedAction;\r\n}());\r\nvar GenerateDiagramAction = /** @class */ (function () {\r\n    function GenerateDiagramAction(payload) {\r\n        this.payload = payload;\r\n        this.type = AddDiagramActionTypes.GENERATE_DIAGRAM;\r\n    }\r\n    return GenerateDiagramAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar AddDiagramComponent = /** @class */ (function () {\r\n    function AddDiagramComponent(diagramService, formBuilder, store, route) {\r\n        var _this = this;\r\n        this.diagramService = diagramService;\r\n        this.formBuilder = formBuilder;\r\n        this.store = store;\r\n        this.route = route;\r\n        this.unsubscribe = new Subject$1();\r\n        this.formGroup = AddDiagramApiModel.Request.formGroup;\r\n        this.sources = this.diagramService.getSources();\r\n        this.groups = this.diagramService.getGroups();\r\n        // this.diagramModel = new DiagramModel();\r\n        this.columnsMappings = (/** @type {?} */ (this.formGroup.controls[\"ColumnMappings\"])).controls;\r\n        this.route.params.subscribe(function (params) {\r\n            /** @type {?} */\r\n            var diagramId = params[\"id\"];\r\n            // tslint:disable-next-line:no-unused-expression\r\n            diagramId &&\r\n                _this.diagramService.getDiagram(diagramId).subscribe(function (data) {\r\n                    _this.formGroup.patchValue({\r\n                        _id: data._id,\r\n                        Name: data.Name,\r\n                        IsActive: data.IsActive,\r\n                        Groups: data.Groups,\r\n                        Type: data.Chart.data.type,\r\n                        Legend: data.Chart.legend.show,\r\n                        Subchart: data.Chart.subchart.show,\r\n                        Zoom: data.Chart.zoom.enabled,\r\n                        Tooltip: data.Chart.tooltip.grouped,\r\n                        Sync: data.Source.Interval,\r\n                        Source: data.Source,\r\n                        columns: data.Chart.data.columns,\r\n                        ColumnMappings: data.Chart.ColumnMappings,\r\n                        Cols: data.Box.Cols,\r\n                        Flow: data.Chart.Flow,\r\n                        Rows: data.Box.Rows,\r\n                        BackgroundColor: data.Box.BackgroundColor,\r\n                        TextColor: data.Box.TextColor\r\n                    });\r\n                    /** @type {?} */\r\n                    var colorsControl = /** @type {?} */ (_this.formGroup.controls[\"Colors\"]);\r\n                    Object.keys(data.Chart.data.colors || {}).forEach(function (columnKey) {\r\n                        if (!(columnKey in colorsControl.controls))\r\n                            colorsControl.addControl(columnKey, new FormControl(data.Chart.data.colors[columnKey]));\r\n                    });\r\n                    /** @type {?} */\r\n                    var typesControl = /** @type {?} */ (_this.formGroup.controls[\"Types\"]);\r\n                    Object.keys(data.Chart.data.types || {}).forEach(function (key) {\r\n                        if (!(key in typesControl.controls))\r\n                            typesControl.addControl(key, new FormControl(data.Chart.data.types[key]));\r\n                    });\r\n                    data.Chart.ColumnMappings.forEach(function (mapping) { return _this.addColumn(mapping.NamePath, mapping.ValuePath); });\r\n                    _this.source = data.Source;\r\n                    _this.store.dispatch(new HaveEndpointAction(_this));\r\n                    _this.diagramPartialConfig = {\r\n                        type: _this.formGroup.value.Type,\r\n                        inputs: {\r\n                            formGroup: _this.formGroup,\r\n                            diagramService: _this.diagramService\r\n                        }\r\n                    };\r\n                });\r\n            _this.diagramPartialConfig = {\r\n                type: _this.formGroup.value.Type,\r\n                inputs: {\r\n                    formGroup: _this.formGroup,\r\n                    diagramService: _this.diagramService\r\n                }\r\n            };\r\n        });\r\n        this.diagramTypes = [\r\n            \"bar\",\r\n            \"donut\",\r\n            \"pie\",\r\n            \"scatter\",\r\n            \"line\",\r\n            \"area\",\r\n            \"area-spline\",\r\n            \"numero\",\r\n            \"booleano\",\r\n            \"tempo\"\r\n        ];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AddDiagramComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.formGroup.controls[\"ColumnMappings\"].statusChanges.subscribe(function (status) {\r\n            if (status == \"VALID\" &&\r\n                (/** @type {?} */ (_this.formGroup.controls[\"ColumnMappings\"])).controls.length > 0 &&\r\n                _this.data)\r\n                _this.store.dispatch(new ColumnsMappingChangedAction(_this));\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AddDiagramComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.dataSubscription)\r\n            this.dataSubscription.unsubscribe();\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    };\r\n    // getData() {\r\n    //   const o$ = this.diagramService.getData(this.source);\r\n    //   this.dataSubscription = o$.subscribe(data => new DataLoadedAction(this))\r\n    //   return o$;\r\n    // }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AddDiagramComponent.prototype.getDataStructure = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        debugger;\r\n        /** @type {?} */\r\n        var observer = this.diagramService.getData(__assign({}, this.source, { Interval: 0 }), this.unsubscribe, Date.now() - 10000);\r\n        this.dataSubscription = observer.subscribe(function (data) {\r\n            _this.data = data.Data;\r\n            _this.pathOptions = _this.diagramService.get_data_report(data.Data);\r\n        });\r\n        return observer;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AddDiagramComponent.prototype.configChanged = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.store.dispatch(new DiagramConfigChangedAction(this));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AddDiagramComponent.prototype.typeChanged = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var typesFormGroup = (/** @type {?} */ (this.formGroup.controls[\"Types\"])).controls;\r\n        // tslint:disable-next-line:forin\r\n        for (var cb in typesFormGroup) {\r\n            typesFormGroup[cb].setValue(this.formGroup.value.Type);\r\n        }\r\n        this.diagramPartialConfig = {\r\n            type: this.formGroup.value.Type,\r\n            inputs: {\r\n                formGroup: this.formGroup,\r\n                diagramService: this.diagramService\r\n            }\r\n        };\r\n        this.store.dispatch(new DiagramConfigChangedAction(this));\r\n    };\r\n    /**\r\n     * @param {?=} NamePath\r\n     * @param {?=} ValuePath\r\n     * @return {?}\r\n     */\r\n    AddDiagramComponent.prototype.addColumn = /**\r\n     * @param {?=} NamePath\r\n     * @param {?=} ValuePath\r\n     * @return {?}\r\n     */\r\n    function (NamePath, ValuePath) {\r\n        if (NamePath === void 0) { NamePath = \"\"; }\r\n        if (ValuePath === void 0) { ValuePath = \"\"; }\r\n        /** @type {?} */\r\n        var control = /** @type {?} */ (this.formGroup.controls[\"ColumnMappings\"]);\r\n        control.push(this.formBuilder.group({\r\n            NamePath: [NamePath],\r\n            ValuePath: [ValuePath, Validators.required]\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    AddDiagramComponent.prototype.routeEntered = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        debugger;\r\n        this.source = event.value;\r\n        this.formGroup.patchValue({ Source: event.value });\r\n        this.store.dispatch(new HaveEndpointAction(this));\r\n    };\r\n    /**\r\n     * @param {?} i\r\n     * @return {?}\r\n     */\r\n    AddDiagramComponent.prototype.removeColumn = /**\r\n     * @param {?} i\r\n     * @return {?}\r\n     */\r\n    function (i) {\r\n        /** @type {?} */\r\n        var control = /** @type {?} */ (this.formGroup.controls[\"ColumnMappings\"]);\r\n        control.removeAt(i);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AddDiagramComponent.prototype.calculateColumns = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        return Observable$1.create(function (obser) {\r\n            /** @type {?} */\r\n            var columns = _this.diagramService.extract_columns_from_data(_this.data, (/** @type {?} */ (_this.formGroup.controls[\"ColumnMappings\"])).value);\r\n            _this.formGroup.controls[\"columns\"].setValue(columns);\r\n            /** @type {?} */\r\n            var colorsControl = /** @type {?} */ (_this.formGroup.controls[\"Colors\"]);\r\n            columns.forEach(function (column) {\r\n                /** @type {?} */\r\n                var columnKey = column[0];\r\n                if (!(columnKey in colorsControl.controls))\r\n                    colorsControl.addControl(columnKey, new FormControl(\"#123456\"));\r\n            });\r\n            /** @type {?} */\r\n            var typesControl = /** @type {?} */ (_this.formGroup.controls[\"Types\"]);\r\n            columns.forEach(function (column) {\r\n                /** @type {?} */\r\n                var key = column[0];\r\n                if (!(key in typesControl.controls))\r\n                    typesControl.addControl(key, new FormControl(_this.formGroup.value.Type));\r\n            });\r\n            obser.next();\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AddDiagramComponent.prototype.generateDiagram = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var temp = new DiagramModel();\r\n        temp._id = \"template_id\";\r\n        temp.Name = this.formGroup.value.Name;\r\n        debugger;\r\n        temp.Source = this.source;\r\n        temp.Box = {\r\n            NumberOfColumns: 1,\r\n            Order: 1,\r\n            BackgroundColor: this.formGroup.value.BackgroundColor\r\n        };\r\n        temp.Widget = {\r\n            booleano: this.formGroup.value.booleano\r\n        };\r\n        temp.Chart = {\r\n            ColumnMappings: this.formGroup.value.ColumnMappings,\r\n            data: {\r\n                columns: this.formGroup.controls[\"columns\"].value,\r\n                type: this.formGroup.value.Type,\r\n                types: this.formGroup.value.Types,\r\n                colors: this.formGroup.controls[\"Colors\"].value\r\n            },\r\n            Flow: this.formGroup.value.Flow,\r\n            legend: {\r\n                show: this.formGroup.value.Legend\r\n            },\r\n            subchart: {\r\n                show: this.formGroup.value.Subchart\r\n            },\r\n            zoom: {\r\n                enabled: this.formGroup.value.Zoom\r\n            },\r\n            tooltip: {\r\n                grouped: this.formGroup.value.Tooltip\r\n            }\r\n        };\r\n        // this.componentModel = {\r\n        //   component: this.typeMapToDiagram[temp.Chart.data.type],\r\n        //   inputs: { data: temp }\r\n        // }\r\n        this.diagramModel = temp;\r\n        return Observable$1.empty();\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    AddDiagramComponent.prototype.add = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        this.store.dispatch(new AddDiagramAction(this.formGroup.value));\r\n    };\r\n    AddDiagramComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"diagram-add\",\r\n                    template: \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n  <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n    <mat-card fxFlex=\\\"60\\\">\\n      <form [formGroup]=\\\"formGroup\\\" fxLayout='column'>\\n        <mat-card-header>\\n          <mat-card-title>\\u0627\\u0641\\u0632\\u0648\\u062F\\u0646 \\u0646\\u0645\\u0648\\u062F\\u0627\\u0631 \\u062C\\u062F\\u06CC\\u062F</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"\\u0639\\u0646\\u0648\\u0627\\u0646 \\u0646\\u0645\\u0648\\u062F\\u0627\\u0631\\\" formControlName=\\\"Name\\\">\\n          </mat-form-field>\\n          <mat-form-field fxFlexFill>\\n            <mat-select placeholder=\\\"\\u0646\\u0627\\u0645 \\u0645\\u0633\\u06CC\\u0631\\\" formControlName=\\\"Source\\\" (selectionChange)=\\\"routeEntered($event)\\\">\\n              <mat-option *ngFor=\\\"let item of sources | async\\\" [value]=\\\"item\\\">\\n                {{item.Endpoint}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field fxFlexFill>\\n            <input matInput placeholder=\\\"sync time\\\" formControlName=\\\"Sync\\\">\\n          </mat-form-field>\\n          <div>\\n            <mat-radio-group (change)=\\\"typeChanged()\\\" formControlName=\\\"Type\\\" fxFlexFill>\\n              <label>\\u0646\\u0648\\u0639 \\u0646\\u0645\\u0648\\u062F\\u0627\\u0631 :</label>\\n              <mat-radio-button (change)=\\\"typeChanged()\\\" *ngFor=\\\"let item of diagramTypes\\\" [value]=\\\"item\\\" class=\\\"form-element-margin\\\">\\n                {{item}}\\n              </mat-radio-button>\\n            </mat-radio-group>\\n          </div>\\n          <mat-form-field>\\n            <mat-select placeholder=\\\"Groups\\\" formControlName=\\\"Groups\\\" multiple>\\n              <mat-select-trigger>\\n                {{formGroup.controls.Groups.value ? formGroup.controls.Groups.value[0] : ''}}\\n                <span *ngIf=\\\"formGroup.controls.Groups.value?.length > 1\\\">\\n                  (+{{formGroup.controls.Groups.value.length - 1}} others)\\n                </span>\\n              </mat-select-trigger>\\n              <mat-option *ngFor=\\\"let item of groups | async\\\" [value]=\\\"item\\\">{{item}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <div>\\n            <mat-checkbox (change)=\\\"configChanged()\\\" formControlName=\\\"IsActive\\\" fxFlexFill>\\u0648\\u0636\\u0639\\u06CC\\u062A</mat-checkbox>\\n          </div>\\n          <dynamic-config-component-selector (ConfigChanged)=\\\"configChanged()\\\" [data]=\\\"diagramPartialConfig\\\"></dynamic-config-component-selector>\\n        </mat-card-content>\\n      </form>\\n    </mat-card>\\n    <dynamic-component-selector id=\\\"modify-diagram\\\" fxFlex=\\\"40\\\" [data]=\\\"diagramModel\\\"></dynamic-component-selector>\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\">\\n    <mat-card fxFlex=\\\"25\\\">\\n      <mat-card-header>\\n        <mat-card-title> \\u0633\\u0627\\u062E\\u062A\\u0627\\u0631 \\u062F\\u06CC\\u062A\\u0627 </mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <div class=\\\"item-margin\\\">\\n          <data-mapper destination=\\\"value\\\" [data]=\\\"data\\\"></data-mapper>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n\\n    <mat-card fxLayout=\\\"column\\\" fxFlex=\\\"25\\\">\\n      <mat-card-header>\\n        <mat-card-title>\\u0646\\u06AF\\u0627\\u0634\\u062A \\u062F\\u0627\\u062F\\u0647</mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"5px\\\">\\n          <div *ngFor=\\\"let column of columnsMappings; let i=index\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\n            <div fxLayout=\\\"column\\\">\\n              <div [formGroup]=\\\"columnsMappings[i]\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\">\\n                <mat-form-field fxFlex=\\\"45\\\" fxFlex.xs=\\\"100\\\">\\n                  <mat-select placeholder=\\\"\\u0646\\u0627\\u0645 \\u0645\\u0633\\u06CC\\u0631\\\" formControlName=\\\"NamePath\\\">\\n                    <mat-option>--</mat-option>\\n                    <mat-option *ngFor=\\\"let item of pathOptions\\\" [value]=\\\"item.path\\\" [class]=\\\"'mat-option depth_' + item.depts\\\">\\n                      <!-- <mat-option *ngFor=\\\"let item of pathOptions\\\" [value]=\\\"item.path\\\" [class]=\\\"'mat-option depth_' + item.depts\\\" [disabled]=\\\"!item.isLastNode\\\"> -->\\n                      {{item.path}}\\n                    </mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n                <mat-form-field fxFlex=\\\"45\\\" fxFlex.xs=\\\"100\\\">\\n                  <mat-select placeholder=\\\"\\u0645\\u0642\\u062F\\u0627\\u0631 \\u0645\\u0633\\u06CC\\u0631\\\" formControlName=\\\"ValuePath\\\">\\n                    <mat-option>--</mat-option>\\n                    <!-- <mat-option *ngFor=\\\"let item of pathOptions\\\" [value]=\\\"item.path\\\" [class]=\\\"'mat-option depth_' + item.depts\\\" [disabled]=\\\"!item.isLastNode\\\"> -->\\n                    <mat-option *ngFor=\\\"let item of pathOptions\\\" [value]=\\\"item.path\\\" [class]=\\\"'mat-option depth_' + item.depts\\\">\\n                      {{item.path}}\\n                    </mat-option>\\n                  </mat-select>\\n                </mat-form-field>\\n                <button (click)=\\\"removeColumn(i)\\\" fxFlex mat-icon-button>\\n                  <mat-icon>delete</mat-icon>\\n                </button>\\n              </div>\\n              <br />\\n            </div>\\n          </div>\\n        </div>\\n        <div>\\n          <button (click)=\\\"addColumn()\\\" fxFlex mat-raised-button color=\\\"primary\\\" type=\\\"button\\\">\\u0627\\u0641\\u0632\\u0648\\u062F\\u0646 \\u0633\\u062A\\u0648\\u0646</button>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n    <mat-card fxFlex=\\\"25\\\">\\n      <mat-card-header>\\n        <mat-card-title>\\u0646\\u062A\\u0627\\u06CC\\u062C \\u062F\\u0627\\u062F\\u0647 \\u0647\\u0627</mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <div class=\\\"item-margin\\\">\\n          <div class=\\\"list-item\\\" fxLayout=\\\"row\\\" *ngFor=\\\"let item of formGroup.controls.columns.value; let i=index\\\"\\n            fxLayoutAlign=\\\"space-between center\\\">\\n            <span fxFlex=\\\"40\\\">{{item[0]}} : {{item[1]}}</span>\\n            <span fxFlex [formGroup]=\\\"formGroup.controls.Colors\\\" *ngIf=\\\"$any(formGroup.controls.Colors).controls[item[0]]\\\">\\n              <input placeholder=\\\"\\u0631\\u0646\\u06AF \\u0646\\u0645\\u0648\\u062F\\u0627\\u0631\\\" (change)=\\\"configChanged()\\\" [formControlName]=\\\"item[0]\\\" type=\\\"color\\\">\\n            </span>\\n            <mat-form-field fxFlex=\\\"30\\\" [formGroup]=\\\"formGroup.controls.Types\\\" *ngIf=\\\"$any(formGroup.controls.Types).controls[item[0]]\\\">\\n              <!-- <input placeholder=\\\"tipo\\\" (change)=\\\"configChanged()\\\" > -->\\n              <mat-select placeholder=\\\"tipo\\\" [formControlName]=\\\"item[0]\\\">\\n                <mat-option>--</mat-option>\\n                <mat-option *ngFor=\\\"let item of diagramTypes\\\" [value]=\\\"item\\\">\\n                  {{item}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n    <mat-card fxLayout=\\\"column\\\" fxFlex=\\\"25\\\">\\n      <mat-card-header>\\n        <mat-card-title>\\u062A\\u0646\\u0638\\u06CC\\u0645\\u0627\\u062A \\u0638\\u0627\\u0647\\u0631\\u06CC</mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content [formGroup]=\\\"formGroup\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"\\u062A\\u0639\\u062F\\u0627\\u062F \\u0633\\u0637\\u0631\\\" formControlName=\\\"Cols\\\">\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"\\u062A\\u0639\\u062F\\u0627\\u062F \\u0633\\u062A\\u0648\\u0646\\\" formControlName=\\\"Rows\\\">\\n        </mat-form-field>\\n        <div fxLayout=\\\"row\\\">\\n          <label fxFlex=\\\"50\\\">\\u0631\\u0646\\u06AF \\u0645\\u062A\\u0646 :</label>\\n          <span>\\n            <input (change)=\\\"configChanged()\\\" formControlName=\\\"TextColor\\\" type=\\\"color\\\">\\n          </span>\\n        </div>\\n        <div fxLayout=\\\"row\\\">\\n          <label fxFlex=\\\"50\\\">\\u0631\\u0646\\u06AF \\u067E\\u0633 \\u0632\\u0645\\u06CC\\u0646\\u0647 :</label>\\n          <span>\\n            <input formControlName=\\\"BackgroundColor\\\" type=\\\"color\\\">\\n          </span>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <div>\\n    <mat-card fxLayoutAlign=\\\"end center\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\">\\n      <mat-card-content>\\n        <button (click)=\\\"add($event)\\\" fxFlex mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">\\u062B\\u0628\\u062A</button>\\n        <button fxFlex='nogrow' mat-button routerLink='/diagrams'>\\u0627\\u0646\\u0635\\u0631\\u0627\\u0641</button>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\",\r\n                    styles: [\"#chart{width:300px;direction:ltr}.form-element-margin{margin:5px 10px}.item-margin{margin:10px 0;display:block}mat-option.depth_2{padding-right:30px}mat-option.depth_3{padding-right:50px}mat-option.depth_4{padding-right:70px}.mat-card{margin:12.5px}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    AddDiagramComponent.ctorParameters = function () { return [\r\n        { type: DiagramService },\r\n        { type: FormBuilder },\r\n        { type: Store },\r\n        { type: ActivatedRoute }\r\n    ]; };\r\n    return AddDiagramComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar diagramViewComponent = /** @class */ (function () {\r\n    function diagramViewComponent(diagramService) {\r\n        this.diagramService = diagramService;\r\n        this.width = 100;\r\n        this.diagrams = this.diagramService.getDiagrams();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    diagramViewComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.diagramData$ = this.diagramService.getDiagram(this.diagramId);\r\n    };\r\n    diagramViewComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"diagram-view\",\r\n                    template: \"<div *ngIf=\\\"diagramData$ | async\\\" [style.color]=\\\"(diagramData$ | async)?.Box.Color\\\">\\n    <dynamic-component-selector class=\\\"diagram-box\\\" [data]=\\\"(diagramData$ | async)\\\"></dynamic-component-selector>\\n</div>\",\r\n                    styles: [\":host{width:100%;margin:12.5px}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}.widget-title{font:1.3em IRANSans,tahoma}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    diagramViewComponent.ctorParameters = function () { return [\r\n        { type: DiagramService }\r\n    ]; };\r\n    diagramViewComponent.propDecorators = {\r\n        diagramId: [{ type: Input, args: [\"id\",] }]\r\n    };\r\n    return diagramViewComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DiagramsComponent = /** @class */ (function () {\r\n    function DiagramsComponent(diagramService) {\r\n        this.diagramService = diagramService;\r\n        this.width = 100;\r\n        this.diagrams = this.diagramService.getDiagrams();\r\n        // this.diagrams\r\n        //         .delay(100)\r\n        //         .subscribe(diagrams =>\r\n        //                 diagrams.Result.forEach(diagram =>\r\n        //                         this.diagramService.generateDiagram(diagram.Chart, diagram._id, diagram.Source.Route, diagram.Source.Sync)));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DiagramsComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.socketService.initSocket();\r\n        // this.socketService.send(\"add-message\");\r\n        // this.socketService.onMessage().subscribe(msg=>{\r\n        //         debugger\r\n        // });\r\n    };\r\n    DiagramsComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"diagrams\",\r\n                    template: \"<mat-grid-list cols=\\\"12\\\" rowHeight=\\\"100px\\\">\\n  <mat-grid-tile *ngFor=\\\"let diagram of (diagrams | async)?.Result\\\" \\n  [colspan]=\\\"diagram.Box.Cols\\\" \\n  [rowspan]=\\\"diagram.Box.Rows\\\" \\n  [style.color]=\\\"diagram.Box.Color\\\">\\n    <dynamic-component-selector class=\\\"diagram-box\\\" [data]=\\\"diagram\\\"></dynamic-component-selector>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n<br />\\n<div fxFlexLayout=\\\"row\\\" fxLayoutWrap fxLayoutAlign=\\\"center center\\\">\\n</div>\\n<div fxLayoutAlign='end center'>\\n  <button mat-fab routerLink=\\\"../diagrams/add\\\" class=\\\"add-btn\\\">\\n    <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n  </button>\\n</div>\\n\",\r\n                    styles: [\":host{width:100%}.diagram-box{margin:15px}.add-btn{position:fixed;bottom:50px;left:25px;z-index:1}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DiagramsComponent.ctorParameters = function () { return [\r\n        { type: DiagramService }\r\n    ]; };\r\n    return DiagramsComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar EditDiagramComponent = /** @class */ (function () {\r\n    function EditDiagramComponent(diagramService, route, store) {\r\n        var _this = this;\r\n        this.diagramService = diagramService;\r\n        this.route = route;\r\n        this.store = store;\r\n        this.formGroup = EditDiagramApiModel.Request.formGroup;\r\n        /** @type {?} */\r\n        var Route = this.route.params.subscribe(function (params) {\r\n            /** @type {?} */\r\n            var diagramId = params[\"id\"];\r\n            _this.diagramService.getDiagram(diagramId).subscribe(function (data) { return _this.formGroup.patchValue(data); });\r\n        });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    EditDiagramComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    EditDiagramComponent.prototype.add = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        this.store.dispatch(new EditDiagramAction(this.formGroup.value));\r\n    };\r\n    EditDiagramComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"diagram-edit\",\r\n                    template: \"<mat-card fxLayout=\\\"column\\\" fxFlex=\\\"400px\\\">\\n    <form [formGroup]=\\\"formGroup\\\" fxLayout='column' (ngSubmit)=\\\"add($event)\\\">\\n\\n        <mat-card-header>\\n            <mat-card-title>\\u0627\\u0641\\u0632\\u0648\\u062F\\u0646 \\u0646\\u0645\\u0648\\u062F\\u0627\\u0631 \\u062C\\u062F\\u06CC\\u062F</mat-card-title>\\n        </mat-card-header>\\n\\n        <mat-card-content>\\n            <mat-form-field fxFlexFill>\\n                <input matInput placeholder=\\\"\\u0639\\u0646\\u0648\\u0627\\u0646 \\u0646\\u0645\\u0648\\u062F\\u0627\\u0631\\\" formControlName=\\\"Name\\\">\\n            </mat-form-field>\\n            <mat-form-field fxFlexFill>\\n                <input matInput placeholder=\\\"\\u0622\\u062F\\u0631\\u0633 \\u0646\\u0645\\u0648\\u062F\\u0627\\u0631\\\" formControlName=\\\"Route\\\">\\n            </mat-form-field>\\n\\n            <mat-checkbox formControlName=\\\"IsActive\\\">\\u0648\\u0636\\u0639\\u06CC\\u062A</mat-checkbox>\\n\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <button fxFlex mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">\\u062B\\u0628\\u062A</button>\\n            <button fxFlex='nogrow' mat-button routerLink='/diagrams'>\\u0627\\u0646\\u0635\\u0631\\u0627\\u0641</button>\\n        </mat-card-actions>\\n    </form>\\n</mat-card>\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    EditDiagramComponent.ctorParameters = function () { return [\r\n        { type: DiagramService },\r\n        { type: ActivatedRoute },\r\n        { type: Store }\r\n    ]; };\r\n    return EditDiagramComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DiagramComponent = /** @class */ (function () {\r\n    function DiagramComponent(store, diagramService, http, injector, route) {\r\n        var _this = this;\r\n        this.store = store;\r\n        this.diagramService = diagramService;\r\n        this.http = http;\r\n        this.injector = injector;\r\n        this.route = route;\r\n        this.unsubscribe = new Subject$1();\r\n        this.modelIsCorrect = new BehaviorSubject$1(false);\r\n        this.now = Date.now();\r\n        debugger;\r\n        this.data = this.injector.get(\"data\");\r\n        this.route.params.subscribe(function (params) {\r\n            /** @type {?} */\r\n            var diagramId = params[\"id\"];\r\n            // tslint:disable-next-line:no-unused-expression\r\n            diagramId &&\r\n                _this.diagramService.getDiagram(diagramId).subscribe(function (data) {\r\n                    console.log(data);\r\n                });\r\n        });\r\n    }\r\n    Object.defineProperty(DiagramComponent.prototype, \"data\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._model;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            if (!(value.Chart && value._id))\r\n                return;\r\n            this._model = value;\r\n            this.modelIsCorrect.next(true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DiagramComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        // this.dataSubscribtion = IntervalObservable\r\n        //         // .create(this.model.Source.Sync)\r\n        //         .create(999)\r\n        //         .switchMap(i =>\r\n        //                 this.http.get(`http://localhost:3000/api/data`, {\r\n        //                         params: {\r\n        //                                 route: this.model.Source.Route,\r\n        //                                 time: '0'\r\n        //                         }\r\n        //                 })\r\n        //         )\r\n        //         // .switchMap((res: any) => of(res.Result.Data))\r\n        //         .map((res: any) => res.Result.Data)\r\n        this.modelIsCorrect.delay(300).filter(function (data) { return data; }).subscribe(function (state) {\r\n            _this.chart = c3.generate(__assign({}, _this.data.Chart, { bindto: \"#diagram_\" + _this.data._id }));\r\n            _this.dataSubscribtion = _this.diagramService\r\n                .getData(_this.data.Source, _this.unsubscribe)\r\n                .pipe(filter(function (data) { return data != undefined; }), takeUntil(_this.unsubscribe))\r\n                .subscribe(function (data) {\r\n                _this.now = Date.now();\r\n                _this.time = data.Time;\r\n                if (_this.data.Chart.Flow) {\r\n                    _this.chart.flow({\r\n                        columns: _this.diagramService.extract_columns_from_data(data.Data, _this.data.Chart.ColumnMappings),\r\n                        duration: 1500\r\n                    });\r\n                }\r\n                else {\r\n                    _this.chart.load({\r\n                        columns: _this.diagramService.extract_columns_from_data(data.Data, _this.data.Chart.ColumnMappings)\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        // this.dataSubscribtion = this.diagramService.generateDiagram(\r\n        //         this.model.Chart,\r\n        //         this.model._id,\r\n        //         this.model.Source.Route,\r\n        //         this.model.Source.Sync\r\n        // );\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DiagramComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.dataSubscribtion.unsubscribe();\r\n        debugger;\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    DiagramComponent.prototype.timeChange = /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    function (e) {\r\n        var _this = this;\r\n        this.dataSubscribtion.unsubscribe();\r\n        // this.diagramService.getData(this.data.Source, Date.now() - ((1000 - e.value) * this.data.Source.Interval), true)\r\n        this.dataSubscribtion = this.diagramService\r\n            .getData(this.data.Source, this.unsubscribe, Date.now() - (1000 - e.value) * this.data.Source.Interval, true)\r\n            .subscribe(function (data) {\r\n            _this.time = data.Time;\r\n            _this.now = Date.now();\r\n            // const columns = this.diagramService\r\n            //         .extract_columns_from_data(data.Data, this.data.Chart.ColumnMappings)\r\n            //         .map(column => {\r\n            //                 debugger;\r\n            //                 column[0] += '_historic';\r\n            //                 return column;\r\n            //         });\r\n            // const columns = this.diagramService\r\n            //         .extract_columns_from_data(data.Data, this.data.Chart.ColumnMappings)\r\n            //         .map(column => {\r\n            //                 debugger;\r\n            //                 column[0] += '_historic';\r\n            //                 return column;\r\n            //         });\r\n            _this.chart.load({\r\n                columns: _this.diagramService.extract_columns_from_data(data.Data, _this.data.Chart.ColumnMappings)\r\n            });\r\n        });\r\n    };\r\n    DiagramComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"diagram\",\r\n                    template: \"<div class=\\\"over\\\" fxlayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n    <div fxFlex=\\\"nogrow\\\" fxFlexAlign=\\\"start\\\" class=\\\"data-time\\\">{{now | date : 'y/M/d h:m:s'}}</div>\\n    <div fxFlex=\\\"nogrow\\\" fxFlexAlign=\\\"center\\\" class=\\\"data-time\\\">{{time | date : 'y/M/d h:m:s'}}</div>\\n    <div fxFlex=\\\"nogrow\\\" fxFlexAlign=\\\"end\\\" class=\\\"data-time\\\">{{now | date : 'y/M/d h:m:s'}}</div>\\n</div>\\n<div *ngIf=\\\"modelIsCorrect | async\\\" class=\\\"diagram widget\\\" [id]=\\\"'diagram_' + data._id\\\"></div>\",\r\n                    styles: [\":host{width:100%}.diagram-box .c3{direction:ltr}mat-slider{width:100%}.data-time{direction:ltr;text-align:center}.over{visibility:hidden;opacity:0;position:absolute;top:35px;left:0;right:0;background:#fff;z-index:3;transition:.4s ease-in-out}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DiagramComponent.ctorParameters = function () { return [\r\n        { type: Store },\r\n        { type: DiagramService },\r\n        { type: HttpClient },\r\n        { type: Injector },\r\n        { type: ActivatedRoute }\r\n    ]; };\r\n    DiagramComponent.propDecorators = {\r\n        data: [{ type: Input }]\r\n    };\r\n    return DiagramComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DynamicComponentSelectorComponent = /** @class */ (function () {\r\n    function DynamicComponentSelectorComponent(resolver) {\r\n        this.resolver = resolver;\r\n        this.typeMapToDiagram = {\r\n            bar: DiagramComponent,\r\n            donut: DiagramComponent,\r\n            pie: DiagramComponent,\r\n            scatter: DiagramComponent,\r\n            line: DiagramComponent,\r\n            area: DiagramComponent,\r\n            \"area-spline\": DiagramComponent,\r\n            numero: NumericDiagramComponent,\r\n            tempo: ServerConnectingTimeDiagramComponent,\r\n            booleano: ServerStatusDiagramComponent\r\n        };\r\n        this.currentComponent = null;\r\n        this.backgroundColor = \"\";\r\n    }\r\n    Object.defineProperty(DynamicComponentSelectorComponent.prototype, \"data\", {\r\n        set: /**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            if (!data || Object.keys(data).length == 0)\r\n                return;\r\n            this.backgroundColor = data.Box.BackgroundColor;\r\n            this._data = data;\r\n            /** @type {?} */\r\n            var raw = { data: data };\r\n            /** @type {?} */\r\n            var _component = this.typeMapToDiagram[data.Chart.data.type];\r\n            /** @type {?} */\r\n            var inputProviders = Object.keys(raw).map(function (inputName) {\r\n                return { provide: inputName, useValue: raw[inputName] };\r\n            });\r\n            /** @type {?} */\r\n            var resolvedInputs = ReflectiveInjector.resolve(inputProviders);\r\n            /** @type {?} */\r\n            var injector = ReflectiveInjector.fromResolvedProviders(resolvedInputs, this.dynamicComponentContainer.parentInjector);\r\n            /** @type {?} */\r\n            var factory = this.resolver.resolveComponentFactory(_component);\r\n            /** @type {?} */\r\n            var component = factory.create(injector);\r\n            this.dynamicComponentContainer.insert(component.hostView);\r\n            if (this.currentComponent) {\r\n                this.currentComponent.destroy();\r\n            }\r\n            this.currentComponent = component;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DynamicComponentSelectorComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    DynamicComponentSelectorComponent.prototype.timeChange = /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    function (e) {\r\n        this.currentComponent._component.timeChange(e);\r\n    };\r\n    DynamicComponentSelectorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"dynamic-component-selector\",\r\n                    template: \"<mat-card class=\\\"diagram-box\\\" [style.background]=\\\"backgroundColor\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between stretch\\\">\\n    <div fxFlex=\\\"0 0 auto\\\" *ngIf=\\\"_data\\\" fxLayoutAlign=\\\"space-between center\\\">\\n        <span fxLayoutAlign=\\\"start center\\\" class=\\\"widget-title\\\">\\n            {{_data.Name}}\\n        </span>\\n        <a [routerLink]=\\\"['../diagrams/edit' ,  _data._id]\\\" fxLayoutAlign=\\\"center center\\\" mat-icon-button color=\\\"primary\\\">\\n            <mat-icon aria-label=\\\"edit diagram\\\">edit</mat-icon>\\n        </a>\\n    </div>\\n    <!-- <mat-card-content> -->\\n    <!-- <mat-slider invert [(ngModel)]=\\\"time\\\" (change)=\\\"timeChange($event)\\\"></mat-slider> -->\\n    <mat-slider class=\\\"over\\\" fxFlex=\\\"0 0 auto\\\" invert min='1' max='1000' value=\\\"1000\\\" (change)=\\\"timeChange($event)\\\"></mat-slider>\\n    <div fxFlex=\\\"1 1 auto\\\" class=\\\"widget-container\\\">\\n        <div #dynamicComponentContainer></div>\\n    </div>\\n    <!-- </mat-card-content> -->\\n</mat-card>\",\r\n                    styles: [\":host{width:100%;margin:12.5px}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}.widget-title{font:1.3em IRANSans,tahoma}.over{visibility:hidden;opacity:0;position:absolute;top:60px;left:0;right:0;background:#fff;z-index:3;transition:.4s ease-in-out}\"],\r\n                    entryComponents: [\r\n                        NumericDiagramComponent,\r\n                        ServerConnectingTimeDiagramComponent,\r\n                        ServerStatusDiagramComponent,\r\n                        DiagramComponent\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DynamicComponentSelectorComponent.ctorParameters = function () { return [\r\n        { type: ComponentFactoryResolver }\r\n    ]; };\r\n    DynamicComponentSelectorComponent.propDecorators = {\r\n        dynamicComponentContainer: [{ type: ViewChild, args: [\"dynamicComponentContainer\", { read: ViewContainerRef },] }],\r\n        widgetComponent: [{ type: ViewChild, args: [DiagramComponent,] }],\r\n        data: [{ type: Input }]\r\n    };\r\n    return DynamicComponentSelectorComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DynamicConfigComponentSelectorComponent = /** @class */ (function () {\r\n    function DynamicConfigComponentSelectorComponent(resolver) {\r\n        this.resolver = resolver;\r\n        this.typeMapToDiagram = {\r\n            bar: DiagramPartialConfigEditComponent,\r\n            area: LinearDiagramPartialConfigComponent,\r\n            \"area-spline\": LinearDiagramPartialConfigComponent,\r\n            donut: DiagramPartialConfigEditComponent,\r\n            pie: PieDiagramPartialConfigComponent,\r\n            scatter: DiagramPartialConfigEditComponent,\r\n            line: LinearDiagramPartialConfigComponent,\r\n            booleano: BooleanoWidgetPartialConfigComponent\r\n        };\r\n        this.ConfigChanged = new EventEmitter();\r\n        this.currentComponent = null;\r\n    }\r\n    Object.defineProperty(DynamicConfigComponentSelectorComponent.prototype, \"data\", {\r\n        set: /**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        function (data) {\r\n            var _this = this;\r\n            if (!data || Object.keys(data).length == 0)\r\n                return;\r\n            if (!(data.type in this.typeMapToDiagram)) {\r\n                if (this.currentComponent)\r\n                    this.currentComponent.destroy();\r\n                return;\r\n            }\r\n            /** @type {?} */\r\n            var _component = this.typeMapToDiagram[data.type];\r\n            /** @type {?} */\r\n            var inputProviders = Object.keys(data.inputs).map(function (inputName) {\r\n                return { provide: inputName, useValue: data.inputs[inputName] };\r\n            });\r\n            /** @type {?} */\r\n            var resolvedInputs = ReflectiveInjector.resolve(inputProviders);\r\n            /** @type {?} */\r\n            var injector = ReflectiveInjector.fromResolvedProviders(resolvedInputs, this.dynamicComponentContainer.parentInjector);\r\n            /** @type {?} */\r\n            var factory = this.resolver.resolveComponentFactory(_component);\r\n            /** @type {?} */\r\n            var component = factory.create(injector);\r\n            if ((/** @type {?} */ (component.instance)).ConfigChanged)\r\n                (/** @type {?} */ (component.instance)).ConfigChanged.subscribe(function () {\r\n                    _this.ConfigChanged.emit();\r\n                });\r\n            this.dynamicComponentContainer.insert(component.hostView);\r\n            if (this.currentComponent) {\r\n                this.currentComponent.destroy();\r\n            }\r\n            this.currentComponent = component;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DynamicConfigComponentSelectorComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    DynamicConfigComponentSelectorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"dynamic-config-component-selector\",\r\n                    template: \"<div #dynamicComponentContainer></div>\",\r\n                    styles: [\":host{width:100%}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}\"],\r\n                    entryComponents: [\r\n                        DiagramPartialConfigEditComponent,\r\n                        PieDiagramPartialConfigComponent,\r\n                        LinearDiagramPartialConfigComponent,\r\n                        BooleanoWidgetPartialConfigComponent\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DynamicConfigComponentSelectorComponent.ctorParameters = function () { return [\r\n        { type: ComponentFactoryResolver }\r\n    ]; };\r\n    DynamicConfigComponentSelectorComponent.propDecorators = {\r\n        dynamicComponentContainer: [{ type: ViewChild, args: [\"dynamicComponentContainer\", { read: ViewContainerRef },] }],\r\n        ConfigChanged: [{ type: Output }],\r\n        data: [{ type: Input }]\r\n    };\r\n    return DynamicConfigComponentSelectorComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DiagramEffects = /** @class */ (function () {\r\n    function DiagramEffects(actions$, router, diagramService) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.router = router;\r\n        this.diagramService = diagramService;\r\n        this.DiagramRequest$ = this.actions$.ofType().pipe(map(function (action) { return action.payload; }), map(function (data) { return new GetDiagramsStart(); }));\r\n        this.getDiagram$ = this.actions$\r\n            .ofType()\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (data) {\r\n            return _this.diagramService\r\n                .getDiagrams()\r\n                .pipe(map(function (res) { return new GetDiagramsSucceed(res); }), catchError(function () { return of(new GetDiagramsFailed()); }));\r\n        }));\r\n    }\r\n    DiagramEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    DiagramEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: Router },\r\n        { type: DiagramService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], DiagramEffects.prototype, \"DiagramRequest$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], DiagramEffects.prototype, \"getDiagram$\", void 0);\r\n    return DiagramEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar AddDiagramEffects = /** @class */ (function () {\r\n    function AddDiagramEffects(actions$, router, diagramService) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.router = router;\r\n        this.diagramService = diagramService;\r\n        this.addDiagramRequest$ = this.actions$\r\n            .ofType(AddDiagramActionTypes.ADD_DIAGRAM)\r\n            .pipe(map(function (action) { return action.payload; }), map(function (data) { return new AddDiagramActionStart(data); }));\r\n        this.addDiagram$ = this.actions$\r\n            .ofType(AddDiagramActionTypes.ADD_DIAGRAM_START)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (data) {\r\n            return _this.diagramService\r\n                .addDiagram(data)\r\n                .pipe(map(function (res) { return new AddDiagramActionSucceed(res); }), catchError(function () { return of$1(new AddDiagramActionFailed()); }));\r\n        }));\r\n        this.ADD_DIAGRAM_SUCCEED$ = this.actions$.ofType(AddDiagramActionTypes.ADD_DIAGRAM_SUCCEED).pipe(map(function (action) { return action.payload; }), map(function (data) {\r\n            _this.router.navigate([\"diagrams\"]);\r\n            return Observable$1.empty();\r\n        }));\r\n        this.HAVE_ENDPOINT$ = this.actions$\r\n            .ofType(AddDiagramActionTypes.HAVE_ENDPOINT)\r\n            .pipe(map(function (action) { return action.payload; }), map(function (data) { return new DataLoadedAction(data); }));\r\n        this.DATA_LOADED$ = this.actions$\r\n            .ofType(AddDiagramActionTypes.DATA_LOADED)\r\n            .pipe(map(function (action) { return action.payload; }), map(function (data) { return new StructureDefinitionStartAction(data); }));\r\n        this.DIAGRAM_CONFIG_CHANGED$ = this.actions$\r\n            .ofType(AddDiagramActionTypes.DIAGRAM_CONFIG_CHANGED)\r\n            .pipe(map(function (action) { return action.payload; }), map(function (data) { return new GenerateDiagramAction(data); }));\r\n        this.STRUCTURE_DEFINITION_START$ = this.actions$\r\n            .ofType(AddDiagramActionTypes.STRUCTURE_DEFINITION_START)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (data) { return data.getDataStructure().map(function () { return new StructureDefinitionFinishedAction(data); }); }));\r\n        this.COLUMNS_MAPPING_CHANGED$ = this.actions$\r\n            .ofType(AddDiagramActionTypes.COLUMNS_MAPPING_CHANGED)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (data) { return data.calculateColumns().map(function () { return new StructureDefinitionFinishedAction(data); }); }));\r\n        this.STRUCTURE_DEFINITION_END$ = this.actions$\r\n            .ofType(AddDiagramActionTypes.STRUCTURE_DEFINITION_END)\r\n            // .skipUntil(this.actions$.ofType(AddDiagramActionTypes.DATA_LOADED))\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (data) { return data.calculateColumns().map(function () { return new GenerateDiagramAction(data); }); }));\r\n        this.GenerateDiagram$ = this.actions$\r\n            .ofType(AddDiagramActionTypes.GENERATE_DIAGRAM)\r\n            .pipe(map(function (action) { return action.payload; }), map(function (data) { return data.generateDiagram(); }));\r\n    }\r\n    AddDiagramEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    AddDiagramEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: Router },\r\n        { type: DiagramService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], AddDiagramEffects.prototype, \"addDiagramRequest$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], AddDiagramEffects.prototype, \"addDiagram$\", void 0);\r\n    __decorate([\r\n        Effect({ dispatch: false }),\r\n        __metadata(\"design:type\", Object)\r\n    ], AddDiagramEffects.prototype, \"ADD_DIAGRAM_SUCCEED$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], AddDiagramEffects.prototype, \"HAVE_ENDPOINT$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], AddDiagramEffects.prototype, \"DATA_LOADED$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], AddDiagramEffects.prototype, \"DIAGRAM_CONFIG_CHANGED$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], AddDiagramEffects.prototype, \"STRUCTURE_DEFINITION_START$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], AddDiagramEffects.prototype, \"COLUMNS_MAPPING_CHANGED$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], AddDiagramEffects.prototype, \"STRUCTURE_DEFINITION_END$\", void 0);\r\n    __decorate([\r\n        Effect({ dispatch: false }),\r\n        __metadata(\"design:type\", Object)\r\n    ], AddDiagramEffects.prototype, \"GenerateDiagram$\", void 0);\r\n    return AddDiagramEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar routes = [\r\n    {\r\n        path: \"diagrams\",\r\n        component: DiagramModuleContainerComponent,\r\n        children: [\r\n            {\r\n                path: \"\",\r\n                component: DiagramsComponent\r\n            },\r\n            {\r\n                path: \"add\",\r\n                component: AddDiagramComponent\r\n            },\r\n            {\r\n                path: \"edit/:id\",\r\n                component: AddDiagramComponent\r\n            },\r\n            {\r\n                path: \"numero\",\r\n                component: NumericDiagramComponent\r\n            },\r\n            {\r\n                path: \"tempo\",\r\n                component: ServerConnectingTimeDiagramComponent\r\n            },\r\n            {\r\n                path: \"booleano\",\r\n                component: ServerStatusDiagramComponent\r\n            }\r\n        ]\r\n    }\r\n];\r\n/** @type {?} */\r\nvar RoutingModule = RouterModule.forChild(routes);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DiagramSelectorComponent = /** @class */ (function () {\r\n    function DiagramSelectorComponent(diagramService) {\r\n        this.diagramService = diagramService;\r\n        this.diagrams$ = this.diagramService.getDiagrams().pipe(map(function (res) { return res.Result; }));\r\n    }\r\n    Object.defineProperty(DiagramSelectorComponent.prototype, \"valid\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.config.diagramId != undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DiagramSelectorComponent.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {\r\n                diagramId: this.selectedDiagramId\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DiagramSelectorComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    DiagramSelectorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<div fxLayout=\\\"column wrap\\\" fxLayoutGap=\\\"15px\\\">\\n<h4>\\u0644\\u06CC\\u0633\\u062A \\u0646\\u0645\\u0648\\u062F\\u0627\\u0631\\u0647\\u0627</h4>\\n      <mat-form-field fxFlex=\\\"100\\\">\\n  <mat-select placeholder=\\\"\\u0646\\u0645\\u0648\\u062F\\u0627\\u0631 \\u0647\\u0627\\\" [(ngModel)]=\\\"selectedDiagramId\\\" name=\\\"selectedDiagramId\\\">\\n  <mat-option *ngFor=\\\"let item of (diagrams$ | async)\\\" [value]=\\\"item._id\\\">\\n    {{item.Name}}\\n  </mat-option>\\n</mat-select>\\n</mat-form-field>\\n</div>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DiagramSelectorComponent.ctorParameters = function () { return [\r\n        { type: DiagramService }\r\n    ]; };\r\n    return DiagramSelectorComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NgsDiagramModule = /** @class */ (function () {\r\n    function NgsDiagramModule() {\r\n    }\r\n    /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    NgsDiagramModule.forRoot = /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        return {\r\n            ngModule: RootNgsDiagramModule,\r\n            providers: [{ provide: MODULE_CONFIG_TOKEN, useValue: config }]\r\n        };\r\n    };\r\n    NgsDiagramModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        HttpClientModule,\r\n                        FormsModule,\r\n                        RouterModule,\r\n                        CommonModule,\r\n                        MatExpansionModule,\r\n                        MatSnackBarModule,\r\n                        MatIconModule,\r\n                        MatButtonModule,\r\n                        MatCardModule,\r\n                        MatSelectModule,\r\n                        MatSliderModule,\r\n                        MatInputModule,\r\n                        MatCheckboxModule,\r\n                        MatFormFieldModule,\r\n                        MatTabsModule,\r\n                        FlexLayoutModule,\r\n                        MatRadioModule,\r\n                        MatTooltipModule,\r\n                        MatGridListModule,\r\n                        MatAutocompleteModule,\r\n                        ReactiveFormsModule,\r\n                        BrowserAnimationsModule\r\n                    ],\r\n                    declarations: [\r\n                        AddDiagramComponent,\r\n                        DiagramsComponent,\r\n                        diagramViewComponent,\r\n                        EditDiagramComponent,\r\n                        DynamicConfigComponentSelectorComponent,\r\n                        DiagramComponent,\r\n                        DynamicComponentSelectorComponent,\r\n                        DiagramModuleContainerComponent,\r\n                        DataMapperComponent,\r\n                        NumericDiagramComponent,\r\n                        ServerStatusDiagramComponent,\r\n                        DiagramPartialConfigEditComponent,\r\n                        PieDiagramPartialConfigComponent,\r\n                        BooleanoWidgetPartialConfigComponent,\r\n                        NumericWidgetPartialConfigComponent,\r\n                        ServerConnectingTimeDiagramComponent,\r\n                        NumericEditDiagramComponent,\r\n                        LinearDiagramPartialConfigComponent,\r\n                        DiagramSelectorComponent\r\n                    ],\r\n                    entryComponents: [DiagramSelectorComponent, diagramViewComponent],\r\n                    exports: [DiagramSelectorComponent],\r\n                    providers: []\r\n                },] },\r\n    ];\r\n    return NgsDiagramModule;\r\n}());\r\nvar RootNgsDiagramModule = /** @class */ (function () {\r\n    function RootNgsDiagramModule() {\r\n    }\r\n    RootNgsDiagramModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        NgsDiagramModule,\r\n                        StoreModule.forFeature(\"diagram\", DiagramReducers),\r\n                        EffectsModule.forFeature([DiagramEffects, AddDiagramEffects]),\r\n                        RoutingModule\r\n                    ],\r\n                    exports: [NgsDiagramModule]\r\n                },] },\r\n    ];\r\n    return RootNgsDiagramModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { NgsDiagramModule, DiagramSelectorComponent, diagramViewComponent, RoutingModule as ɵbc, MODULE_CONFIG_TOKEN as ɵb, RootNgsDiagramModule as ɵa, BooleanoWidgetPartialConfigComponent as ɵm, DiagramPartialConfigEditComponent as ɵj, LinearDiagramPartialConfigComponent as ɵl, NumericDiagramComponent as ɵp, NumericEditDiagramComponent as ɵv, NumericWidgetPartialConfigComponent as ɵu, PieDiagramPartialConfigComponent as ɵk, ServerConnectingTimeDiagramComponent as ɵq, ServerStatusDiagramComponent as ɵr, AddDiagramEffects as ɵbb, DiagramEffects as ɵba, diagramReducer as ɵx, Reducer as ɵy, DiagramReducers as ɵw, ParentGuardReducer as ɵz, DiagramConfigurationService as ɵf, DiagramService as ɵd, AddDiagramComponent as ɵc, DataMapperComponent as ɵt, DiagramModuleContainerComponent as ɵs, DiagramComponent as ɵn, DiagramsComponent as ɵg, DynamicComponentSelectorComponent as ɵo, DynamicConfigComponentSelectorComponent as ɵi, EditDiagramComponent as ɵh };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic291c2hpYW5zLWRpYWdyYW0uanMubWFwIiwic291cmNlcyI6WyJuZzovL0Bzb3VzaGlhbnMvZGlhZ3JhbS9saWIvZGlhZ3JhbS5jb25maWcudHMiLCJuZzovL0Bzb3VzaGlhbnMvZGlhZ3JhbS9saWIvbW9kZWxzL2dldC1kaWFncmFtcy1hcGkubW9kZWwudHMiLCJuZzovL0Bzb3VzaGlhbnMvZGlhZ3JhbS9saWIvYWN0aW9ucy9kaWFncmFtcy5hY3Rpb25zLnRzIiwibmc6Ly9Ac291c2hpYW5zL2RpYWdyYW0vbGliL3JlZHVjZXJzL2RpYWdyYW1zLnJlZHVjZXIudHMiLCJuZzovL0Bzb3VzaGlhbnMvZGlhZ3JhbS9saWIvbW9kZWxzL2VkaXQtZGlhZ3JhbS1hcGkubW9kZWwudHMiLCJuZzovL0Bzb3VzaGlhbnMvZGlhZ3JhbS9saWIvYWN0aW9ucy9lZGl0LWRpYWdyYW0uYWN0aW9ucy50cyIsIm5nOi8vQHNvdXNoaWFucy9kaWFncmFtL2xpYi9yZWR1Y2Vycy9lZGl0LWRpYWdyYW0ucmVkdWNlci50cyIsIm5nOi8vQHNvdXNoaWFucy9kaWFncmFtL2xpYi9yZWR1Y2Vycy9wYXJlbnQtZ3VhcmQucmVkdWNlci50cyIsIm5nOi8vQHNvdXNoaWFucy9kaWFncmFtL2xpYi9yZWR1Y2Vycy9pbmRleC50cyIsIm5nOi8vQHNvdXNoaWFucy9kaWFncmFtL2xpYi9kdW1iLWNvbXBvbmVudHMvc2VydmVyLXN0YXR1cy1kaWFncmFtL3NlcnZlci1zdGF0dXMtZGlhZ3JhbS5jb21wb25lbnQudHMiLCJuZzovL0Bzb3VzaGlhbnMvZGlhZ3JhbS9saWIvZHVtYi1jb21wb25lbnRzL2RpYWdyYW0tcGFydGlhbC1jb25maWctZWRpdC9kaWFncmFtLXBhcnRpYWwtY29uZmlnLWVkaXQuY29tcG9uZW50LnRzIiwibmc6Ly9Ac291c2hpYW5zL2RpYWdyYW0vbGliL2R1bWItY29tcG9uZW50cy9waWUtZGlhZ3JhbS1wYXJ0aWFsLWNvbmZpZy9waWUtZGlhZ3JhbS1wYXJ0aWFsLWNvbmZpZy5jb21wb25lbnQudHMiLCJuZzovL0Bzb3VzaGlhbnMvZGlhZ3JhbS9saWIvZHVtYi1jb21wb25lbnRzL2Jvb2xlYW5vLXdpZGdldC1wYXJ0aWFsLWNvbmZpZy9ib29sZWFuby13aWRnZXQtcGFydGlhbC1jb25maWcuY29tcG9uZW50LnRzIiwibmc6Ly9Ac291c2hpYW5zL2RpYWdyYW0vbGliL2R1bWItY29tcG9uZW50cy9udW1lcmljLXdpZGdldC1wYXJ0aWFsLWNvbmZpZy9udW1lcmljLXdpZGdldC1wYXJ0aWFsLWNvbmZpZy5jb21wb25lbnQudHMiLCJuZzovL0Bzb3VzaGlhbnMvZGlhZ3JhbS9saWIvZHVtYi1jb21wb25lbnRzL2xpbmVhci1kaWFncmFtLXBhcnRpYWwtY29uZmlnL2xpbmVhci1kaWFncmFtLXBhcnRpYWwtY29uZmlnLmNvbXBvbmVudC50cyIsIm5nOi8vQHNvdXNoaWFucy9kaWFncmFtL2xpYi9kdW1iLWNvbXBvbmVudHMvc2VydmVyLWNvbm5lY3RpbmctdGltZS1kaWFncmFtL3NlcnZlci1jb25uZWN0aW5nLXRpbWUtZGlhZ3JhbS5jb21wb25lbnQudHMiLCJuZzovL0Bzb3VzaGlhbnMvZGlhZ3JhbS9saWIvc2VydmljZXMvZGlhZ3JhbS1jb25maWd1cmF0aW9uLnNlcnZpY2UudHMiLCJuZzovL0Bzb3VzaGlhbnMvZGlhZ3JhbS9saWIvbW9kZWxzL2FkZC1kaWFncmFtLWFwaS5tb2RlbC50cyIsIm5nOi8vQHNvdXNoaWFucy9kaWFncmFtL2xpYi9zZXJ2aWNlcy9kaWFncmFtLnNlcnZpY2UudHMiLCJuZzovL0Bzb3VzaGlhbnMvZGlhZ3JhbS9saWIvZHVtYi1jb21wb25lbnRzL251bWVyaWMtZWRpdC1kaWFncmFtL251bWVyaWMtZWRpdC1kaWFncmFtLmNvbXBvbmVudC50cyIsIm5nOi8vQHNvdXNoaWFucy9kaWFncmFtL2xpYi9kdW1iLWNvbXBvbmVudHMvbnVtZXJpYy1kaWFncmFtL251bWVyaWMtZGlhZ3JhbS5jb21wb25lbnQudHMiLCJuZzovL0Bzb3VzaGlhbnMvZGlhZ3JhbS9saWIvc21hcnQtY29tcG9uZW50cy9kaWFncmFtLW1vZHVsZS1jb250YWluZXIvZGlhZ3JhbS1tb2R1bGUtY29udGFpbmVyLmNvbXBvbmVudC50cyIsIm5nOi8vQHNvdXNoaWFucy9kaWFncmFtL2xpYi9zbWFydC1jb21wb25lbnRzL2RhdGEtbWFwcGVyL2RhdGEtbWFwcGVyLmNvbXBvbmVudC50cyIsIm5nOi8vQHNvdXNoaWFucy9kaWFncmFtL2xpYi9tb2RlbHMvZGlhZ3JhbS5tb2RlbC50cyIsIm5nOi8vQHNvdXNoaWFucy9kaWFncmFtL2xpYi9hY3Rpb25zL2FkZC1kaWFncmFtLmFjdGlvbnMudHMiLCJuZzovL0Bzb3VzaGlhbnMvZGlhZ3JhbS9saWIvc21hcnQtY29tcG9uZW50cy9hZGQtZGlhZ3JhbS9hZGQtZGlhZ3JhbS5jb21wb25lbnQudHMiLCJuZzovL0Bzb3VzaGlhbnMvZGlhZ3JhbS9saWIvc21hcnQtY29tcG9uZW50cy9kaWFncmFtLXZpZXcvZGlhZ3JhbS12aWV3LmNvbXBvbmVudC50cyIsIm5nOi8vQHNvdXNoaWFucy9kaWFncmFtL2xpYi9zbWFydC1jb21wb25lbnRzL2RpYWdyYW1zL2RpYWdyYW1zLmNvbXBvbmVudC50cyIsIm5nOi8vQHNvdXNoaWFucy9kaWFncmFtL2xpYi9zbWFydC1jb21wb25lbnRzL2VkaXQtZGlhZ3JhbS9lZGl0LWRpYWdyYW0uY29tcG9uZW50LnRzIiwibmc6Ly9Ac291c2hpYW5zL2RpYWdyYW0vbGliL3NtYXJ0LWNvbXBvbmVudHMvZGlhZ3JhbS9kaWFncmFtLmNvbXBvbmVudC50cyIsIm5nOi8vQHNvdXNoaWFucy9kaWFncmFtL2xpYi9zbWFydC1jb21wb25lbnRzL2R5bmFtaWMtY29tcG9uZW50LXNlbGVjdG9yL2R5bmFtaWMtY29tcG9uZW50LXNlbGVjdG9yLmNvbXBvbmVudC50cyIsIm5nOi8vQHNvdXNoaWFucy9kaWFncmFtL2xpYi9zbWFydC1jb21wb25lbnRzL2R5bmFtaWMtY29uZmlnLWNvbXBvbmVudC1zZWxlY3Rvci9keW5hbWljLWNvbmZpZy1jb21wb25lbnQtc2VsZWN0b3IuY29tcG9uZW50LnRzIiwibmc6Ly9Ac291c2hpYW5zL2RpYWdyYW0vbGliL2VmZmVjdHMvZGlhZ3JhbXMuZWZmZWN0cy50cyIsIm5nOi8vQHNvdXNoaWFucy9kaWFncmFtL2xpYi9lZmZlY3RzL2FkZC1kaWFncmFtLmVmZmVjdHMudHMiLCJuZzovL0Bzb3VzaGlhbnMvZGlhZ3JhbS9saWIvZGlhZ3JhbS1yb3V0aW5nLm1vZHVsZS50cyIsIm5nOi8vQHNvdXNoaWFucy9kaWFncmFtL2xpYi9zbWFydC1jb21wb25lbnRzL2RpYWdyYW0tc2VsZWN0b3IvZGlhZ3JhbS1zZWxlY3Rvci5jb21wb25lbnQudHMiLCJuZzovL0Bzb3VzaGlhbnMvZGlhZ3JhbS9saWIvZGlhZ3JhbS5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4gfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEaWFncmFtTW9kdWxlQ29uZmlnIHtcclxuXHRlbmRwb2ludHM/OiB7fTtcclxuXHRlbnY/OiB7XHJcblx0XHRwcm9kdWN0aW9uOiBib29sZWFuO1xyXG5cdFx0ZnJvbnRlbmRfc2VydmVyOiBzdHJpbmc7XHJcblx0fTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IE1PRFVMRV9ERUZBVUxUX0NPTkZJRzogRGlhZ3JhbU1vZHVsZUNvbmZpZyA9IHtcclxuXHRlbmRwb2ludHM6IHt9LFxyXG5cdGVudjoge1xyXG5cdFx0cHJvZHVjdGlvbjogZmFsc2UsXHJcblx0XHRmcm9udGVuZF9zZXJ2ZXI6IFwiZnJvbnRlbmQvc2VydmVyL2RpZC9ub3Qvc2V0XCJcclxuXHR9XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgTU9EVUxFX0NPTkZJR19UT0tFTiA9IG5ldyBJbmplY3Rpb25Ub2tlbjxEaWFncmFtTW9kdWxlQ29uZmlnPihcIkRpYWdyYW1Nb2R1bGVDb25maWdcIik7XHJcbiIsImltcG9ydCB7IERpYWdyYW1Nb2RlbCB9IGZyb20gXCIuL2RpYWdyYW0ubW9kZWxcIjtcclxuXHJcbmV4cG9ydCBuYW1lc3BhY2UgR2V0RGlhZ3JhbXNBcGlNb2RlbCB7XHJcblx0ZXhwb3J0IGNsYXNzIFJlcXVlc3Qge1xyXG5cdFx0ZGlhZ3JhbTogc3RyaW5nO1xyXG5cclxuXHRcdGNvbnN0cnVjdG9yKGluaXRWYWx1ZTogR2V0RGlhZ3JhbXNBcGlNb2RlbC5SZXF1ZXN0ID0ge30gYXMgR2V0RGlhZ3JhbXNBcGlNb2RlbC5SZXF1ZXN0KSB7XHJcblx0XHRcdE9iamVjdC5rZXlzKGluaXRWYWx1ZSkuZm9yRWFjaChrZXkgPT4gKHRoaXNba2V5XSA9IGluaXRWYWx1ZVtrZXldKSk7XHJcblx0XHR9XHJcblxyXG5cdFx0Z2V0UmVxdWVzdEJvZHkoKSB7XHJcblx0XHRcdHJldHVybiB7fTtcclxuXHRcdH1cclxuXHJcblx0XHQvL3N0YXRpYyBnZXQgZm9ybUdyb3VwKCkge1xyXG5cdFx0Ly8gcmV0dXJuIG5ldyBGb3JtR3JvdXAoe1xyXG5cdFx0Ly8gICBkaWFncmFtOiBuZXcgRm9ybUNvbnRyb2woJycsIFtWYWxpZGF0b3JzLm1pbkxlbmd0aCg4KSwgVmFsaWRhdG9ycy5yZXF1aXJlZF0pXHJcblx0XHQvLyB9KVxyXG5cdFx0Ly99XHJcblx0fVxyXG5cclxuXHRleHBvcnQgY2xhc3MgUmVzcG9uc2Uge1xyXG5cdFx0UmVzdWx0OiBEaWFncmFtTW9kZWxbXTtcclxuXHRcdGNvbnN0cnVjdG9yKCkge31cclxuXHR9XHJcbn1cclxuIiwiaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSBcIkBuZ3J4L3N0b3JlXCI7XHJcblxyXG5pbXBvcnQgeyBHZXREaWFncmFtc0FwaU1vZGVsIH0gZnJvbSBcIi4uL21vZGVscy9nZXQtZGlhZ3JhbXMtYXBpLm1vZGVsXCI7XHJcblxyXG5leHBvcnQgZW51bSBEaWFncmFtc0FjdGlvblR5cGVzIHtcclxuXHRHRVRfRElBR1JBTSA9IFwiW0RJQUdSQU1dIEdFVF9ESUFHUkFNXCIsXHJcblx0R0VUX0RJQUdSQU1fU1RBUlQgPSBcIltESUFHUkFNXSBHRVRfRElBR1JBTV9TVEFSVFwiLFxyXG5cdEdFVF9ESUFHUkFNX1NVQ0NFRUQgPSBcIltESUFHUkFNXSBHRVRfRElBR1JBTV9TVUNDRUVEXCIsXHJcblx0R0VUX0RJQUdSQU1fRkFJTEVEID0gXCJbRElBR1JBTV0gR0VUX0RJQUdSQU1fRkFJTEVEXCJcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEdldERpYWdyYW1zIGltcGxlbWVudHMgQWN0aW9uIHtcclxuXHRyZWFkb25seSB0eXBlID0gRGlhZ3JhbXNBY3Rpb25UeXBlcy5HRVRfRElBR1JBTTtcclxufVxyXG5leHBvcnQgY2xhc3MgR2V0RGlhZ3JhbXNTdGFydCBpbXBsZW1lbnRzIEFjdGlvbiB7XHJcblx0cmVhZG9ubHkgdHlwZSA9IERpYWdyYW1zQWN0aW9uVHlwZXMuR0VUX0RJQUdSQU1fU1RBUlQ7XHJcbn1cclxuZXhwb3J0IGNsYXNzIEdldERpYWdyYW1zU3VjY2VlZCBpbXBsZW1lbnRzIEFjdGlvbiB7XHJcblx0cmVhZG9ubHkgdHlwZSA9IERpYWdyYW1zQWN0aW9uVHlwZXMuR0VUX0RJQUdSQU1fU1VDQ0VFRDtcclxuXHRjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogR2V0RGlhZ3JhbXNBcGlNb2RlbC5SZXNwb25zZSkge31cclxufVxyXG5leHBvcnQgY2xhc3MgR2V0RGlhZ3JhbXNGYWlsZWQgaW1wbGVtZW50cyBBY3Rpb24ge1xyXG5cdHJlYWRvbmx5IHR5cGUgPSBEaWFncmFtc0FjdGlvblR5cGVzLkdFVF9ESUFHUkFNX0ZBSUxFRDtcclxufVxyXG5cclxuZXhwb3J0IHR5cGUgRGlhZ3JhbXNBY3Rpb24gPSBHZXREaWFncmFtcyB8IEdldERpYWdyYW1zU3RhcnQgfCBHZXREaWFncmFtc1N1Y2NlZWQgfCBHZXREaWFncmFtc0ZhaWxlZDtcclxuIiwiaW1wb3J0IHsgR2V0RGlhZ3JhbXNBcGlNb2RlbCB9IGZyb20gXCIuLi9tb2RlbHMvZ2V0LWRpYWdyYW1zLWFwaS5tb2RlbFwiO1xyXG5pbXBvcnQgeyBEaWFncmFtc0FjdGlvblR5cGVzLCBEaWFncmFtc0FjdGlvbiB9IGZyb20gXCIuLi9hY3Rpb25zL2RpYWdyYW1zLmFjdGlvbnNcIjtcclxuXHJcbmNvbnNvbGUubG9nKEdldERpYWdyYW1zQXBpTW9kZWwpO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTdGF0ZSB7XHJcblx0bG9hZGVkOiBib29sZWFuO1xyXG5cdGRpYWdyYW06IEdldERpYWdyYW1zQXBpTW9kZWwuUmVzcG9uc2U7XHJcbn1cclxuZXhwb3J0IGNvbnN0IGluaXRpYWxTdGF0ZTogU3RhdGUgPSB7XHJcblx0bG9hZGVkOiBmYWxzZSxcclxuXHRkaWFncmFtOiB7XHJcblx0XHRSZXN1bHQ6IFtdXHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGRpYWdyYW1SZWR1Y2VyKHN0YXRlID0gaW5pdGlhbFN0YXRlLCBhY3Rpb246IERpYWdyYW1zQWN0aW9uKTogU3RhdGUge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgRGlhZ3JhbXNBY3Rpb25UeXBlcy5HRVRfRElBR1JBTToge1xyXG5cdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdC4uLnN0YXRlLFxyXG5cdFx0XHRcdGxvYWRlZDogdHJ1ZVxyXG5cdFx0XHRcdC8vIGRpYWdyYW06IGFjdGlvbi5wYXlsb2FkLFxyXG5cdFx0XHR9O1xyXG5cdFx0fVxyXG5cdFx0Y2FzZSBEaWFncmFtc0FjdGlvblR5cGVzLkdFVF9ESUFHUkFNX1NUQVJUOiB7XHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0Li4uc3RhdGUsXHJcblx0XHRcdFx0bG9hZGVkOiB0cnVlXHJcblx0XHRcdFx0Ly8gIGRpYWdyYW06IGFjdGlvbi5wYXlsb2FkLFxyXG5cdFx0XHR9O1xyXG5cdFx0fVxyXG5cclxuXHRcdGRlZmF1bHQ6IHtcclxuXHRcdFx0cmV0dXJuIHN0YXRlO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IERpYWdyYW1JbmZvID0gKHN0YXRlOiBTdGF0ZSkgPT4gc3RhdGUuZGlhZ3JhbTtcclxuIiwiaW1wb3J0IHsgRm9ybUdyb3VwLCBGb3JtQ29udHJvbCwgVmFsaWRhdG9ycyB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuXHJcbmltcG9ydCB7IEh0dHBSZXF1ZXN0QmFzZU1vZGVsIH0gZnJvbSBcIkBzb3VzaGlhbnMvc2hhcmVkXCI7XHJcblxyXG5pbXBvcnQgeyBEaWFncmFtTW9kZWwgfSBmcm9tIFwiLi9kaWFncmFtLm1vZGVsXCI7XHJcblxyXG5leHBvcnQgbmFtZXNwYWNlIEVkaXREaWFncmFtQXBpTW9kZWwge1xyXG5cdGV4cG9ydCBjbGFzcyBSZXF1ZXN0IHtcclxuXHRcdGNvbnN0cnVjdG9yKHBhcmFtczogUmVxdWVzdCkge31cclxuXHRcdGdldFJlcXVlc3RRdWVyeVBhcmFtcygpIHtcclxuXHRcdFx0cmV0dXJuIHt9O1xyXG5cdFx0fVxyXG5cdFx0Ly8gVE9ETzpcclxuXHRcdHN0YXRpYyBnZXQgZm9ybUdyb3VwKCkge1xyXG5cdFx0XHRyZXR1cm4gbmV3IEZvcm1Hcm91cCh7XHJcblx0XHRcdFx0TmFtZTogbmV3IEZvcm1Db250cm9sKFwiXCIsIFsgVmFsaWRhdG9ycy5yZXF1aXJlZCBdKSxcclxuXHRcdFx0XHRJc0FjdGl2ZTogbmV3IEZvcm1Db250cm9sKFwidHJ1ZVwiLCBbIFZhbGlkYXRvcnMucmVxdWlyZWQgXSksXHJcblx0XHRcdFx0Um91dGU6IG5ldyBGb3JtQ29udHJvbChcIlwiLCBbIFZhbGlkYXRvcnMucmVxdWlyZWQgXSlcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRleHBvcnQgY2xhc3MgUmVzcG9uc2Uge1xyXG5cdFx0UmVzdWx0OiBEaWFncmFtTW9kZWw7XHJcblx0XHRjb25zdHJ1Y3RvcigpIHt9XHJcblx0fVxyXG59XHJcbiIsImltcG9ydCB7IEFjdGlvbiB9IGZyb20gXCJAbmdyeC9zdG9yZVwiO1xyXG5cclxuaW1wb3J0IHsgRWRpdERpYWdyYW1BcGlNb2RlbCB9IGZyb20gXCIuLi9tb2RlbHMvZWRpdC1kaWFncmFtLWFwaS5tb2RlbFwiO1xyXG5cclxuZXhwb3J0IGVudW0gRWRpdERpYWdyYW1BY3Rpb25UeXBlcyB7XHJcblx0RURJVF9ESUFHUkFNID0gXCJbRElBR1JBTV1bRURJVF0gRURJVF9ESUFHUkFNXCIsXHJcblx0RURJVF9ESUFHUkFNX1NUQVJUID0gXCJbRElBR1JBTV1bRURJVF0gRURJVF9ESUFHUkFNX1NUQVJUXCIsXHJcblx0RURJVF9ESUFHUkFNX1NVQ0NFRUQgPSBcIltESUFHUkFNXVtFRElUXSBFRElUX0RJQUdSQU1fU1VDQ0VFRFwiLFxyXG5cdEVESVRfRElBR1JBTV9GQUlMRUQgPSBcIltESUFHUkFNXVtFRElUXSBFRElUX0RJQUdSQU1fRkFJTEVEXCJcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEVkaXREaWFncmFtQWN0aW9uIGltcGxlbWVudHMgQWN0aW9uIHtcclxuXHRyZWFkb25seSB0eXBlID0gRWRpdERpYWdyYW1BY3Rpb25UeXBlcy5FRElUX0RJQUdSQU07XHJcblx0Y29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IEVkaXREaWFncmFtQXBpTW9kZWwuUmVzcG9uc2UpIHt9XHJcbn1cclxuZXhwb3J0IGNsYXNzIEVkaXREaWFncmFtQWN0aW9uU3RhcnQgaW1wbGVtZW50cyBBY3Rpb24ge1xyXG5cdHJlYWRvbmx5IHR5cGUgPSBFZGl0RGlhZ3JhbUFjdGlvblR5cGVzLkVESVRfRElBR1JBTV9TVEFSVDtcclxuXHRjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogRWRpdERpYWdyYW1BcGlNb2RlbC5SZXNwb25zZSkge31cclxufVxyXG5leHBvcnQgY2xhc3MgRWRpdERpYWdyYW1BY3Rpb25TdWNjZWVkIGltcGxlbWVudHMgQWN0aW9uIHtcclxuXHRyZWFkb25seSB0eXBlID0gRWRpdERpYWdyYW1BY3Rpb25UeXBlcy5FRElUX0RJQUdSQU1fU1VDQ0VFRDtcclxuXHRjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogRWRpdERpYWdyYW1BcGlNb2RlbC5SZXNwb25zZSkge31cclxufVxyXG5leHBvcnQgY2xhc3MgRWRpdERpYWdyYW1BY3Rpb25GYWlsZWQgaW1wbGVtZW50cyBBY3Rpb24ge1xyXG5cdHJlYWRvbmx5IHR5cGUgPSBFZGl0RGlhZ3JhbUFjdGlvblR5cGVzLkVESVRfRElBR1JBTV9GQUlMRUQ7XHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIEVkaXREaWFncmFtQWN0aW9ucyA9XHJcblx0fCBFZGl0RGlhZ3JhbUFjdGlvblxyXG5cdHwgRWRpdERpYWdyYW1BY3Rpb25TdGFydFxyXG5cdHwgRWRpdERpYWdyYW1BY3Rpb25TdWNjZWVkXHJcblx0fCBFZGl0RGlhZ3JhbUFjdGlvbkZhaWxlZDtcclxuIiwiaW1wb3J0IHsgcmVzcG9uc2VTdGF0dXNUeXBlcyB9IGZyb20gXCJAc291c2hpYW5zL3NoYXJlZFwiO1xyXG5cclxuaW1wb3J0IHsgRWRpdERpYWdyYW1BcGlNb2RlbCB9IGZyb20gXCIuLi9tb2RlbHMvZWRpdC1kaWFncmFtLWFwaS5tb2RlbFwiO1xyXG5pbXBvcnQgeyBFZGl0RGlhZ3JhbUFjdGlvblR5cGVzLCBFZGl0RGlhZ3JhbUFjdGlvbnMgfSBmcm9tIFwiLi4vYWN0aW9ucy9lZGl0LWRpYWdyYW0uYWN0aW9uc1wiO1xyXG5cclxuY29uc29sZS5sb2coRWRpdERpYWdyYW1BcGlNb2RlbCk7XHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RhdGUge1xyXG5cdHN0YXR1czogcmVzcG9uc2VTdGF0dXNUeXBlcztcclxuXHRkYXRhOiBFZGl0RGlhZ3JhbUFwaU1vZGVsLlJlc3BvbnNlO1xyXG59XHJcbmV4cG9ydCBjb25zdCBpbml0aWFsU3RhdGU6IFN0YXRlID0ge1xyXG5cdHN0YXR1czogXCJwcmlzdGluZVwiLFxyXG5cdGRhdGE6IHsgUmVzdWx0OiB7fSB9IGFzIEVkaXREaWFncmFtQXBpTW9kZWwuUmVzcG9uc2VcclxufTtcclxuZXhwb3J0IGZ1bmN0aW9uIFJlZHVjZXIoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbjogRWRpdERpYWdyYW1BY3Rpb25zKTogU3RhdGUge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgRWRpdERpYWdyYW1BY3Rpb25UeXBlcy5FRElUX0RJQUdSQU06IHtcclxuXHRcdFx0cmV0dXJuIHtcclxuXHRcdFx0XHQuLi5zdGF0ZSxcclxuXHRcdFx0XHRzdGF0dXM6IFwiZGlydHlcIixcclxuXHRcdFx0XHRkYXRhOiBuZXcgRWRpdERpYWdyYW1BcGlNb2RlbC5SZXNwb25zZSgpXHJcblx0XHRcdH07XHJcblx0XHR9XHJcblx0XHRjYXNlIEVkaXREaWFncmFtQWN0aW9uVHlwZXMuRURJVF9ESUFHUkFNX1NUQVJUOiB7XHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0Li4uc3RhdGUsXHJcblx0XHRcdFx0c3RhdHVzOiBcInBlbmRpbmdcIixcclxuXHRcdFx0XHRkYXRhOiBuZXcgRWRpdERpYWdyYW1BcGlNb2RlbC5SZXNwb25zZSgpXHJcblx0XHRcdH07XHJcblx0XHR9XHJcblx0XHRjYXNlIEVkaXREaWFncmFtQWN0aW9uVHlwZXMuRURJVF9ESUFHUkFNX1NVQ0NFRUQ6IHtcclxuXHRcdFx0cmV0dXJuIHtcclxuXHRcdFx0XHQuLi5zdGF0ZSxcclxuXHRcdFx0XHRzdGF0dXM6IFwic3VjY2VlZFwiXHJcblx0XHRcdH07XHJcblx0XHR9XHJcblx0XHRjYXNlIEVkaXREaWFncmFtQWN0aW9uVHlwZXMuRURJVF9ESUFHUkFNX0ZBSUxFRDoge1xyXG5cdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdC4uLnN0YXRlLFxyXG5cdFx0XHRcdHN0YXR1czogXCJmYWlsZWRcIlxyXG5cdFx0XHR9O1xyXG5cdFx0fVxyXG5cclxuXHRcdGRlZmF1bHQ6IHtcclxuXHRcdFx0cmV0dXJuIHN0YXRlO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IEVkaXREaWFncmFtSW5mbyA9IChzdGF0ZTogU3RhdGUpID0+IHN0YXRlLmRhdGE7XHJcbiIsImltcG9ydCB7IFBhcmVudEd1YXJkQWN0aW9uIH0gZnJvbSBcIi4uL2FjdGlvbnMvcGFyZW50LWd1YXJkLmFjdGlvbnNcIjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RhdGUge1xyXG5cdHJvdXRlOiBzdHJpbmc7XHJcblx0cmVzdWx0OiBib29sZWFuO1xyXG59XHJcbmV4cG9ydCBjb25zdCBpbml0aWFsU3RhdGU6IFN0YXRlID0ge1xyXG5cdHJvdXRlOiBcIlwiLFxyXG5cdHJlc3VsdDogZmFsc2VcclxufTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBQYXJlbnRHdWFyZFJlZHVjZXIoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbjogUGFyZW50R3VhcmRBY3Rpb24pOiBTdGF0ZSB7XHJcblx0c3dpdGNoIChhY3Rpb24udHlwZSkge1xyXG5cdFx0ZGVmYXVsdDoge1xyXG5cdFx0XHRyZXR1cm4gc3RhdGU7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgdmFyIGdldFBhcmVudFJvdXRpbmdHdWFyZCA9IChzdGF0ZTogU3RhdGUpID0+IHN0YXRlO1xyXG4iLCJpbXBvcnQgeyBjcmVhdGVTZWxlY3RvciwgY3JlYXRlRmVhdHVyZVNlbGVjdG9yLCBNZW1vaXplZFNlbGVjdG9yIH0gZnJvbSBcIkBuZ3J4L3N0b3JlXCI7XHJcblxyXG5pbXBvcnQgKiBhcyBEaWFncmFtc1JlZHVjZXIgZnJvbSBcIi4vZGlhZ3JhbXMucmVkdWNlclwiO1xyXG5pbXBvcnQgKiBhcyBmcm9tRWRpdERpYWdyYW0gZnJvbSBcIi4vZWRpdC1kaWFncmFtLnJlZHVjZXJcIjtcclxuaW1wb3J0ICogYXMgcGFyZW50R3VhcmRSZWR1Y2VyIGZyb20gXCIuL3BhcmVudC1ndWFyZC5yZWR1Y2VyXCI7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERpYWdyYW1TdGF0ZSB7XHJcblx0ZGlhZ3JhbXM6IERpYWdyYW1zUmVkdWNlci5TdGF0ZTtcclxuXHRlZGl0RGlhZ3JhbTogZnJvbUVkaXREaWFncmFtLlN0YXRlO1xyXG5cdHBhcmVudEd1YXJkOiBwYXJlbnRHdWFyZFJlZHVjZXIuU3RhdGU7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBEaWFncmFtUmVkdWNlcnMgPSB7XHJcblx0ZGlhZ3JhbXM6IERpYWdyYW1zUmVkdWNlci5kaWFncmFtUmVkdWNlcixcclxuXHRlZGl0RGlhZ3JhbTogZnJvbUVkaXREaWFncmFtLlJlZHVjZXIsXHJcblx0cGFyZW50R3VhcmQ6IHBhcmVudEd1YXJkUmVkdWNlci5QYXJlbnRHdWFyZFJlZHVjZXJcclxufTtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmVhdHVyZVN0YXRlIHtcclxuXHRcImRpYWdyYW1cIjogRGlhZ3JhbVN0YXRlO1xyXG59XHJcblxyXG4vLyNyZWdpb24gc2VsZWN0b3JzXHJcblxyXG5leHBvcnQgY29uc3Qgc2VsZWN0RmVhdHVyZVN0YXRlID0gY3JlYXRlRmVhdHVyZVNlbGVjdG9yPERpYWdyYW1TdGF0ZT4oXCJkaWFncmFtXCIpO1xyXG5cclxuLy8gZXhwb3J0IGNvbnN0IGdldERpYWdyYW1JbmZvcm1hdGlvblN0YXR1cyA9IGNyZWF0ZVNlbGVjdG9yKFxyXG4vLyAgIHNlbGVjdEZlYXR1cmVTdGF0ZSxcclxuLy8gICAoc3RhdGU6IERpYWdyYW1TdGF0ZSkgPT4gc3RhdGUuZGlhZ3JhbVxyXG4vLyApO1xyXG5cclxuLy8jcmVnaW9uIGVkaXQgZGlhZ3JhbVxyXG5leHBvcnQgY29uc3Qgc2VsZWN0RWRpdERpYWdyYW1TdGF0ZSA9IGNyZWF0ZVNlbGVjdG9yKHNlbGVjdEZlYXR1cmVTdGF0ZSwgKHN0YXRlOiBEaWFncmFtU3RhdGUpID0+IHN0YXRlLmVkaXREaWFncmFtKTtcclxuIiwiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgSW5qZWN0b3IgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSBcInJ4anMvT2JzZXJ2YWJsZVwiO1xyXG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QsIFN1YnNjcmlwdGlvbiB9IGZyb20gXCJyeGpzXCI7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuXHRzZWxlY3RvcjogXCJkaWFncmFtLXNlcnZlci1zdGF0dXNcIixcclxuXHR0ZW1wbGF0ZTogYDxkaXYgKm5nSWY9XCJkYXRhTG9hZGVkIHwgYXN5bmNcIj5cclxuICA8IS0tIDxtYXQtaWNvbiBbbmdDbGFzc109XCJkYXRhU3RhdHVzJCA/ICdjb25uZWN0ZWQnIDogJ2Rpc2Nvbm5lY3RlZCdcIj5cclxuICAgIGZpYmVyX21hbnVhbF9yZWNvcmRcclxuICA8L21hdC1pY29uPiAtLT5cclxuICA8IS0tIDxzcGFuICpuZ0lmPVwiZGF0YVN0YXR1cyRcIj57e2RhdGEuV2lkZ2V0LmJvb2xlYW5vLlN1Y2Nlc3NNZXNzYWdlfX08L3NwYW4+XHJcbiAgPHNwYW4gKm5nSWY9XCIhZGF0YVN0YXR1cyRcIj57e2RhdGEuV2lkZ2V0LmJvb2xlYW5vLkZhaWx1cmVNZXNzYWdlfX08L3NwYW4+IC0tPlxyXG48L2Rpdj5gLFxyXG5cdHN0eWxlczogW2AuZGlzY29ubmVjdGVke2NvbG9yOiNiYTMwMzB9LmNvbm5lY3RlZHtjb2xvcjojMzBhZTFjfS5udW1lcmlje2ZvbnQtc2l6ZToyLjRlbTtsaW5lLWhlaWdodDoxLjh9Lm51bWVyaWMudGl0bGV7Zm9udC1mYW1pbHk6aXJhbi1zYW5zLWJvbGQsVGFob21hO2ZvbnQtc2l6ZToxLjFlbX1gXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgU2VydmVyU3RhdHVzRGlhZ3JhbUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblx0ZGF0YVN1YnNjcmlidGlvbjogU3Vic2NyaXB0aW9uO1xyXG5cdGRhdGFMb2FkZWQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KGZhbHNlKTtcclxuXHRfZGF0YTtcclxuXHRASW5wdXQoKVxyXG5cdHNldCBkYXRhKGRhdGEpIHtcclxuXHRcdHRoaXMuX2RhdGEgPSBkYXRhO1xyXG5cdFx0dGhpcy5kYXRhTG9hZGVkLm5leHQodHJ1ZSk7XHJcblx0fVxyXG5cdGdldCBkYXRhKCkge1xyXG5cdFx0cmV0dXJuIHRoaXMuX2RhdGE7XHJcblx0fVxyXG5cclxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIGluamVjdG9yOiBJbmplY3Rvcikge1xyXG5cdFx0dGhpcy5kYXRhID0gdGhpcy5pbmplY3Rvci5nZXQoXCJkYXRhXCIpO1xyXG5cdH1cclxuXHJcblx0dGltZUNoYW5nZShlKSB7XHJcblx0XHQvLyB0aGlzLmRhdGFTdWJzY3JpYnRpb24udW5zdWJzY3JpYmUoKTtcclxuXHRcdC8vIHRoaXMuZGF0YVN1YnNjcmlidGlvbiA9IHRoaXMuZGlhZ3JhbVNlcnZpY2UuZ2V0RGF0YSh0aGlzLmRhdGEuU291cmNlLl9pZCwgdGhpcy5kYXRhLlNvdXJjZS5JbnRlcnZhbClcclxuXHRcdC8vICAgLnN1YnNjcmliZShkYXRhID0+IHtcclxuXHRcdC8vICAgICBkZWJ1Z2dlclxyXG5cdFx0Ly8gICAgIHRoaXMuY2hhcnQubG9hZCh7XHJcblx0XHQvLyAgICAgICBjb2x1bW5zOiB0aGlzLmRpYWdyYW1TZXJ2aWNlLmV4dHJhY3RfY29sdW1uc19mcm9tX2RhdGEoZGF0YSwgdGhpcy5kYXRhLkNoYXJ0LkNvbHVtbk1hcHBpbmdzKVxyXG5cdFx0Ly8gICAgIH0pO1xyXG5cdFx0Ly8gICB9KVxyXG5cdH1cclxuXHRuZ09uSW5pdCgpIHt9XHJcbn1cclxuIiwiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgSW5qZWN0b3IsIE9uRGVzdHJveSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwicnhqcy9PYnNlcnZhYmxlXCI7XHJcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xyXG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tIFwicnhqcy9CZWhhdmlvclN1YmplY3RcIjtcclxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSBcInJ4anNcIjtcclxuXHJcbmltcG9ydCB7IERpYWdyYW1Nb2RlbCB9IGZyb20gXCIuLi8uLi9tb2RlbHMvZGlhZ3JhbS5tb2RlbFwiO1xyXG5pbXBvcnQgeyBEaWFncmFtU2VydmljZSB9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9kaWFncmFtLnNlcnZpY2VcIjtcclxuXHJcbkBDb21wb25lbnQoe1xyXG5cdHNlbGVjdG9yOiBcImRpYWdyYW0tcGFydGlhbC1jb25maWctZWRpdFwiLFxyXG5cdHRlbXBsYXRlOiBgPGZvcm0gW2Zvcm1Hcm91cF09XCJmb3JtR3JvdXBcIiBmeExheW91dD0nY29sdW1uJz5cclxuICA8ZGl2PlxyXG4gICAgPG1hdC1jaGVja2JveCAoY2hhbmdlKT1cImNvbmZpZ0NoYW5nZWQoKVwiIGZvcm1Db250cm9sTmFtZT1cIkxlZ2VuZFwiIGZ4RmxleEZpbGw+w5nChsOZwoXDmMKnw5vCjMOYwrQgw5jCqsOZwojDmMK2w5vCjMOYwq3DmMKnw5jCqjwvbWF0LWNoZWNrYm94PlxyXG4gIDwvZGl2PlxyXG4gIDxkaXY+XHJcbiAgICA8bWF0LWNoZWNrYm94IChjaGFuZ2UpPVwiY29uZmlnQ2hhbmdlZCgpXCIgZm9ybUNvbnRyb2xOYW1lPVwiWm9vbVwiIGZ4RmxleEZpbGw+w5jCqMOYwrLDmMKxw5rCr8OZwobDmcKFw5jCp8ObwozDm8KMPC9tYXQtY2hlY2tib3g+XHJcbiAgPC9kaXY+XHJcbiAgPGRpdj5cclxuICAgIDxtYXQtY2hlY2tib3ggKGNoYW5nZSk9XCJjb25maWdDaGFuZ2VkKClcIiBmb3JtQ29udHJvbE5hbWU9XCJTdWJjaGFydFwiIGZ4RmxleEZpbGw+w5nChsOZwoXDmMKnw5vCjMOYwrQgw5jCqMOYwrLDmMKxw5rCr8OZwobDmcKFw5jCp8ObwozDm8KMIMOYwq/DmMKxIMOYwrLDm8KMw5jCsSDDmcKGw5nChcOZwojDmMKvw5jCp8OYwrE8L21hdC1jaGVja2JveD5cclxuICA8L2Rpdj5cclxuICA8ZGl2PlxyXG4gICAgPG1hdC1jaGVja2JveCAoY2hhbmdlKT1cImNvbmZpZ0NoYW5nZWQoKVwiIGZvcm1Db250cm9sTmFtZT1cIlRvb2x0aXBcIiBmeEZsZXhGaWxsPsOZwobDmcKFw5jCp8ObwozDmMK0IMOYwqrDmcKIw5jCtsObwozDmMKtw5jCp8OYwqogw5jCqMOZwocgw5jCtcOZwojDmMKxw5jCqiDDmsKvw5jCscOZwojDmcKHw5vCjDwvbWF0LWNoZWNrYm94PlxyXG4gIDwvZGl2PlxyXG48L2Zvcm0+YCxcclxuXHRzdHlsZXM6IFtgOmhvc3R7d2lkdGg6MTAwJX0uZGlhZ3JhbS1ib3h7bWFyZ2luOjE1cHh9Lm51bWVyaWN7Zm9udC1zaXplOjNlbTtsaW5lLWhlaWdodDoxLjg7Zm9udC1mYW1pbHk6aXJhbi1zYW5zLWJvbGQsVGFob21hfS5udW1lcmljLnRpdGxle2ZvbnQtc2l6ZToxLjVlbX1gXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRGlhZ3JhbVBhcnRpYWxDb25maWdFZGl0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xyXG5cdGRhdGFTdWJzY3JpYnRpb246IFN1YnNjcmlwdGlvbjtcclxuXHRkYXRhTG9hZGVkID0gbmV3IEJlaGF2aW9yU3ViamVjdChmYWxzZSk7XHJcblx0X2RhdGE7XHJcblx0QElucHV0KClcclxuXHRzZXQgZGF0YShkYXRhKSB7XHJcblx0XHR0aGlzLl9kYXRhID0gZGF0YTtcclxuXHRcdHRoaXMuZGF0YUxvYWRlZC5uZXh0KHRydWUpO1xyXG5cdH1cclxuXHRnZXQgZGF0YSgpIHtcclxuXHRcdHJldHVybiB0aGlzLl9kYXRhO1xyXG5cdH1cclxuXHRkaWFncmFtU2VydmljZTogRGlhZ3JhbVNlcnZpY2U7XHJcblx0Zm9ybUdyb3VwOiBGb3JtR3JvdXA7XHJcblx0Y29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IpIHtcclxuXHRcdHRoaXMuZm9ybUdyb3VwID0gdGhpcy5pbmplY3Rvci5nZXQoXCJmb3JtR3JvdXBcIik7XHJcblx0XHR0aGlzLmRpYWdyYW1TZXJ2aWNlID0gdGhpcy5pbmplY3Rvci5nZXQoXCJkaWFncmFtU2VydmljZVwiKTtcclxuXHR9XHJcblx0bmdPbkluaXQoKSB7XHJcblx0XHQvLyB0aGlzLmRhdGFTdWJzY3JpYnRpb24gPSB0aGlzLmRpYWdyYW1TZXJ2aWNlLmdldERhdGEodGhpcy5kYXRhLlNvdXJjZS5Sb3V0ZSlcclxuXHRcdC8vICAgLnN1YnNjcmliZShkYXRhID0+IHtcclxuXHRcdC8vICAgICBkZWJ1Z2dlcjtcclxuXHRcdC8vICAgfSk7XHJcblx0fVxyXG5cdG5nT25EZXN0cm95KCkge1xyXG5cdFx0Ly8gdGhpcy5kYXRhU3Vic2NyaWJ0aW9uLnVuc3Vic2NyaWJlKCk7XHJcblx0fVxyXG5cdGNvbmZpZ0NoYW5nZWQoKSB7fVxyXG59XHJcbiIsImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIEluamVjdG9yLCBPbkRlc3Ryb3kgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSBcInJ4anMvT2JzZXJ2YWJsZVwiO1xyXG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tIFwicnhqcy9CZWhhdmlvclN1YmplY3RcIjtcclxuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XHJcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gXCJyeGpzXCI7XHJcblxyXG5pbXBvcnQgeyBEaWFncmFtU2VydmljZSB9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9kaWFncmFtLnNlcnZpY2VcIjtcclxuXHJcbkBDb21wb25lbnQoe1xyXG5cdHNlbGVjdG9yOiBcInBpZS1kaWFncmFtLXBhcnRpYWwtY29uZmlnXCIsXHJcblx0dGVtcGxhdGU6IGA8ZGl2ICpuZ0lmPVwiZGF0YUxvYWRlZCB8IGFzeW5jXCIgY2xhc3M9XCJkaWFncmFtLWJveFwiPlxyXG4gIDxmb3JtIFtmb3JtR3JvdXBdPVwiZm9ybUdyb3VwXCIgZnhMYXlvdXQ9J2NvbHVtbic+XHJcbiAgICA8ZGl2PlxyXG4gICAgICA8bWF0LWNoZWNrYm94IChjaGFuZ2UpPVwiY29uZmlnQ2hhbmdlZCgpXCIgZm9ybUNvbnRyb2xOYW1lPVwiTGVnZW5kXCIgZnhGbGV4RmlsbD7DmcKGw5nChcOYwqfDm8KMw5jCtCDDmMKqw5nCiMOYwrbDm8KMw5jCrcOYwqfDmMKqPC9tYXQtY2hlY2tib3g+XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXY+XHJcbiAgICAgIDxtYXQtY2hlY2tib3ggKGNoYW5nZSk9XCJjb25maWdDaGFuZ2VkKClcIiBmb3JtQ29udHJvbE5hbWU9XCJJc0FjdGl2ZVwiIGZ4RmxleEZpbGw+w5nCiMOYwrbDmMK5w5vCjMOYwqo8L21hdC1jaGVja2JveD5cclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdj5cclxuICAgICAgPG1hdC1jaGVja2JveCAoY2hhbmdlKT1cImNvbmZpZ0NoYW5nZWQoKVwiIGZvcm1Db250cm9sTmFtZT1cIkxlZ2VuZFwiIGZ4RmxleEZpbGw+w5nChsOZwoXDmMKnw5vCjMOYwrQgw5jCqsOZwojDmMK2w5vCjMOYwq3DmMKnw5jCqjwvbWF0LWNoZWNrYm94PlxyXG4gICAgPC9kaXY+XHJcbiAgICA8ZGl2PlxyXG4gICAgICA8bWF0LWNoZWNrYm94IChjaGFuZ2UpPVwiY29uZmlnQ2hhbmdlZCgpXCIgZm9ybUNvbnRyb2xOYW1lPVwiSXNBY3RpdmVcIiBmeEZsZXhGaWxsPsOZwojDmMK2w5jCucObwozDmMKqPC9tYXQtY2hlY2tib3g+XHJcbiAgICA8L2Rpdj5cclxuICA8L2Zvcm0+XHJcbiAgPGZvcm0gW2Zvcm1Hcm91cF09XCJkb251dEZvcm1Hcm91cFwiPlxyXG4gICAgPG1hdC1mb3JtLWZpZWxkPlxyXG4gICAgICA8aW5wdXQgbWF0SW5wdXQgcGxhY2Vob2xkZXI9XCLDmMK5w5nChsOZwojDmMKnw5nChlwiIGZvcm1Db250cm9sTmFtZT1cInRpdGxlXCI+XHJcbiAgICA8L21hdC1mb3JtLWZpZWxkPlxyXG4gIDwvZm9ybT5cclxuPC9kaXY+YCxcclxuXHRzdHlsZXM6IFtgOmhvc3R7d2lkdGg6MTAwJX0uZGlhZ3JhbS1ib3h7bWFyZ2luOjE1cHh9Lm51bWVyaWN7Zm9udC1zaXplOjNlbTtsaW5lLWhlaWdodDoxLjg7Zm9udC1mYW1pbHk6aXJhbi1zYW5zLWJvbGQsVGFob21hfS5udW1lcmljLnRpdGxle2ZvbnQtc2l6ZToxLjVlbX1gXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgUGllRGlhZ3JhbVBhcnRpYWxDb25maWdDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcblx0QE91dHB1dCgpIENvbmZpZ0NoYW5nZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblx0ZGF0YVN1YnNjcmlidGlvbjogU3Vic2NyaXB0aW9uO1xyXG5cdGRhdGFMb2FkZWQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KGZhbHNlKTtcclxuXHRfZGF0YUxvYWRlZDtcclxuXHRASW5wdXQoKVxyXG5cdHNldCBmb3JtR3JvdXAoZGF0YTogRm9ybUdyb3VwKSB7XHJcblx0XHRpZiAoIWRhdGEpIHJldHVybjtcclxuXHRcdHRoaXMuX2RhdGFMb2FkZWQgPSBkYXRhO1xyXG5cdFx0dGhpcy5kYXRhTG9hZGVkLm5leHQodHJ1ZSk7XHJcblx0fVxyXG5cdGdldCBmb3JtR3JvdXAoKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5fZGF0YUxvYWRlZDtcclxuXHR9XHJcblx0ZG9udXRGb3JtR3JvdXA6IEZvcm1Hcm91cDtcclxuXHRkaWFncmFtU2VydmljZTogRGlhZ3JhbVNlcnZpY2U7XHJcblx0Y29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IpIHtcclxuXHRcdHRoaXMuZm9ybUdyb3VwID0gdGhpcy5pbmplY3Rvci5nZXQoXCJmb3JtR3JvdXBcIik7XHJcblx0XHR0aGlzLmRpYWdyYW1TZXJ2aWNlID0gdGhpcy5pbmplY3Rvci5nZXQoXCJkaWFncmFtU2VydmljZVwiKTtcclxuXHRcdHRoaXMuZG9udXRGb3JtR3JvdXAgPSB0aGlzLmZvcm1Hcm91cC5jb250cm9scy5kb251dCBhcyBGb3JtR3JvdXA7XHJcblx0fVxyXG5cdG5nT25Jbml0KCkge1xyXG5cdFx0Ly8gdGhpcy5kYXRhU3Vic2NyaWJ0aW9uID0gdGhpcy5kaWFncmFtU2VydmljZS5nZXREYXRhKHRoaXMuZGF0YS5Tb3VyY2UuUm91dGUpXHJcblx0XHQvLyAgIC5zdWJzY3JpYmUoZGF0YSA9PiB7XHJcblx0XHQvLyAgICAgZGVidWdnZXI7XHJcblx0XHQvLyAgIH0pO1xyXG5cdH1cclxuXHRuZ09uRGVzdHJveSgpIHtcclxuXHRcdC8vIHRoaXMuZGF0YVN1YnNjcmlidGlvbi51bnN1YnNjcmliZSgpO1xyXG5cdH1cclxuXHRjb25maWdDaGFuZ2VkKCkge1xyXG5cdFx0dGhpcy5Db25maWdDaGFuZ2VkLmVtaXQoKTtcclxuXHR9XHJcbn1cclxuIiwiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgSW5qZWN0b3IsIE9uRGVzdHJveSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwicnhqcy9PYnNlcnZhYmxlXCI7XHJcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gXCJyeGpzL0JlaGF2aW9yU3ViamVjdFwiO1xyXG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tIFwicnhqc1wiO1xyXG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcclxuXHJcbmltcG9ydCB7IERpYWdyYW1TZXJ2aWNlIH0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL2RpYWdyYW0uc2VydmljZVwiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcblx0c2VsZWN0b3I6IFwiYm9vbGVhbm8td2lkZ2V0LXBhcnRpYWwtY29uZmlnXCIsXHJcblx0dGVtcGxhdGU6IGA8ZGl2ICpuZ0lmPVwiZGF0YUxvYWRlZCB8IGFzeW5jXCIgY2xhc3M9XCJkaWFncmFtLWJveFwiPlxyXG4gIDxmb3JtIFtmb3JtR3JvdXBdPVwiYm9vbGVhbm9Gb3JtR3JvdXBcIj5cclxuICAgIDxtYXQtZm9ybS1maWVsZD5cclxuICAgICAgPGlucHV0IG1hdElucHV0IHBsYWNlaG9sZGVyPVwiw5jCucOZwobDmcKIw5jCp8OZwoZcIiBmb3JtQ29udHJvbE5hbWU9XCJTdWNjZXNzTWVzc2FnZVwiPlxyXG4gICAgPC9tYXQtZm9ybS1maWVsZD5cclxuICAgIDxtYXQtZm9ybS1maWVsZD5cclxuICAgICAgPGlucHV0IG1hdElucHV0IHBsYWNlaG9sZGVyPVwiw5jCucOZwobDmcKIw5jCp8OZwoZcIiBmb3JtQ29udHJvbE5hbWU9XCJGYWlsdXJlTWVzc2FnZVwiPlxyXG4gICAgPC9tYXQtZm9ybS1maWVsZD5cclxuICA8L2Zvcm0+XHJcbjwvZGl2PmAsXHJcblx0c3R5bGVzOiBbYDpob3N0e3dpZHRoOjEwMCV9LmRpYWdyYW0tYm94e21hcmdpbjoxNXB4fS5udW1lcmlje2ZvbnQtc2l6ZTozZW07bGluZS1oZWlnaHQ6MS44O2ZvbnQtZmFtaWx5OmlyYW4tc2Fucy1ib2xkLFRhaG9tYX0ubnVtZXJpYy50aXRsZXtmb250LXNpemU6MS41ZW19YF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEJvb2xlYW5vV2lkZ2V0UGFydGlhbENvbmZpZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuXHRkYXRhU3Vic2NyaWJ0aW9uOiBTdWJzY3JpcHRpb247XHJcblx0ZGF0YUxvYWRlZCA9IG5ldyBCZWhhdmlvclN1YmplY3QoZmFsc2UpO1xyXG5cdF9kYXRhTG9hZGVkO1xyXG5cdEBJbnB1dCgpXHJcblx0c2V0IGZvcm1Hcm91cChkYXRhOiBGb3JtR3JvdXApIHtcclxuXHRcdGlmICghZGF0YSkgcmV0dXJuO1xyXG5cdFx0dGhpcy5fZGF0YUxvYWRlZCA9IGRhdGE7XHJcblx0XHR0aGlzLmRhdGFMb2FkZWQubmV4dCh0cnVlKTtcclxuXHR9XHJcblx0Z2V0IGZvcm1Hcm91cCgpIHtcclxuXHRcdHJldHVybiB0aGlzLl9kYXRhTG9hZGVkO1xyXG5cdH1cclxuXHRib29sZWFub0Zvcm1Hcm91cDogRm9ybUdyb3VwO1xyXG5cdGRpYWdyYW1TZXJ2aWNlOiBEaWFncmFtU2VydmljZTtcclxuXHJcblx0Y29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IpIHtcclxuXHRcdHRoaXMuZm9ybUdyb3VwID0gdGhpcy5pbmplY3Rvci5nZXQoXCJmb3JtR3JvdXBcIik7XHJcblx0XHR0aGlzLmRpYWdyYW1TZXJ2aWNlID0gdGhpcy5pbmplY3Rvci5nZXQoXCJkaWFncmFtU2VydmljZVwiKTtcclxuXHRcdHRoaXMuYm9vbGVhbm9Gb3JtR3JvdXAgPSB0aGlzLmZvcm1Hcm91cC5jb250cm9scy5ib29sZWFubyBhcyBGb3JtR3JvdXA7XHJcblx0fVxyXG5cdG5nT25Jbml0KCkge1xyXG5cdFx0Ly8gdGhpcy5kYXRhU3Vic2NyaWJ0aW9uID0gdGhpcy5kaWFncmFtU2VydmljZS5nZXREYXRhKHRoaXMuZGF0YS5Tb3VyY2UuUm91dGUpXHJcblx0XHQvLyAgIC5zdWJzY3JpYmUoZGF0YSA9PiB7XHJcblx0XHQvLyAgICAgZGVidWdnZXI7XHJcblx0XHQvLyAgIH0pO1xyXG5cdH1cclxuXHRuZ09uRGVzdHJveSgpIHtcclxuXHRcdC8vIHRoaXMuZGF0YVN1YnNjcmlidGlvbi51bnN1YnNjcmliZSgpO1xyXG5cdH1cclxufVxyXG4iLCJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBJbmplY3RvciwgT25EZXN0cm95IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gXCJyeGpzL09ic2VydmFibGVcIjtcclxuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSBcInJ4anMvQmVoYXZpb3JTdWJqZWN0XCI7XHJcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gXCJyeGpzXCI7XHJcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xyXG5cclxuaW1wb3J0IHsgRGlhZ3JhbVNlcnZpY2UgfSBmcm9tIFwiLi4vLi4vc2VydmljZXMvZGlhZ3JhbS5zZXJ2aWNlXCI7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuXHRzZWxlY3RvcjogXCJudW1lcmljLXdpZGdldC1wYXJ0aWFsLWNvbmZpZ1wiLFxyXG5cdHRlbXBsYXRlOiBgPGRpdiAqbmdJZj1cImRhdGFMb2FkZWQgfCBhc3luY1wiIGNsYXNzPVwiZGlhZ3JhbS1ib3hcIj5cclxuICA8Zm9ybSBbZm9ybUdyb3VwXT1cImRvbnV0Rm9ybUdyb3VwXCI+XHJcbiAgICA8bWF0LWZvcm0tZmllbGQ+XHJcbiAgICAgIDxpbnB1dCBtYXRJbnB1dCBwbGFjZWhvbGRlcj1cIsOYwrnDmcKGw5nCiMOYwqfDmcKGXCIgZm9ybUNvbnRyb2xOYW1lPVwidGl0bGVcIj5cclxuICAgIDwvbWF0LWZvcm0tZmllbGQ+XHJcbiAgICA8bWF0LWZvcm0tZmllbGQ+XHJcbiAgICAgIDxpbnB1dCBtYXRJbnB1dCBwbGFjZWhvbGRlcj1cIsOYwrnDmcKGw5nCiMOYwqfDmcKGXCIgZm9ybUNvbnRyb2xOYW1lPVwidGl0bGVcIj5cclxuICAgIDwvbWF0LWZvcm0tZmllbGQ+XHJcbiAgPC9mb3JtPlxyXG48L2Rpdj5gLFxyXG5cdHN0eWxlczogW2A6aG9zdHt3aWR0aDoxMDAlfS5kaWFncmFtLWJveHttYXJnaW46MTVweH0ubnVtZXJpY3tmb250LXNpemU6M2VtO2xpbmUtaGVpZ2h0OjEuODtmb250LWZhbWlseTppcmFuLXNhbnMtYm9sZCxUYWhvbWF9Lm51bWVyaWMudGl0bGV7Zm9udC1zaXplOjEuNWVtfWBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOdW1lcmljV2lkZ2V0UGFydGlhbENvbmZpZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuXHRkYXRhU3Vic2NyaWJ0aW9uOiBTdWJzY3JpcHRpb247XHJcblx0ZGF0YUxvYWRlZCA9IG5ldyBCZWhhdmlvclN1YmplY3QoZmFsc2UpO1xyXG5cdF9kYXRhTG9hZGVkO1xyXG5cdEBJbnB1dCgpXHJcblx0c2V0IGZvcm1Hcm91cChkYXRhOiBGb3JtR3JvdXApIHtcclxuXHRcdGlmICghZGF0YSkgcmV0dXJuO1xyXG5cdFx0dGhpcy5fZGF0YUxvYWRlZCA9IGRhdGE7XHJcblx0XHR0aGlzLmRhdGFMb2FkZWQubmV4dCh0cnVlKTtcclxuXHR9XHJcblx0Z2V0IGZvcm1Hcm91cCgpIHtcclxuXHRcdHJldHVybiB0aGlzLl9kYXRhTG9hZGVkO1xyXG5cdH1cclxuXHRkb251dEZvcm1Hcm91cDogRm9ybUdyb3VwO1xyXG5cdGRpYWdyYW1TZXJ2aWNlOiBEaWFncmFtU2VydmljZTtcclxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIGluamVjdG9yOiBJbmplY3Rvcikge1xyXG5cdFx0dGhpcy5mb3JtR3JvdXAgPSB0aGlzLmluamVjdG9yLmdldChcImZvcm1Hcm91cFwiKTtcclxuXHRcdHRoaXMuZGlhZ3JhbVNlcnZpY2UgPSB0aGlzLmluamVjdG9yLmdldChcImRpYWdyYW1TZXJ2aWNlXCIpO1xyXG5cdFx0dGhpcy5kb251dEZvcm1Hcm91cCA9IHRoaXMuZm9ybUdyb3VwLmNvbnRyb2xzLmRvbnV0IGFzIEZvcm1Hcm91cDtcclxuXHR9XHJcblx0bmdPbkluaXQoKSB7XHJcblx0XHQvLyB0aGlzLmRhdGFTdWJzY3JpYnRpb24gPSB0aGlzLmRpYWdyYW1TZXJ2aWNlLmdldERhdGEodGhpcy5kYXRhLlNvdXJjZS5Sb3V0ZSlcclxuXHRcdC8vICAgLnN1YnNjcmliZShkYXRhID0+IHtcclxuXHRcdC8vICAgICBkZWJ1Z2dlcjtcclxuXHRcdC8vICAgfSk7XHJcblx0fVxyXG5cdG5nT25EZXN0cm95KCkge1xyXG5cdFx0Ly8gdGhpcy5kYXRhU3Vic2NyaWJ0aW9uLnVuc3Vic2NyaWJlKCk7XHJcblx0fVxyXG59XHJcbiIsImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIEluamVjdG9yLCBPbkRlc3Ryb3kgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSBcInJ4anMvT2JzZXJ2YWJsZVwiO1xyXG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tIFwicnhqcy9CZWhhdmlvclN1YmplY3RcIjtcclxuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XHJcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gXCJyeGpzXCI7XHJcblxyXG5pbXBvcnQgeyBEaWFncmFtU2VydmljZSB9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9kaWFncmFtLnNlcnZpY2VcIjtcclxuXHJcbkBDb21wb25lbnQoe1xyXG5cdHNlbGVjdG9yOiBcImxpbmVhci1kaWFncmFtLXBhcnRpYWwtY29uZmlnXCIsXHJcblx0dGVtcGxhdGU6IGA8Zm9ybSBbZm9ybUdyb3VwXT1cImZvcm1Hcm91cFwiIGZ4TGF5b3V0PSdjb2x1bW4nPlxyXG4gIDxkaXY+XHJcbiAgICA8bWF0LWNoZWNrYm94IChjaGFuZ2UpPVwiY29uZmlnQ2hhbmdlZCgpXCIgZm9ybUNvbnRyb2xOYW1lPVwiTGVnZW5kXCIgZnhGbGV4RmlsbD7DmcKGw5nChcOYwqfDm8KMw5jCtCDDmMKqw5nCiMOYwrbDm8KMw5jCrcOYwqfDmMKqPC9tYXQtY2hlY2tib3g+XHJcbiAgPC9kaXY+XHJcbiAgPGRpdj5cclxuICAgIDxtYXQtY2hlY2tib3ggKGNoYW5nZSk9XCJjb25maWdDaGFuZ2VkKClcIiBmb3JtQ29udHJvbE5hbWU9XCJab29tXCIgZnhGbGV4RmlsbD7DmMKow5jCssOYwrHDmsKvw5nChsOZwoXDmMKnw5vCjMObwow8L21hdC1jaGVja2JveD5cclxuICA8L2Rpdj5cclxuICA8ZGl2PlxyXG4gICAgPG1hdC1jaGVja2JveCAoY2hhbmdlKT1cImNvbmZpZ0NoYW5nZWQoKVwiIGZvcm1Db250cm9sTmFtZT1cIlN1YmNoYXJ0XCIgZnhGbGV4RmlsbD7DmcKGw5nChcOYwqfDm8KMw5jCtCDDmMKow5jCssOYwrHDmsKvw5nChsOZwoXDmMKnw5vCjMObwowgw5jCr8OYwrEgw5jCssObwozDmMKxIMOZwobDmcKFw5nCiMOYwq/DmMKnw5jCsTwvbWF0LWNoZWNrYm94PlxyXG4gIDwvZGl2PlxyXG4gIDxkaXY+XHJcbiAgICA8bWF0LWNoZWNrYm94IChjaGFuZ2UpPVwiY29uZmlnQ2hhbmdlZCgpXCIgZm9ybUNvbnRyb2xOYW1lPVwiVG9vbHRpcFwiIGZ4RmxleEZpbGw+w5nChsOZwoXDmMKnw5vCjMOYwrQgw5jCqsOZwojDmMK2w5vCjMOYwq3DmMKnw5jCqiDDmMKow5nChyDDmMK1w5nCiMOYwrHDmMKqIMOawq/DmMKxw5nCiMOZwofDm8KMPC9tYXQtY2hlY2tib3g+XHJcbiAgPC9kaXY+XHJcbiAgPGRpdj5cclxuICAgIDxtYXQtY2hlY2tib3ggKGNoYW5nZSk9XCJjb25maWdDaGFuZ2VkKClcIiBmb3JtQ29udHJvbE5hbWU9XCJGbG93XCIgZnhGbGV4RmlsbD5GbG93PC9tYXQtY2hlY2tib3g+XHJcbiAgPC9kaXY+XHJcbjwvZm9ybT5gLFxyXG5cdHN0eWxlczogW2A6aG9zdHt3aWR0aDoxMDAlfS5kaWFncmFtLWJveHttYXJnaW46MTVweH0ubnVtZXJpY3tmb250LXNpemU6M2VtO2xpbmUtaGVpZ2h0OjEuODtmb250LWZhbWlseTppcmFuLXNhbnMtYm9sZCxUYWhvbWF9Lm51bWVyaWMudGl0bGV7Zm9udC1zaXplOjEuNWVtfWBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBMaW5lYXJEaWFncmFtUGFydGlhbENvbmZpZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuXHRkYXRhU3Vic2NyaWJ0aW9uOiBTdWJzY3JpcHRpb247XHJcblx0ZGF0YUxvYWRlZCA9IG5ldyBCZWhhdmlvclN1YmplY3QoZmFsc2UpO1xyXG5cdF9kYXRhO1xyXG5cdEBJbnB1dCgpXHJcblx0c2V0IGRhdGEoZGF0YSkge1xyXG5cdFx0dGhpcy5fZGF0YSA9IGRhdGE7XHJcblx0XHR0aGlzLmRhdGFMb2FkZWQubmV4dCh0cnVlKTtcclxuXHR9XHJcblx0Z2V0IGRhdGEoKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5fZGF0YTtcclxuXHR9XHJcblx0QE91dHB1dCgpIENvbmZpZ0NoYW5nZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblx0ZGlhZ3JhbVNlcnZpY2U6IERpYWdyYW1TZXJ2aWNlO1xyXG5cdGZvcm1Hcm91cDogRm9ybUdyb3VwO1xyXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yKSB7XHJcblx0XHR0aGlzLmZvcm1Hcm91cCA9IHRoaXMuaW5qZWN0b3IuZ2V0KFwiZm9ybUdyb3VwXCIpO1xyXG5cdFx0dGhpcy5kaWFncmFtU2VydmljZSA9IHRoaXMuaW5qZWN0b3IuZ2V0KFwiZGlhZ3JhbVNlcnZpY2VcIik7XHJcblx0fVxyXG5cdG5nT25Jbml0KCkge1xyXG5cdFx0Ly8gdGhpcy5kYXRhU3Vic2NyaWJ0aW9uID0gdGhpcy5kaWFncmFtU2VydmljZS5nZXREYXRhKHRoaXMuZGF0YS5Tb3VyY2UuUm91dGUpXHJcblx0XHQvLyAgIC5zdWJzY3JpYmUoZGF0YSA9PiB7XHJcblx0XHQvLyAgICAgZGVidWdnZXI7XHJcblx0XHQvLyAgIH0pO1xyXG5cdH1cclxuXHRuZ09uRGVzdHJveSgpIHtcclxuXHRcdC8vIHRoaXMuZGF0YVN1YnNjcmlidGlvbi51bnN1YnNjcmliZSgpO1xyXG5cdH1cclxuXHRjb25maWdDaGFuZ2VkKCkge1xyXG5cdFx0dGhpcy5Db25maWdDaGFuZ2VkLmVtaXQoKTtcclxuXHR9XHJcbn1cclxuIiwiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgSW5qZWN0b3IgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSBcInJ4anMvT2JzZXJ2YWJsZVwiO1xyXG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tIFwicnhqc1wiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcblx0c2VsZWN0b3I6IFwiZGlhZ3JhbS1zZXJ2ZXItY29ubmVjdGluZy10aW1lXCIsXHJcblx0dGVtcGxhdGU6IGA8ZGl2ICpuZ0lmPVwiZGF0YUxvYWRlZCB8IGFzeW5jXCI+XHJcbiAgPGRpdiBmeExheW91dEFsaWduPVwiY2VudGVyIGNlbnRlclwiIGNsYXNzPVwibnVtZXJpYyB0aXRsZVwiPnt7ZGF0YS5EZXNjcmlwdGlvbn19PC9kaXY+XHJcbiAgPCEtLSA8ZGl2IGZ4TGF5b3V0QWxpZ249XCJjZW50ZXIgY2VudGVyXCIgY2xhc3M9XCJudW1lcmljXCI+e3t0aW1lIHwgdGltZUNvdW50ZXJ9fTwvZGl2PiAtLT5cclxuICA8ZGl2IFtpZF09XCInZGlhZ3JhbV8nICsgZGF0YS5faWRcIj48L2Rpdj5cclxuPC9kaXY+YCxcclxuXHRzdHlsZXM6IFtgLm51bWVyaWN7Zm9udC1zaXplOjIuNGVtO2xpbmUtaGVpZ2h0OjEuOH0ubnVtZXJpYy50aXRsZXtmb250LWZhbWlseTppcmFuLXNhbnMtYm9sZCxUYWhvbWE7Zm9udC1zaXplOjEuMWVtfWBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTZXJ2ZXJDb25uZWN0aW5nVGltZURpYWdyYW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cdEBJbnB1dCgpIHRpbWU6IG51bWJlciA9IDA7XHJcblx0ZGF0YUxvYWRlZCA9IG5ldyBCZWhhdmlvclN1YmplY3QoZmFsc2UpO1xyXG5cdF9kYXRhO1xyXG5cdEBJbnB1dCgpXHJcblx0c2V0IGRhdGEoZGF0YSkge1xyXG5cdFx0dGhpcy5fZGF0YSA9IGRhdGE7XHJcblx0XHR0aGlzLmRhdGFMb2FkZWQubmV4dCh0cnVlKTtcclxuXHR9XHJcblx0Z2V0IGRhdGEoKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5fZGF0YTtcclxuXHR9XHJcblx0Y29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IpIHtcclxuXHRcdHRoaXMuZGF0YSA9IHRoaXMuaW5qZWN0b3IuZ2V0KFwiZGF0YVwiKTtcclxuXHRcdHNldEludGVydmFsKCgpID0+IHtcclxuXHRcdFx0dGhpcy50aW1lID0gdGhpcy50aW1lICsgMTtcclxuXHRcdH0sIDEwMDApO1xyXG5cdH1cclxuXHJcblx0bmdPbkluaXQoKSB7fVxyXG5cdHRpbWVDaGFuZ2UoZSkge1xyXG5cdFx0Ly8gdGhpcy5kYXRhU3Vic2NyaWJ0aW9uLnVuc3Vic2NyaWJlKCk7XHJcblx0XHQvLyB0aGlzLmRhdGFTdWJzY3JpYnRpb24gPSB0aGlzLmRpYWdyYW1TZXJ2aWNlLmdldERhdGEodGhpcy5kYXRhLlNvdXJjZS5Sb3V0ZSwgdGhpcy5kYXRhLlNvdXJjZS5TeW5jKVxyXG5cdFx0Ly8gICAgICAgICAuc3Vic2NyaWJlKGRhdGEgPT4ge1xyXG5cdFx0Ly8gICAgICAgICAgICAgICAgIHRoaXMuY2hhcnQubG9hZCh7XHJcblx0XHQvLyAgICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW5zOiB0aGlzLmRpYWdyYW1TZXJ2aWNlLmV4dHJhY3RfY29sdW1uc19mcm9tX2RhdGEoZGF0YSwgdGhpcy5kYXRhLkNoYXJ0LkNvbHVtbk1hcHBpbmdzKVxyXG5cdFx0Ly8gICAgICAgICAgICAgICAgIH0pO1xyXG5cdFx0Ly8gICAgICAgICB9KVxyXG5cdH1cclxufVxyXG4iLCJpbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3QgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5cclxuaW1wb3J0IHsgTU9EVUxFX0NPTkZJR19UT0tFTiwgRGlhZ3JhbU1vZHVsZUNvbmZpZywgTU9EVUxFX0RFRkFVTFRfQ09ORklHIH0gZnJvbSBcIi4uL2RpYWdyYW0uY29uZmlnXCI7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcblx0cHJvdmlkZWRJbjogXCJyb290XCJcclxufSlcclxuZXhwb3J0IGNsYXNzIERpYWdyYW1Db25maWd1cmF0aW9uU2VydmljZSB7XHJcblx0cHJpdmF0ZSBfY29uZmlnOiBEaWFncmFtTW9kdWxlQ29uZmlnO1xyXG5cdGdldCBjb25maWcoKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5fY29uZmlnO1xyXG5cdH1cclxuXHJcblx0Y29uc3RydWN0b3IoQEluamVjdChNT0RVTEVfQ09ORklHX1RPS0VOKSBjb25maWcpIHtcclxuXHRcdHRoaXMuX2NvbmZpZyA9IE9iamVjdC5hc3NpZ24oe30sIE1PRFVMRV9ERUZBVUxUX0NPTkZJRywgY29uZmlnKTtcclxuXHR9XHJcbn1cclxuIiwiaW1wb3J0IHsgRm9ybUdyb3VwLCBGb3JtQ29udHJvbCwgVmFsaWRhdG9ycywgRm9ybUFycmF5IH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XHJcblxyXG5pbXBvcnQgeyBIdHRwUmVxdWVzdEJhc2VNb2RlbCB9IGZyb20gXCJAc291c2hpYW5zL3NoYXJlZFwiO1xyXG5cclxuaW1wb3J0IHsgRGlhZ3JhbU1vZGVsIH0gZnJvbSBcIi4vZGlhZ3JhbS5tb2RlbFwiO1xyXG5pbXBvcnQgeyBTb3VyY2VNb2RlbCB9IGZyb20gXCIuL3NvdXJjZS5tb2RlbFwiO1xyXG5cclxuZXhwb3J0IG5hbWVzcGFjZSBBZGREaWFncmFtQXBpTW9kZWwge1xyXG5cdGV4cG9ydCBjbGFzcyBSZXF1ZXN0IGltcGxlbWVudHMgSHR0cFJlcXVlc3RCYXNlTW9kZWw8UmVxdWVzdD4ge1xyXG5cdFx0X2lkOiBzdHJpbmc7XHJcblx0XHROYW1lOiBzdHJpbmc7XHJcblx0XHRJc0FjdGl2ZTogQm9vbGVhbjtcclxuXHRcdFR5cGU6IHN0cmluZztcclxuXHRcdFR5cGVzOiB7IFtjb2x1bW5MYWJlbDogc3RyaW5nXTogc3RyaW5nIH07XHJcblx0XHRMZWdlbmQ6IEJvb2xlYW47XHJcblx0XHRTdWJjaGFydDogQm9vbGVhbjtcclxuXHRcdFpvb206IEJvb2xlYW47XHJcblx0XHRUb29sdGlwOiBCb29sZWFuO1xyXG5cdFx0Um91dGU6IHN0cmluZztcclxuXHRcdFN5bmM6IG51bWJlcjtcclxuXHRcdENvbG9yczogc3RyaW5nW107XHJcblx0XHRDb2x1bW5NYXBwaW5nczogeyBOYW1lUGF0aDogc3RyaW5nOyBWYWx1ZVBhdGg6IHN0cmluZyB9W107XHJcblx0XHRGbG93OiBzdHJpbmc7XHJcblx0XHRjb2x1bW5zOiBhbnlbXTtcclxuXHRcdENvbHM6IG51bWJlcjtcclxuXHRcdFJvd3M6IG51bWJlcjtcclxuXHRcdFRleHRDb2xvcjogU3RyaW5nO1xyXG5cdFx0QmFja2dyb3VuZENvbG9yOiBzdHJpbmc7XHJcblx0XHRib29sZWFubzogYW55O1xyXG5cdFx0U291cmNlOiBTb3VyY2VNb2RlbDtcclxuXHRcdEdyb3Vwczogc3RyaW5nW107XHJcblx0XHRjb25zdHJ1Y3Rvcihpbml0VmFsdWU6IEFkZERpYWdyYW1BcGlNb2RlbC5SZXF1ZXN0ID0ge30gYXMgQWRkRGlhZ3JhbUFwaU1vZGVsLlJlcXVlc3QpIHtcclxuXHRcdFx0T2JqZWN0LmtleXMoaW5pdFZhbHVlKS5mb3JFYWNoKGtleSA9PiAodGhpc1trZXldID0gaW5pdFZhbHVlW2tleV0pKTtcclxuXHRcdH1cclxuXHRcdGdldFJlcXVlc3RCb2R5KCkge1xyXG5cdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdF9pZDogdGhpcy5faWQsXHJcblx0XHRcdFx0TmFtZTogdGhpcy5OYW1lLFxyXG5cdFx0XHRcdElzQWN0aXZlOiB0aGlzLklzQWN0aXZlLFxyXG5cdFx0XHRcdFNvdXJjZTogdGhpcy5Tb3VyY2UsXHJcblx0XHRcdFx0VHlwZTogdGhpcy5UeXBlLFxyXG5cdFx0XHRcdEdyb3VwczogdGhpcy5Hcm91cHMsXHJcblx0XHRcdFx0V2lkZ2V0OiB7XHJcblx0XHRcdFx0XHRib29sZWFubzogdGhpcy5ib29sZWFub1xyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0Q2hhcnQ6IHtcclxuXHRcdFx0XHRcdGRhdGE6IHtcclxuXHRcdFx0XHRcdFx0dHlwZTogdGhpcy5UeXBlLFxyXG5cdFx0XHRcdFx0XHRjb2x1bW5zOiB0aGlzLmNvbHVtbnMsXHJcblx0XHRcdFx0XHRcdGNvbG9yczogdGhpcy5Db2xvcnMsXHJcblx0XHRcdFx0XHRcdHR5cGVzOiB0aGlzLlR5cGVzXHJcblx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0Q29sdW1uTWFwcGluZ3M6IHRoaXMuQ29sdW1uTWFwcGluZ3MsXHJcblx0XHRcdFx0XHRGbG93OiB0aGlzLkZsb3csXHJcblx0XHRcdFx0XHRsZWdlbmQ6IHtcclxuXHRcdFx0XHRcdFx0c2hvdzogdGhpcy5MZWdlbmRcclxuXHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRzdWJjaGFydDoge1xyXG5cdFx0XHRcdFx0XHRzaG93OiB0aGlzLlN1YmNoYXJ0XHJcblx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0em9vbToge1xyXG5cdFx0XHRcdFx0XHRlbmFibGVkOiB0aGlzLlpvb21cclxuXHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHR0b29sdGlwOiB7XHJcblx0XHRcdFx0XHRcdGdyb3VwZWQ6IHRoaXMuVG9vbHRpcFxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0Qm94OiB7XHJcblx0XHRcdFx0XHRDb2xzOiB0aGlzLkNvbHMsXHJcblx0XHRcdFx0XHRSb3dzOiB0aGlzLlJvd3MsXHJcblx0XHRcdFx0XHRUZXh0Q29sb3I6IHRoaXMuVGV4dENvbG9yLFxyXG5cdFx0XHRcdFx0QmFja2dyb3VuZENvbG9yOiB0aGlzLkJhY2tncm91bmRDb2xvclxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fTtcclxuXHRcdH1cclxuXHJcblx0XHRzdGF0aWMgZ2V0IGZvcm1Hcm91cCgpIHtcclxuXHRcdFx0cmV0dXJuIG5ldyBGb3JtR3JvdXAoe1xyXG5cdFx0XHRcdF9pZDogbmV3IEZvcm1Db250cm9sKFwiXCIsIFtdKSxcclxuXHRcdFx0XHROYW1lOiBuZXcgRm9ybUNvbnRyb2woXCJcIiwgWyBWYWxpZGF0b3JzLnJlcXVpcmVkIF0pLFxyXG5cdFx0XHRcdFN5bmM6IG5ldyBGb3JtQ29udHJvbCgwLCBbIFZhbGlkYXRvcnMucmVxdWlyZWQgXSksXHJcblx0XHRcdFx0SXNBY3RpdmU6IG5ldyBGb3JtQ29udHJvbChcInRydWVcIiwgWyBWYWxpZGF0b3JzLnJlcXVpcmVkIF0pLFxyXG5cdFx0XHRcdFR5cGU6IG5ldyBGb3JtQ29udHJvbChcInBpZVwiLCBbIFZhbGlkYXRvcnMucmVxdWlyZWQgXSksXHJcblx0XHRcdFx0R3JvdXBzOiBuZXcgRm9ybUNvbnRyb2woXCJcIiwgWyBWYWxpZGF0b3JzLnJlcXVpcmVkIF0pLFxyXG5cdFx0XHRcdExlZ2VuZDogbmV3IEZvcm1Db250cm9sKFwidHJ1ZVwiLCBbIFZhbGlkYXRvcnMucmVxdWlyZWQgXSksXHJcblx0XHRcdFx0U3ViY2hhcnQ6IG5ldyBGb3JtQ29udHJvbChcImZhbHNlXCIsIFsgVmFsaWRhdG9ycy5yZXF1aXJlZCBdKSxcclxuXHRcdFx0XHRab29tOiBuZXcgRm9ybUNvbnRyb2woXCJmYWxzZVwiLCBbIFZhbGlkYXRvcnMucmVxdWlyZWQgXSksXHJcblx0XHRcdFx0VG9vbHRpcDogbmV3IEZvcm1Db250cm9sKFwiZmFsc2VcIiwgWyBWYWxpZGF0b3JzLnJlcXVpcmVkIF0pLFxyXG5cdFx0XHRcdFJvdXRlOiBuZXcgRm9ybUNvbnRyb2woXCJcIiwgWyBWYWxpZGF0b3JzLnJlcXVpcmVkIF0pLFxyXG5cdFx0XHRcdFNvdXJjZTogbmV3IEZvcm1Db250cm9sKHt9LCBbIFZhbGlkYXRvcnMucmVxdWlyZWQgXSksXHJcblx0XHRcdFx0Y29sdW1uczogbmV3IEZvcm1Db250cm9sKFwiXCIsIFsgVmFsaWRhdG9ycy5yZXF1aXJlZCBdKSxcclxuXHRcdFx0XHRDb2xzOiBuZXcgRm9ybUNvbnRyb2woMSwgWyBWYWxpZGF0b3JzLnJlcXVpcmVkIF0pLFxyXG5cdFx0XHRcdFJvd3M6IG5ldyBGb3JtQ29udHJvbCgxLCBbIFZhbGlkYXRvcnMucmVxdWlyZWQgXSksXHJcblx0XHRcdFx0VGV4dENvbG9yOiBuZXcgRm9ybUNvbnRyb2woXCIjMDAwMDAwXCIsIFsgVmFsaWRhdG9ycy5yZXF1aXJlZCBdKSxcclxuXHRcdFx0XHRCYWNrZ3JvdW5kQ29sb3I6IG5ldyBGb3JtQ29udHJvbChcIiNmZmZmZmZcIiwgWyBWYWxpZGF0b3JzLnJlcXVpcmVkIF0pLFxyXG5cdFx0XHRcdENvbG9yczogbmV3IEZvcm1Hcm91cCh7fSksXHJcblx0XHRcdFx0VHlwZXM6IG5ldyBGb3JtR3JvdXAoe30pLFxyXG5cdFx0XHRcdENvbHVtbk1hcHBpbmdzOiBuZXcgRm9ybUFycmF5KFtdKSxcclxuXHRcdFx0XHRGbG93OiBuZXcgRm9ybUNvbnRyb2wodHJ1ZSksXHJcblx0XHRcdFx0ZG9udXQ6IG5ldyBGb3JtR3JvdXAoe1xyXG5cdFx0XHRcdFx0dGl0bGU6IG5ldyBGb3JtQ29udHJvbChcIkRlZmF1bHQgVGl0bGVcIilcclxuXHRcdFx0XHR9KSxcclxuXHRcdFx0XHRib29sZWFubzogbmV3IEZvcm1Hcm91cCh7XHJcblx0XHRcdFx0XHRTdWNjZXNzTWVzc2FnZTogbmV3IEZvcm1Db250cm9sKFwiU3VjY2Vzc01lc3NhZ2VcIiksXHJcblx0XHRcdFx0XHRGYWlsdXJlTWVzc2FnZTogbmV3IEZvcm1Db250cm9sKFwiRmFpbHVyZU1lc3NhZ2VcIilcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHR9XHJcblx0ZXhwb3J0IGNsYXNzIFJlc3BvbnNlIHtcclxuXHRcdFJlc3VsdDogRGlhZ3JhbU1vZGVsO1xyXG5cdFx0Y29uc3RydWN0b3IoKSB7fVxyXG5cdH1cclxufVxyXG4iLCJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gXCJAYW5ndWxhci9jb21tb24vaHR0cFwiO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJzY3JpcHRpb24sIFN1YmplY3QgfSBmcm9tIFwicnhqcy9SeFwiO1xyXG5pbXBvcnQgeyBTdG9yZSB9IGZyb20gXCJAbmdyeC9zdG9yZVwiO1xyXG5kZWNsYXJlIHZhciBjMzogYW55O1xyXG5cclxuaW1wb3J0IHsgRGlhZ3JhbUNvbmZpZ3VyYXRpb25TZXJ2aWNlIH0gZnJvbSBcIi4vZGlhZ3JhbS1jb25maWd1cmF0aW9uLnNlcnZpY2VcIjtcclxuaW1wb3J0IHsgRmVhdHVyZVN0YXRlIH0gZnJvbSBcIi4uL3JlZHVjZXJzXCI7XHJcbmltcG9ydCB7IEdldERpYWdyYW1zQXBpTW9kZWwgfSBmcm9tIFwiLi4vbW9kZWxzL2dldC1kaWFncmFtcy1hcGkubW9kZWxcIjtcclxuaW1wb3J0IHsgU291cmNlTW9kZWwgfSBmcm9tIFwiLi4vbW9kZWxzL3NvdXJjZS5tb2RlbFwiO1xyXG5pbXBvcnQgeyBBZGREaWFncmFtQXBpTW9kZWwgfSBmcm9tIFwiLi4vbW9kZWxzL2FkZC1kaWFncmFtLWFwaS5tb2RlbFwiO1xyXG5pbXBvcnQgeyBEaWFncmFtTW9kdWxlQ29uZmlnIH0gZnJvbSBcIi4uL2RpYWdyYW0uY29uZmlnXCI7XHJcbmltcG9ydCB7IHN3aXRjaE1hcCwgbWFwLCB0YWtlVW50aWwgfSBmcm9tIFwicnhqcy9vcGVyYXRvcnNcIjtcclxuXHJcbmRlY2xhcmUgdmFyIF86IGFueTtcclxuXHJcbkBJbmplY3RhYmxlKHtcclxuXHRwcm92aWRlZEluOiBcInJvb3RcIlxyXG59KVxyXG5leHBvcnQgY2xhc3MgRGlhZ3JhbVNlcnZpY2Uge1xyXG5cdGNvbmZpZzogRGlhZ3JhbU1vZHVsZUNvbmZpZztcclxuXHRjb25zdHJ1Y3RvcihcclxuXHRcdHByaXZhdGUgaHR0cDogSHR0cENsaWVudCxcclxuXHRcdHByaXZhdGUgc3RvcmU6IFN0b3JlPEZlYXR1cmVTdGF0ZT4sXHJcblx0XHRwcml2YXRlIGNvbmZpZ3VyYXRpb25TZXJ2aWNlOiBEaWFncmFtQ29uZmlndXJhdGlvblNlcnZpY2VcclxuXHQpIHtcclxuXHRcdHRoaXMuY29uZmlnID0gdGhpcy5jb25maWd1cmF0aW9uU2VydmljZS5jb25maWc7XHJcblx0fVxyXG5cclxuXHRnZXREaWFncmFtcygpOiBPYnNlcnZhYmxlPEdldERpYWdyYW1zQXBpTW9kZWwuUmVzcG9uc2U+IHtcclxuXHRcdHJldHVybiB0aGlzLmh0dHBcclxuXHRcdFx0LmdldDxHZXREaWFncmFtc0FwaU1vZGVsLlJlc3BvbnNlPih0aGlzLmNvbmZpZy5lbnYuZnJvbnRlbmRfc2VydmVyICsgXCIvYXBpL2RpYWdyYW1cIilcclxuXHRcdFx0Lm1hcCgocmVzcG9uc2UpID0+IHJlc3BvbnNlKVxyXG5cdFx0XHQuY2F0Y2goKGVycikgPT4ge1xyXG5cdFx0XHRcdHJldHVybiBPYnNlcnZhYmxlLnRocm93KGVycik7XHJcblx0XHRcdH0pO1xyXG5cdH1cclxuXHRnZXRTb3VyY2VzKCk6IE9ic2VydmFibGU8U291cmNlTW9kZWxbXT4ge1xyXG5cdFx0cmV0dXJuIHRoaXMuaHR0cFxyXG5cdFx0XHQuZ2V0KHRoaXMuY29uZmlnLmVudi5mcm9udGVuZF9zZXJ2ZXIgKyBcIi9hcGkvc291cmNlXCIpXHJcblx0XHRcdC5tYXAoKHJlc3BvbnNlKSA9PiAocmVzcG9uc2UgYXMgYW55KS5SZXN1bHQpXHJcblx0XHRcdC5jYXRjaCgoZXJyKSA9PiB7XHJcblx0XHRcdFx0cmV0dXJuIE9ic2VydmFibGUudGhyb3coZXJyKTtcclxuXHRcdFx0fSk7XHJcblx0fVxyXG5cdGdldEdyb3VwcygpOiBPYnNlcnZhYmxlPHN0cmluZ1tdPiB7XHJcblx0XHRyZXR1cm4gdGhpcy5odHRwXHJcblx0XHRcdC5nZXQodGhpcy5jb25maWcuZW52LmZyb250ZW5kX3NlcnZlciArIFwiL2FwaS9kaWFncmFtL2dyb3Vwc1wiKVxyXG5cdFx0XHQubWFwKChyZXNwb25zZSkgPT4gKHJlc3BvbnNlIGFzIGFueSkuUmVzdWx0KVxyXG5cdFx0XHQuY2F0Y2goKGVycikgPT4ge1xyXG5cdFx0XHRcdHJldHVybiBPYnNlcnZhYmxlLnRocm93KGVycik7XHJcblx0XHRcdH0pO1xyXG5cdH1cclxuXHRnZXREaWFncmFtKGlkOiBzdHJpbmcpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG5cdFx0aWYgKCFpZCkgZGVidWdnZXI7XHJcblx0XHRyZXR1cm4gdGhpcy5odHRwXHJcblx0XHRcdC5nZXQodGhpcy5jb25maWcuZW52LmZyb250ZW5kX3NlcnZlciArIGAvYXBpL2RpYWdyYW0vJHtpZH1gKVxyXG5cdFx0XHQubWFwKChyZXNwb25zZSkgPT4gcmVzcG9uc2UpXHJcblx0XHRcdC5jYXRjaCgoZXJyKSA9PiB7XHJcblx0XHRcdFx0cmV0dXJuIE9ic2VydmFibGUudGhyb3coZXJyKTtcclxuXHRcdFx0fSk7XHJcblx0fVxyXG5cdGFkZERpYWdyYW0oZGF0YTogYW55KTogT2JzZXJ2YWJsZTxBZGREaWFncmFtQXBpTW9kZWwuUmVzcG9uc2U+IHtcclxuXHRcdGNvbnN0IG1vZGVsID0gbmV3IEFkZERpYWdyYW1BcGlNb2RlbC5SZXF1ZXN0KGRhdGEpO1xyXG5cdFx0cmV0dXJuIHRoaXMuaHR0cFxyXG5cdFx0XHQucG9zdDxBZGREaWFncmFtQXBpTW9kZWwuUmVzcG9uc2U+KHRoaXMuY29uZmlnLmVudi5mcm9udGVuZF9zZXJ2ZXIgKyBcIi9hcGkvZGlhZ3JhbVwiLCBtb2RlbC5nZXRSZXF1ZXN0Qm9keSgpKVxyXG5cdFx0XHQubWFwKChyZXNwb25zZSkgPT4gcmVzcG9uc2UpXHJcblx0XHRcdC5jYXRjaCgoZXJyKSA9PiB7XHJcblx0XHRcdFx0cmV0dXJuIE9ic2VydmFibGUudGhyb3coZXJyKTtcclxuXHRcdFx0fSk7XHJcblx0fVxyXG5cdHVwZGF0ZURpYWdyYW0oYm9keTogYW55KTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuXHRcdHJldHVybiB0aGlzLmh0dHBcclxuXHRcdFx0LnB1dCh0aGlzLmNvbmZpZy5lbnYuZnJvbnRlbmRfc2VydmVyICsgXCIvYXBpL2RpYWdyYW1cIiwgYm9keSlcclxuXHRcdFx0Lm1hcCgocmVzcG9uc2UpID0+IHJlc3BvbnNlKVxyXG5cdFx0XHQuY2F0Y2goKGVycikgPT4ge1xyXG5cdFx0XHRcdHJldHVybiBPYnNlcnZhYmxlLnRocm93KGVycik7XHJcblx0XHRcdH0pO1xyXG5cdH1cclxuXHRkZWxldGVEaWFncmFtKGlkOiBzdHJpbmcpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG5cdFx0cmV0dXJuIHRoaXMuaHR0cFxyXG5cdFx0XHQuZGVsZXRlKGAke3RoaXMuY29uZmlnLmVudi5mcm9udGVuZF9zZXJ2ZXJ9L2FwaS9kaWFncmFtLyR7aWR9YClcclxuXHRcdFx0Lm1hcCgocmVzcG9uc2UpID0+IHJlc3BvbnNlKVxyXG5cdFx0XHQuY2F0Y2goKGVycikgPT4ge1xyXG5cdFx0XHRcdHJldHVybiBPYnNlcnZhYmxlLnRocm93KGVycik7XHJcblx0XHRcdH0pO1xyXG5cdH1cclxuXHRnZXREYXRhKHNvdXJjZTogU291cmNlTW9kZWwsIHVuc3Vic2NyaWJlOiBTdWJqZWN0PHZvaWQ+LCB0aW1lOiBudW1iZXIgPSAwLCBvbmNlOiBCb29sZWFuID0gZmFsc2UpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG5cdFx0aWYgKG9uY2UgJiYgdGltZSAhPT0gMCkge1xyXG5cdFx0XHRyZXR1cm4gdGhpcy5odHRwXHJcblx0XHRcdFx0LmdldChgJHt0aGlzLmNvbmZpZy5lbnYuZnJvbnRlbmRfc2VydmVyfS9hcGkvZGF0YWAsIHtcclxuXHRcdFx0XHRcdHBhcmFtczoge1xyXG5cdFx0XHRcdFx0XHRzb3VyY2VJZDogc291cmNlLl9pZCxcclxuXHRcdFx0XHRcdFx0dGltZTogdGhpcy5nZXRGbG9vclRpbWUoc291cmNlLkludGVydmFsLCB0aW1lKS50b1N0cmluZygpXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSlcclxuXHRcdFx0XHQubWFwKChyZXM6IGFueSkgPT4gcmVzLlJlc3VsdCk7XHJcblx0XHR9IGVsc2UgaWYgKHNvdXJjZS5JbnRlcnZhbCA9PSAwKSB7XHJcblx0XHRcdHJldHVybiB0aGlzLmh0dHBcclxuXHRcdFx0XHQuZ2V0KGAke3RoaXMuY29uZmlnLmVudi5mcm9udGVuZF9zZXJ2ZXJ9L2FwaS9kYXRhYCwge1xyXG5cdFx0XHRcdFx0cGFyYW1zOiB7XHJcblx0XHRcdFx0XHRcdHNvdXJjZUlkOiBzb3VyY2UuX2lkLFxyXG5cdFx0XHRcdFx0XHR0aW1lOiBudWxsXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSlcclxuXHRcdFx0XHQubWFwKChyZXM6IGFueSkgPT4gcmVzLlJlc3VsdCk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHR0aW1lID0gdGltZSB8fCBEYXRlLm5vdygpO1xyXG5cdFx0XHRyZXR1cm4gT2JzZXJ2YWJsZS50aW1lcigwLCBzb3VyY2UuSW50ZXJ2YWwpLnBpcGUoXHJcblx0XHRcdFx0dGFrZVVudGlsKHVuc3Vic2NyaWJlKSxcclxuXHRcdFx0XHRzd2l0Y2hNYXAoKGkpID0+XHJcblx0XHRcdFx0XHR0aGlzLmh0dHBcclxuXHRcdFx0XHRcdFx0LmdldChgJHt0aGlzLmNvbmZpZy5lbnYuZnJvbnRlbmRfc2VydmVyfS9hcGkvZGF0YWAsIHtcclxuXHRcdFx0XHRcdFx0XHRwYXJhbXM6IHtcclxuXHRcdFx0XHRcdFx0XHRcdHNvdXJjZUlkOiBzb3VyY2UuX2lkLFxyXG5cdFx0XHRcdFx0XHRcdFx0dGltZTogdGhpcy5nZXRGbG9vclRpbWUoc291cmNlLkludGVydmFsLCB0aW1lKS50b1N0cmluZygpXHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9KS5waXBlKFxyXG5cdFx0XHRcdFx0XHRcdG1hcCgocmVzOiBhbnkpID0+IHJlcy5SZXN1bHQpXHJcblx0XHRcdFx0XHRcdClcclxuXHRcdFx0XHQpXHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblx0fVxyXG5cdGV4dHJhY3RfY29sdW1uc19mcm9tX2RhdGEoZGF0YTogYW55LCBjb2x1bW5zTWFwcGluZ3MpIHtcclxuXHRcdGxldCByZXMgPSBbXTtcclxuXHJcblx0XHRjb2x1bW5zTWFwcGluZ3MuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG5cdFx0XHRjb25zdCBWYWx1ZURhdGEgPSBfLmdldFZhbHVlKGRhdGEsIGl0ZW0uVmFsdWVQYXRoKTtcclxuXHJcblx0XHRcdGlmICghaXRlbS5OYW1lUGF0aCkge1xyXG5cdFx0XHRcdHJldHVybiByZXMucHVzaChbaXRlbS5WYWx1ZVBhdGguc3BsaXQoXCIuXCIpLnBvcCgpXS5jb25jYXQoVmFsdWVEYXRhKSk7XHJcblx0XHRcdH1cclxuXHRcdFx0Y29uc3QgTmFtZURhdGEgPSBfLmdldFZhbHVlKGRhdGEsIGl0ZW0uTmFtZVBhdGgpO1xyXG5cclxuXHRcdFx0aWYgKF8uaXMuYXJyYXkoTmFtZURhdGEpKSB7XHJcblx0XHRcdFx0cmV0dXJuIChyZXMgPSByZXMuY29uY2F0KE5hbWVEYXRhLm1hcCgoX2l0ZW0sIGkpID0+IFtfaXRlbV0uY29uY2F0KFZhbHVlRGF0YVtpXSkpKSk7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0cmV0dXJuIHJlcy5wdXNoKFtOYW1lRGF0YV0uY29uY2F0KFZhbHVlRGF0YSkpO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHRcdHJldHVybiByZXM7XHJcblx0fVxyXG5cdGdldF9kYXRhX3JlcG9ydChkYXRhOiBhbnkpIHtcclxuXHRcdHJldHVybiBfLnJlcG9ydChkYXRhKTtcclxuXHR9XHJcblx0Z2V0X2xhc3Rfbm9kZV9vZl9kYXRhKGRhdGE6IGFueSkge1xyXG5cdFx0cmV0dXJuIChfLnJlcG9ydChkYXRhKSBhcyBhbnlbXSkuZmlsdGVyKChpdGVtKSA9PiBpdGVtLmlzTGFzdE5vZGUpO1xyXG5cdH1cclxuXHRidWlsZENoYXJ0Q29uZmlnKGNvbHVtbnMpIHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdGRhdGE6IHtcclxuXHRcdFx0XHRjb2x1bW5zXHJcblx0XHRcdH0sXHJcblx0XHRcdGxlZ2VuZDoge1xyXG5cdFx0XHRcdHNob3c6IHRydWVcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHR9XHJcblx0Ly8gVE9ETzogaW1wbGVtZW50IGludGVyZmFjZSBvZiBjMyBjb25maWdcclxuXHRjaGFydHMgPSB7fTtcclxuXHRnZW5lcmF0ZURpYWdyYW0oY29uZmlnOiBhbnksIGlkOiBzdHJpbmcsIHJvdXRlOiBzdHJpbmcsIHN5bmM6IG51bWJlcik6IFN1YnNjcmlwdGlvbiB7XHJcblx0XHR0aGlzLmNoYXJ0c1tpZF0gPSBjMy5nZW5lcmF0ZSh7XHJcblx0XHRcdC4uLmNvbmZpZyxcclxuXHRcdFx0YmluZHRvOiBgI2RpYWdyYW1fJHtpZH1gXHJcblx0XHR9KTtcclxuXHJcblx0XHRyZXR1cm4gdGhpcy5nZXREYXRhKHt9IGFzIFNvdXJjZU1vZGVsLCBuZXcgU3ViamVjdDx2b2lkPigpLCBzeW5jKS5zdWJzY3JpYmUoKGRhdGEpID0+IHtcclxuXHRcdFx0dGhpcy5jaGFydHNbaWRdLmxvYWQoe1xyXG5cdFx0XHRcdGNvbHVtbnM6IHRoaXMuZXh0cmFjdF9jb2x1bW5zX2Zyb21fZGF0YShkYXRhLkRhdGEsIGNvbmZpZy5Db2x1bW5NYXBwaW5ncylcclxuXHRcdFx0fSk7XHJcblx0XHR9KTtcclxuXHR9XHJcblx0Z2V0Rmxvb3JUaW1lKHByZWNpc2lvbiA9IDYwICogMTAwMCwgdGltZTogbnVtYmVyID0gMCkge1xyXG5cdFx0cmV0dXJuIE1hdGguZmxvb3IoKHRpbWUgfHwgRGF0ZS5ub3coKSkgLyBwcmVjaXNpb24pO1xyXG5cdH1cclxufVxyXG4iLCJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBJbmplY3RvciwgT25EZXN0cm95IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gXCJyeGpzL09ic2VydmFibGVcIjtcclxuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSBcInJ4anMvQmVoYXZpb3JTdWJqZWN0XCI7XHJcblxyXG5pbXBvcnQgeyBEaWFncmFtU2VydmljZSB9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9kaWFncmFtLnNlcnZpY2VcIjtcclxuaW1wb3J0IHsgdGFrZVVudGlsLCBmaWx0ZXIgfSBmcm9tIFwicnhqcy9vcGVyYXRvcnNcIjtcclxuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gXCJyeGpzXCI7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuXHRzZWxlY3RvcjogXCJudW1lcmljLWVkaXQtZGlhZ3JhbVwiLFxyXG5cdHRlbXBsYXRlOiBgPG1hdC1jYXJkICpuZ0lmPVwiZGF0YUxvYWRlZCB8IGFzeW5jXCIgY2xhc3M9XCJkaWFncmFtLWJveFwiPlxyXG4gIDxtYXQtY2FyZC1oZWFkZXI+XHJcbiAgICA8bWF0LWNhcmQtdGl0bGUgZnhMYXlvdXRBbGlnbj1cInNwYWNlLWJldHdlZW4gY2VudGVyXCI+XHJcbiAgICA8L21hdC1jYXJkLXRpdGxlPlxyXG4gIDwvbWF0LWNhcmQtaGVhZGVyPlxyXG4gIDxtYXQtY2FyZC1jb250ZW50PlxyXG4gIDwvbWF0LWNhcmQtY29udGVudD5cclxuPC9tYXQtY2FyZD5gLFxyXG5cdHN0eWxlczogW2A6aG9zdHt3aWR0aDoxMDAlfS5kaWFncmFtLWJveHttYXJnaW46MTVweH0ubnVtZXJpY3tmb250LXNpemU6M2VtO2xpbmUtaGVpZ2h0OjEuODtmb250LWZhbWlseTppcmFuLXNhbnMtYm9sZCxUYWhvbWF9Lm51bWVyaWMudGl0bGV7Zm9udC1zaXplOjEuNWVtfWBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOdW1lcmljRWRpdERpYWdyYW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcblx0dW5zdWJzY3JpYmUgPSBuZXcgU3ViamVjdDx2b2lkPigpO1xyXG5cdGRhdGFMb2FkZWQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KGZhbHNlKTtcclxuXHRfZGF0YTtcclxuXHRASW5wdXQoKVxyXG5cdHNldCBkYXRhKGRhdGEpIHtcclxuXHRcdHRoaXMuX2RhdGEgPSBkYXRhO1xyXG5cdFx0dGhpcy5kYXRhTG9hZGVkLm5leHQodHJ1ZSk7XHJcblx0fVxyXG5cdGdldCBkYXRhKCkge1xyXG5cdFx0cmV0dXJuIHRoaXMuX2RhdGE7XHJcblx0fVxyXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yLCBwcml2YXRlIGRpYWdyYW1TZXJ2aWNlOiBEaWFncmFtU2VydmljZSkge1xyXG5cdFx0dGhpcy5kYXRhID0gdGhpcy5pbmplY3Rvci5nZXQoXCJkYXRhXCIpO1xyXG5cdH1cclxuXHJcblx0bmdPbkluaXQoKSB7XHJcblx0XHQvLyB0aGlzLmRhdGFTdWJzY3JpYnRpb24gPSB0aGlzLmRpYWdyYW1TZXJ2aWNlLmdldERhdGEodGhpcy5kYXRhLlNvdXJjZS5Sb3V0ZSlcclxuXHRcdHRoaXMuZGlhZ3JhbVNlcnZpY2UuZ2V0RGF0YSh0aGlzLmRhdGEuU291cmNlLCB0aGlzLnVuc3Vic2NyaWJlKS5waXBlKFxyXG5cdFx0XHRmaWx0ZXIoZGF0YSA9PiBkYXRhICE9IHVuZGVmaW5lZCksXHJcblx0XHRcdHRha2VVbnRpbCh0aGlzLnVuc3Vic2NyaWJlKVxyXG5cdFx0KS5zdWJzY3JpYmUoZGF0YSA9PiB7XHJcblx0XHRcdGRlYnVnZ2VyO1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cdG5nT25EZXN0cm95KCkge1xyXG5cdFx0Ly8gdGhpcy5kYXRhU3Vic2NyaWJ0aW9uLnVuc3Vic2NyaWJlKCk7XHJcblx0XHRkZWJ1Z2dlcjtcclxuXHRcdHRoaXMudW5zdWJzY3JpYmUubmV4dCgpO1xyXG5cdFx0dGhpcy51bnN1YnNjcmliZS5jb21wbGV0ZSgpO1xyXG5cdH1cclxufVxyXG4iLCJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBJbmplY3RvciwgT25EZXN0cm95IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gXCJyeGpzL09ic2VydmFibGVcIjtcclxuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSBcInJ4anMvQmVoYXZpb3JTdWJqZWN0XCI7XHJcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiwgU3ViamVjdCB9IGZyb20gXCJyeGpzXCI7XHJcblxyXG5pbXBvcnQgeyBEaWFncmFtU2VydmljZSB9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9kaWFncmFtLnNlcnZpY2VcIjtcclxuaW1wb3J0IHsgdGFrZVVudGlsIH0gZnJvbSBcInJ4anMvb3BlcmF0b3JzXCI7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuXHRzZWxlY3RvcjogXCJkaWFncmFtLW51bWVyaWNcIixcclxuXHR0ZW1wbGF0ZTogYDxkaXYgKm5nSWY9XCJkYXRhTG9hZGVkIHwgYXN5bmNcIj5cclxuICA8IS0tIDxkaXYgZnhMYXlvdXRBbGlnbj1cImNlbnRlciBjZW50ZXJcIiBjbGFzcz1cIm51bWVyaWNcIj57e2RhdGEuU291cmNlLkRhdGEgfCBqc29ufX08L2Rpdj4gLS0+XHJcbiAgPGRpdiBmeExheW91dEFsaWduPVwiY2VudGVyIGNlbnRlclwiIGNsYXNzPVwibnVtZXJpY1wiPnt7Y291bnRlcn19PC9kaXY+XHJcbiAgPGRpdiBbaWRdPVwiJ2RpYWdyYW1fJyArIGRhdGEuX2lkXCI+PC9kaXY+XHJcbjwvZGl2PmAsXHJcblx0c3R5bGVzOiBbYDpob3N0e3dpZHRoOjEwMCV9Lm51bWVyaWN7Zm9udC1zaXplOjNlbTtsaW5lLWhlaWdodDoxLjg7Zm9udC1mYW1pbHk6aXJhbi1zYW5zLWJvbGQsVGFob21hfS5udW1lcmljLnRpdGxle2ZvbnQtc2l6ZToxLjVlbX0ubWF0LWNhcmR7cGFkZGluZzowfWBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOdW1lcmljRGlhZ3JhbUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuXHR1bnN1YnNjcmliZSA9IG5ldyBTdWJqZWN0PHZvaWQ+KCk7XHJcblx0ZGF0YUxvYWRlZCA9IG5ldyBCZWhhdmlvclN1YmplY3QoZmFsc2UpO1xyXG5cdF9kYXRhO1xyXG5cdGNvdW50ZXI6IG51bWJlcjtcclxuXHRASW5wdXQoKVxyXG5cdHNldCBkYXRhKGRhdGEpIHtcclxuXHRcdHRoaXMuX2RhdGEgPSBkYXRhO1xyXG5cdFx0dGhpcy5kYXRhTG9hZGVkLm5leHQodHJ1ZSk7XHJcblx0fVxyXG5cdGdldCBkYXRhKCkge1xyXG5cdFx0cmV0dXJuIHRoaXMuX2RhdGE7XHJcblx0fVxyXG5cdGRhdGFTdWJzY3JpYnRpb246IFN1YnNjcmlwdGlvbjtcclxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIGluamVjdG9yOiBJbmplY3RvciwgcHJpdmF0ZSBkaWFncmFtU2VydmljZTogRGlhZ3JhbVNlcnZpY2UpIHtcclxuXHRcdHRoaXMuZGF0YSA9IHRoaXMuaW5qZWN0b3IuZ2V0KFwiZGF0YVwiKTtcclxuXHRcdHRoaXMuY291bnRlciA9IDA7XHJcblx0fVxyXG5cclxuXHRuZ09uSW5pdCgpIHtcclxuXHRcdHRoaXMuZGF0YVN1YnNjcmlidGlvbiA9IHRoaXMuZGlhZ3JhbVNlcnZpY2UuZ2V0RGF0YSh0aGlzLmRhdGEuU291cmNlLCB0aGlzLnVuc3Vic2NyaWJlKS5waXBlKFxyXG5cdFx0XHR0YWtlVW50aWwodGhpcy51bnN1YnNjcmliZSlcclxuXHRcdCkuc3Vic2NyaWJlKGRhdGEgPT4ge1xyXG5cdFx0XHRjb25zdCBjb3VudGVyID0gdGhpcy5kaWFncmFtU2VydmljZS5leHRyYWN0X2NvbHVtbnNfZnJvbV9kYXRhKGRhdGEuRGF0YSwgdGhpcy5kYXRhLkNoYXJ0LkNvbHVtbk1hcHBpbmdzKTtcclxuXHRcdFx0dGhpcy5jb3VudGVyID0gY291bnRlclswXVsxXTtcclxuXHRcdH0pO1xyXG5cdH1cclxuXHRuZ09uRGVzdHJveSgpIHtcclxuXHRcdHRoaXMuZGF0YVN1YnNjcmlidGlvbi51bnN1YnNjcmliZSgpO1xyXG5cdFx0dGhpcy51bnN1YnNjcmliZS5uZXh0KCk7XHJcblx0XHR0aGlzLnVuc3Vic2NyaWJlLmNvbXBsZXRlKCk7XHJcblx0fVxyXG59XHJcbiIsImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gXCJyeGpzL09ic2VydmFibGVcIjtcclxuLy8gaW1wb3J0IHsgVXNlck1vZGVsIH0gZnJvbSAnYXBwL21vZGVscy9hdXRoZW50aWNhdGlvbic7XHJcbmltcG9ydCB7IFN0b3JlIH0gZnJvbSBcIkBuZ3J4L3N0b3JlXCI7XHJcblxyXG5pbXBvcnQgeyBEaWFncmFtU2VydmljZSB9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9kaWFncmFtLnNlcnZpY2VcIjtcclxuXHJcbi8vIGltcG9ydCAqIGFzIGFwcFJlZHVjZXIgZnJvbSAnYXBwL3JlZHVjZXJzJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG5cdHNlbGVjdG9yOiBcImRpYWdyYW0tbW9kdWxlLWNvbnRhaW5lclwiLFxyXG5cdHRlbXBsYXRlOiBgPGRpdiBmeGZsZXg9XCIxMDBcIiBmeExheW91dD1cImNvbHVtblwiPlxyXG4gICAgPHJvdXRlci1vdXRsZXQ+PC9yb3V0ZXItb3V0bGV0PlxyXG48L2Rpdj5cclxuYFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRGlhZ3JhbU1vZHVsZUNvbnRhaW5lckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblx0Y29uc3RydWN0b3IocHJpdmF0ZSBzZXJ2aWNlOiBEaWFncmFtU2VydmljZSkge31cclxuXHJcblx0bmdPbkluaXQoKSB7fVxyXG59XHJcbiIsImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwicnhqcy9PYnNlcnZhYmxlXCI7XHJcbmltcG9ydCB7IFN0b3JlIH0gZnJvbSBcIkBuZ3J4L3N0b3JlXCI7XHJcbmltcG9ydCB7IEZvcm1Hcm91cCwgRm9ybUNvbnRyb2wsIFZhbGlkYXRvcnMgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcclxuXHJcbmltcG9ydCB7IERpYWdyYW1TZXJ2aWNlIH0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL2RpYWdyYW0uc2VydmljZVwiO1xyXG5pbXBvcnQgKiBhcyBGZWF0dXJlUmVkdWNlciBmcm9tIFwiLi4vLi4vcmVkdWNlcnNcIjtcclxuXHJcbmRlY2xhcmUgdmFyIF86IGFueTtcclxuXHJcbkBDb21wb25lbnQoe1xyXG5cdHNlbGVjdG9yOiBcImRhdGEtbWFwcGVyXCIsXHJcblx0dGVtcGxhdGU6IGA8ZGl2IGZ4TGF5b3V0PVwicm93XCI+XHJcbiAgICA8ZGl2IGZ4RmxleD1cImdyb3dcIj5cclxuICAgICAgICA8Yj5cclxuICAgICAgICAgICAgS2V5XHJcbiAgICAgICAgPC9iPlxyXG4gICAgPC9kaXY+XHJcbiAgICA8ZGl2IGZ4RmxleD1cIm5vZ3Jvd1wiPlxyXG4gICAgICAgIDxiPlxyXG4gICAgICAgICAgICBUeXBlXHJcbiAgICAgICAgPC9iPlxyXG4gICAgPC9kaXY+XHJcbjwvZGl2PlxyXG48ZGl2ICpuZ0Zvcj1cImxldCBpdGVtIG9mIGRhdGFSZXBvcnRcIiBbY2xhc3NdPVwiJ2RlcHRzXycgKyBpdGVtLmRlcHRzXCIgZnhMYXlvdXQ9XCJyb3dcIj5cclxuICAgIDxkaXYgZnhGbGV4PVwiZ3Jvd1wiPlxyXG4gICAgICAgIHt7aXRlbS5uYW1lfX1cclxuICAgIDwvZGl2PlxyXG4gICAgPGRpdiBmeEZsZXg9XCJub2dyb3dcIj5cclxuICAgICAgICB7e2l0ZW0udHlwZX19XHJcbiAgICA8L2Rpdj5cclxuPC9kaXY+XHJcbmAsXHJcblx0c3R5bGVzOiBbYG1hdC1yYWRpby1idXR0b257d2lkdGg6MTAwJTtkaXNwbGF5OmJsb2NrfWRpdi5kZXB0c18ye21hcmdpbi1yaWdodDoyNXB4fWRpdi5kZXB0c18ze21hcmdpbi1yaWdodDo1MHB4fWBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEYXRhTWFwcGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHRASW5wdXQoKSBkZXN0aW5hdGlvbjogc3RyaW5nO1xyXG5cdF9kYXRhOiBhbnk7XHJcblx0QElucHV0KClcclxuXHRzZXQgZGF0YShkYXRhKSB7XHJcblx0XHRpZiAoIWRhdGEpIHJldHVybjtcclxuXHRcdHRoaXMuZGF0YVJlcG9ydCA9IF8ucmVwb3J0KGRhdGEpO1xyXG5cdFx0dGhpcy5fZGF0YSA9IGRhdGE7XHJcblx0fVxyXG5cdGRhdGFSZXBvcnQ6IGFueVtdID0gW107XHJcblx0Y29uc3RydWN0b3IocHJpdmF0ZSBkaWFncmFtU2VydmljZTogRGlhZ3JhbVNlcnZpY2UsIHByaXZhdGUgc3RvcmU6IFN0b3JlPEZlYXR1cmVSZWR1Y2VyLkZlYXR1cmVTdGF0ZT4pIHt9XHJcblxyXG5cdG5nT25Jbml0KCkge31cclxufVxyXG4iLCJpbXBvcnQgeyBTb3VyY2VNb2RlbCB9IGZyb20gXCIuL3NvdXJjZS5tb2RlbFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIERpYWdyYW1Nb2RlbCB7XHJcblx0X2lkOiBzdHJpbmc7XHJcblx0TmFtZTogc3RyaW5nO1xyXG5cdElzQWN0aXZlOiBib29sZWFuO1xyXG5cdERlc2NyaXB0aW9uOiBzdHJpbmc7XHJcblx0R3JvdXBzOiBzdHJpbmdbXTtcclxuXHRCb3g6IHtcclxuXHRcdE51bWJlck9mQ29sdW1uczogbnVtYmVyO1xyXG5cdFx0T3JkZXI6IG51bWJlcjtcclxuXHRcdEJhY2tncm91bmRDb2xvcjogc3RyaW5nO1xyXG5cdH07XHJcblx0U291cmNlOiBTb3VyY2VNb2RlbDtcclxuXHRXaWRnZXQ6IHtcclxuXHRcdFwiYm9vbGVhbm9cIjoge1xyXG5cdFx0XHRcIlN1Y2Nlc3NNZXNzYWdlXCI6IHN0cmluZztcclxuXHRcdFx0XCJGYWlsdXJlTWVzc2FnZVwiOiBzdHJpbmc7XHJcblx0XHR9O1xyXG5cdH07XHJcblxyXG5cdENoYXJ0OiB7XHJcblx0XHRkYXRhOiB7XHJcblx0XHRcdHR5cGU6IFwicGllXCIgfCBcImxpbmVhclwiIHwgXCJzY2F0dGVyXCIgfCBcImJhclwiIHwgXCJsaW5lXCI7XHJcblx0XHRcdHR5cGVzOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9O1xyXG5cdFx0XHRjb2x1bW5zOiBhbnlbXTtcclxuXHRcdFx0Y29sb3JzOiBhbnlbXTtcclxuXHRcdH07XHJcblx0XHRGbG93OiBib29sZWFuO1xyXG5cdFx0Q29sdW1uTWFwcGluZ3M6IHtcclxuXHRcdFx0TmFtZVBhdGg6IHN0cmluZztcclxuXHRcdFx0VmFsdWVQYXRoOiBzdHJpbmc7XHJcblx0XHR9W107XHJcblx0XHRsZWdlbmQ6IHtcclxuXHRcdFx0c2hvdzogYm9vbGVhbjtcclxuXHRcdH07XHJcblx0XHRzdWJjaGFydDoge1xyXG5cdFx0XHRzaG93OiBib29sZWFuO1xyXG5cdFx0fTtcclxuXHRcdHpvb206IHtcclxuXHRcdFx0ZW5hYmxlZDogYm9vbGVhbjtcclxuXHRcdH07XHJcblx0XHR0b29sdGlwOiB7XHJcblx0XHRcdGdyb3VwZWQ6IGJvb2xlYW47XHJcblx0XHR9O1xyXG5cdH07XHJcbn1cclxuIiwiaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSBcIkBuZ3J4L3N0b3JlXCI7XHJcblxyXG5pbXBvcnQgeyBBZGREaWFncmFtQXBpTW9kZWwgfSBmcm9tIFwiLi4vbW9kZWxzL2FkZC1kaWFncmFtLWFwaS5tb2RlbFwiO1xyXG5cclxuZXhwb3J0IGVudW0gQWRkRGlhZ3JhbUFjdGlvblR5cGVzIHtcclxuXHRBRERfRElBR1JBTSA9IFwiW0RJQUdSQU1dW0FERF0gQUREX0RJQUdSQU1cIixcclxuXHRBRERfRElBR1JBTV9TVEFSVCA9IFwiW0RJQUdSQU1dW0FERF0gQUREX0RJQUdSQU1fU1RBUlRcIixcclxuXHRBRERfRElBR1JBTV9TVUNDRUVEID0gXCJbRElBR1JBTV1bQUREXSBBRERfRElBR1JBTV9TVUNDRUVEXCIsXHJcblx0RElBR1JBTV9DT05GSUdfQ0hBTkdFRCA9IFwiW0RJQUdSQU1dW0FERF0gRElBR1JBTV9DT05GSUdfQ0hBTkdFRFwiLFxyXG5cdEFERF9ESUFHUkFNX0ZBSUxFRCA9IFwiW0RJQUdSQU1dW0FERF0gQUREX0RJQUdSQU1fRkFJTEVEXCIsXHJcblx0U1RSVUNUVVJFX0RFRklOSVRJT05fU1RBUlQgPSBcIltESUFHUkFNXVtBRERdIFNUUlVDVFVSRV9ERUZJTklUSU9OX1NUQVJUXCIsXHJcblx0SEFWRV9FTkRQT0lOVCA9IFwiW0RJQUdSQU1dW0FERF0gSEFWRV9TVFJVQ1RVUkVcIixcclxuXHREQVRBX0xPQURFRCA9IFwiW0RJQUdSQU1dW0FERF0gREFUQV9MT0FERURcIixcclxuXHRTVFJVQ1RVUkVfREVGSU5JVElPTl9FTkQgPSBcIltESUFHUkFNXVtBRERdIFNUUlVDVFVSRV9ERUZJTklUSU9OX0VORFwiLFxyXG5cdENPTFVNTlNfTUFQUElOR19DSEFOR0VEID0gXCJbRElBR1JBTV1bQUREXSBDT0xVTU5TX01BUFBJTkdfQ0hBTkdFRFwiLFxyXG5cdERBVEFfQ0FMQ1VMQVRFRCA9IFwiW0RJQUdSQU1dW0FERF0gREFUQV9DQUxDVUxBVEVEXCIsXHJcblx0Q09MVU1OX0FEREVEID0gXCJbRElBR1JBTV1bQUREXSBDT0xVTU5fQURERURcIixcclxuXHRHRU5FUkFURV9ESUFHUkFNID0gXCJbRElBR1JBTV1bQUREXSBHRU5FUkFURV9ESUFHUkFNXCJcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEFkZERpYWdyYW1BY3Rpb24gaW1wbGVtZW50cyBBY3Rpb24ge1xyXG5cdHJlYWRvbmx5IHR5cGUgPSBBZGREaWFncmFtQWN0aW9uVHlwZXMuQUREX0RJQUdSQU07XHJcblx0Y29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IEFkZERpYWdyYW1BcGlNb2RlbC5SZXNwb25zZSkge31cclxufVxyXG5leHBvcnQgY2xhc3MgQWRkRGlhZ3JhbUFjdGlvblN0YXJ0IGltcGxlbWVudHMgQWN0aW9uIHtcclxuXHRyZWFkb25seSB0eXBlID0gQWRkRGlhZ3JhbUFjdGlvblR5cGVzLkFERF9ESUFHUkFNX1NUQVJUO1xyXG5cdGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBBZGREaWFncmFtQXBpTW9kZWwuUmVzcG9uc2UpIHt9XHJcbn1cclxuZXhwb3J0IGNsYXNzIEFkZERpYWdyYW1BY3Rpb25TdWNjZWVkIGltcGxlbWVudHMgQWN0aW9uIHtcclxuXHRyZWFkb25seSB0eXBlID0gQWRkRGlhZ3JhbUFjdGlvblR5cGVzLkFERF9ESUFHUkFNX1NVQ0NFRUQ7XHJcblx0Y29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IEFkZERpYWdyYW1BcGlNb2RlbC5SZXNwb25zZSkge31cclxufVxyXG5leHBvcnQgY2xhc3MgQWRkRGlhZ3JhbUFjdGlvbkZhaWxlZCBpbXBsZW1lbnRzIEFjdGlvbiB7XHJcblx0cmVhZG9ubHkgdHlwZSA9IEFkZERpYWdyYW1BY3Rpb25UeXBlcy5BRERfRElBR1JBTV9GQUlMRUQ7XHJcbn1cclxuZXhwb3J0IGNsYXNzIERpYWdyYW1Db25maWdDaGFuZ2VkQWN0aW9uIGltcGxlbWVudHMgQWN0aW9uIHtcclxuXHRyZWFkb25seSB0eXBlID0gQWRkRGlhZ3JhbUFjdGlvblR5cGVzLkRJQUdSQU1fQ09ORklHX0NIQU5HRUQ7XHJcblx0Y29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IGFueSkge31cclxufVxyXG5leHBvcnQgY2xhc3MgSGF2ZUVuZHBvaW50QWN0aW9uIGltcGxlbWVudHMgQWN0aW9uIHtcclxuXHRyZWFkb25seSB0eXBlID0gQWRkRGlhZ3JhbUFjdGlvblR5cGVzLkhBVkVfRU5EUE9JTlQ7XHJcblx0Y29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IGFueSkge31cclxufVxyXG5leHBvcnQgY2xhc3MgRGF0YUxvYWRlZEFjdGlvbiBpbXBsZW1lbnRzIEFjdGlvbiB7XHJcblx0cmVhZG9ubHkgdHlwZSA9IEFkZERpYWdyYW1BY3Rpb25UeXBlcy5EQVRBX0xPQURFRDtcclxuXHRjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogYW55KSB7fVxyXG59XHJcbmV4cG9ydCBjbGFzcyBTdHJ1Y3R1cmVEZWZpbml0aW9uU3RhcnRBY3Rpb24gaW1wbGVtZW50cyBBY3Rpb24ge1xyXG5cdHJlYWRvbmx5IHR5cGUgPSBBZGREaWFncmFtQWN0aW9uVHlwZXMuU1RSVUNUVVJFX0RFRklOSVRJT05fU1RBUlQ7XHJcblx0Y29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IGFueSkge31cclxufVxyXG5leHBvcnQgY2xhc3MgU3RydWN0dXJlRGVmaW5pdGlvbkZpbmlzaGVkQWN0aW9uIGltcGxlbWVudHMgQWN0aW9uIHtcclxuXHRyZWFkb25seSB0eXBlID0gQWRkRGlhZ3JhbUFjdGlvblR5cGVzLlNUUlVDVFVSRV9ERUZJTklUSU9OX0VORDtcclxuXHRjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogYW55KSB7fVxyXG59XHJcbmV4cG9ydCBjbGFzcyBDb2x1bW5zTWFwcGluZ0NoYW5nZWRBY3Rpb24gaW1wbGVtZW50cyBBY3Rpb24ge1xyXG5cdHJlYWRvbmx5IHR5cGUgPSBBZGREaWFncmFtQWN0aW9uVHlwZXMuQ09MVU1OU19NQVBQSU5HX0NIQU5HRUQ7XHJcblx0Y29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IGFueSkge31cclxufVxyXG5leHBvcnQgY2xhc3MgRGF0YUNhbGN1bGF0ZWRBY3Rpb24gaW1wbGVtZW50cyBBY3Rpb24ge1xyXG5cdHJlYWRvbmx5IHR5cGUgPSBBZGREaWFncmFtQWN0aW9uVHlwZXMuREFUQV9DQUxDVUxBVEVEO1xyXG5cdGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBhbnkpIHt9XHJcbn1cclxuZXhwb3J0IGNsYXNzIEdlbmVyYXRlRGlhZ3JhbUFjdGlvbiBpbXBsZW1lbnRzIEFjdGlvbiB7XHJcblx0cmVhZG9ubHkgdHlwZSA9IEFkZERpYWdyYW1BY3Rpb25UeXBlcy5HRU5FUkFURV9ESUFHUkFNO1xyXG5cdGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBhbnkpIHt9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDb2x1bW5BZGRlZCBpbXBsZW1lbnRzIEFjdGlvbiB7XHJcblx0cmVhZG9ubHkgdHlwZSA9IEFkZERpYWdyYW1BY3Rpb25UeXBlcy5DT0xVTU5fQURERUQ7XHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIEFkZERpYWdyYW1BY3Rpb25zID1cclxuXHR8IEFkZERpYWdyYW1BY3Rpb25cclxuXHR8IEFkZERpYWdyYW1BY3Rpb25TdGFydFxyXG5cdHwgQWRkRGlhZ3JhbUFjdGlvblN1Y2NlZWRcclxuXHR8IEFkZERpYWdyYW1BY3Rpb25GYWlsZWRcclxuXHR8IEhhdmVFbmRwb2ludEFjdGlvblxyXG5cdHwgRGF0YUxvYWRlZEFjdGlvblxyXG5cdHwgU3RydWN0dXJlRGVmaW5pdGlvblN0YXJ0QWN0aW9uXHJcblx0fCBTdHJ1Y3R1cmVEZWZpbml0aW9uRmluaXNoZWRBY3Rpb25cclxuXHR8IENvbHVtbnNNYXBwaW5nQ2hhbmdlZEFjdGlvblxyXG5cdHwgRGF0YUNhbGN1bGF0ZWRBY3Rpb25cclxuXHR8IEdlbmVyYXRlRGlhZ3JhbUFjdGlvblxyXG5cdHwgRGlhZ3JhbUNvbmZpZ0NoYW5nZWRBY3Rpb247XHJcbiIsImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBPbkRlc3Ryb3kgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBGb3JtR3JvdXAsIEZvcm1Db250cm9sLCBWYWxpZGF0b3JzLCBGb3JtQXJyYXksIEZvcm1CdWlsZGVyLCBBYnN0cmFjdENvbnRyb2wgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gXCJyeGpzL09ic2VydmFibGVcIjtcclxuaW1wb3J0IHsgU3RvcmUgfSBmcm9tIFwiQG5ncngvc3RvcmVcIjtcclxuaW1wb3J0IHsgUm91dGUsIEFjdGl2YXRlZFJvdXRlIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xyXG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tIFwicnhqcy9TdWJzY3JpcHRpb25cIjtcclxuaW1wb3J0IHsgcHVibGlzaCB9IGZyb20gXCJyeGpzL29wZXJhdG9yL3B1Ymxpc2hcIjtcclxuaW1wb3J0IHsgRWZmZWN0IH0gZnJvbSBcIkBuZ3J4L2VmZmVjdHNcIjtcclxuZGVjbGFyZSB2YXIgYzM6IGFueTtcclxuXHJcbmltcG9ydCB7IGFkZERpYWdyYW1SZWR1Y2VyIH0gZnJvbSBcIi4uLy4uL3JlZHVjZXJzL2FkZC1kaWFncmFtLnJlZHVjZXJcIjtcclxuaW1wb3J0IHsgRGlhZ3JhbVNlcnZpY2UgfSBmcm9tIFwiLi4vLi4vc2VydmljZXMvZGlhZ3JhbS5zZXJ2aWNlXCI7XHJcblxyXG5pbXBvcnQgeyBGZWF0dXJlU3RhdGUgfSBmcm9tIFwiLi4vLi4vcmVkdWNlcnNcIjtcclxuaW1wb3J0IHsgQWRkRGlhZ3JhbUFwaU1vZGVsIH0gZnJvbSBcIi4uLy4uL21vZGVscy9hZGQtZGlhZ3JhbS1hcGkubW9kZWxcIjtcclxuaW1wb3J0IHsgRGlhZ3JhbU1vZGVsIH0gZnJvbSBcIi4uLy4uL21vZGVscy9kaWFncmFtLm1vZGVsXCI7XHJcbmltcG9ydCB7IFNvdXJjZU1vZGVsIH0gZnJvbSBcIi4uLy4uL21vZGVscy9zb3VyY2UubW9kZWxcIjtcclxuaW1wb3J0IHtcclxuXHRIYXZlRW5kcG9pbnRBY3Rpb24sXHJcblx0Q29sdW1uc01hcHBpbmdDaGFuZ2VkQWN0aW9uLFxyXG5cdERpYWdyYW1Db25maWdDaGFuZ2VkQWN0aW9uLFxyXG5cdEFkZERpYWdyYW1BY3Rpb25cclxufSBmcm9tIFwiLi4vLi4vYWN0aW9ucy9hZGQtZGlhZ3JhbS5hY3Rpb25zXCI7XHJcbmltcG9ydCB7IGZpbHRlciwgdGFrZVVudGlsIH0gZnJvbSBcInJ4anMvb3BlcmF0b3JzXCI7XHJcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tIFwicnhqc1wiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcblx0c2VsZWN0b3I6IFwiZGlhZ3JhbS1hZGRcIixcclxuXHR0ZW1wbGF0ZTogYDxkaXYgZnhMYXlvdXQ9XCJjb2x1bW5cIiBmeEZsZXg9XCIxMDBcIj5cclxuICA8ZGl2IGZ4TGF5b3V0PVwicm93XCIgZnhMYXlvdXQubHQtbWQ9XCJjb2x1bW5cIj5cclxuICAgIDxtYXQtY2FyZCBmeEZsZXg9XCI2MFwiPlxyXG4gICAgICA8Zm9ybSBbZm9ybUdyb3VwXT1cImZvcm1Hcm91cFwiIGZ4TGF5b3V0PSdjb2x1bW4nPlxyXG4gICAgICAgIDxtYXQtY2FyZC1oZWFkZXI+XHJcbiAgICAgICAgICA8bWF0LWNhcmQtdGl0bGU+w5jCp8OZwoHDmMKyw5nCiMOYwq/DmcKGIMOZwobDmcKFw5nCiMOYwq/DmMKnw5jCsSDDmMKsw5jCr8ObwozDmMKvPC9tYXQtY2FyZC10aXRsZT5cclxuICAgICAgICA8L21hdC1jYXJkLWhlYWRlcj5cclxuICAgICAgICA8bWF0LWNhcmQtY29udGVudD5cclxuICAgICAgICAgIDxtYXQtZm9ybS1maWVsZD5cclxuICAgICAgICAgICAgPGlucHV0IG1hdElucHV0IHBsYWNlaG9sZGVyPVwiw5jCucOZwobDmcKIw5jCp8OZwoYgw5nChsOZwoXDmcKIw5jCr8OYwqfDmMKxXCIgZm9ybUNvbnRyb2xOYW1lPVwiTmFtZVwiPlxyXG4gICAgICAgICAgPC9tYXQtZm9ybS1maWVsZD5cclxuICAgICAgICAgIDxtYXQtZm9ybS1maWVsZCBmeEZsZXhGaWxsPlxyXG4gICAgICAgICAgICA8bWF0LXNlbGVjdCBwbGFjZWhvbGRlcj1cIsOZwobDmMKnw5nChSDDmcKFw5jCs8ObwozDmMKxXCIgZm9ybUNvbnRyb2xOYW1lPVwiU291cmNlXCIgKHNlbGVjdGlvbkNoYW5nZSk9XCJyb3V0ZUVudGVyZWQoJGV2ZW50KVwiPlxyXG4gICAgICAgICAgICAgIDxtYXQtb3B0aW9uICpuZ0Zvcj1cImxldCBpdGVtIG9mIHNvdXJjZXMgfCBhc3luY1wiIFt2YWx1ZV09XCJpdGVtXCI+XHJcbiAgICAgICAgICAgICAgICB7e2l0ZW0uRW5kcG9pbnR9fVxyXG4gICAgICAgICAgICAgIDwvbWF0LW9wdGlvbj5cclxuICAgICAgICAgICAgPC9tYXQtc2VsZWN0PlxyXG4gICAgICAgICAgPC9tYXQtZm9ybS1maWVsZD5cclxuICAgICAgICAgIDxtYXQtZm9ybS1maWVsZCBmeEZsZXhGaWxsPlxyXG4gICAgICAgICAgICA8aW5wdXQgbWF0SW5wdXQgcGxhY2Vob2xkZXI9XCJzeW5jIHRpbWVcIiBmb3JtQ29udHJvbE5hbWU9XCJTeW5jXCI+XHJcbiAgICAgICAgICA8L21hdC1mb3JtLWZpZWxkPlxyXG4gICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgPG1hdC1yYWRpby1ncm91cCAoY2hhbmdlKT1cInR5cGVDaGFuZ2VkKClcIiBmb3JtQ29udHJvbE5hbWU9XCJUeXBlXCIgZnhGbGV4RmlsbD5cclxuICAgICAgICAgICAgICA8bGFiZWw+w5nChsOZwojDmMK5IMOZwobDmcKFw5nCiMOYwq/DmMKnw5jCsSA6PC9sYWJlbD5cclxuICAgICAgICAgICAgICA8bWF0LXJhZGlvLWJ1dHRvbiAoY2hhbmdlKT1cInR5cGVDaGFuZ2VkKClcIiAqbmdGb3I9XCJsZXQgaXRlbSBvZiBkaWFncmFtVHlwZXNcIiBbdmFsdWVdPVwiaXRlbVwiIGNsYXNzPVwiZm9ybS1lbGVtZW50LW1hcmdpblwiPlxyXG4gICAgICAgICAgICAgICAge3tpdGVtfX1cclxuICAgICAgICAgICAgICA8L21hdC1yYWRpby1idXR0b24+XHJcbiAgICAgICAgICAgIDwvbWF0LXJhZGlvLWdyb3VwPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8bWF0LWZvcm0tZmllbGQ+XHJcbiAgICAgICAgICAgIDxtYXQtc2VsZWN0IHBsYWNlaG9sZGVyPVwiR3JvdXBzXCIgZm9ybUNvbnRyb2xOYW1lPVwiR3JvdXBzXCIgbXVsdGlwbGU+XHJcbiAgICAgICAgICAgICAgPG1hdC1zZWxlY3QtdHJpZ2dlcj5cclxuICAgICAgICAgICAgICAgIHt7Zm9ybUdyb3VwLmNvbnRyb2xzLkdyb3Vwcy52YWx1ZSA/IGZvcm1Hcm91cC5jb250cm9scy5Hcm91cHMudmFsdWVbMF0gOiAnJ319XHJcbiAgICAgICAgICAgICAgICA8c3BhbiAqbmdJZj1cImZvcm1Hcm91cC5jb250cm9scy5Hcm91cHMudmFsdWU/Lmxlbmd0aCA+IDFcIj5cclxuICAgICAgICAgICAgICAgICAgKCt7e2Zvcm1Hcm91cC5jb250cm9scy5Hcm91cHMudmFsdWUubGVuZ3RoIC0gMX19IG90aGVycylcclxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgICA8L21hdC1zZWxlY3QtdHJpZ2dlcj5cclxuICAgICAgICAgICAgICA8bWF0LW9wdGlvbiAqbmdGb3I9XCJsZXQgaXRlbSBvZiBncm91cHMgfCBhc3luY1wiIFt2YWx1ZV09XCJpdGVtXCI+e3tpdGVtfX08L21hdC1vcHRpb24+XHJcbiAgICAgICAgICAgIDwvbWF0LXNlbGVjdD5cclxuICAgICAgICAgIDwvbWF0LWZvcm0tZmllbGQ+XHJcbiAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICA8bWF0LWNoZWNrYm94IChjaGFuZ2UpPVwiY29uZmlnQ2hhbmdlZCgpXCIgZm9ybUNvbnRyb2xOYW1lPVwiSXNBY3RpdmVcIiBmeEZsZXhGaWxsPsOZwojDmMK2w5jCucObwozDmMKqPC9tYXQtY2hlY2tib3g+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxkeW5hbWljLWNvbmZpZy1jb21wb25lbnQtc2VsZWN0b3IgKENvbmZpZ0NoYW5nZWQpPVwiY29uZmlnQ2hhbmdlZCgpXCIgW2RhdGFdPVwiZGlhZ3JhbVBhcnRpYWxDb25maWdcIj48L2R5bmFtaWMtY29uZmlnLWNvbXBvbmVudC1zZWxlY3Rvcj5cclxuICAgICAgICA8L21hdC1jYXJkLWNvbnRlbnQ+XHJcbiAgICAgIDwvZm9ybT5cclxuICAgIDwvbWF0LWNhcmQ+XHJcbiAgICA8ZHluYW1pYy1jb21wb25lbnQtc2VsZWN0b3IgaWQ9XCJtb2RpZnktZGlhZ3JhbVwiIGZ4RmxleD1cIjQwXCIgW2RhdGFdPVwiZGlhZ3JhbU1vZGVsXCI+PC9keW5hbWljLWNvbXBvbmVudC1zZWxlY3Rvcj5cclxuICA8L2Rpdj5cclxuXHJcbiAgPGRpdiBmeExheW91dD1cInJvd1wiIGZ4TGF5b3V0Lmx0LW1kPVwiY29sdW1uXCI+XHJcbiAgICA8bWF0LWNhcmQgZnhGbGV4PVwiMjVcIj5cclxuICAgICAgPG1hdC1jYXJkLWhlYWRlcj5cclxuICAgICAgICA8bWF0LWNhcmQtdGl0bGU+IMOYwrPDmMKnw5jCrsOYwqrDmMKnw5jCsSDDmMKvw5vCjMOYwqrDmMKnIDwvbWF0LWNhcmQtdGl0bGU+XHJcbiAgICAgIDwvbWF0LWNhcmQtaGVhZGVyPlxyXG4gICAgICA8bWF0LWNhcmQtY29udGVudD5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiaXRlbS1tYXJnaW5cIj5cclxuICAgICAgICAgIDxkYXRhLW1hcHBlciBkZXN0aW5hdGlvbj1cInZhbHVlXCIgW2RhdGFdPVwiZGF0YVwiPjwvZGF0YS1tYXBwZXI+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvbWF0LWNhcmQtY29udGVudD5cclxuICAgIDwvbWF0LWNhcmQ+XHJcblxyXG4gICAgPG1hdC1jYXJkIGZ4TGF5b3V0PVwiY29sdW1uXCIgZnhGbGV4PVwiMjVcIj5cclxuICAgICAgPG1hdC1jYXJkLWhlYWRlcj5cclxuICAgICAgICA8bWF0LWNhcmQtdGl0bGU+w5nChsOawq/DmMKnw5jCtMOYwqogw5jCr8OYwqfDmMKvw5nChzwvbWF0LWNhcmQtdGl0bGU+XHJcbiAgICAgIDwvbWF0LWNhcmQtaGVhZGVyPlxyXG4gICAgICA8bWF0LWNhcmQtY29udGVudD5cclxuICAgICAgICA8ZGl2IGZ4TGF5b3V0PVwiY29sdW1uXCIgZnhMYXlvdXRHYXA9XCI1cHhcIj5cclxuICAgICAgICAgIDxkaXYgKm5nRm9yPVwibGV0IGNvbHVtbiBvZiBjb2x1bW5zTWFwcGluZ3M7IGxldCBpPWluZGV4XCIgZnhGbGV4PVwiMTAwXCIgZnhMYXlvdXQ9XCJjb2x1bW5cIj5cclxuICAgICAgICAgICAgPGRpdiBmeExheW91dD1cImNvbHVtblwiPlxyXG4gICAgICAgICAgICAgIDxkaXYgW2Zvcm1Hcm91cF09XCJjb2x1bW5zTWFwcGluZ3NbaV1cIiBmeExheW91dD1cInJvd1wiIGZ4TGF5b3V0LnhzPVwiY29sdW1uXCI+XHJcbiAgICAgICAgICAgICAgICA8bWF0LWZvcm0tZmllbGQgZnhGbGV4PVwiNDVcIiBmeEZsZXgueHM9XCIxMDBcIj5cclxuICAgICAgICAgICAgICAgICAgPG1hdC1zZWxlY3QgcGxhY2Vob2xkZXI9XCLDmcKGw5jCp8OZwoUgw5nChcOYwrPDm8KMw5jCsVwiIGZvcm1Db250cm9sTmFtZT1cIk5hbWVQYXRoXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPG1hdC1vcHRpb24+LS08L21hdC1vcHRpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgPG1hdC1vcHRpb24gKm5nRm9yPVwibGV0IGl0ZW0gb2YgcGF0aE9wdGlvbnNcIiBbdmFsdWVdPVwiaXRlbS5wYXRoXCIgW2NsYXNzXT1cIidtYXQtb3B0aW9uIGRlcHRoXycgKyBpdGVtLmRlcHRzXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICA8IS0tIDxtYXQtb3B0aW9uICpuZ0Zvcj1cImxldCBpdGVtIG9mIHBhdGhPcHRpb25zXCIgW3ZhbHVlXT1cIml0ZW0ucGF0aFwiIFtjbGFzc109XCInbWF0LW9wdGlvbiBkZXB0aF8nICsgaXRlbS5kZXB0c1wiIFtkaXNhYmxlZF09XCIhaXRlbS5pc0xhc3ROb2RlXCI+IC0tPlxyXG4gICAgICAgICAgICAgICAgICAgICAge3tpdGVtLnBhdGh9fVxyXG4gICAgICAgICAgICAgICAgICAgIDwvbWF0LW9wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgPC9tYXQtc2VsZWN0PlxyXG4gICAgICAgICAgICAgICAgPC9tYXQtZm9ybS1maWVsZD5cclxuICAgICAgICAgICAgICAgIDxtYXQtZm9ybS1maWVsZCBmeEZsZXg9XCI0NVwiIGZ4RmxleC54cz1cIjEwMFwiPlxyXG4gICAgICAgICAgICAgICAgICA8bWF0LXNlbGVjdCBwbGFjZWhvbGRlcj1cIsOZwoXDmcKCw5jCr8OYwqfDmMKxIMOZwoXDmMKzw5vCjMOYwrFcIiBmb3JtQ29udHJvbE5hbWU9XCJWYWx1ZVBhdGhcIj5cclxuICAgICAgICAgICAgICAgICAgICA8bWF0LW9wdGlvbj4tLTwvbWF0LW9wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICA8IS0tIDxtYXQtb3B0aW9uICpuZ0Zvcj1cImxldCBpdGVtIG9mIHBhdGhPcHRpb25zXCIgW3ZhbHVlXT1cIml0ZW0ucGF0aFwiIFtjbGFzc109XCInbWF0LW9wdGlvbiBkZXB0aF8nICsgaXRlbS5kZXB0c1wiIFtkaXNhYmxlZF09XCIhaXRlbS5pc0xhc3ROb2RlXCI+IC0tPlxyXG4gICAgICAgICAgICAgICAgICAgIDxtYXQtb3B0aW9uICpuZ0Zvcj1cImxldCBpdGVtIG9mIHBhdGhPcHRpb25zXCIgW3ZhbHVlXT1cIml0ZW0ucGF0aFwiIFtjbGFzc109XCInbWF0LW9wdGlvbiBkZXB0aF8nICsgaXRlbS5kZXB0c1wiPlxyXG4gICAgICAgICAgICAgICAgICAgICAge3tpdGVtLnBhdGh9fVxyXG4gICAgICAgICAgICAgICAgICAgIDwvbWF0LW9wdGlvbj5cclxuICAgICAgICAgICAgICAgICAgPC9tYXQtc2VsZWN0PlxyXG4gICAgICAgICAgICAgICAgPC9tYXQtZm9ybS1maWVsZD5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gKGNsaWNrKT1cInJlbW92ZUNvbHVtbihpKVwiIGZ4RmxleCBtYXQtaWNvbi1idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgIDxtYXQtaWNvbj5kZWxldGU8L21hdC1pY29uPlxyXG4gICAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPGJyIC8+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgIDxidXR0b24gKGNsaWNrKT1cImFkZENvbHVtbigpXCIgZnhGbGV4IG1hdC1yYWlzZWQtYnV0dG9uIGNvbG9yPVwicHJpbWFyeVwiIHR5cGU9XCJidXR0b25cIj7DmMKnw5nCgcOYwrLDmcKIw5jCr8OZwoYgw5jCs8OYwqrDmcKIw5nChjwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L21hdC1jYXJkLWNvbnRlbnQ+XHJcbiAgICA8L21hdC1jYXJkPlxyXG4gICAgPG1hdC1jYXJkIGZ4RmxleD1cIjI1XCI+XHJcbiAgICAgIDxtYXQtY2FyZC1oZWFkZXI+XHJcbiAgICAgICAgPG1hdC1jYXJkLXRpdGxlPsOZwobDmMKqw5jCp8ObwozDmMKsIMOYwq/DmMKnw5jCr8OZwocgw5nCh8OYwqc8L21hdC1jYXJkLXRpdGxlPlxyXG4gICAgICA8L21hdC1jYXJkLWhlYWRlcj5cclxuICAgICAgPG1hdC1jYXJkLWNvbnRlbnQ+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cIml0ZW0tbWFyZ2luXCI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwibGlzdC1pdGVtXCIgZnhMYXlvdXQ9XCJyb3dcIiAqbmdGb3I9XCJsZXQgaXRlbSBvZiBmb3JtR3JvdXAuY29udHJvbHMuY29sdW1ucy52YWx1ZTsgbGV0IGk9aW5kZXhcIlxyXG4gICAgICAgICAgICBmeExheW91dEFsaWduPVwic3BhY2UtYmV0d2VlbiBjZW50ZXJcIj5cclxuICAgICAgICAgICAgPHNwYW4gZnhGbGV4PVwiNDBcIj57e2l0ZW1bMF19fSA6IHt7aXRlbVsxXX19PC9zcGFuPlxyXG4gICAgICAgICAgICA8c3BhbiBmeEZsZXggW2Zvcm1Hcm91cF09XCJmb3JtR3JvdXAuY29udHJvbHMuQ29sb3JzXCIgKm5nSWY9XCIkYW55KGZvcm1Hcm91cC5jb250cm9scy5Db2xvcnMpLmNvbnRyb2xzW2l0ZW1bMF1dXCI+XHJcbiAgICAgICAgICAgICAgPGlucHV0IHBsYWNlaG9sZGVyPVwiw5jCscOZwobDmsKvIMOZwobDmcKFw5nCiMOYwq/DmMKnw5jCsVwiIChjaGFuZ2UpPVwiY29uZmlnQ2hhbmdlZCgpXCIgW2Zvcm1Db250cm9sTmFtZV09XCJpdGVtWzBdXCIgdHlwZT1cImNvbG9yXCI+XHJcbiAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgPG1hdC1mb3JtLWZpZWxkIGZ4RmxleD1cIjMwXCIgW2Zvcm1Hcm91cF09XCJmb3JtR3JvdXAuY29udHJvbHMuVHlwZXNcIiAqbmdJZj1cIiRhbnkoZm9ybUdyb3VwLmNvbnRyb2xzLlR5cGVzKS5jb250cm9sc1tpdGVtWzBdXVwiPlxyXG4gICAgICAgICAgICAgIDwhLS0gPGlucHV0IHBsYWNlaG9sZGVyPVwidGlwb1wiIChjaGFuZ2UpPVwiY29uZmlnQ2hhbmdlZCgpXCIgPiAtLT5cclxuICAgICAgICAgICAgICA8bWF0LXNlbGVjdCBwbGFjZWhvbGRlcj1cInRpcG9cIiBbZm9ybUNvbnRyb2xOYW1lXT1cIml0ZW1bMF1cIj5cclxuICAgICAgICAgICAgICAgIDxtYXQtb3B0aW9uPi0tPC9tYXQtb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgPG1hdC1vcHRpb24gKm5nRm9yPVwibGV0IGl0ZW0gb2YgZGlhZ3JhbVR5cGVzXCIgW3ZhbHVlXT1cIml0ZW1cIj5cclxuICAgICAgICAgICAgICAgICAge3tpdGVtfX1cclxuICAgICAgICAgICAgICAgIDwvbWF0LW9wdGlvbj5cclxuICAgICAgICAgICAgICA8L21hdC1zZWxlY3Q+XHJcbiAgICAgICAgICAgIDwvbWF0LWZvcm0tZmllbGQ+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9tYXQtY2FyZC1jb250ZW50PlxyXG4gICAgPC9tYXQtY2FyZD5cclxuICAgIDxtYXQtY2FyZCBmeExheW91dD1cImNvbHVtblwiIGZ4RmxleD1cIjI1XCI+XHJcbiAgICAgIDxtYXQtY2FyZC1oZWFkZXI+XHJcbiAgICAgICAgPG1hdC1jYXJkLXRpdGxlPsOYwqrDmcKGw5jCuMObwozDmcKFw5jCp8OYwqogw5jCuMOYwqfDmcKHw5jCscObwow8L21hdC1jYXJkLXRpdGxlPlxyXG4gICAgICA8L21hdC1jYXJkLWhlYWRlcj5cclxuICAgICAgPG1hdC1jYXJkLWNvbnRlbnQgW2Zvcm1Hcm91cF09XCJmb3JtR3JvdXBcIj5cclxuICAgICAgICA8bWF0LWZvcm0tZmllbGQ+XHJcbiAgICAgICAgICA8aW5wdXQgbWF0SW5wdXQgcGxhY2Vob2xkZXI9XCLDmMKqw5jCucOYwq/DmMKnw5jCryDDmMKzw5jCt8OYwrFcIiBmb3JtQ29udHJvbE5hbWU9XCJDb2xzXCI+XHJcbiAgICAgICAgPC9tYXQtZm9ybS1maWVsZD5cclxuICAgICAgICA8bWF0LWZvcm0tZmllbGQ+XHJcbiAgICAgICAgICA8aW5wdXQgbWF0SW5wdXQgcGxhY2Vob2xkZXI9XCLDmMKqw5jCucOYwq/DmMKnw5jCryDDmMKzw5jCqsOZwojDmcKGXCIgZm9ybUNvbnRyb2xOYW1lPVwiUm93c1wiPlxyXG4gICAgICAgIDwvbWF0LWZvcm0tZmllbGQ+XHJcbiAgICAgICAgPGRpdiBmeExheW91dD1cInJvd1wiPlxyXG4gICAgICAgICAgPGxhYmVsIGZ4RmxleD1cIjUwXCI+w5jCscOZwobDmsKvIMOZwoXDmMKqw5nChiA6PC9sYWJlbD5cclxuICAgICAgICAgIDxzcGFuPlxyXG4gICAgICAgICAgICA8aW5wdXQgKGNoYW5nZSk9XCJjb25maWdDaGFuZ2VkKClcIiBmb3JtQ29udHJvbE5hbWU9XCJUZXh0Q29sb3JcIiB0eXBlPVwiY29sb3JcIj5cclxuICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGZ4TGF5b3V0PVwicm93XCI+XHJcbiAgICAgICAgICA8bGFiZWwgZnhGbGV4PVwiNTBcIj7DmMKxw5nChsOawq8gw5nCvsOYwrMgw5jCssOZwoXDm8KMw5nChsOZwocgOjwvbGFiZWw+XHJcbiAgICAgICAgICA8c3Bhbj5cclxuICAgICAgICAgICAgPGlucHV0IGZvcm1Db250cm9sTmFtZT1cIkJhY2tncm91bmRDb2xvclwiIHR5cGU9XCJjb2xvclwiPlxyXG4gICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L21hdC1jYXJkLWNvbnRlbnQ+XHJcbiAgICA8L21hdC1jYXJkPlxyXG4gIDwvZGl2PlxyXG4gIDxkaXY+XHJcbiAgICA8bWF0LWNhcmQgZnhMYXlvdXRBbGlnbj1cImVuZCBjZW50ZXJcIiBmeExheW91dD1cInJvd1wiIGZ4RmxleD1cIjEwMFwiPlxyXG4gICAgICA8bWF0LWNhcmQtY29udGVudD5cclxuICAgICAgICA8YnV0dG9uIChjbGljayk9XCJhZGQoJGV2ZW50KVwiIGZ4RmxleCBtYXQtcmFpc2VkLWJ1dHRvbiBjb2xvcj1cInByaW1hcnlcIiB0eXBlPVwic3VibWl0XCI+w5jCq8OYwqjDmMKqPC9idXR0b24+XHJcbiAgICAgICAgPGJ1dHRvbiBmeEZsZXg9J25vZ3JvdycgbWF0LWJ1dHRvbiByb3V0ZXJMaW5rPScvZGlhZ3JhbXMnPsOYwqfDmcKGw5jCtcOYwrHDmMKnw5nCgTwvYnV0dG9uPlxyXG4gICAgICA8L21hdC1jYXJkLWNvbnRlbnQ+XHJcbiAgICA8L21hdC1jYXJkPlxyXG4gIDwvZGl2PlxyXG48L2Rpdj5gLFxyXG5cdHN0eWxlczogW2AjY2hhcnR7d2lkdGg6MzAwcHg7ZGlyZWN0aW9uOmx0cn0uZm9ybS1lbGVtZW50LW1hcmdpbnttYXJnaW46NXB4IDEwcHh9Lml0ZW0tbWFyZ2lue21hcmdpbjoxMHB4IDA7ZGlzcGxheTpibG9ja31tYXQtb3B0aW9uLmRlcHRoXzJ7cGFkZGluZy1yaWdodDozMHB4fW1hdC1vcHRpb24uZGVwdGhfM3twYWRkaW5nLXJpZ2h0OjUwcHh9bWF0LW9wdGlvbi5kZXB0aF80e3BhZGRpbmctcmlnaHQ6NzBweH0ubWF0LWNhcmR7bWFyZ2luOjEyLjVweH1gXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQWRkRGlhZ3JhbUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuXHR1bnN1YnNjcmliZSA9IG5ldyBTdWJqZWN0PHZvaWQ+KCk7XHJcblx0Zm9ybUdyb3VwOiBGb3JtR3JvdXAgPSBBZGREaWFncmFtQXBpTW9kZWwuUmVxdWVzdC5mb3JtR3JvdXA7XHJcblx0ZGF0YTogYW55O1xyXG5cdGNvbHVtbnM6IGFueTtcclxuXHRjaGFydDtcclxuXHRkaWFncmFtVHlwZXM6IHN0cmluZ1tdO1xyXG5cdHBhdGhPcHRpb25zOiB7XHJcblx0XHRwYXRoOiBzdHJpbmc7XHJcblx0XHRuYW1lOiBzdHJpbmc7XHJcblx0XHR0eXBlOiBzdHJpbmc7XHJcblx0XHRjb2xvcjogc3RyaW5nO1xyXG5cdH1bXTtcclxuXHRjb2x1bW5zTWFwcGluZ3M6IEFic3RyYWN0Q29udHJvbFtdO1xyXG5cdGRhdGFTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcclxuXHRkaWFncmFtTW9kZWw6IERpYWdyYW1Nb2RlbDtcclxuXHRjb21wb25lbnRNb2RlbDogeyBjb21wb25lbnQ6IGFueTsgaW5wdXRzOiBvYmplY3QgfTtcclxuXHR0eXBlTWFwVG9EaWFncmFtOiB7IFt0eXBlOiBzdHJpbmddOiBhbnkgfTtcclxuXHRkaWFncmFtUGFydGlhbENvbmZpZzogeyB0eXBlOiBzdHJpbmc7IGlucHV0czogeyBmb3JtR3JvdXA6IEZvcm1Hcm91cDsgZGlhZ3JhbVNlcnZpY2U6IERpYWdyYW1TZXJ2aWNlIH0gfTtcclxuXHRzb3VyY2VzOiBPYnNlcnZhYmxlPFNvdXJjZU1vZGVsW10+O1xyXG5cdGdyb3VwczogT2JzZXJ2YWJsZTxzdHJpbmdbXT47XHJcblx0c291cmNlOiBTb3VyY2VNb2RlbDtcclxuXHRjb25zdHJ1Y3RvcihcclxuXHRcdHByaXZhdGUgZGlhZ3JhbVNlcnZpY2U6IERpYWdyYW1TZXJ2aWNlLFxyXG5cdFx0cHJpdmF0ZSBmb3JtQnVpbGRlcjogRm9ybUJ1aWxkZXIsXHJcblx0XHRwcml2YXRlIHN0b3JlOiBTdG9yZTxGZWF0dXJlU3RhdGU+LFxyXG5cdFx0cHJpdmF0ZSByb3V0ZTogQWN0aXZhdGVkUm91dGVcclxuXHQpIHtcclxuXHRcdHRoaXMuc291cmNlcyA9IHRoaXMuZGlhZ3JhbVNlcnZpY2UuZ2V0U291cmNlcygpO1xyXG5cdFx0dGhpcy5ncm91cHMgPSB0aGlzLmRpYWdyYW1TZXJ2aWNlLmdldEdyb3VwcygpO1xyXG5cdFx0Ly8gdGhpcy5kaWFncmFtTW9kZWwgPSBuZXcgRGlhZ3JhbU1vZGVsKCk7XHJcblx0XHR0aGlzLmNvbHVtbnNNYXBwaW5ncyA9ICh0aGlzLmZvcm1Hcm91cC5jb250cm9scy5Db2x1bW5NYXBwaW5ncyBhcyBGb3JtQXJyYXkpLmNvbnRyb2xzO1xyXG5cdFx0dGhpcy5yb3V0ZS5wYXJhbXMuc3Vic2NyaWJlKHBhcmFtcyA9PiB7XHJcblx0XHRcdGNvbnN0IGRpYWdyYW1JZDogc3RyaW5nID0gcGFyYW1zW1wiaWRcIl07XHJcblx0XHRcdC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby11bnVzZWQtZXhwcmVzc2lvblxyXG5cdFx0XHRkaWFncmFtSWQgJiZcclxuXHRcdFx0XHR0aGlzLmRpYWdyYW1TZXJ2aWNlLmdldERpYWdyYW0oZGlhZ3JhbUlkKS5zdWJzY3JpYmUoZGF0YSA9PiB7XHJcblx0XHRcdFx0XHR0aGlzLmZvcm1Hcm91cC5wYXRjaFZhbHVlKHtcclxuXHRcdFx0XHRcdFx0X2lkOiBkYXRhLl9pZCxcclxuXHRcdFx0XHRcdFx0TmFtZTogZGF0YS5OYW1lLFxyXG5cdFx0XHRcdFx0XHRJc0FjdGl2ZTogZGF0YS5Jc0FjdGl2ZSxcclxuXHRcdFx0XHRcdFx0R3JvdXBzOiBkYXRhLkdyb3VwcyxcclxuXHRcdFx0XHRcdFx0VHlwZTogZGF0YS5DaGFydC5kYXRhLnR5cGUsXHJcblx0XHRcdFx0XHRcdExlZ2VuZDogZGF0YS5DaGFydC5sZWdlbmQuc2hvdyxcclxuXHRcdFx0XHRcdFx0U3ViY2hhcnQ6IGRhdGEuQ2hhcnQuc3ViY2hhcnQuc2hvdyxcclxuXHRcdFx0XHRcdFx0Wm9vbTogZGF0YS5DaGFydC56b29tLmVuYWJsZWQsXHJcblx0XHRcdFx0XHRcdFRvb2x0aXA6IGRhdGEuQ2hhcnQudG9vbHRpcC5ncm91cGVkLFxyXG5cdFx0XHRcdFx0XHRTeW5jOiBkYXRhLlNvdXJjZS5JbnRlcnZhbCxcclxuXHRcdFx0XHRcdFx0U291cmNlOiBkYXRhLlNvdXJjZSxcclxuXHRcdFx0XHRcdFx0Y29sdW1uczogZGF0YS5DaGFydC5kYXRhLmNvbHVtbnMsXHJcblx0XHRcdFx0XHRcdENvbHVtbk1hcHBpbmdzOiBkYXRhLkNoYXJ0LkNvbHVtbk1hcHBpbmdzLFxyXG5cdFx0XHRcdFx0XHRDb2xzOiBkYXRhLkJveC5Db2xzLFxyXG5cdFx0XHRcdFx0XHRGbG93OiBkYXRhLkNoYXJ0LkZsb3csXHJcblx0XHRcdFx0XHRcdFJvd3M6IGRhdGEuQm94LlJvd3MsXHJcblx0XHRcdFx0XHRcdEJhY2tncm91bmRDb2xvcjogZGF0YS5Cb3guQmFja2dyb3VuZENvbG9yLFxyXG5cdFx0XHRcdFx0XHRUZXh0Q29sb3I6IGRhdGEuQm94LlRleHRDb2xvclxyXG5cdFx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHRcdFx0Y29uc3QgY29sb3JzQ29udHJvbCA9IDxGb3JtR3JvdXA+dGhpcy5mb3JtR3JvdXAuY29udHJvbHNbXCJDb2xvcnNcIl07XHJcblx0XHRcdFx0XHRPYmplY3Qua2V5cyhkYXRhLkNoYXJ0LmRhdGEuY29sb3JzIHx8IHt9KS5mb3JFYWNoKGNvbHVtbktleSA9PiB7XHJcblx0XHRcdFx0XHRcdGlmICghKGNvbHVtbktleSBpbiBjb2xvcnNDb250cm9sLmNvbnRyb2xzKSlcclxuXHRcdFx0XHRcdFx0XHRjb2xvcnNDb250cm9sLmFkZENvbnRyb2woY29sdW1uS2V5LCBuZXcgRm9ybUNvbnRyb2woZGF0YS5DaGFydC5kYXRhLmNvbG9yc1tjb2x1bW5LZXldKSk7XHJcblx0XHRcdFx0XHR9KTtcclxuXHJcblx0XHRcdFx0XHRjb25zdCB0eXBlc0NvbnRyb2wgPSA8Rm9ybUdyb3VwPnRoaXMuZm9ybUdyb3VwLmNvbnRyb2xzW1wiVHlwZXNcIl07XHJcblx0XHRcdFx0XHRPYmplY3Qua2V5cyhkYXRhLkNoYXJ0LmRhdGEudHlwZXMgfHwge30pLmZvckVhY2goa2V5ID0+IHtcclxuXHRcdFx0XHRcdFx0aWYgKCEoa2V5IGluIHR5cGVzQ29udHJvbC5jb250cm9scykpXHJcblx0XHRcdFx0XHRcdFx0dHlwZXNDb250cm9sLmFkZENvbnRyb2woa2V5LCBuZXcgRm9ybUNvbnRyb2woZGF0YS5DaGFydC5kYXRhLnR5cGVzW2tleV0pKTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0ZGF0YS5DaGFydC5Db2x1bW5NYXBwaW5ncy5mb3JFYWNoKG1hcHBpbmcgPT4gdGhpcy5hZGRDb2x1bW4obWFwcGluZy5OYW1lUGF0aCwgbWFwcGluZy5WYWx1ZVBhdGgpKTtcclxuXHRcdFx0XHRcdHRoaXMuc291cmNlID0gZGF0YS5Tb3VyY2U7XHJcblx0XHRcdFx0XHR0aGlzLnN0b3JlLmRpc3BhdGNoKG5ldyBIYXZlRW5kcG9pbnRBY3Rpb24odGhpcykpO1xyXG5cclxuXHRcdFx0XHRcdHRoaXMuZGlhZ3JhbVBhcnRpYWxDb25maWcgPSB7XHJcblx0XHRcdFx0XHRcdHR5cGU6IHRoaXMuZm9ybUdyb3VwLnZhbHVlLlR5cGUsXHJcblx0XHRcdFx0XHRcdGlucHV0czoge1xyXG5cdFx0XHRcdFx0XHRcdGZvcm1Hcm91cDogdGhpcy5mb3JtR3JvdXAsXHJcblx0XHRcdFx0XHRcdFx0ZGlhZ3JhbVNlcnZpY2U6IHRoaXMuZGlhZ3JhbVNlcnZpY2VcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0dGhpcy5kaWFncmFtUGFydGlhbENvbmZpZyA9IHtcclxuXHRcdFx0XHR0eXBlOiB0aGlzLmZvcm1Hcm91cC52YWx1ZS5UeXBlLFxyXG5cdFx0XHRcdGlucHV0czoge1xyXG5cdFx0XHRcdFx0Zm9ybUdyb3VwOiB0aGlzLmZvcm1Hcm91cCxcclxuXHRcdFx0XHRcdGRpYWdyYW1TZXJ2aWNlOiB0aGlzLmRpYWdyYW1TZXJ2aWNlXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9O1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0dGhpcy5kaWFncmFtVHlwZXMgPSBbXHJcblx0XHRcdFwiYmFyXCIsXHJcblx0XHRcdFwiZG9udXRcIixcclxuXHRcdFx0XCJwaWVcIixcclxuXHRcdFx0XCJzY2F0dGVyXCIsXHJcblx0XHRcdFwibGluZVwiLFxyXG5cdFx0XHRcImFyZWFcIixcclxuXHRcdFx0XCJhcmVhLXNwbGluZVwiLFxyXG5cdFx0XHRcIm51bWVyb1wiLFxyXG5cdFx0XHRcImJvb2xlYW5vXCIsXHJcblx0XHRcdFwidGVtcG9cIlxyXG5cdFx0XTtcclxuXHR9XHJcblx0bmdPbkluaXQoKSB7XHJcblx0XHR0aGlzLmZvcm1Hcm91cC5jb250cm9scy5Db2x1bW5NYXBwaW5ncy5zdGF0dXNDaGFuZ2VzLnN1YnNjcmliZShzdGF0dXMgPT4ge1xyXG5cdFx0XHRpZiAoXHJcblx0XHRcdFx0c3RhdHVzID09IFwiVkFMSURcIiAmJlxyXG5cdFx0XHRcdCh0aGlzLmZvcm1Hcm91cC5jb250cm9scy5Db2x1bW5NYXBwaW5ncyBhcyBGb3JtQXJyYXkpLmNvbnRyb2xzLmxlbmd0aCA+IDAgJiZcclxuXHRcdFx0XHR0aGlzLmRhdGFcclxuXHRcdFx0KVxyXG5cdFx0XHRcdHRoaXMuc3RvcmUuZGlzcGF0Y2gobmV3IENvbHVtbnNNYXBwaW5nQ2hhbmdlZEFjdGlvbih0aGlzKSk7XHJcblx0XHR9KTtcclxuXHR9XHJcblx0bmdPbkRlc3Ryb3koKSB7XHJcblx0XHRpZiAodGhpcy5kYXRhU3Vic2NyaXB0aW9uKSB0aGlzLmRhdGFTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcclxuXHRcdHRoaXMudW5zdWJzY3JpYmUubmV4dCgpO1xyXG5cdFx0dGhpcy51bnN1YnNjcmliZS5jb21wbGV0ZSgpO1xyXG5cdH1cclxuXHQvLyBnZXREYXRhKCkge1xyXG5cdC8vICAgY29uc3QgbyQgPSB0aGlzLmRpYWdyYW1TZXJ2aWNlLmdldERhdGEodGhpcy5zb3VyY2UpO1xyXG5cdC8vICAgdGhpcy5kYXRhU3Vic2NyaXB0aW9uID0gbyQuc3Vic2NyaWJlKGRhdGEgPT4gbmV3IERhdGFMb2FkZWRBY3Rpb24odGhpcykpXHJcblx0Ly8gICByZXR1cm4gbyQ7XHJcblx0Ly8gfVxyXG5cdGdldERhdGFTdHJ1Y3R1cmUoKSB7XHJcblx0XHRkZWJ1Z2dlcjtcclxuXHRcdGNvbnN0IG9ic2VydmVyID0gdGhpcy5kaWFncmFtU2VydmljZS5nZXREYXRhKHsgLi4udGhpcy5zb3VyY2UsIEludGVydmFsOiAwIH0sIHRoaXMudW5zdWJzY3JpYmUsIERhdGUubm93KCkgLSAxMDAwMCk7XHJcblx0XHR0aGlzLmRhdGFTdWJzY3JpcHRpb24gPSBvYnNlcnZlci5zdWJzY3JpYmUoZGF0YSA9PiB7XHJcblx0XHRcdHRoaXMuZGF0YSA9IGRhdGEuRGF0YTtcclxuXHRcdFx0dGhpcy5wYXRoT3B0aW9ucyA9IHRoaXMuZGlhZ3JhbVNlcnZpY2UuZ2V0X2RhdGFfcmVwb3J0KGRhdGEuRGF0YSk7XHJcblx0XHR9KTtcclxuXHRcdHJldHVybiBvYnNlcnZlcjtcclxuXHR9XHJcblx0Y29uZmlnQ2hhbmdlZCgpIHtcclxuXHRcdHRoaXMuc3RvcmUuZGlzcGF0Y2gobmV3IERpYWdyYW1Db25maWdDaGFuZ2VkQWN0aW9uKHRoaXMpKTtcclxuXHR9XHJcblx0dHlwZUNoYW5nZWQoKSB7XHJcblx0XHRjb25zdCB0eXBlc0Zvcm1Hcm91cCA9ICh0aGlzLmZvcm1Hcm91cC5jb250cm9scy5UeXBlcyBhcyBGb3JtR3JvdXApLmNvbnRyb2xzO1xyXG5cdFx0Ly8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmZvcmluXHJcblx0XHRmb3IgKGNvbnN0IGNiIGluIHR5cGVzRm9ybUdyb3VwKSB7XHJcblx0XHRcdHR5cGVzRm9ybUdyb3VwW2NiXS5zZXRWYWx1ZSh0aGlzLmZvcm1Hcm91cC52YWx1ZS5UeXBlKTtcclxuXHRcdH1cclxuXHRcdHRoaXMuZGlhZ3JhbVBhcnRpYWxDb25maWcgPSB7XHJcblx0XHRcdHR5cGU6IHRoaXMuZm9ybUdyb3VwLnZhbHVlLlR5cGUsXHJcblx0XHRcdGlucHV0czoge1xyXG5cdFx0XHRcdGZvcm1Hcm91cDogdGhpcy5mb3JtR3JvdXAsXHJcblx0XHRcdFx0ZGlhZ3JhbVNlcnZpY2U6IHRoaXMuZGlhZ3JhbVNlcnZpY2VcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHRcdHRoaXMuc3RvcmUuZGlzcGF0Y2gobmV3IERpYWdyYW1Db25maWdDaGFuZ2VkQWN0aW9uKHRoaXMpKTtcclxuXHR9XHJcblx0YWRkQ29sdW1uKE5hbWVQYXRoOiBzdHJpbmcgPSBcIlwiLCBWYWx1ZVBhdGg6IHN0cmluZyA9IFwiXCIpIHtcclxuXHRcdGNvbnN0IGNvbnRyb2wgPSA8Rm9ybUFycmF5PnRoaXMuZm9ybUdyb3VwLmNvbnRyb2xzW1wiQ29sdW1uTWFwcGluZ3NcIl07XHJcblx0XHRjb250cm9sLnB1c2goXHJcblx0XHRcdHRoaXMuZm9ybUJ1aWxkZXIuZ3JvdXAoe1xyXG5cdFx0XHRcdE5hbWVQYXRoOiBbTmFtZVBhdGhdLFxyXG5cdFx0XHRcdFZhbHVlUGF0aDogW1ZhbHVlUGF0aCwgVmFsaWRhdG9ycy5yZXF1aXJlZF1cclxuXHRcdFx0fSlcclxuXHRcdCk7XHJcblx0fVxyXG5cdHJvdXRlRW50ZXJlZChldmVudCkge1xyXG5cdFx0ZGVidWdnZXI7XHJcblx0XHR0aGlzLnNvdXJjZSA9IGV2ZW50LnZhbHVlO1xyXG5cdFx0dGhpcy5mb3JtR3JvdXAucGF0Y2hWYWx1ZSh7IFNvdXJjZTogZXZlbnQudmFsdWUgfSk7XHJcblx0XHR0aGlzLnN0b3JlLmRpc3BhdGNoKG5ldyBIYXZlRW5kcG9pbnRBY3Rpb24odGhpcykpO1xyXG5cdH1cclxuXHRyZW1vdmVDb2x1bW4oaTogbnVtYmVyKSB7XHJcblx0XHRjb25zdCBjb250cm9sID0gPEZvcm1BcnJheT50aGlzLmZvcm1Hcm91cC5jb250cm9sc1tcIkNvbHVtbk1hcHBpbmdzXCJdO1xyXG5cdFx0Y29udHJvbC5yZW1vdmVBdChpKTtcclxuXHR9XHJcblx0Y2FsY3VsYXRlQ29sdW1ucygpOiBPYnNlcnZhYmxlPHZvaWQ+IHtcclxuXHRcdHJldHVybiBPYnNlcnZhYmxlLmNyZWF0ZShvYnNlciA9PiB7XHJcblx0XHRcdGNvbnN0IGNvbHVtbnNNQXBwaW5nID0ge1xyXG5cdFx0XHRcdC8vIE5hbWVWQWx1ZTogICh0aGlzLmZvcm1Hcm91cC5jb250cm9scy5Db2x1bW5NYXBwaW5ncyBhcyBGb3JtQXJyYXkpLmNvbnRyb2xzLnZhbHVlc1xyXG5cdFx0XHR9O1xyXG5cdFx0XHRjb25zdCBjb2x1bW5zID0gdGhpcy5kaWFncmFtU2VydmljZS5leHRyYWN0X2NvbHVtbnNfZnJvbV9kYXRhKFxyXG5cdFx0XHRcdHRoaXMuZGF0YSxcclxuXHRcdFx0XHQodGhpcy5mb3JtR3JvdXAuY29udHJvbHMuQ29sdW1uTWFwcGluZ3MgYXMgRm9ybUFycmF5KS52YWx1ZVxyXG5cdFx0XHQpO1xyXG5cdFx0XHR0aGlzLmZvcm1Hcm91cC5jb250cm9scy5jb2x1bW5zLnNldFZhbHVlKGNvbHVtbnMpO1xyXG5cdFx0XHQvLyBhZGQgbmV3IGl0ZW0gdG8gdGhpcy5mb3JtR3JvdXAuY29udHJvbHMuY29sb3JzIGZvcm0gY29udHJvbFxyXG5cdFx0XHRjb25zdCBjb2xvcnNDb250cm9sID0gPEZvcm1Hcm91cD50aGlzLmZvcm1Hcm91cC5jb250cm9sc1tcIkNvbG9yc1wiXTtcclxuXHRcdFx0Y29sdW1ucy5mb3JFYWNoKGNvbHVtbiA9PiB7XHJcblx0XHRcdFx0Y29uc3QgY29sdW1uS2V5ID0gY29sdW1uWzBdO1xyXG5cdFx0XHRcdGlmICghKGNvbHVtbktleSBpbiBjb2xvcnNDb250cm9sLmNvbnRyb2xzKSlcclxuXHRcdFx0XHRcdGNvbG9yc0NvbnRyb2wuYWRkQ29udHJvbChjb2x1bW5LZXksIG5ldyBGb3JtQ29udHJvbChcIiMxMjM0NTZcIikpO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHRcdGNvbnN0IHR5cGVzQ29udHJvbCA9IDxGb3JtR3JvdXA+dGhpcy5mb3JtR3JvdXAuY29udHJvbHNbXCJUeXBlc1wiXTtcclxuXHRcdFx0Y29sdW1ucy5mb3JFYWNoKGNvbHVtbiA9PiB7XHJcblx0XHRcdFx0Y29uc3Qga2V5ID0gY29sdW1uWzBdO1xyXG5cdFx0XHRcdGlmICghKGtleSBpbiB0eXBlc0NvbnRyb2wuY29udHJvbHMpKVxyXG5cdFx0XHRcdFx0dHlwZXNDb250cm9sLmFkZENvbnRyb2woa2V5LCBuZXcgRm9ybUNvbnRyb2wodGhpcy5mb3JtR3JvdXAudmFsdWUuVHlwZSkpO1xyXG5cdFx0XHR9KTtcclxuXHRcdFx0b2JzZXIubmV4dCgpO1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cdGdlbmVyYXRlRGlhZ3JhbSgpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG5cdFx0Y29uc3QgdGVtcCA9IG5ldyBEaWFncmFtTW9kZWwoKTtcclxuXHRcdHRlbXAuX2lkID0gXCJ0ZW1wbGF0ZV9pZFwiO1xyXG5cdFx0dGVtcC5OYW1lID0gdGhpcy5mb3JtR3JvdXAudmFsdWUuTmFtZTtcclxuXHRcdGRlYnVnZ2VyO1xyXG5cdFx0dGVtcC5Tb3VyY2UgPSB0aGlzLnNvdXJjZTtcclxuXHRcdHRlbXAuQm94ID0ge1xyXG5cdFx0XHROdW1iZXJPZkNvbHVtbnM6IDEsXHJcblx0XHRcdE9yZGVyOiAxLFxyXG5cdFx0XHRCYWNrZ3JvdW5kQ29sb3I6IHRoaXMuZm9ybUdyb3VwLnZhbHVlLkJhY2tncm91bmRDb2xvclxyXG5cdFx0fTtcclxuXHRcdHRlbXAuV2lkZ2V0ID0ge1xyXG5cdFx0XHRib29sZWFubzogdGhpcy5mb3JtR3JvdXAudmFsdWUuYm9vbGVhbm9cclxuXHRcdH07XHJcblx0XHR0ZW1wLkNoYXJ0ID0ge1xyXG5cdFx0XHRDb2x1bW5NYXBwaW5nczogdGhpcy5mb3JtR3JvdXAudmFsdWUuQ29sdW1uTWFwcGluZ3MsXHJcblx0XHRcdGRhdGE6IHtcclxuXHRcdFx0XHRjb2x1bW5zOiB0aGlzLmZvcm1Hcm91cC5jb250cm9scy5jb2x1bW5zLnZhbHVlLFxyXG5cdFx0XHRcdHR5cGU6IHRoaXMuZm9ybUdyb3VwLnZhbHVlLlR5cGUsXHJcblx0XHRcdFx0dHlwZXM6IHRoaXMuZm9ybUdyb3VwLnZhbHVlLlR5cGVzLFxyXG5cdFx0XHRcdGNvbG9yczogdGhpcy5mb3JtR3JvdXAuY29udHJvbHMuQ29sb3JzLnZhbHVlXHJcblx0XHRcdH0sXHJcblx0XHRcdEZsb3c6IHRoaXMuZm9ybUdyb3VwLnZhbHVlLkZsb3csXHJcblx0XHRcdGxlZ2VuZDoge1xyXG5cdFx0XHRcdHNob3c6IHRoaXMuZm9ybUdyb3VwLnZhbHVlLkxlZ2VuZFxyXG5cdFx0XHR9LFxyXG5cdFx0XHRzdWJjaGFydDoge1xyXG5cdFx0XHRcdHNob3c6IHRoaXMuZm9ybUdyb3VwLnZhbHVlLlN1YmNoYXJ0XHJcblx0XHRcdH0sXHJcblx0XHRcdHpvb206IHtcclxuXHRcdFx0XHRlbmFibGVkOiB0aGlzLmZvcm1Hcm91cC52YWx1ZS5ab29tXHJcblx0XHRcdH0sXHJcblx0XHRcdHRvb2x0aXA6IHtcclxuXHRcdFx0XHRncm91cGVkOiB0aGlzLmZvcm1Hcm91cC52YWx1ZS5Ub29sdGlwXHJcblx0XHRcdH1cclxuXHRcdFx0Ly8gdG9vbHRpcDoge1xyXG5cdFx0XHQvLyAgICAgICAgIGZvcm1hdDoge1xyXG5cdFx0XHQvLyAgICAgICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG5cdFx0XHQvLyAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUgKyBcIiVcIjtcclxuXHRcdFx0Ly8gICAgICAgICAgICAgICAgIH1cclxuXHRcdFx0Ly8gICAgICAgICB9XHJcblx0XHRcdC8vIH0sXHJcblx0XHRcdC8vIGNvbG9yOiB7XHJcblx0XHRcdC8vICAgICAgICAgcGF0dGVybjogWycjNjBCMDQ0JywgJyNGNkM2MDAnLCAnI0Y5NzYwMCcsICcjRkYwMDAwJ10sXHJcblx0XHRcdC8vICAgICAgICAgdGhyZXNob2xkOiB7XHJcblx0XHRcdC8vICAgICAgICAgICAgICAgICAvLyAgdW5pdDogJ3ZhbHVlJywgLy8gcGVyY2VudGFnZSBpcyBkZWZhdWx0XHJcblx0XHRcdC8vICAgICAgICAgICAgICAgICB2YWx1ZXM6IFszMCwgNjAsIDkwLCAxMDBdXHJcblx0XHRcdC8vICAgICAgICAgfVxyXG5cdFx0XHQvLyB9LFxyXG5cdFx0fTtcclxuXHRcdC8vIHRoaXMuY29tcG9uZW50TW9kZWwgPSB7XHJcblx0XHQvLyAgIGNvbXBvbmVudDogdGhpcy50eXBlTWFwVG9EaWFncmFtW3RlbXAuQ2hhcnQuZGF0YS50eXBlXSxcclxuXHRcdC8vICAgaW5wdXRzOiB7IGRhdGE6IHRlbXAgfVxyXG5cdFx0Ly8gfVxyXG5cdFx0dGhpcy5kaWFncmFtTW9kZWwgPSB0ZW1wO1xyXG5cdFx0cmV0dXJuIE9ic2VydmFibGUuZW1wdHkoKTtcclxuXHR9XHJcblx0YWRkKGV2ZW50KSB7XHJcblx0XHR0aGlzLnN0b3JlLmRpc3BhdGNoKG5ldyBBZGREaWFncmFtQWN0aW9uKHRoaXMuZm9ybUdyb3VwLnZhbHVlKSk7XHJcblx0fVxyXG59XHJcbiIsImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwicnhqcy9PYnNlcnZhYmxlXCI7XHJcblxyXG5pbXBvcnQgeyBEaWFncmFtU2VydmljZSB9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9kaWFncmFtLnNlcnZpY2VcIjtcclxuaW1wb3J0IHsgR2V0RGlhZ3JhbXNBcGlNb2RlbCB9IGZyb20gXCIuLi8uLi9tb2RlbHMvZ2V0LWRpYWdyYW1zLWFwaS5tb2RlbFwiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcblx0c2VsZWN0b3I6IFwiZGlhZ3JhbS12aWV3XCIsXHJcblx0dGVtcGxhdGU6IGA8ZGl2ICpuZ0lmPVwiZGlhZ3JhbURhdGEkIHwgYXN5bmNcIiBbc3R5bGUuY29sb3JdPVwiKGRpYWdyYW1EYXRhJCB8IGFzeW5jKT8uQm94LkNvbG9yXCI+XHJcbiAgICA8ZHluYW1pYy1jb21wb25lbnQtc2VsZWN0b3IgY2xhc3M9XCJkaWFncmFtLWJveFwiIFtkYXRhXT1cIihkaWFncmFtRGF0YSQgfCBhc3luYylcIj48L2R5bmFtaWMtY29tcG9uZW50LXNlbGVjdG9yPlxyXG48L2Rpdj5gLFxyXG5cdHN0eWxlczogW2A6aG9zdHt3aWR0aDoxMDAlO21hcmdpbjoxMi41cHh9LmRpYWdyYW0tYm94e21hcmdpbjoxNXB4fS5kaWFncmFtLWJveCAuYzN7ZGlyZWN0aW9uOmx0cn0ud2lkZ2V0LXRpdGxle2ZvbnQ6MS4zZW0gSVJBTlNhbnMsdGFob21hfWBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBkaWFncmFtVmlld0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblx0ZGlhZ3JhbXM6IE9ic2VydmFibGU8R2V0RGlhZ3JhbXNBcGlNb2RlbC5SZXNwb25zZT47XHJcblx0d2lkdGggPSAxMDA7XHJcblxyXG5cdGRpYWdyYW1EYXRhJDogYW55O1xyXG5cdEBJbnB1dChcImlkXCIpIGRpYWdyYW1JZDogc3RyaW5nO1xyXG5cclxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIGRpYWdyYW1TZXJ2aWNlOiBEaWFncmFtU2VydmljZSkge1xyXG5cdFx0dGhpcy5kaWFncmFtcyA9IHRoaXMuZGlhZ3JhbVNlcnZpY2UuZ2V0RGlhZ3JhbXMoKTtcclxuXHR9XHJcblxyXG5cdG5nT25Jbml0KCkge1xyXG5cdFx0dGhpcy5kaWFncmFtRGF0YSQgPSB0aGlzLmRpYWdyYW1TZXJ2aWNlLmdldERpYWdyYW0odGhpcy5kaWFncmFtSWQpO1xyXG5cdH1cclxufVxyXG4iLCJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwicnhqcy9PYnNlcnZhYmxlXCI7XHJcblxyXG5pbXBvcnQgeyBHZXREaWFncmFtc0FwaU1vZGVsIH0gZnJvbSBcIi4uLy4uL21vZGVscy9nZXQtZGlhZ3JhbXMtYXBpLm1vZGVsXCI7XHJcbmltcG9ydCB7IERpYWdyYW1TZXJ2aWNlIH0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL2RpYWdyYW0uc2VydmljZVwiO1xyXG5AQ29tcG9uZW50KHtcclxuXHRzZWxlY3RvcjogXCJkaWFncmFtc1wiLFxyXG5cdHRlbXBsYXRlOiBgPG1hdC1ncmlkLWxpc3QgY29scz1cIjEyXCIgcm93SGVpZ2h0PVwiMTAwcHhcIj5cclxuICA8bWF0LWdyaWQtdGlsZSAqbmdGb3I9XCJsZXQgZGlhZ3JhbSBvZiAoZGlhZ3JhbXMgfCBhc3luYyk/LlJlc3VsdFwiIFxyXG4gIFtjb2xzcGFuXT1cImRpYWdyYW0uQm94LkNvbHNcIiBcclxuICBbcm93c3Bhbl09XCJkaWFncmFtLkJveC5Sb3dzXCIgXHJcbiAgW3N0eWxlLmNvbG9yXT1cImRpYWdyYW0uQm94LkNvbG9yXCI+XHJcbiAgICA8ZHluYW1pYy1jb21wb25lbnQtc2VsZWN0b3IgY2xhc3M9XCJkaWFncmFtLWJveFwiIFtkYXRhXT1cImRpYWdyYW1cIj48L2R5bmFtaWMtY29tcG9uZW50LXNlbGVjdG9yPlxyXG4gIDwvbWF0LWdyaWQtdGlsZT5cclxuPC9tYXQtZ3JpZC1saXN0PlxyXG48YnIgLz5cclxuPGRpdiBmeEZsZXhMYXlvdXQ9XCJyb3dcIiBmeExheW91dFdyYXAgZnhMYXlvdXRBbGlnbj1cImNlbnRlciBjZW50ZXJcIj5cclxuPC9kaXY+XHJcbjxkaXYgZnhMYXlvdXRBbGlnbj0nZW5kIGNlbnRlcic+XHJcbiAgPGJ1dHRvbiBtYXQtZmFiIHJvdXRlckxpbms9XCIuLi9kaWFncmFtcy9hZGRcIiBjbGFzcz1cImFkZC1idG5cIj5cclxuICAgIDxtYXQtaWNvbiBhcmlhLWxhYmVsPVwiRXhhbXBsZSBpY29uLWJ1dHRvbiB3aXRoIGEgaGVhcnQgaWNvblwiPmFkZDwvbWF0LWljb24+XHJcbiAgPC9idXR0b24+XHJcbjwvZGl2PlxyXG5gLFxyXG5cdHN0eWxlczogW2A6aG9zdHt3aWR0aDoxMDAlfS5kaWFncmFtLWJveHttYXJnaW46MTVweH0uYWRkLWJ0bntwb3NpdGlvbjpmaXhlZDtib3R0b206NTBweDtsZWZ0OjI1cHg7ei1pbmRleDoxfWBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEaWFncmFtc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblx0ZGlhZ3JhbXM6IE9ic2VydmFibGU8R2V0RGlhZ3JhbXNBcGlNb2RlbC5SZXNwb25zZT47XHJcblx0d2lkdGggPSAxMDA7XHJcblx0Y29uc3RydWN0b3IocHJpdmF0ZSBkaWFncmFtU2VydmljZTogRGlhZ3JhbVNlcnZpY2UpIHtcclxuXHRcdHRoaXMuZGlhZ3JhbXMgPSB0aGlzLmRpYWdyYW1TZXJ2aWNlLmdldERpYWdyYW1zKCk7XHJcblxyXG5cdFx0Ly8gdGhpcy5kaWFncmFtc1xyXG5cdFx0Ly8gICAgICAgICAuZGVsYXkoMTAwKVxyXG5cdFx0Ly8gICAgICAgICAuc3Vic2NyaWJlKGRpYWdyYW1zID0+XHJcblx0XHQvLyAgICAgICAgICAgICAgICAgZGlhZ3JhbXMuUmVzdWx0LmZvckVhY2goZGlhZ3JhbSA9PlxyXG5cdFx0Ly8gICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kaWFncmFtU2VydmljZS5nZW5lcmF0ZURpYWdyYW0oZGlhZ3JhbS5DaGFydCwgZGlhZ3JhbS5faWQsIGRpYWdyYW0uU291cmNlLlJvdXRlLCBkaWFncmFtLlNvdXJjZS5TeW5jKSkpO1xyXG5cdH1cclxuXHJcblx0bmdPbkluaXQoKSB7XHJcblx0XHQvLyB0aGlzLnNvY2tldFNlcnZpY2UuaW5pdFNvY2tldCgpO1xyXG5cdFx0Ly8gdGhpcy5zb2NrZXRTZXJ2aWNlLnNlbmQoXCJhZGQtbWVzc2FnZVwiKTtcclxuXHRcdC8vIHRoaXMuc29ja2V0U2VydmljZS5vbk1lc3NhZ2UoKS5zdWJzY3JpYmUobXNnPT57XHJcblx0XHQvLyAgICAgICAgIGRlYnVnZ2VyXHJcblx0XHQvLyB9KTtcclxuXHR9XHJcbn1cclxuIiwiaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUgfSBmcm9tIFwiQGFuZ3VsYXIvcm91dGVyXCI7XHJcbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gXCJyeGpzL09ic2VydmFibGVcIjtcclxuaW1wb3J0IHsgU3RvcmUgfSBmcm9tIFwiQG5ncngvc3RvcmVcIjtcclxuaW1wb3J0IHsgRm9ybUdyb3VwLCBGb3JtQ29udHJvbCwgVmFsaWRhdG9ycyB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xyXG5cclxuaW1wb3J0IHsgRGlhZ3JhbVNlcnZpY2UgfSBmcm9tIFwiLi4vLi4vc2VydmljZXMvZGlhZ3JhbS5zZXJ2aWNlXCI7XHJcbmltcG9ydCB7IEZlYXR1cmVTdGF0ZSB9IGZyb20gXCIuLi8uLi9yZWR1Y2Vyc1wiO1xyXG5pbXBvcnQgeyBFZGl0RGlhZ3JhbUFwaU1vZGVsIH0gZnJvbSBcIi4uLy4uL21vZGVscy9lZGl0LWRpYWdyYW0tYXBpLm1vZGVsXCI7XHJcbmltcG9ydCB7IEVkaXREaWFncmFtQWN0aW9uIH0gZnJvbSBcIi4uLy4uL2FjdGlvbnMvZWRpdC1kaWFncmFtLmFjdGlvbnNcIjtcclxuXHJcbkBDb21wb25lbnQoe1xyXG5cdHNlbGVjdG9yOiBcImRpYWdyYW0tZWRpdFwiLFxyXG5cdHRlbXBsYXRlOiBgPG1hdC1jYXJkIGZ4TGF5b3V0PVwiY29sdW1uXCIgZnhGbGV4PVwiNDAwcHhcIj5cclxuICAgIDxmb3JtIFtmb3JtR3JvdXBdPVwiZm9ybUdyb3VwXCIgZnhMYXlvdXQ9J2NvbHVtbicgKG5nU3VibWl0KT1cImFkZCgkZXZlbnQpXCI+XHJcblxyXG4gICAgICAgIDxtYXQtY2FyZC1oZWFkZXI+XHJcbiAgICAgICAgICAgIDxtYXQtY2FyZC10aXRsZT7DmMKnw5nCgcOYwrLDmcKIw5jCr8OZwoYgw5nChsOZwoXDmcKIw5jCr8OYwqfDmMKxIMOYwqzDmMKvw5vCjMOYwq88L21hdC1jYXJkLXRpdGxlPlxyXG4gICAgICAgIDwvbWF0LWNhcmQtaGVhZGVyPlxyXG5cclxuICAgICAgICA8bWF0LWNhcmQtY29udGVudD5cclxuICAgICAgICAgICAgPG1hdC1mb3JtLWZpZWxkIGZ4RmxleEZpbGw+XHJcbiAgICAgICAgICAgICAgICA8aW5wdXQgbWF0SW5wdXQgcGxhY2Vob2xkZXI9XCLDmMK5w5nChsOZwojDmMKnw5nChiDDmcKGw5nChcOZwojDmMKvw5jCp8OYwrFcIiBmb3JtQ29udHJvbE5hbWU9XCJOYW1lXCI+XHJcbiAgICAgICAgICAgIDwvbWF0LWZvcm0tZmllbGQ+XHJcbiAgICAgICAgICAgIDxtYXQtZm9ybS1maWVsZCBmeEZsZXhGaWxsPlxyXG4gICAgICAgICAgICAgICAgPGlucHV0IG1hdElucHV0IHBsYWNlaG9sZGVyPVwiw5jCosOYwq/DmMKxw5jCsyDDmcKGw5nChcOZwojDmMKvw5jCp8OYwrFcIiBmb3JtQ29udHJvbE5hbWU9XCJSb3V0ZVwiPlxyXG4gICAgICAgICAgICA8L21hdC1mb3JtLWZpZWxkPlxyXG5cclxuICAgICAgICAgICAgPG1hdC1jaGVja2JveCBmb3JtQ29udHJvbE5hbWU9XCJJc0FjdGl2ZVwiPsOZwojDmMK2w5jCucObwozDmMKqPC9tYXQtY2hlY2tib3g+XHJcblxyXG4gICAgICAgIDwvbWF0LWNhcmQtY29udGVudD5cclxuICAgICAgICA8bWF0LWNhcmQtYWN0aW9ucz5cclxuICAgICAgICAgICAgPGJ1dHRvbiBmeEZsZXggbWF0LXJhaXNlZC1idXR0b24gY29sb3I9XCJwcmltYXJ5XCIgdHlwZT1cInN1Ym1pdFwiPsOYwqvDmMKow5jCqjwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8YnV0dG9uIGZ4RmxleD0nbm9ncm93JyBtYXQtYnV0dG9uIHJvdXRlckxpbms9Jy9kaWFncmFtcyc+w5jCp8OZwobDmMK1w5jCscOYwqfDmcKBPC9idXR0b24+XHJcbiAgICAgICAgPC9tYXQtY2FyZC1hY3Rpb25zPlxyXG4gICAgPC9mb3JtPlxyXG48L21hdC1jYXJkPlxyXG5gLFxyXG5cdHN0eWxlczogW2BgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRWRpdERpYWdyYW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG5cdGZvcm1Hcm91cDogRm9ybUdyb3VwID0gRWRpdERpYWdyYW1BcGlNb2RlbC5SZXF1ZXN0LmZvcm1Hcm91cDtcclxuXHRjb25zdHJ1Y3RvcihcclxuXHRcdHByaXZhdGUgZGlhZ3JhbVNlcnZpY2U6IERpYWdyYW1TZXJ2aWNlLFxyXG5cdFx0cHJpdmF0ZSByb3V0ZTogQWN0aXZhdGVkUm91dGUsXHJcblx0XHRwcml2YXRlIHN0b3JlOiBTdG9yZTxGZWF0dXJlU3RhdGU+XHJcblx0KSB7XHJcblx0XHRsZXQgUm91dGUgPSB0aGlzLnJvdXRlLnBhcmFtcy5zdWJzY3JpYmUocGFyYW1zID0+IHtcclxuXHRcdFx0Y29uc3QgZGlhZ3JhbUlkOiBzdHJpbmcgPSBwYXJhbXNbXCJpZFwiXTtcclxuXHRcdFx0dGhpcy5kaWFncmFtU2VydmljZS5nZXREaWFncmFtKGRpYWdyYW1JZCkuc3Vic2NyaWJlKGRhdGEgPT4gdGhpcy5mb3JtR3JvdXAucGF0Y2hWYWx1ZShkYXRhKSk7XHJcblx0XHR9KTtcclxuXHR9XHJcblxyXG5cdG5nT25Jbml0KCkge31cclxuXHJcblx0YWRkKGV2ZW50KSB7XHJcblx0XHR0aGlzLnN0b3JlLmRpc3BhdGNoKG5ldyBFZGl0RGlhZ3JhbUFjdGlvbih0aGlzLmZvcm1Hcm91cC52YWx1ZSkpO1xyXG5cdH1cclxufVxyXG4iLCJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSwgSW5qZWN0b3IgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBTdWJzY3JpcHRpb24sIFN1YmplY3QgfSBmcm9tIFwicnhqc1wiO1xyXG5pbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vbi9odHRwXCI7XHJcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gXCJyeGpzL0JlaGF2aW9yU3ViamVjdFwiO1xyXG5pbXBvcnQgeyBTdG9yZSB9IGZyb20gXCJAbmdyeC9zdG9yZVwiO1xyXG5pbXBvcnQgeyBNYXRTbGlkZXJDaGFuZ2UgfSBmcm9tIFwiQGFuZ3VsYXIvbWF0ZXJpYWxcIjtcclxuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUgfSBmcm9tIFwiQGFuZ3VsYXIvcm91dGVyXCI7XHJcblxyXG5pbXBvcnQgeyBEaWFncmFtU2VydmljZSB9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9kaWFncmFtLnNlcnZpY2VcIjtcclxuaW1wb3J0IHsgRGlhZ3JhbU1vZGVsIH0gZnJvbSBcIi4uLy4uL21vZGVscy9kaWFncmFtLm1vZGVsXCI7XHJcbmltcG9ydCB7IEZlYXR1cmVTdGF0ZSB9IGZyb20gXCIuLi8uLi9yZWR1Y2Vyc1wiO1xyXG5pbXBvcnQgeyBmaWx0ZXIsIHRha2VVbnRpbCB9IGZyb20gXCJyeGpzL29wZXJhdG9yc1wiO1xyXG5cclxuZGVjbGFyZSB2YXIgYzM6IGFueTtcclxuXHJcbkBDb21wb25lbnQoe1xyXG5cdHNlbGVjdG9yOiBcImRpYWdyYW1cIixcclxuXHR0ZW1wbGF0ZTogYDxkaXYgY2xhc3M9XCJvdmVyXCIgZnhsYXlvdXQ9XCJyb3dcIiBmeExheW91dEFsaWduPVwic3BhY2UtYmV0d2VlblwiPlxyXG4gICAgPGRpdiBmeEZsZXg9XCJub2dyb3dcIiBmeEZsZXhBbGlnbj1cInN0YXJ0XCIgY2xhc3M9XCJkYXRhLXRpbWVcIj57e25vdyB8IGRhdGUgOiAneS9NL2QgaDptOnMnfX08L2Rpdj5cclxuICAgIDxkaXYgZnhGbGV4PVwibm9ncm93XCIgZnhGbGV4QWxpZ249XCJjZW50ZXJcIiBjbGFzcz1cImRhdGEtdGltZVwiPnt7dGltZSB8IGRhdGUgOiAneS9NL2QgaDptOnMnfX08L2Rpdj5cclxuICAgIDxkaXYgZnhGbGV4PVwibm9ncm93XCIgZnhGbGV4QWxpZ249XCJlbmRcIiBjbGFzcz1cImRhdGEtdGltZVwiPnt7bm93IHwgZGF0ZSA6ICd5L00vZCBoOm06cyd9fTwvZGl2PlxyXG48L2Rpdj5cclxuPGRpdiAqbmdJZj1cIm1vZGVsSXNDb3JyZWN0IHwgYXN5bmNcIiBjbGFzcz1cImRpYWdyYW0gd2lkZ2V0XCIgW2lkXT1cIidkaWFncmFtXycgKyBkYXRhLl9pZFwiPjwvZGl2PmAsXHJcblx0c3R5bGVzOiBbYDpob3N0e3dpZHRoOjEwMCV9LmRpYWdyYW0tYm94IC5jM3tkaXJlY3Rpb246bHRyfW1hdC1zbGlkZXJ7d2lkdGg6MTAwJX0uZGF0YS10aW1le2RpcmVjdGlvbjpsdHI7dGV4dC1hbGlnbjpjZW50ZXJ9Lm92ZXJ7dmlzaWJpbGl0eTpoaWRkZW47b3BhY2l0eTowO3Bvc2l0aW9uOmFic29sdXRlO3RvcDozNXB4O2xlZnQ6MDtyaWdodDowO2JhY2tncm91bmQ6I2ZmZjt6LWluZGV4OjM7dHJhbnNpdGlvbjouNHMgZWFzZS1pbi1vdXR9YF1cclxufSlcclxuZXhwb3J0IGNsYXNzIERpYWdyYW1Db21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xyXG5cdHVuc3Vic2NyaWJlID0gbmV3IFN1YmplY3Q8dm9pZD4oKTtcclxuXHRtb2RlbElzQ29ycmVjdDogQmVoYXZpb3JTdWJqZWN0PGJvb2xlYW4+ID0gbmV3IEJlaGF2aW9yU3ViamVjdChmYWxzZSk7XHJcblx0X21vZGVsOiBEaWFncmFtTW9kZWw7XHJcblx0QElucHV0KClcclxuXHRzZXQgZGF0YSh2YWx1ZTogRGlhZ3JhbU1vZGVsKSB7XHJcblx0XHRpZiAoISh2YWx1ZS5DaGFydCAmJiB2YWx1ZS5faWQpKSByZXR1cm47XHJcblx0XHR0aGlzLl9tb2RlbCA9IHZhbHVlO1xyXG5cdFx0dGhpcy5tb2RlbElzQ29ycmVjdC5uZXh0KHRydWUpO1xyXG5cdH1cclxuXHRnZXQgZGF0YSgpIHtcclxuXHRcdHJldHVybiB0aGlzLl9tb2RlbDtcclxuXHR9XHJcblx0ZGF0YVN1YnNjcmlidGlvbjogU3Vic2NyaXB0aW9uO1xyXG5cdGNoYXJ0OiBhbnk7XHJcblx0dGltZTogbnVtYmVyO1xyXG5cdG5vdzogbnVtYmVyID0gRGF0ZS5ub3coKTtcclxuXHRjb25zdHJ1Y3RvcihcclxuXHRcdHByaXZhdGUgc3RvcmU6IFN0b3JlPEZlYXR1cmVTdGF0ZT4sXHJcblx0XHRwcml2YXRlIGRpYWdyYW1TZXJ2aWNlOiBEaWFncmFtU2VydmljZSxcclxuXHRcdHByaXZhdGUgaHR0cDogSHR0cENsaWVudCxcclxuXHRcdHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yLFxyXG5cdFx0cHJpdmF0ZSByb3V0ZTogQWN0aXZhdGVkUm91dGVcclxuXHQpIHtcclxuXHRcdGRlYnVnZ2VyO1xyXG5cdFx0dGhpcy5kYXRhID0gdGhpcy5pbmplY3Rvci5nZXQoXCJkYXRhXCIpO1xyXG5cclxuXHRcdHRoaXMucm91dGUucGFyYW1zLnN1YnNjcmliZShwYXJhbXMgPT4ge1xyXG5cdFx0XHRjb25zdCBkaWFncmFtSWQ6IHN0cmluZyA9IHBhcmFtc1tcImlkXCJdO1xyXG5cdFx0XHQvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tdW51c2VkLWV4cHJlc3Npb25cclxuXHRcdFx0ZGlhZ3JhbUlkICYmXHJcblx0XHRcdFx0dGhpcy5kaWFncmFtU2VydmljZS5nZXREaWFncmFtKGRpYWdyYW1JZCkuc3Vic2NyaWJlKGRhdGEgPT4ge1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coZGF0YSk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHR9KTtcclxuXHR9XHJcblx0bmdBZnRlclZpZXdJbml0KCkge1xyXG5cdFx0Ly8gdGhpcy5kYXRhU3Vic2NyaWJ0aW9uID0gSW50ZXJ2YWxPYnNlcnZhYmxlXHJcblx0XHQvLyAgICAgICAgIC8vIC5jcmVhdGUodGhpcy5tb2RlbC5Tb3VyY2UuU3luYylcclxuXHRcdC8vICAgICAgICAgLmNyZWF0ZSg5OTkpXHJcblx0XHQvLyAgICAgICAgIC5zd2l0Y2hNYXAoaSA9PlxyXG5cdFx0Ly8gICAgICAgICAgICAgICAgIHRoaXMuaHR0cC5nZXQoYGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvZGF0YWAsIHtcclxuXHRcdC8vICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xyXG5cdFx0Ly8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3V0ZTogdGhpcy5tb2RlbC5Tb3VyY2UuUm91dGUsXHJcblx0XHQvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWU6ICcwJ1xyXG5cdFx0Ly8gICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cdFx0Ly8gICAgICAgICAgICAgICAgIH0pXHJcblx0XHQvLyAgICAgICAgIClcclxuXHRcdC8vICAgICAgICAgLy8gLnN3aXRjaE1hcCgocmVzOiBhbnkpID0+IG9mKHJlcy5SZXN1bHQuRGF0YSkpXHJcblx0XHQvLyAgICAgICAgIC5tYXAoKHJlczogYW55KSA9PiByZXMuUmVzdWx0LkRhdGEpXHJcblx0XHR0aGlzLm1vZGVsSXNDb3JyZWN0LmRlbGF5KDMwMCkuZmlsdGVyKGRhdGEgPT4gZGF0YSkuc3Vic2NyaWJlKHN0YXRlID0+IHtcclxuXHRcdFx0dGhpcy5jaGFydCA9IGMzLmdlbmVyYXRlKHtcclxuXHRcdFx0XHQuLi50aGlzLmRhdGEuQ2hhcnQsXHJcblx0XHRcdFx0YmluZHRvOiBgI2RpYWdyYW1fJHt0aGlzLmRhdGEuX2lkfWBcclxuXHRcdFx0XHQvLyBzaXplOiB7XHJcblx0XHRcdFx0Ly8gICAgICAgICBoZWlnaHQ6IDE1MFxyXG5cdFx0XHRcdC8vIH1cclxuXHRcdFx0fSk7XHJcblx0XHRcdHRoaXMuZGF0YVN1YnNjcmlidGlvbiA9IHRoaXMuZGlhZ3JhbVNlcnZpY2VcclxuXHRcdFx0XHQuZ2V0RGF0YSh0aGlzLmRhdGEuU291cmNlLCB0aGlzLnVuc3Vic2NyaWJlKVxyXG5cdFx0XHRcdC5waXBlKGZpbHRlcihkYXRhID0+IGRhdGEgIT0gdW5kZWZpbmVkKSwgdGFrZVVudGlsKHRoaXMudW5zdWJzY3JpYmUpKVxyXG5cdFx0XHRcdC5zdWJzY3JpYmUoZGF0YSA9PiB7XHJcblx0XHRcdFx0XHR0aGlzLm5vdyA9IERhdGUubm93KCk7XHJcblx0XHRcdFx0XHR0aGlzLnRpbWUgPSBkYXRhLlRpbWU7XHJcblx0XHRcdFx0XHRpZiAodGhpcy5kYXRhLkNoYXJ0LkZsb3cpIHtcclxuXHRcdFx0XHRcdFx0dGhpcy5jaGFydC5mbG93KHtcclxuXHRcdFx0XHRcdFx0XHRjb2x1bW5zOiB0aGlzLmRpYWdyYW1TZXJ2aWNlLmV4dHJhY3RfY29sdW1uc19mcm9tX2RhdGEoXHJcblx0XHRcdFx0XHRcdFx0XHRkYXRhLkRhdGEsXHJcblx0XHRcdFx0XHRcdFx0XHR0aGlzLmRhdGEuQ2hhcnQuQ29sdW1uTWFwcGluZ3NcclxuXHRcdFx0XHRcdFx0XHQpLFxyXG5cdFx0XHRcdFx0XHRcdGR1cmF0aW9uOiAxNTAwXHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0dGhpcy5jaGFydC5sb2FkKHtcclxuXHRcdFx0XHRcdFx0XHRjb2x1bW5zOiB0aGlzLmRpYWdyYW1TZXJ2aWNlLmV4dHJhY3RfY29sdW1uc19mcm9tX2RhdGEoXHJcblx0XHRcdFx0XHRcdFx0XHRkYXRhLkRhdGEsXHJcblx0XHRcdFx0XHRcdFx0XHR0aGlzLmRhdGEuQ2hhcnQuQ29sdW1uTWFwcGluZ3NcclxuXHRcdFx0XHRcdFx0XHQpXHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0Ly8gdGhpcy5kYXRhU3Vic2NyaWJ0aW9uID0gdGhpcy5kaWFncmFtU2VydmljZS5nZW5lcmF0ZURpYWdyYW0oXHJcblx0XHQvLyAgICAgICAgIHRoaXMubW9kZWwuQ2hhcnQsXHJcblx0XHQvLyAgICAgICAgIHRoaXMubW9kZWwuX2lkLFxyXG5cdFx0Ly8gICAgICAgICB0aGlzLm1vZGVsLlNvdXJjZS5Sb3V0ZSxcclxuXHRcdC8vICAgICAgICAgdGhpcy5tb2RlbC5Tb3VyY2UuU3luY1xyXG5cdFx0Ly8gKTtcclxuXHR9XHJcblx0bmdPbkRlc3Ryb3koKSB7XHJcblx0XHQvLyB0aGlzLmRhdGFTdWJzY3JpYnRpb24udW5zdWJzY3JpYmUoKTtcclxuXHRcdGRlYnVnZ2VyO1xyXG5cdFx0dGhpcy51bnN1YnNjcmliZS5uZXh0KCk7XHJcblx0XHR0aGlzLnVuc3Vic2NyaWJlLmNvbXBsZXRlKCk7XHJcblx0fVxyXG5cdHRpbWVDaGFuZ2UoZTogTWF0U2xpZGVyQ2hhbmdlKSB7XHJcblx0XHR0aGlzLmRhdGFTdWJzY3JpYnRpb24udW5zdWJzY3JpYmUoKTtcclxuXHRcdC8vIHRoaXMuZGlhZ3JhbVNlcnZpY2UuZ2V0RGF0YSh0aGlzLmRhdGEuU291cmNlLCBEYXRlLm5vdygpIC0gKCgxMDAwIC0gZS52YWx1ZSkgKiB0aGlzLmRhdGEuU291cmNlLkludGVydmFsKSwgdHJ1ZSlcclxuXHRcdHRoaXMuZGF0YVN1YnNjcmlidGlvbiA9IHRoaXMuZGlhZ3JhbVNlcnZpY2VcclxuXHRcdFx0LmdldERhdGEoXHJcblx0XHRcdFx0dGhpcy5kYXRhLlNvdXJjZSxcclxuXHRcdFx0XHR0aGlzLnVuc3Vic2NyaWJlLFxyXG5cdFx0XHRcdERhdGUubm93KCkgLSAoMTAwMCAtIGUudmFsdWUpICogdGhpcy5kYXRhLlNvdXJjZS5JbnRlcnZhbCxcclxuXHRcdFx0XHR0cnVlXHJcblx0XHRcdClcclxuXHRcdFx0LnN1YnNjcmliZShkYXRhID0+IHtcclxuXHRcdFx0XHR0aGlzLnRpbWUgPSBkYXRhLlRpbWU7XHJcblx0XHRcdFx0dGhpcy5ub3cgPSBEYXRlLm5vdygpO1xyXG5cdFx0XHRcdC8vIGNvbnN0IGNvbHVtbnMgPSB0aGlzLmRpYWdyYW1TZXJ2aWNlXHJcblx0XHRcdFx0Ly8gICAgICAgICAuZXh0cmFjdF9jb2x1bW5zX2Zyb21fZGF0YShkYXRhLkRhdGEsIHRoaXMuZGF0YS5DaGFydC5Db2x1bW5NYXBwaW5ncylcclxuXHRcdFx0XHQvLyAgICAgICAgIC5tYXAoY29sdW1uID0+IHtcclxuXHRcdFx0XHQvLyAgICAgICAgICAgICAgICAgZGVidWdnZXI7XHJcblx0XHRcdFx0Ly8gICAgICAgICAgICAgICAgIGNvbHVtblswXSArPSAnX2hpc3RvcmljJztcclxuXHRcdFx0XHQvLyAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbHVtbjtcclxuXHRcdFx0XHQvLyAgICAgICAgIH0pO1xyXG5cdFx0XHRcdHRoaXMuY2hhcnQubG9hZCh7XHJcblx0XHRcdFx0XHRjb2x1bW5zOiB0aGlzLmRpYWdyYW1TZXJ2aWNlLmV4dHJhY3RfY29sdW1uc19mcm9tX2RhdGEoZGF0YS5EYXRhLCB0aGlzLmRhdGEuQ2hhcnQuQ29sdW1uTWFwcGluZ3MpXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH0pO1xyXG5cdH1cclxufVxyXG4iLCJpbXBvcnQge1xyXG5cdENvbXBvbmVudCxcclxuXHRJbnB1dCxcclxuXHRBZnRlclZpZXdJbml0LFxyXG5cdENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcixcclxuXHRWaWV3Q2hpbGQsXHJcblx0Vmlld0NvbnRhaW5lclJlZixcclxuXHRSZWZsZWN0aXZlSW5qZWN0b3IsXHJcblx0T25EZXN0cm95XHJcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuXHJcbmltcG9ydCB7IERpYWdyYW1Nb2RlbCB9IGZyb20gXCIuLi8uLi9tb2RlbHMvZGlhZ3JhbS5tb2RlbFwiO1xyXG5pbXBvcnQgeyBEaWFncmFtU2VydmljZSB9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9kaWFncmFtLnNlcnZpY2VcIjtcclxuaW1wb3J0IHsgTnVtZXJpY0RpYWdyYW1Db21wb25lbnQgfSBmcm9tIFwiLi4vLi4vZHVtYi1jb21wb25lbnRzL251bWVyaWMtZGlhZ3JhbS9udW1lcmljLWRpYWdyYW0uY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IFNlcnZlclN0YXR1c0RpYWdyYW1Db21wb25lbnQgfSBmcm9tIFwiLi4vLi4vZHVtYi1jb21wb25lbnRzL3NlcnZlci1zdGF0dXMtZGlhZ3JhbS9zZXJ2ZXItc3RhdHVzLWRpYWdyYW0uY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IFNlcnZlckNvbm5lY3RpbmdUaW1lRGlhZ3JhbUNvbXBvbmVudCB9IGZyb20gXCIuLi8uLi9kdW1iLWNvbXBvbmVudHMvc2VydmVyLWNvbm5lY3RpbmctdGltZS1kaWFncmFtL3NlcnZlci1jb25uZWN0aW5nLXRpbWUtZGlhZ3JhbS5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgRGlhZ3JhbUNvbXBvbmVudCB9IGZyb20gXCIuLi8uLi9zbWFydC1jb21wb25lbnRzL2RpYWdyYW0vZGlhZ3JhbS5jb21wb25lbnRcIjtcclxuXHJcbkBDb21wb25lbnQoe1xyXG5cdHNlbGVjdG9yOiBcImR5bmFtaWMtY29tcG9uZW50LXNlbGVjdG9yXCIsXHJcblx0dGVtcGxhdGU6IGA8bWF0LWNhcmQgY2xhc3M9XCJkaWFncmFtLWJveFwiIFtzdHlsZS5iYWNrZ3JvdW5kXT1cImJhY2tncm91bmRDb2xvclwiIGZ4TGF5b3V0PVwiY29sdW1uXCIgZnhMYXlvdXRBbGlnbj1cInNwYWNlLWJldHdlZW4gc3RyZXRjaFwiPlxyXG4gICAgPGRpdiBmeEZsZXg9XCIwIDAgYXV0b1wiICpuZ0lmPVwiX2RhdGFcIiBmeExheW91dEFsaWduPVwic3BhY2UtYmV0d2VlbiBjZW50ZXJcIj5cclxuICAgICAgICA8c3BhbiBmeExheW91dEFsaWduPVwic3RhcnQgY2VudGVyXCIgY2xhc3M9XCJ3aWRnZXQtdGl0bGVcIj5cclxuICAgICAgICAgICAge3tfZGF0YS5OYW1lfX1cclxuICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgPGEgW3JvdXRlckxpbmtdPVwiWycuLi9kaWFncmFtcy9lZGl0JyAsICBfZGF0YS5faWRdXCIgZnhMYXlvdXRBbGlnbj1cImNlbnRlciBjZW50ZXJcIiBtYXQtaWNvbi1idXR0b24gY29sb3I9XCJwcmltYXJ5XCI+XHJcbiAgICAgICAgICAgIDxtYXQtaWNvbiBhcmlhLWxhYmVsPVwiZWRpdCBkaWFncmFtXCI+ZWRpdDwvbWF0LWljb24+XHJcbiAgICAgICAgPC9hPlxyXG4gICAgPC9kaXY+XHJcbiAgICA8IS0tIDxtYXQtY2FyZC1jb250ZW50PiAtLT5cclxuICAgIDwhLS0gPG1hdC1zbGlkZXIgaW52ZXJ0IFsobmdNb2RlbCldPVwidGltZVwiIChjaGFuZ2UpPVwidGltZUNoYW5nZSgkZXZlbnQpXCI+PC9tYXQtc2xpZGVyPiAtLT5cclxuICAgIDxtYXQtc2xpZGVyIGNsYXNzPVwib3ZlclwiIGZ4RmxleD1cIjAgMCBhdXRvXCIgaW52ZXJ0IG1pbj0nMScgbWF4PScxMDAwJyB2YWx1ZT1cIjEwMDBcIiAoY2hhbmdlKT1cInRpbWVDaGFuZ2UoJGV2ZW50KVwiPjwvbWF0LXNsaWRlcj5cclxuICAgIDxkaXYgZnhGbGV4PVwiMSAxIGF1dG9cIiBjbGFzcz1cIndpZGdldC1jb250YWluZXJcIj5cclxuICAgICAgICA8ZGl2ICNkeW5hbWljQ29tcG9uZW50Q29udGFpbmVyPjwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgICA8IS0tIDwvbWF0LWNhcmQtY29udGVudD4gLS0+XHJcbjwvbWF0LWNhcmQ+YCxcclxuXHRzdHlsZXM6IFtgOmhvc3R7d2lkdGg6MTAwJTttYXJnaW46MTIuNXB4fS5kaWFncmFtLWJveHttYXJnaW46MTVweH0uZGlhZ3JhbS1ib3ggLmMze2RpcmVjdGlvbjpsdHJ9LndpZGdldC10aXRsZXtmb250OjEuM2VtIElSQU5TYW5zLHRhaG9tYX0ub3Zlcnt2aXNpYmlsaXR5OmhpZGRlbjtvcGFjaXR5OjA7cG9zaXRpb246YWJzb2x1dGU7dG9wOjYwcHg7bGVmdDowO3JpZ2h0OjA7YmFja2dyb3VuZDojZmZmO3otaW5kZXg6Mzt0cmFuc2l0aW9uOi40cyBlYXNlLWluLW91dH1gXSxcclxuXHRlbnRyeUNvbXBvbmVudHM6IFtcclxuXHRcdE51bWVyaWNEaWFncmFtQ29tcG9uZW50LFxyXG5cdFx0U2VydmVyQ29ubmVjdGluZ1RpbWVEaWFncmFtQ29tcG9uZW50LFxyXG5cdFx0U2VydmVyU3RhdHVzRGlhZ3JhbUNvbXBvbmVudCxcclxuXHRcdERpYWdyYW1Db21wb25lbnRcclxuXHRdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEeW5hbWljQ29tcG9uZW50U2VsZWN0b3JDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcclxuXHR0eXBlTWFwVG9EaWFncmFtID0ge1xyXG5cdFx0YmFyOiBEaWFncmFtQ29tcG9uZW50LFxyXG5cdFx0ZG9udXQ6IERpYWdyYW1Db21wb25lbnQsXHJcblx0XHRwaWU6IERpYWdyYW1Db21wb25lbnQsXHJcblx0XHRzY2F0dGVyOiBEaWFncmFtQ29tcG9uZW50LFxyXG5cdFx0bGluZTogRGlhZ3JhbUNvbXBvbmVudCxcclxuXHRcdGFyZWE6IERpYWdyYW1Db21wb25lbnQsXHJcblx0XHRcImFyZWEtc3BsaW5lXCI6IERpYWdyYW1Db21wb25lbnQsXHJcblx0XHRudW1lcm86IE51bWVyaWNEaWFncmFtQ29tcG9uZW50LFxyXG5cdFx0dGVtcG86IFNlcnZlckNvbm5lY3RpbmdUaW1lRGlhZ3JhbUNvbXBvbmVudCxcclxuXHRcdGJvb2xlYW5vOiBTZXJ2ZXJTdGF0dXNEaWFncmFtQ29tcG9uZW50XHJcblx0fTtcclxuXHRAVmlld0NoaWxkKFwiZHluYW1pY0NvbXBvbmVudENvbnRhaW5lclwiLCB7IHJlYWQ6IFZpZXdDb250YWluZXJSZWYgfSlcclxuXHRkeW5hbWljQ29tcG9uZW50Q29udGFpbmVyOiBWaWV3Q29udGFpbmVyUmVmO1xyXG5cdEBWaWV3Q2hpbGQoRGlhZ3JhbUNvbXBvbmVudCkgd2lkZ2V0Q29tcG9uZW50OiBEaWFncmFtQ29tcG9uZW50O1xyXG5cdGN1cnJlbnRDb21wb25lbnQ6IGFueSA9IG51bGw7XHJcblx0X2RhdGE6IGFueTtcclxuXHRASW5wdXQoKVxyXG5cdHNldCBkYXRhKGRhdGE6IGFueSkge1xyXG5cdFx0aWYgKCFkYXRhIHx8IE9iamVjdC5rZXlzKGRhdGEpLmxlbmd0aCA9PSAwKSByZXR1cm47XHJcblx0XHR0aGlzLmJhY2tncm91bmRDb2xvciA9IGRhdGEuQm94LkJhY2tncm91bmRDb2xvcjtcclxuXHRcdHRoaXMuX2RhdGEgPSBkYXRhO1xyXG5cdFx0bGV0IHJhdyA9IHsgZGF0YSB9O1xyXG5cdFx0bGV0IF9jb21wb25lbnQgPSB0aGlzLnR5cGVNYXBUb0RpYWdyYW1bZGF0YS5DaGFydC5kYXRhLnR5cGVdO1xyXG5cdFx0bGV0IGlucHV0UHJvdmlkZXJzID0gT2JqZWN0LmtleXMocmF3KS5tYXAoaW5wdXROYW1lID0+IHtcclxuXHRcdFx0cmV0dXJuIHsgcHJvdmlkZTogaW5wdXROYW1lLCB1c2VWYWx1ZTogcmF3W2lucHV0TmFtZV0gfTtcclxuXHRcdH0pO1xyXG5cdFx0bGV0IHJlc29sdmVkSW5wdXRzID0gUmVmbGVjdGl2ZUluamVjdG9yLnJlc29sdmUoaW5wdXRQcm92aWRlcnMpO1xyXG5cclxuXHRcdGxldCBpbmplY3RvciA9IFJlZmxlY3RpdmVJbmplY3Rvci5mcm9tUmVzb2x2ZWRQcm92aWRlcnMoXHJcblx0XHRcdHJlc29sdmVkSW5wdXRzLFxyXG5cdFx0XHR0aGlzLmR5bmFtaWNDb21wb25lbnRDb250YWluZXIucGFyZW50SW5qZWN0b3JcclxuXHRcdCk7XHJcblx0XHRsZXQgZmFjdG9yeSA9IHRoaXMucmVzb2x2ZXIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkoX2NvbXBvbmVudCk7XHJcblxyXG5cdFx0bGV0IGNvbXBvbmVudCA9IGZhY3RvcnkuY3JlYXRlKGluamVjdG9yKTtcclxuXHJcblx0XHR0aGlzLmR5bmFtaWNDb21wb25lbnRDb250YWluZXIuaW5zZXJ0KGNvbXBvbmVudC5ob3N0Vmlldyk7XHJcblxyXG5cdFx0aWYgKHRoaXMuY3VycmVudENvbXBvbmVudCkge1xyXG5cdFx0XHR0aGlzLmN1cnJlbnRDb21wb25lbnQuZGVzdHJveSgpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMuY3VycmVudENvbXBvbmVudCA9IGNvbXBvbmVudDtcclxuXHR9XHJcblx0YmFja2dyb3VuZENvbG9yOiBTdHJpbmcgPSBcIlwiO1xyXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgcmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcikge31cclxuXHRuZ0FmdGVyVmlld0luaXQoKSB7fVxyXG5cdHRpbWVDaGFuZ2UoZSkge1xyXG5cdFx0dGhpcy5jdXJyZW50Q29tcG9uZW50Ll9jb21wb25lbnQudGltZUNoYW5nZShlKTtcclxuXHR9XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuXHRDb21wb25lbnQsXHJcblx0T25Jbml0LFxyXG5cdElucHV0LFxyXG5cdEFmdGVyVmlld0luaXQsXHJcblx0Q29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxyXG5cdFZpZXdDaGlsZCxcclxuXHRWaWV3Q29udGFpbmVyUmVmLFxyXG5cdFJlZmxlY3RpdmVJbmplY3RvcixcclxuXHRPbkRlc3Ryb3ksXHJcblx0T3V0cHV0LFxyXG5cdEV2ZW50RW1pdHRlclxyXG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwicnhqcy9PYnNlcnZhYmxlXCI7XHJcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gXCJyeGpzXCI7XHJcbmltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uL2h0dHBcIjtcclxuXHJcbmltcG9ydCB7IERpYWdyYW1TZXJ2aWNlIH0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL2RpYWdyYW0uc2VydmljZVwiO1xyXG5pbXBvcnQgeyBEaWFncmFtUGFydGlhbENvbmZpZ0VkaXRDb21wb25lbnQgfSBmcm9tIFwiLi4vLi4vZHVtYi1jb21wb25lbnRzL2RpYWdyYW0tcGFydGlhbC1jb25maWctZWRpdC9kaWFncmFtLXBhcnRpYWwtY29uZmlnLWVkaXQuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IFBpZURpYWdyYW1QYXJ0aWFsQ29uZmlnQ29tcG9uZW50IH0gZnJvbSBcIi4uLy4uL2R1bWItY29tcG9uZW50cy9waWUtZGlhZ3JhbS1wYXJ0aWFsLWNvbmZpZy9waWUtZGlhZ3JhbS1wYXJ0aWFsLWNvbmZpZy5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgQm9vbGVhbm9XaWRnZXRQYXJ0aWFsQ29uZmlnQ29tcG9uZW50IH0gZnJvbSBcIi4uLy4uL2R1bWItY29tcG9uZW50cy9ib29sZWFuby13aWRnZXQtcGFydGlhbC1jb25maWcvYm9vbGVhbm8td2lkZ2V0LXBhcnRpYWwtY29uZmlnLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBMaW5lYXJEaWFncmFtUGFydGlhbENvbmZpZ0NvbXBvbmVudCB9IGZyb20gXCIuLi8uLi9kdW1iLWNvbXBvbmVudHMvbGluZWFyLWRpYWdyYW0tcGFydGlhbC1jb25maWcvbGluZWFyLWRpYWdyYW0tcGFydGlhbC1jb25maWcuY29tcG9uZW50XCI7XHJcblxyXG5kZWNsYXJlIHZhciBjMzogYW55O1xyXG5cclxuQENvbXBvbmVudCh7XHJcblx0c2VsZWN0b3I6IFwiZHluYW1pYy1jb25maWctY29tcG9uZW50LXNlbGVjdG9yXCIsXHJcblx0dGVtcGxhdGU6IGA8ZGl2ICNkeW5hbWljQ29tcG9uZW50Q29udGFpbmVyPjwvZGl2PmAsXHJcblx0c3R5bGVzOiBbYDpob3N0e3dpZHRoOjEwMCV9LmRpYWdyYW0tYm94e21hcmdpbjoxNXB4fS5kaWFncmFtLWJveCAuYzN7ZGlyZWN0aW9uOmx0cn1gXSxcclxuXHRlbnRyeUNvbXBvbmVudHM6IFtcclxuXHRcdERpYWdyYW1QYXJ0aWFsQ29uZmlnRWRpdENvbXBvbmVudCxcclxuXHRcdFBpZURpYWdyYW1QYXJ0aWFsQ29uZmlnQ29tcG9uZW50LFxyXG5cdFx0TGluZWFyRGlhZ3JhbVBhcnRpYWxDb25maWdDb21wb25lbnQsXHJcblx0XHRCb29sZWFub1dpZGdldFBhcnRpYWxDb25maWdDb21wb25lbnRcclxuXHRdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEeW5hbWljQ29uZmlnQ29tcG9uZW50U2VsZWN0b3JDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcclxuXHR0eXBlTWFwVG9EaWFncmFtID0ge1xyXG5cdFx0YmFyOiBEaWFncmFtUGFydGlhbENvbmZpZ0VkaXRDb21wb25lbnQsXHJcblx0XHRhcmVhOiBMaW5lYXJEaWFncmFtUGFydGlhbENvbmZpZ0NvbXBvbmVudCxcclxuXHRcdFwiYXJlYS1zcGxpbmVcIjogTGluZWFyRGlhZ3JhbVBhcnRpYWxDb25maWdDb21wb25lbnQsXHJcblx0XHRkb251dDogRGlhZ3JhbVBhcnRpYWxDb25maWdFZGl0Q29tcG9uZW50LFxyXG5cdFx0cGllOiBQaWVEaWFncmFtUGFydGlhbENvbmZpZ0NvbXBvbmVudCxcclxuXHRcdHNjYXR0ZXI6IERpYWdyYW1QYXJ0aWFsQ29uZmlnRWRpdENvbXBvbmVudCxcclxuXHRcdGxpbmU6IExpbmVhckRpYWdyYW1QYXJ0aWFsQ29uZmlnQ29tcG9uZW50LFxyXG5cdFx0Ym9vbGVhbm86IEJvb2xlYW5vV2lkZ2V0UGFydGlhbENvbmZpZ0NvbXBvbmVudFxyXG5cdH07XHJcblx0QFZpZXdDaGlsZChcImR5bmFtaWNDb21wb25lbnRDb250YWluZXJcIiwgeyByZWFkOiBWaWV3Q29udGFpbmVyUmVmIH0pXHJcblx0ZHluYW1pY0NvbXBvbmVudENvbnRhaW5lcjogVmlld0NvbnRhaW5lclJlZjtcclxuXHRAT3V0cHV0KCkgQ29uZmlnQ2hhbmdlZCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHRjdXJyZW50Q29tcG9uZW50OiBhbnkgPSBudWxsO1xyXG5cdEBJbnB1dCgpXHJcblx0c2V0IGRhdGEoZGF0YTogYW55KSB7XHJcblx0XHRpZiAoIWRhdGEgfHwgT2JqZWN0LmtleXMoZGF0YSkubGVuZ3RoID09IDApIHJldHVybjtcclxuXHRcdGlmICghKGRhdGEudHlwZSBpbiB0aGlzLnR5cGVNYXBUb0RpYWdyYW0pKSB7XHJcblx0XHRcdGlmICh0aGlzLmN1cnJlbnRDb21wb25lbnQpIHRoaXMuY3VycmVudENvbXBvbmVudC5kZXN0cm95KCk7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHRcdGxldCBfY29tcG9uZW50ID0gdGhpcy50eXBlTWFwVG9EaWFncmFtW2RhdGEudHlwZV07XHJcblx0XHRsZXQgaW5wdXRQcm92aWRlcnMgPSBPYmplY3Qua2V5cyhkYXRhLmlucHV0cykubWFwKGlucHV0TmFtZSA9PiB7XHJcblx0XHRcdHJldHVybiB7IHByb3ZpZGU6IGlucHV0TmFtZSwgdXNlVmFsdWU6IGRhdGEuaW5wdXRzW2lucHV0TmFtZV0gfTtcclxuXHRcdH0pO1xyXG5cdFx0bGV0IHJlc29sdmVkSW5wdXRzID0gUmVmbGVjdGl2ZUluamVjdG9yLnJlc29sdmUoaW5wdXRQcm92aWRlcnMpO1xyXG5cclxuXHRcdGxldCBpbmplY3RvciA9IFJlZmxlY3RpdmVJbmplY3Rvci5mcm9tUmVzb2x2ZWRQcm92aWRlcnMoXHJcblx0XHRcdHJlc29sdmVkSW5wdXRzLFxyXG5cdFx0XHR0aGlzLmR5bmFtaWNDb21wb25lbnRDb250YWluZXIucGFyZW50SW5qZWN0b3JcclxuXHRcdCk7XHJcblx0XHRsZXQgZmFjdG9yeSA9IHRoaXMucmVzb2x2ZXIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkoX2NvbXBvbmVudCk7XHJcblx0XHRsZXQgY29tcG9uZW50ID0gZmFjdG9yeS5jcmVhdGUoaW5qZWN0b3IpO1xyXG5cdFx0aWYgKCg8YW55PmNvbXBvbmVudC5pbnN0YW5jZSkuQ29uZmlnQ2hhbmdlZClcclxuXHRcdFx0KDxhbnk+Y29tcG9uZW50Lmluc3RhbmNlKS5Db25maWdDaGFuZ2VkLnN1YnNjcmliZSgoKSA9PiB7XHJcblx0XHRcdFx0dGhpcy5Db25maWdDaGFuZ2VkLmVtaXQoKTtcclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0dGhpcy5keW5hbWljQ29tcG9uZW50Q29udGFpbmVyLmluc2VydChjb21wb25lbnQuaG9zdFZpZXcpO1xyXG5cclxuXHRcdGlmICh0aGlzLmN1cnJlbnRDb21wb25lbnQpIHtcclxuXHRcdFx0dGhpcy5jdXJyZW50Q29tcG9uZW50LmRlc3Ryb3koKTtcclxuXHRcdH1cclxuXHJcblx0XHR0aGlzLmN1cnJlbnRDb21wb25lbnQgPSBjb21wb25lbnQ7XHJcblx0fVxyXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgcmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcikge31cclxuXHRuZ0FmdGVyVmlld0luaXQoKSB7fVxyXG59XHJcbiIsImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwiQGFuZ3VsYXIvcm91dGVyXCI7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwicnhqcy9PYnNlcnZhYmxlXCI7XHJcbmltcG9ydCB7IEFjdGlvbiB9IGZyb20gXCJAbmdyeC9zdG9yZVwiO1xyXG5pbXBvcnQgeyBBY3Rpb25zLCBFZmZlY3QgfSBmcm9tIFwiQG5ncngvZWZmZWN0c1wiO1xyXG5pbXBvcnQgeyBTdG9yZSB9IGZyb20gXCJAbmdyeC9zdG9yZVwiO1xyXG5pbXBvcnQgeyBtYXAsIHN3aXRjaE1hcCwgY2F0Y2hFcnJvciB9IGZyb20gXCJyeGpzL29wZXJhdG9yc1wiO1xyXG5cclxuaW1wb3J0IHsgRGlhZ3JhbVNlcnZpY2UgfSBmcm9tIFwiLi4vc2VydmljZXMvZGlhZ3JhbS5zZXJ2aWNlXCI7XHJcbmltcG9ydCB7IEdldERpYWdyYW1zQXBpTW9kZWwgfSBmcm9tIFwiLi4vbW9kZWxzL2dldC1kaWFncmFtcy1hcGkubW9kZWxcIjtcclxuaW1wb3J0IHsgR2V0RGlhZ3JhbXNTdWNjZWVkLCBHZXREaWFncmFtc0ZhaWxlZCwgR2V0RGlhZ3JhbXNTdGFydCB9IGZyb20gXCIuLi9hY3Rpb25zL2RpYWdyYW1zLmFjdGlvbnNcIjtcclxuaW1wb3J0IHsgb2YgfSBmcm9tIFwicnhqc1wiO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgRGlhZ3JhbUVmZmVjdHMge1xyXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgYWN0aW9ucyQ6IEFjdGlvbnM8YW55PiwgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlciwgcHJpdmF0ZSBkaWFncmFtU2VydmljZTogRGlhZ3JhbVNlcnZpY2UpIHt9XHJcblxyXG5cdEBFZmZlY3QoKVxyXG5cdERpYWdyYW1SZXF1ZXN0JCA9IHRoaXMuYWN0aW9ucyQub2ZUeXBlKCkucGlwZShtYXAoYWN0aW9uID0+IGFjdGlvbi5wYXlsb2FkKSwgbWFwKGRhdGEgPT4gbmV3IEdldERpYWdyYW1zU3RhcnQoKSkpO1xyXG5cclxuXHRARWZmZWN0KClcclxuXHRnZXREaWFncmFtJCA9IHRoaXMuYWN0aW9ucyRcclxuXHRcdC5vZlR5cGUoKVxyXG5cdFx0LnBpcGUoXHJcblx0XHRcdG1hcChhY3Rpb24gPT4gYWN0aW9uLnBheWxvYWQpLFxyXG5cdFx0XHRzd2l0Y2hNYXAoKGRhdGE6IEdldERpYWdyYW1zQXBpTW9kZWwuUmVxdWVzdCkgPT5cclxuXHRcdFx0XHR0aGlzLmRpYWdyYW1TZXJ2aWNlXHJcblx0XHRcdFx0XHQuZ2V0RGlhZ3JhbXMoKVxyXG5cdFx0XHRcdFx0LnBpcGUobWFwKHJlcyA9PiBuZXcgR2V0RGlhZ3JhbXNTdWNjZWVkKHJlcykpLCBjYXRjaEVycm9yKCgpID0+IG9mKG5ldyBHZXREaWFncmFtc0ZhaWxlZCgpKSkpXHJcblx0XHRcdClcclxuXHRcdCk7XHJcbn1cclxuIiwiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXJcIjtcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gXCJyeGpzL09ic2VydmFibGVcIjtcclxuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSBcIkBuZ3J4L3N0b3JlXCI7XHJcbmltcG9ydCB7IEFjdGlvbnMsIEVmZmVjdCB9IGZyb20gXCJAbmdyeC9lZmZlY3RzXCI7XHJcbmltcG9ydCB7IG9mIH0gZnJvbSBcInJ4anMvb2JzZXJ2YWJsZS9vZlwiO1xyXG5pbXBvcnQgeyBTdG9yZSB9IGZyb20gXCJAbmdyeC9zdG9yZVwiO1xyXG5pbXBvcnQgeyBtYXAsIHN3aXRjaE1hcCwgY2F0Y2hFcnJvciB9IGZyb20gXCJyeGpzL29wZXJhdG9yc1wiO1xyXG5cclxuaW1wb3J0IHsgRGlhZ3JhbVNlcnZpY2UgfSBmcm9tIFwiLi4vc2VydmljZXMvZGlhZ3JhbS5zZXJ2aWNlXCI7XHJcbmltcG9ydCB7IEFkZERpYWdyYW1BcGlNb2RlbCB9IGZyb20gXCIuLi9tb2RlbHMvYWRkLWRpYWdyYW0tYXBpLm1vZGVsXCI7XHJcbmltcG9ydCB7XHJcblx0QWRkRGlhZ3JhbUFjdGlvblR5cGVzLFxyXG5cdEFkZERpYWdyYW1BY3Rpb25TdGFydCxcclxuXHRBZGREaWFncmFtQWN0aW9uU3VjY2VlZCxcclxuXHRBZGREaWFncmFtQWN0aW9uRmFpbGVkLFxyXG5cdERhdGFMb2FkZWRBY3Rpb24sXHJcblx0U3RydWN0dXJlRGVmaW5pdGlvblN0YXJ0QWN0aW9uLFxyXG5cdEdlbmVyYXRlRGlhZ3JhbUFjdGlvbixcclxuXHRTdHJ1Y3R1cmVEZWZpbml0aW9uRmluaXNoZWRBY3Rpb25cclxufSBmcm9tIFwiLi4vYWN0aW9ucy9hZGQtZGlhZ3JhbS5hY3Rpb25zXCI7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBBZGREaWFncmFtRWZmZWN0cyB7XHJcblx0Y29uc3RydWN0b3IocHJpdmF0ZSBhY3Rpb25zJDogQWN0aW9uczxhbnk+LCBwcml2YXRlIHJvdXRlcjogUm91dGVyLCBwcml2YXRlIGRpYWdyYW1TZXJ2aWNlOiBEaWFncmFtU2VydmljZSkge31cclxuXHJcblx0QEVmZmVjdCgpXHJcblx0YWRkRGlhZ3JhbVJlcXVlc3QkID0gdGhpcy5hY3Rpb25zJFxyXG5cdFx0Lm9mVHlwZShBZGREaWFncmFtQWN0aW9uVHlwZXMuQUREX0RJQUdSQU0pXHJcblx0XHQucGlwZShtYXAoYWN0aW9uID0+IGFjdGlvbi5wYXlsb2FkKSwgbWFwKGRhdGEgPT4gbmV3IEFkZERpYWdyYW1BY3Rpb25TdGFydChkYXRhKSkpO1xyXG5cclxuXHRARWZmZWN0KClcclxuXHRhZGREaWFncmFtJCA9IHRoaXMuYWN0aW9ucyRcclxuXHRcdC5vZlR5cGUoQWRkRGlhZ3JhbUFjdGlvblR5cGVzLkFERF9ESUFHUkFNX1NUQVJUKVxyXG5cdFx0LnBpcGUoXHJcblx0XHRcdG1hcChhY3Rpb24gPT4gYWN0aW9uLnBheWxvYWQpLFxyXG5cdFx0XHRzd2l0Y2hNYXAoKGRhdGE6IEFkZERpYWdyYW1BcGlNb2RlbC5SZXF1ZXN0KSA9PlxyXG5cdFx0XHRcdHRoaXMuZGlhZ3JhbVNlcnZpY2VcclxuXHRcdFx0XHRcdC5hZGREaWFncmFtKGRhdGEpXHJcblx0XHRcdFx0XHQucGlwZShcclxuXHRcdFx0XHRcdFx0bWFwKHJlcyA9PiBuZXcgQWRkRGlhZ3JhbUFjdGlvblN1Y2NlZWQocmVzKSksXHJcblx0XHRcdFx0XHRcdGNhdGNoRXJyb3IoKCkgPT4gb2YobmV3IEFkZERpYWdyYW1BY3Rpb25GYWlsZWQoKSkpXHJcblx0XHRcdFx0XHQpXHJcblx0XHRcdClcclxuXHRcdCk7XHJcblxyXG5cdEBFZmZlY3QoeyBkaXNwYXRjaDogZmFsc2UgfSlcclxuXHRBRERfRElBR1JBTV9TVUNDRUVEJCA9IHRoaXMuYWN0aW9ucyQub2ZUeXBlKEFkZERpYWdyYW1BY3Rpb25UeXBlcy5BRERfRElBR1JBTV9TVUNDRUVEKS5waXBlKFxyXG5cdFx0bWFwKGFjdGlvbiA9PiBhY3Rpb24ucGF5bG9hZCksXHJcblx0XHRtYXAoZGF0YSA9PiB7XHJcblx0XHRcdHRoaXMucm91dGVyLm5hdmlnYXRlKFsgXCJkaWFncmFtc1wiIF0pO1xyXG5cdFx0XHRyZXR1cm4gT2JzZXJ2YWJsZS5lbXB0eSgpO1xyXG5cdFx0fSlcclxuXHQpO1xyXG5cclxuXHRARWZmZWN0KClcclxuXHRIQVZFX0VORFBPSU5UJCA9IHRoaXMuYWN0aW9ucyRcclxuXHRcdC5vZlR5cGUoQWRkRGlhZ3JhbUFjdGlvblR5cGVzLkhBVkVfRU5EUE9JTlQpXHJcblx0XHQucGlwZShtYXAoYWN0aW9uID0+IGFjdGlvbi5wYXlsb2FkKSwgbWFwKGRhdGEgPT4gbmV3IERhdGFMb2FkZWRBY3Rpb24oZGF0YSkpKTtcclxuXHJcblx0QEVmZmVjdCgpXHJcblx0REFUQV9MT0FERUQkID0gdGhpcy5hY3Rpb25zJFxyXG5cdFx0Lm9mVHlwZShBZGREaWFncmFtQWN0aW9uVHlwZXMuREFUQV9MT0FERUQpXHJcblx0XHQucGlwZShtYXAoYWN0aW9uID0+IGFjdGlvbi5wYXlsb2FkKSwgbWFwKGRhdGEgPT4gbmV3IFN0cnVjdHVyZURlZmluaXRpb25TdGFydEFjdGlvbihkYXRhKSkpO1xyXG5cclxuXHRARWZmZWN0KClcclxuXHRESUFHUkFNX0NPTkZJR19DSEFOR0VEJCA9IHRoaXMuYWN0aW9ucyRcclxuXHRcdC5vZlR5cGUoQWRkRGlhZ3JhbUFjdGlvblR5cGVzLkRJQUdSQU1fQ09ORklHX0NIQU5HRUQpXHJcblx0XHQucGlwZShtYXAoYWN0aW9uID0+IGFjdGlvbi5wYXlsb2FkKSwgbWFwKGRhdGEgPT4gbmV3IEdlbmVyYXRlRGlhZ3JhbUFjdGlvbihkYXRhKSkpO1xyXG5cclxuXHRARWZmZWN0KClcclxuXHRTVFJVQ1RVUkVfREVGSU5JVElPTl9TVEFSVCQgPSB0aGlzLmFjdGlvbnMkXHJcblx0XHQub2ZUeXBlKEFkZERpYWdyYW1BY3Rpb25UeXBlcy5TVFJVQ1RVUkVfREVGSU5JVElPTl9TVEFSVClcclxuXHRcdC5waXBlKFxyXG5cdFx0XHRtYXAoYWN0aW9uID0+IGFjdGlvbi5wYXlsb2FkKSxcclxuXHRcdFx0c3dpdGNoTWFwKGRhdGEgPT4gZGF0YS5nZXREYXRhU3RydWN0dXJlKCkubWFwKCgpID0+IG5ldyBTdHJ1Y3R1cmVEZWZpbml0aW9uRmluaXNoZWRBY3Rpb24oZGF0YSkpKVxyXG5cdFx0KTtcclxuXHJcblx0QEVmZmVjdCgpXHJcblx0Q09MVU1OU19NQVBQSU5HX0NIQU5HRUQkID0gdGhpcy5hY3Rpb25zJFxyXG5cdFx0Lm9mVHlwZShBZGREaWFncmFtQWN0aW9uVHlwZXMuQ09MVU1OU19NQVBQSU5HX0NIQU5HRUQpXHJcblx0XHQucGlwZShcclxuXHRcdFx0bWFwKGFjdGlvbiA9PiBhY3Rpb24ucGF5bG9hZCksXHJcblx0XHRcdHN3aXRjaE1hcChkYXRhID0+IGRhdGEuY2FsY3VsYXRlQ29sdW1ucygpLm1hcCgoKSA9PiBuZXcgU3RydWN0dXJlRGVmaW5pdGlvbkZpbmlzaGVkQWN0aW9uKGRhdGEpKSlcclxuXHRcdCk7XHJcblxyXG5cdEBFZmZlY3QoKVxyXG5cdFNUUlVDVFVSRV9ERUZJTklUSU9OX0VORCQgPSB0aGlzLmFjdGlvbnMkXHJcblx0XHQub2ZUeXBlKEFkZERpYWdyYW1BY3Rpb25UeXBlcy5TVFJVQ1RVUkVfREVGSU5JVElPTl9FTkQpXHJcblx0XHQvLyAuc2tpcFVudGlsKHRoaXMuYWN0aW9ucyQub2ZUeXBlKEFkZERpYWdyYW1BY3Rpb25UeXBlcy5EQVRBX0xPQURFRCkpXHJcblx0XHQucGlwZShcclxuXHRcdFx0bWFwKGFjdGlvbiA9PiBhY3Rpb24ucGF5bG9hZCksXHJcblx0XHRcdHN3aXRjaE1hcChkYXRhID0+IGRhdGEuY2FsY3VsYXRlQ29sdW1ucygpLm1hcCgoKSA9PiBuZXcgR2VuZXJhdGVEaWFncmFtQWN0aW9uKGRhdGEpKSlcclxuXHRcdCk7XHJcblxyXG5cdEBFZmZlY3QoeyBkaXNwYXRjaDogZmFsc2UgfSlcclxuXHRHZW5lcmF0ZURpYWdyYW0kID0gdGhpcy5hY3Rpb25zJFxyXG5cdFx0Lm9mVHlwZShBZGREaWFncmFtQWN0aW9uVHlwZXMuR0VORVJBVEVfRElBR1JBTSlcclxuXHRcdC5waXBlKG1hcChhY3Rpb24gPT4gYWN0aW9uLnBheWxvYWQpLCBtYXAoZGF0YSA9PiBkYXRhLmdlbmVyYXRlRGlhZ3JhbSgpKSk7XHJcbn1cclxuIiwiaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IFJvdXRlck1vZHVsZSwgUm91dGVzIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xyXG5cclxuaW1wb3J0IHsgRGlhZ3JhbU1vZHVsZUNvbnRhaW5lckNvbXBvbmVudCB9IGZyb20gXCIuL3NtYXJ0LWNvbXBvbmVudHMvZGlhZ3JhbS1tb2R1bGUtY29udGFpbmVyL2RpYWdyYW0tbW9kdWxlLWNvbnRhaW5lci5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgRGlhZ3JhbXNDb21wb25lbnQgfSBmcm9tIFwiLi9zbWFydC1jb21wb25lbnRzL2RpYWdyYW1zL2RpYWdyYW1zLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBBZGREaWFncmFtQ29tcG9uZW50IH0gZnJvbSBcIi4vc21hcnQtY29tcG9uZW50cy9hZGQtZGlhZ3JhbS9hZGQtZGlhZ3JhbS5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgTnVtZXJpY0RpYWdyYW1Db21wb25lbnQgfSBmcm9tIFwiLi9kdW1iLWNvbXBvbmVudHMvbnVtZXJpYy1kaWFncmFtL251bWVyaWMtZGlhZ3JhbS5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgU2VydmVyQ29ubmVjdGluZ1RpbWVEaWFncmFtQ29tcG9uZW50IH0gZnJvbSBcIi4vZHVtYi1jb21wb25lbnRzL3NlcnZlci1jb25uZWN0aW5nLXRpbWUtZGlhZ3JhbS9zZXJ2ZXItY29ubmVjdGluZy10aW1lLWRpYWdyYW0uY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IFNlcnZlclN0YXR1c0RpYWdyYW1Db21wb25lbnQgfSBmcm9tIFwiLi9kdW1iLWNvbXBvbmVudHMvc2VydmVyLXN0YXR1cy1kaWFncmFtL3NlcnZlci1zdGF0dXMtZGlhZ3JhbS5jb21wb25lbnRcIjtcclxuXHJcbmNvbnN0IHJvdXRlczogUm91dGVzID0gW1xyXG5cdHtcclxuXHRcdHBhdGg6IFwiZGlhZ3JhbXNcIixcclxuXHRcdGNvbXBvbmVudDogRGlhZ3JhbU1vZHVsZUNvbnRhaW5lckNvbXBvbmVudCxcclxuXHRcdGNoaWxkcmVuOiBbXHJcblx0XHRcdHtcclxuXHRcdFx0XHRwYXRoOiBcIlwiLFxyXG5cdFx0XHRcdGNvbXBvbmVudDogRGlhZ3JhbXNDb21wb25lbnRcclxuXHRcdFx0fSxcclxuXHRcdFx0e1xyXG5cdFx0XHRcdHBhdGg6IFwiYWRkXCIsXHJcblx0XHRcdFx0Y29tcG9uZW50OiBBZGREaWFncmFtQ29tcG9uZW50XHJcblx0XHRcdH0sXHJcblx0XHRcdHtcclxuXHRcdFx0XHRwYXRoOiBcImVkaXQvOmlkXCIsXHJcblx0XHRcdFx0Y29tcG9uZW50OiBBZGREaWFncmFtQ29tcG9uZW50XHJcblx0XHRcdH0sXHJcblx0XHRcdHtcclxuXHRcdFx0XHRwYXRoOiBcIm51bWVyb1wiLFxyXG5cdFx0XHRcdGNvbXBvbmVudDogTnVtZXJpY0RpYWdyYW1Db21wb25lbnRcclxuXHRcdFx0fSxcclxuXHRcdFx0e1xyXG5cdFx0XHRcdHBhdGg6IFwidGVtcG9cIixcclxuXHRcdFx0XHRjb21wb25lbnQ6IFNlcnZlckNvbm5lY3RpbmdUaW1lRGlhZ3JhbUNvbXBvbmVudFxyXG5cdFx0XHR9LFxyXG5cdFx0XHR7XHJcblx0XHRcdFx0cGF0aDogXCJib29sZWFub1wiLFxyXG5cdFx0XHRcdGNvbXBvbmVudDogU2VydmVyU3RhdHVzRGlhZ3JhbUNvbXBvbmVudFxyXG5cdFx0XHR9XHJcblx0XHRdXHJcblx0fVxyXG5dO1xyXG5cclxuZXhwb3J0IGNvbnN0IFJvdXRpbmdNb2R1bGU6IE1vZHVsZVdpdGhQcm92aWRlcnMgPSBSb3V0ZXJNb2R1bGUuZm9yQ2hpbGQocm91dGVzKTtcclxuIiwiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSBcInJ4anMvT2JzZXJ2YWJsZVwiO1xyXG5cclxuaW1wb3J0IHsgSUdyaWRJdGVtQ29tcG9uZW50IH0gZnJvbSBcIkBzb3VzaGlhbnMvZ3JpZFwiO1xyXG5cclxuaW1wb3J0IHsgRGlhZ3JhbU1vZGVsIH0gZnJvbSBcIi4uLy4uL21vZGVscy9kaWFncmFtLm1vZGVsXCI7XHJcbmltcG9ydCB7IERpYWdyYW1TZXJ2aWNlIH0gZnJvbSBcIi4uLy4uL3NlcnZpY2VzL2RpYWdyYW0uc2VydmljZVwiO1xyXG5pbXBvcnQgeyBtYXAgfSBmcm9tIFwicnhqcy9vcGVyYXRvcnNcIjtcclxuXHJcbkBDb21wb25lbnQoe1xyXG5cdHRlbXBsYXRlOiBgPGRpdiBmeExheW91dD1cImNvbHVtbiB3cmFwXCIgZnhMYXlvdXRHYXA9XCIxNXB4XCI+XHJcbjxoND7DmcKEw5vCjMOYwrPDmMKqIMOZwobDmcKFw5nCiMOYwq/DmMKnw5jCscOZwofDmMKnPC9oND5cclxuICAgICAgPG1hdC1mb3JtLWZpZWxkIGZ4RmxleD1cIjEwMFwiPlxyXG4gIDxtYXQtc2VsZWN0IHBsYWNlaG9sZGVyPVwiw5nChsOZwoXDmcKIw5jCr8OYwqfDmMKxIMOZwofDmMKnXCIgWyhuZ01vZGVsKV09XCJzZWxlY3RlZERpYWdyYW1JZFwiIG5hbWU9XCJzZWxlY3RlZERpYWdyYW1JZFwiPlxyXG4gIDxtYXQtb3B0aW9uICpuZ0Zvcj1cImxldCBpdGVtIG9mIChkaWFncmFtcyQgfCBhc3luYylcIiBbdmFsdWVdPVwiaXRlbS5faWRcIj5cclxuICAgIHt7aXRlbS5OYW1lfX1cclxuICA8L21hdC1vcHRpb24+XHJcbjwvbWF0LXNlbGVjdD5cclxuPC9tYXQtZm9ybS1maWVsZD5cclxuPC9kaXY+YFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRGlhZ3JhbVNlbGVjdG9yQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBJR3JpZEl0ZW1Db21wb25lbnQ8eyBkaWFncmFtSWQ6IHN0cmluZyB9PiB7XHJcblx0ZGlhZ3JhbXMkOiBPYnNlcnZhYmxlPERpYWdyYW1Nb2RlbFtdPjtcclxuXHRzZWxlY3RlZERpYWdyYW1JZDogc3RyaW5nO1xyXG5cdGdldCB2YWxpZCgpIHtcclxuXHRcdHJldHVybiB0aGlzLmNvbmZpZy5kaWFncmFtSWQgIT0gdW5kZWZpbmVkO1xyXG5cdH1cclxuXHRnZXQgY29uZmlnKCkge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0ZGlhZ3JhbUlkOiB0aGlzLnNlbGVjdGVkRGlhZ3JhbUlkXHJcblx0XHR9O1xyXG5cdH1cclxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIGRpYWdyYW1TZXJ2aWNlOiBEaWFncmFtU2VydmljZSkge1xyXG5cdFx0dGhpcy5kaWFncmFtcyQgPSB0aGlzLmRpYWdyYW1TZXJ2aWNlLmdldERpYWdyYW1zKCkucGlwZShtYXAocmVzID0+IHJlcy5SZXN1bHQpKTtcclxuXHR9XHJcblx0bmdPbkluaXQoKSB7fVxyXG59XHJcbiIsImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vblwiO1xyXG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUsIFJvdXRlcyB9IGZyb20gXCJAYW5ndWxhci9yb3V0ZXJcIjtcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcclxuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb21tb24vaHR0cFwiO1xyXG5pbXBvcnQgeyBGbGV4TGF5b3V0TW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2ZsZXgtbGF5b3V0XCI7XHJcbmltcG9ydCB7IEJyb3dzZXJBbmltYXRpb25zTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXIvYW5pbWF0aW9uc1wiO1xyXG5pbXBvcnQge1xyXG5cdE1hdEV4cGFuc2lvbk1vZHVsZSxcclxuXHRNYXRTbmFja0Jhck1vZHVsZSxcclxuXHRNYXRJY29uTW9kdWxlLFxyXG5cdE1hdEJ1dHRvbk1vZHVsZSxcclxuXHRNYXRDYXJkTW9kdWxlLFxyXG5cdE1hdFRvb2x0aXBNb2R1bGUsXHJcblx0TWF0U2VsZWN0TW9kdWxlLFxyXG5cdE1hdElucHV0TW9kdWxlLFxyXG5cdE1hdEZvcm1GaWVsZE1vZHVsZSxcclxuXHRNYXRUYWJzTW9kdWxlLFxyXG5cdE1hdFJhZGlvTW9kdWxlLFxyXG5cdE1hdENoZWNrYm94TW9kdWxlLFxyXG5cdE1hdEdyaWRMaXN0TW9kdWxlLFxyXG5cdE1hdFNsaWRlck1vZHVsZSxcclxuXHRNYXRBdXRvY29tcGxldGVNb2R1bGVcclxufSBmcm9tIFwiQGFuZ3VsYXIvbWF0ZXJpYWxcIjtcclxuaW1wb3J0IHsgU3RvcmVNb2R1bGUgfSBmcm9tIFwiQG5ncngvc3RvcmVcIjtcclxuaW1wb3J0IHsgU3RvcmVEZXZ0b29sc01vZHVsZSB9IGZyb20gXCJAbmdyeC9zdG9yZS1kZXZ0b29sc1wiO1xyXG5pbXBvcnQgeyBFZmZlY3RzTW9kdWxlLCBtZXJnZUVmZmVjdHMgfSBmcm9tIFwiQG5ncngvZWZmZWN0c1wiO1xyXG5cclxuaW1wb3J0IHsgU2hhcmVkTW9kdWxlIH0gZnJvbSBcIkBzb3VzaGlhbnMvc2hhcmVkXCI7XHJcblxyXG5pbXBvcnQgeyBEaWFncmFtTW9kdWxlQ29uZmlnLCBNT0RVTEVfQ09ORklHX1RPS0VOIH0gZnJvbSBcIi4vZGlhZ3JhbS5jb25maWdcIjtcclxuXHJcbmltcG9ydCB7IERpYWdyYW1SZWR1Y2VycyB9IGZyb20gXCIuL3JlZHVjZXJzL2luZGV4XCI7XHJcblxyXG5pbXBvcnQgeyBTZXJ2ZXJTdGF0dXNEaWFncmFtQ29tcG9uZW50IH0gZnJvbSBcIi4vZHVtYi1jb21wb25lbnRzL3NlcnZlci1zdGF0dXMtZGlhZ3JhbS9zZXJ2ZXItc3RhdHVzLWRpYWdyYW0uY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IERpYWdyYW1QYXJ0aWFsQ29uZmlnRWRpdENvbXBvbmVudCB9IGZyb20gXCIuL2R1bWItY29tcG9uZW50cy9kaWFncmFtLXBhcnRpYWwtY29uZmlnLWVkaXQvZGlhZ3JhbS1wYXJ0aWFsLWNvbmZpZy1lZGl0LmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBQaWVEaWFncmFtUGFydGlhbENvbmZpZ0NvbXBvbmVudCB9IGZyb20gXCIuL2R1bWItY29tcG9uZW50cy9waWUtZGlhZ3JhbS1wYXJ0aWFsLWNvbmZpZy9waWUtZGlhZ3JhbS1wYXJ0aWFsLWNvbmZpZy5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgQm9vbGVhbm9XaWRnZXRQYXJ0aWFsQ29uZmlnQ29tcG9uZW50IH0gZnJvbSBcIi4vZHVtYi1jb21wb25lbnRzL2Jvb2xlYW5vLXdpZGdldC1wYXJ0aWFsLWNvbmZpZy9ib29sZWFuby13aWRnZXQtcGFydGlhbC1jb25maWcuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IE51bWVyaWNXaWRnZXRQYXJ0aWFsQ29uZmlnQ29tcG9uZW50IH0gZnJvbSBcIi4vZHVtYi1jb21wb25lbnRzL251bWVyaWMtd2lkZ2V0LXBhcnRpYWwtY29uZmlnL251bWVyaWMtd2lkZ2V0LXBhcnRpYWwtY29uZmlnLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBMaW5lYXJEaWFncmFtUGFydGlhbENvbmZpZ0NvbXBvbmVudCB9IGZyb20gXCIuL2R1bWItY29tcG9uZW50cy9saW5lYXItZGlhZ3JhbS1wYXJ0aWFsLWNvbmZpZy9saW5lYXItZGlhZ3JhbS1wYXJ0aWFsLWNvbmZpZy5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgU2VydmVyQ29ubmVjdGluZ1RpbWVEaWFncmFtQ29tcG9uZW50IH0gZnJvbSBcIi4vZHVtYi1jb21wb25lbnRzL3NlcnZlci1jb25uZWN0aW5nLXRpbWUtZGlhZ3JhbS9zZXJ2ZXItY29ubmVjdGluZy10aW1lLWRpYWdyYW0uY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IE51bWVyaWNFZGl0RGlhZ3JhbUNvbXBvbmVudCB9IGZyb20gXCIuL2R1bWItY29tcG9uZW50cy9udW1lcmljLWVkaXQtZGlhZ3JhbS9udW1lcmljLWVkaXQtZGlhZ3JhbS5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgTnVtZXJpY0RpYWdyYW1Db21wb25lbnQgfSBmcm9tIFwiLi9kdW1iLWNvbXBvbmVudHMvbnVtZXJpYy1kaWFncmFtL251bWVyaWMtZGlhZ3JhbS5jb21wb25lbnRcIjtcclxuXHJcbmltcG9ydCB7IERpYWdyYW1Nb2R1bGVDb250YWluZXJDb21wb25lbnQgfSBmcm9tIFwiLi9zbWFydC1jb21wb25lbnRzL2RpYWdyYW0tbW9kdWxlLWNvbnRhaW5lci9kaWFncmFtLW1vZHVsZS1jb250YWluZXIuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IERhdGFNYXBwZXJDb21wb25lbnQgfSBmcm9tIFwiLi9zbWFydC1jb21wb25lbnRzL2RhdGEtbWFwcGVyL2RhdGEtbWFwcGVyLmNvbXBvbmVudFwiO1xyXG5cclxuaW1wb3J0IHsgQWRkRGlhZ3JhbUNvbXBvbmVudCB9IGZyb20gXCIuL3NtYXJ0LWNvbXBvbmVudHMvYWRkLWRpYWdyYW0vYWRkLWRpYWdyYW0uY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IGRpYWdyYW1WaWV3Q29tcG9uZW50IH0gZnJvbSBcIi4vc21hcnQtY29tcG9uZW50cy9kaWFncmFtLXZpZXcvZGlhZ3JhbS12aWV3LmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBEaWFncmFtc0NvbXBvbmVudCB9IGZyb20gXCIuL3NtYXJ0LWNvbXBvbmVudHMvZGlhZ3JhbXMvZGlhZ3JhbXMuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IEVkaXREaWFncmFtQ29tcG9uZW50IH0gZnJvbSBcIi4vc21hcnQtY29tcG9uZW50cy9lZGl0LWRpYWdyYW0vZWRpdC1kaWFncmFtLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBEaWFncmFtQ29tcG9uZW50IH0gZnJvbSBcIi4vc21hcnQtY29tcG9uZW50cy9kaWFncmFtL2RpYWdyYW0uY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IER5bmFtaWNDb21wb25lbnRTZWxlY3RvckNvbXBvbmVudCB9IGZyb20gXCIuL3NtYXJ0LWNvbXBvbmVudHMvZHluYW1pYy1jb21wb25lbnQtc2VsZWN0b3IvZHluYW1pYy1jb21wb25lbnQtc2VsZWN0b3IuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IER5bmFtaWNDb25maWdDb21wb25lbnRTZWxlY3RvckNvbXBvbmVudCB9IGZyb20gXCIuL3NtYXJ0LWNvbXBvbmVudHMvZHluYW1pYy1jb25maWctY29tcG9uZW50LXNlbGVjdG9yL2R5bmFtaWMtY29uZmlnLWNvbXBvbmVudC1zZWxlY3Rvci5jb21wb25lbnRcIjtcclxuXHJcbmltcG9ydCB7IERpYWdyYW1FZmZlY3RzIH0gZnJvbSBcIi4vZWZmZWN0cy9kaWFncmFtcy5lZmZlY3RzXCI7XHJcbmltcG9ydCB7IEFkZERpYWdyYW1FZmZlY3RzIH0gZnJvbSBcIi4vZWZmZWN0cy9hZGQtZGlhZ3JhbS5lZmZlY3RzXCI7XHJcblxyXG5pbXBvcnQgeyBSb3V0aW5nTW9kdWxlIH0gZnJvbSBcIi4vZGlhZ3JhbS1yb3V0aW5nLm1vZHVsZVwiO1xyXG5pbXBvcnQgeyBEaWFncmFtU2VsZWN0b3JDb21wb25lbnQgfSBmcm9tIFwiLi9zbWFydC1jb21wb25lbnRzL2RpYWdyYW0tc2VsZWN0b3IvZGlhZ3JhbS1zZWxlY3Rvci5jb21wb25lbnRcIjtcclxuXHJcbkBOZ01vZHVsZSh7XHJcblx0aW1wb3J0czogW1xyXG5cdFx0SHR0cENsaWVudE1vZHVsZSxcclxuXHRcdEZvcm1zTW9kdWxlLFxyXG5cdFx0Um91dGVyTW9kdWxlLFxyXG5cdFx0Q29tbW9uTW9kdWxlLFxyXG5cdFx0TWF0RXhwYW5zaW9uTW9kdWxlLFxyXG5cdFx0TWF0U25hY2tCYXJNb2R1bGUsXHJcblx0XHRNYXRJY29uTW9kdWxlLFxyXG5cdFx0TWF0QnV0dG9uTW9kdWxlLFxyXG5cdFx0TWF0Q2FyZE1vZHVsZSxcclxuXHRcdE1hdFNlbGVjdE1vZHVsZSxcclxuXHRcdE1hdFNsaWRlck1vZHVsZSxcclxuXHRcdE1hdElucHV0TW9kdWxlLFxyXG5cdFx0TWF0Q2hlY2tib3hNb2R1bGUsXHJcblx0XHRNYXRGb3JtRmllbGRNb2R1bGUsXHJcblx0XHRNYXRUYWJzTW9kdWxlLFxyXG5cdFx0RmxleExheW91dE1vZHVsZSxcclxuXHRcdE1hdFJhZGlvTW9kdWxlLFxyXG5cdFx0TWF0VG9vbHRpcE1vZHVsZSxcclxuXHRcdE1hdEdyaWRMaXN0TW9kdWxlLFxyXG5cdFx0TWF0QXV0b2NvbXBsZXRlTW9kdWxlLFxyXG5cdFx0UmVhY3RpdmVGb3Jtc01vZHVsZSxcclxuXHRcdEJyb3dzZXJBbmltYXRpb25zTW9kdWxlXHJcblx0XSxcclxuXHRkZWNsYXJhdGlvbnM6IFtcclxuXHRcdEFkZERpYWdyYW1Db21wb25lbnQsXHJcblx0XHREaWFncmFtc0NvbXBvbmVudCxcclxuXHRcdGRpYWdyYW1WaWV3Q29tcG9uZW50LFxyXG5cdFx0RWRpdERpYWdyYW1Db21wb25lbnQsXHJcblx0XHREeW5hbWljQ29uZmlnQ29tcG9uZW50U2VsZWN0b3JDb21wb25lbnQsXHJcblx0XHREaWFncmFtQ29tcG9uZW50LFxyXG5cdFx0RHluYW1pY0NvbXBvbmVudFNlbGVjdG9yQ29tcG9uZW50LFxyXG5cdFx0RGlhZ3JhbU1vZHVsZUNvbnRhaW5lckNvbXBvbmVudCxcclxuXHRcdERhdGFNYXBwZXJDb21wb25lbnQsXHJcblx0XHROdW1lcmljRGlhZ3JhbUNvbXBvbmVudCxcclxuXHRcdFNlcnZlclN0YXR1c0RpYWdyYW1Db21wb25lbnQsXHJcblx0XHREaWFncmFtUGFydGlhbENvbmZpZ0VkaXRDb21wb25lbnQsXHJcblx0XHRQaWVEaWFncmFtUGFydGlhbENvbmZpZ0NvbXBvbmVudCxcclxuXHRcdEJvb2xlYW5vV2lkZ2V0UGFydGlhbENvbmZpZ0NvbXBvbmVudCxcclxuXHRcdE51bWVyaWNXaWRnZXRQYXJ0aWFsQ29uZmlnQ29tcG9uZW50LFxyXG5cdFx0U2VydmVyQ29ubmVjdGluZ1RpbWVEaWFncmFtQ29tcG9uZW50LFxyXG5cdFx0TnVtZXJpY0VkaXREaWFncmFtQ29tcG9uZW50LFxyXG5cdFx0TGluZWFyRGlhZ3JhbVBhcnRpYWxDb25maWdDb21wb25lbnQsXHJcblx0XHREaWFncmFtU2VsZWN0b3JDb21wb25lbnRcclxuXHRdLFxyXG5cdGVudHJ5Q29tcG9uZW50czogWyBEaWFncmFtU2VsZWN0b3JDb21wb25lbnQsIGRpYWdyYW1WaWV3Q29tcG9uZW50IF0sXHJcblx0ZXhwb3J0czogWyBEaWFncmFtU2VsZWN0b3JDb21wb25lbnQgXSxcclxuXHRwcm92aWRlcnM6IFtdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3NEaWFncmFtTW9kdWxlIHtcclxuXHRzdGF0aWMgZm9yUm9vdChjb25maWc/OiBEaWFncmFtTW9kdWxlQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRuZ01vZHVsZTogUm9vdE5nc0RpYWdyYW1Nb2R1bGUsXHJcblx0XHRcdHByb3ZpZGVyczogWyB7IHByb3ZpZGU6IE1PRFVMRV9DT05GSUdfVE9LRU4sIHVzZVZhbHVlOiBjb25maWcgfSBdXHJcblx0XHR9O1xyXG5cdH1cclxufVxyXG5cclxuQE5nTW9kdWxlKHtcclxuXHRpbXBvcnRzOiBbXHJcblx0XHROZ3NEaWFncmFtTW9kdWxlLFxyXG5cdFx0U3RvcmVNb2R1bGUuZm9yRmVhdHVyZShcImRpYWdyYW1cIiwgRGlhZ3JhbVJlZHVjZXJzKSxcclxuXHRcdEVmZmVjdHNNb2R1bGUuZm9yRmVhdHVyZShbIERpYWdyYW1FZmZlY3RzLCBBZGREaWFncmFtRWZmZWN0cyBdKSxcclxuXHRcdFJvdXRpbmdNb2R1bGVcclxuXHRdLFxyXG5cdGV4cG9ydHM6IFsgTmdzRGlhZ3JhbU1vZHVsZSBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBSb290TmdzRGlhZ3JhbU1vZHVsZSB7fVxyXG4iXSwibmFtZXMiOlsiaW5pdGlhbFN0YXRlIiwiRGlhZ3JhbXNSZWR1Y2VyLmRpYWdyYW1SZWR1Y2VyIiwiZnJvbUVkaXREaWFncmFtLlJlZHVjZXIiLCJwYXJlbnRHdWFyZFJlZHVjZXIuUGFyZW50R3VhcmRSZWR1Y2VyIiwiQmVoYXZpb3JTdWJqZWN0IiwiU3ViamVjdCIsIk9ic2VydmFibGUiLCJvZiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBVUEsSUFBYSxxQkFBcUIsR0FBd0I7SUFDekQsU0FBUyxFQUFFLEVBQUU7SUFDYixHQUFHLEVBQUU7UUFDSixVQUFVLEVBQUUsS0FBSztRQUNqQixlQUFlLEVBQUUsNkJBQTZCO0tBQzlDO0NBQ0QsQ0FBQzs7QUFFRixJQUFhLG1CQUFtQixHQUFHLElBQUksY0FBYyxDQUFzQixxQkFBcUIsQ0FBQzs7Ozs7O0FDaEJqRyxJQUFpQixtQkFBbUI7QUFBcEMsV0FBaUIsbUJBQW1CO0lBQ25DLElBQUE7UUFHQyxpQkFBWSxTQUEwRTtZQUExRSwwQkFBQSxFQUFBLDhCQUF5QyxFQUFpQyxDQUFBO1lBQXRGLGlCQUVDO1lBREEsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxHQUFHLElBQUksUUFBQyxLQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFDLENBQUMsQ0FBQztTQUNwRTs7OztR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","import { FormGroup, FormControl, Validators, FormArray, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InjectionToken, Inject, Injectable, Component, EventEmitter, Output, Input, NgModule, ViewContainerRef, ComponentFactoryResolver, Compiler, Directive, defineInjectable, inject } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { Store, StoreModule } from '@ngrx/store';\nimport { getFormModuleConfig } from '@soushians/config';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BehaviorSubject as BehaviorSubject$1 } from 'rxjs/BehaviorSubject';\nimport { filter, map, take, switchMap, takeUntil, catchError } from 'rxjs/operators';\nimport { stringTemplate } from '@soushians/shared';\nimport { MatTableDataSource, MatExpansionModule, MatSnackBarModule, MatIconModule, MatButtonModule, MatCardModule, MatSelectModule, MatInputModule, MatFormFieldModule, MatTabsModule, MatRadioModule, MatSlideToggleModule, MatDividerModule, MatCheckboxModule, MatTableModule, MatDatepickerModule } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { __decorate, __metadata, __extends, __assign } from 'tslib';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/switchMap';\nimport { Actions, Effect, EffectsModule } from '@ngrx/effects';\nimport { of } from 'rxjs/observable/of';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar AddFormApiModel;\r\n(function (AddFormApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = /** @type {?} */ ({}); }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {\r\n                name: this.name,\r\n                form: this.form,\r\n                events: this.events\r\n            };\r\n        };\r\n        Object.defineProperty(Request, \"formGroup\", {\r\n            get: /**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                return new FormGroup({\r\n                    _id: new FormControl(\"\", [Validators.required]),\r\n                    name: new FormControl(\"\", [Validators.required]),\r\n                    title: new FormControl(\"\", [Validators.required]),\r\n                    form: new FormControl({}),\r\n                    events: new FormGroup({\r\n                        accept: new FormGroup({\r\n                            show: new FormControl(false),\r\n                            text: new FormControl(\"ثبت\")\r\n                        }),\r\n                        cancel: new FormGroup({\r\n                            show: new FormControl(false),\r\n                            text: new FormControl(\"انصراف\")\r\n                        })\r\n                    })\r\n                });\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Request;\r\n    }());\r\n    AddFormApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    AddFormApiModel.Response = Response;\r\n})(AddFormApiModel || (AddFormApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar EditFormApiModel;\r\n(function (EditFormApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = /** @type {?} */ ({}); }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {\r\n                _id: this._id,\r\n                name: this.name,\r\n                form: this.form,\r\n                events: this.events\r\n            };\r\n        };\r\n        Object.defineProperty(Request, \"formGroup\", {\r\n            get: /**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                return new FormGroup({\r\n                    _id: new FormControl(\"\", [Validators.required]),\r\n                    name: new FormControl(\"\", [Validators.required]),\r\n                    form: new FormControl({}),\r\n                    events: new FormGroup({\r\n                        accept: new FormGroup({\r\n                            show: new FormControl(false),\r\n                            text: new FormControl(\"ثبت\")\r\n                        }),\r\n                        cancel: new FormGroup({\r\n                            show: new FormControl(false),\r\n                            text: new FormControl(\"انصراف\")\r\n                        })\r\n                    })\r\n                });\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Request;\r\n    }());\r\n    EditFormApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    EditFormApiModel.Response = Response;\r\n})(EditFormApiModel || (EditFormApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FormListApiModel;\r\n(function (FormListApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = /** @type {?} */ ({}); }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {\r\n                Name: this.Name,\r\n                Controls: this.Controls\r\n            };\r\n        };\r\n        Object.defineProperty(Request, \"formGroup\", {\r\n            get: /**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                return new FormGroup({\r\n                    Name: new FormControl(\"\", [Validators.required]),\r\n                    Controls: new FormGroup({})\r\n                });\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Request;\r\n    }());\r\n    FormListApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    FormListApiModel.Response = Response;\r\n})(FormListApiModel || (FormListApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar Validator = /** @class */ (function () {\r\n    function Validator() {\r\n        this.required = {\r\n            active: false,\r\n            message: \"این فیلد الزامی است\"\r\n        };\r\n        this.minlength = {\r\n            active: false,\r\n            message: \"حداقل تعداد کارکترها\",\r\n            value: 5\r\n        };\r\n        this.email = {\r\n            active: false,\r\n            message: \"لطفا ایمیل صحیح وارد نمایید\"\r\n        };\r\n    }\r\n    return Validator;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FieldConfig = /** @class */ (function () {\r\n    function FieldConfig(type) {\r\n        this.type = type;\r\n        if (type != \"control\")\r\n            this.fields = [];\r\n        this.width = 3;\r\n        this.validator = new Validator();\r\n    }\r\n    return FieldConfig;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FormSchemaModel = /** @class */ (function () {\r\n    function FormSchemaModel() {\r\n        this.events = {\r\n            accept: {\r\n                show: false,\r\n                text: \"ثبت\"\r\n            },\r\n            cancel: {\r\n                show: false,\r\n                text: \"انصراف\"\r\n            }\r\n        };\r\n        this.form = new FieldConfig(\"group\");\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormSchemaModel.prototype.init = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._id = (Math.random() * 10).toString();\r\n    };\r\n    return FormSchemaModel;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar MODULE_DEFAULT_CONFIG = {\r\n    env: {\r\n        production: false,\r\n        frontend_server: \"frontend/server/did/not/set\",\r\n        server: \"server/did/not/set\"\r\n    },\r\n    endpoints: {\r\n        addForm: \"\",\r\n        editForm: \"\",\r\n        getForm: \"\",\r\n        getList: \"\",\r\n        deleteForm: \"\",\r\n        captchaUrl: \"\"\r\n    },\r\n};\r\n/** @type {?} */\r\nvar MODULE_CONFIG_TOKEN = new InjectionToken(\"FormModuleConfig\");\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FormConfigurationService = /** @class */ (function () {\r\n    function FormConfigurationService(configFile, store) {\r\n        var _this = this;\r\n        this.store = store;\r\n        this.config$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n        this._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n        this.config$.next(this._config);\r\n        this.store.select(getFormModuleConfig).subscribe(function (userConfig) {\r\n            if (!userConfig)\r\n                return;\r\n            _this._config = Object.assign({}, _this._config, userConfig.Config);\r\n            _this.config$.next(_this._config);\r\n        });\r\n    }\r\n    Object.defineProperty(FormConfigurationService.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._config;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FormConfigurationService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    FormConfigurationService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [MODULE_CONFIG_TOKEN,] }] },\r\n        { type: Store }\r\n    ]; };\r\n    /** @nocollapse */ FormConfigurationService.ngInjectableDef = defineInjectable({ factory: function FormConfigurationService_Factory() { return new FormConfigurationService(inject(MODULE_CONFIG_TOKEN), inject(Store)); }, token: FormConfigurationService, providedIn: \"root\" });\r\n    return FormConfigurationService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FormService = /** @class */ (function () {\r\n    function FormService(http, store, configurationService) {\r\n        this.http = http;\r\n        this.store = store;\r\n        this.configurationService = configurationService;\r\n    }\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    FormService.prototype.add = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var model = new AddFormApiModel.Request(data);\r\n        return this.configurationService.config$\r\n            .filter(function (config) { return config.endpoints.addForm != \"\"; })\r\n            .take(1)\r\n            .switchMap(function (config) {\r\n            return _this.http.post(config.env.frontend_server + config.endpoints.addForm, model.getRequestBody());\r\n        })\r\n            .map(function (response) { return response.Result; });\r\n    };\r\n    /**\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    FormService.prototype.get = /**\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    function (_id) {\r\n        var _this = this;\r\n        return this.configurationService.config$\r\n            .filter(function (config) { return config.endpoints.getForm != \"\"; })\r\n            .take(1)\r\n            .switchMap(function (config) {\r\n            return _this.http.get(stringTemplate(config.env.frontend_server + config.endpoints.getForm, { _id: _id }));\r\n        })\r\n            .map(function (response) { return response.Result; });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormService.prototype.getList = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        return this.configurationService.config$\r\n            .filter(function (config) { return config.endpoints.getList != \"\"; })\r\n            .switchMap(function (config) { return _this.http.get(config.env.frontend_server + config.endpoints.getList); })\r\n            .map(function (response) { return response.Result; });\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    FormService.prototype.update = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var model = new EditFormApiModel.Request(data);\r\n        return this.configurationService.config$\r\n            .filter(function (config) { return config.endpoints.editForm != \"\"; })\r\n            .take(1)\r\n            .switchMap(function (config) {\r\n            return _this.http.put(config.env.frontend_server + config.endpoints.editForm, model.getRequestBody());\r\n        })\r\n            .map(function (response) { return response.Result; });\r\n    };\r\n    /**\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    FormService.prototype.delete = /**\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    function (_id) {\r\n        var _this = this;\r\n        return this.configurationService.config$\r\n            .filter(function (config) { return config.endpoints.deleteForm != \"\"; })\r\n            .switchMap(function (config) { return _this.http.get(config.env.frontend_server + config.endpoints.deleteForm); });\r\n    };\r\n    /**\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    FormService.prototype.selectFormById = /**\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    function (_id) {\r\n        /** @type {?} */\r\n        var subject = new BehaviorSubject$1(undefined);\r\n        this.store\r\n            .select(function (state) { return state.form.list.data; })\r\n            .pipe(filter(function (forms) { return forms != null; }), map(function (forms) { return forms.find(function (form) { return form._id == _id; }); }))\r\n            .subscribe(function (formSchemaModel) { return subject.next(formSchemaModel); });\r\n        return subject.asObservable();\r\n    };\r\n    FormService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    FormService.ctorParameters = function () { return [\r\n        { type: HttpClient },\r\n        { type: Store },\r\n        { type: FormConfigurationService }\r\n    ]; };\r\n    /** @nocollapse */ FormService.ngInjectableDef = defineInjectable({ factory: function FormService_Factory() { return new FormService(inject(HttpClient), inject(Store), inject(FormConfigurationService)); }, token: FormService, providedIn: \"root\" });\r\n    return FormService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SelectComponent = /** @class */ (function () {\r\n    function SelectComponent() {\r\n    }\r\n    SelectComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"ngs-form-control-select\",\r\n                    template: \"<div  [formGroup]=\\\"group\\\">\\n<mat-form-field>\\n    <mat-select [formControlName]=\\\"config.name\\\" [placeholder]=\\\"config.title\\\">\\n      <mat-option *ngFor=\\\"let option of config.options\\\" [value]=\\\"option.value\\\">{{option.key}}</mat-option>\\n    </mat-select>\\n</mat-form-field>\\n</div>\",\r\n                    styles: [\":host{display:block}.mat-form-field{width:100%}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SelectComponent.ctorParameters = function () { return []; };\r\n    return SelectComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar CheckboxComponent = /** @class */ (function () {\r\n    function CheckboxComponent() {\r\n    }\r\n    CheckboxComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"ngs-form-control-checkbox\",\r\n                    template: \"<div [formGroup]=\\\"group\\\">\\n    <mat-checkbox [formControlName]=\\\"config.name\\\">\\n        {{config.title}}\\n    </mat-checkbox>\\n</div>\",\r\n                    styles: [\":host{display:block}.mat-form-field{width:100%}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    CheckboxComponent.ctorParameters = function () { return []; };\r\n    return CheckboxComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar EmailComponent = /** @class */ (function () {\r\n    function EmailComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    EmailComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    EmailComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"ngs-form-control-email\",\r\n                    template: \"<div  [formGroup]=\\\"group\\\">\\n<mat-form-field fxFlexFill>\\n    <input matInput [type]=\\\"config.inputType\\\" [placeholder]=\\\"config.title\\\" [formControlName]=\\\"config.name\\\">\\n</mat-form-field>\\n</div>\",\r\n                    styles: [\":host{display:block}.mat-form-field{width:100%}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    EmailComponent.ctorParameters = function () { return []; };\r\n    return EmailComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ColorComponent = /** @class */ (function () {\r\n    function ColorComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ColorComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    ColorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"ngs-form-control-color\",\r\n                    template: \"<div  [formGroup]=\\\"form\\\">\\n<mat-form-field fxFlexFill>\\n    <input matInput [type]=\\\"schema.inputType\\\" [placeholder]=\\\"schema.title\\\" [formControlName]=\\\"schema.name\\\">\\n</mat-form-field>\\n</div>\",\r\n                    styles: [\":host{display:block}.mat-form-field{width:100%}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ColorComponent.ctorParameters = function () { return []; };\r\n    ColorComponent.propDecorators = {\r\n        form: [{ type: Input }],\r\n        schema: [{ type: Input }]\r\n    };\r\n    return ColorComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar TableComponent = /** @class */ (function () {\r\n    function TableComponent(http) {\r\n        this.http = http;\r\n        this.selection = new SelectionModel(true, []);\r\n        this.ready = false;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    TableComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.http.get(this.schema.dataEndpoint).subscribe(function (data) {\r\n            _this.ready = true;\r\n            _this.displayedColumns = data.displayedColumns;\r\n            _this.filedDisplayedColumns = data.filedDisplayedColumns;\r\n            _this.dataSource = new MatTableDataSource(data.dataSource);\r\n        });\r\n    };\r\n    /** Whether the number of selected elements matches the total number of rows. */\r\n    /**\r\n     * Whether the number of selected elements matches the total number of rows.\r\n     * @return {?}\r\n     */\r\n    TableComponent.prototype.isAllSelected = /**\r\n     * Whether the number of selected elements matches the total number of rows.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _a;\r\n        /** @type {?} */\r\n        var numSelected = this.selection.selected.length;\r\n        this.form.patchValue((_a = {},\r\n            _a[this.schema.name] = this.selection.selected,\r\n            _a));\r\n        /** @type {?} */\r\n        var numRows = this.dataSource.data.length;\r\n        return numSelected === numRows;\r\n    };\r\n    /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n    /**\r\n     * Selects all rows if they are not all selected; otherwise clear selection.\r\n     * @return {?}\r\n     */\r\n    TableComponent.prototype.masterToggle = /**\r\n     * Selects all rows if they are not all selected; otherwise clear selection.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.isAllSelected() ? this.selection.clear() : this.dataSource.data.forEach(function (row) { return _this.selection.select(row); });\r\n    };\r\n    TableComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"ngs-form-control-table\",\r\n                    template: \"<div class=\\\"example-container mat-elevation-z8\\\" *ngIf=\\\"ready\\\">\\n    <mat-table #table [dataSource]=\\\"dataSource\\\">\\n  \\n      <ng-container matColumnDef=\\\"select\\\">\\n        <mat-header-cell *matHeaderCellDef>\\n          <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n            [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n            [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n          </mat-checkbox>\\n        </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\">\\n          <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n            (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n            [checked]=\\\"selection.isSelected(row)\\\">\\n          </mat-checkbox>\\n        </mat-cell>\\n      </ng-container>\\n\\n      <div *ngFor=\\\"let col of filedDisplayedColumns\\\">\\n        <ng-container  [matColumnDef]=\\\"col\\\">\\n          <mat-header-cell *matHeaderCellDef> {{col}} </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element[col]}} </mat-cell>\\n        </ng-container>\\n      </div>\\n        \\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <mat-header-cell *matHeaderCellDef></mat-header-cell>\\n        <mat-cell class='left-align' *matCellDef=\\\"let row\\\">\\n          <button mat-icon-button>\\n            <mat-icon aria-label=\\\"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628\\\">arrow_back</mat-icon>\\n          </button>\\n        </mat-cell>\\n      </ng-container>\\n    \\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"selection.toggle(row)\\\"></mat-row>\\n\\n    </mat-table>\\n  </div>\\n\\n\\n<!-- <mat-form-field fxFlexFill [formGroup]=\\\"form\\\">\\n  \\n  <input matInput [id]=\\\"schema.name\\\" [type]=\\\"schema.inputType\\\" [placeholder]=\\\"schema.title\\\" [formControlName]=\\\"schema.name\\\">\\n  \\n  <mat-error *ngIf=\\\"form.get(schema.name).errors?.required\\\">\\n    {{schema.validator.required.message}}\\n  </mat-error>\\n  <mat-error *ngIf=\\\"form.get(schema.name).errors?.minlength\\\">\\n    {{schema.validator.minlength.message}}\\n  </mat-error>\\n  <mat-error *ngIf=\\\"form.get(schema.name).email?.minlength\\\">\\n    {{schema.validator.email.message}}\\n  </mat-error>\\n</mat-form-field> -->\\n  \\n  <!-- <div *ngIf=\\\"form.get(schema.name).invalid && (form.get(schema.name).dirty || form.get(schema.name).touched)\\\" class=\\\"alert alert-danger\\\">\\n  </div> -->\",\r\n                    styles: [\":host{display:block}.mat-form-field{width:100%}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    TableComponent.ctorParameters = function () { return [\r\n        { type: HttpClient }\r\n    ]; };\r\n    TableComponent.propDecorators = {\r\n        form: [{ type: Input }],\r\n        schema: [{ type: Input }]\r\n    };\r\n    return TableComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NumberComponent = /** @class */ (function () {\r\n    function NumberComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NumberComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    NumberComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"ngs-form-control-number\",\r\n                    template: \"<div  [formGroup]=\\\"form\\\">\\n    <mat-form-field fxFlexFill>\\n        <input matInput [type]=\\\"schema.inputType\\\" [placeholder]=\\\"schema.title\\\" [formControlName]=\\\"schema.name\\\">\\n    </mat-form-field>\\n</div>\",\r\n                    styles: [\":host{display:block}.mat-form-field{width:100%}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NumberComponent.ctorParameters = function () { return []; };\r\n    NumberComponent.propDecorators = {\r\n        form: [{ type: Input }],\r\n        schema: [{ type: Input }]\r\n    };\r\n    return NumberComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar TextComponent = /** @class */ (function () {\r\n    function TextComponent() {\r\n    }\r\n    TextComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"ngs-form-control-text\",\r\n                    template: \"<mat-form-field fxFlexFill [formGroup]=\\\"group\\\">\\n\\n  <input matInput [id]=\\\"config.name\\\" [type]=\\\"config.inputType\\\" [placeholder]=\\\"config.title\\\" [formControlName]=\\\"config.name\\\">\\n\\n  <mat-error *ngIf=\\\"group.get(config.name).errors?.required\\\">\\n    {{config.validator.required.message}}\\n  </mat-error>\\n  <mat-error *ngIf=\\\"group.get(config.name).errors?.minlength\\\">\\n    {{config.validator.minlength.message}}\\n  </mat-error>\\n  <!-- <mat-error *ngIf=\\\"group.get(config.name).email?.minlength\\\">\\n    {{config.validator.email.message}}\\n  </mat-error> -->\\n\\n  <!-- <div *ngIf=\\\"form.get(config.name).invalid && (form.get(config.name).dirty || form.get(config.name).touched)\\\" class=\\\"alert alert-danger\\\">\\n  </div> -->\\n\\n</mat-form-field>\",\r\n                    styles: [\":host{display:block}.mat-form-field{width:100%}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    TextComponent.ctorParameters = function () { return []; };\r\n    return TextComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar FormsListActionTypes = {\r\n    FORMS_LIST: \"[FORM][LIST] FORMS_LIST\",\r\n    FORMS_LIST_START: \"[FORM][LIST] FORMS_LIST_START\",\r\n    FORMS_LIST_SUCCEED: \"[FORM][LIST] FORMS_LIST_SUCCEED\",\r\n    FORMS_LIST_FAILED: \"[FORM][LIST] FORMS_LIST_FAILED\",\r\n    ADD_FORM_SCHEMA: \"[FORM][LIST] ADD_FORM_SCHEMA\",\r\n    FORM_SCHEMA_UPDATE: \"[FORM][LIST] FORM_SCHEMA_UPDATE\",\r\n    GET_FORM_SCHEMA: \"[FORM][LIST] GET_FORM_SCHEMA\",\r\n    FORM_SCHEMA_FETCHED: \"[FORM][LIST] FORM_SCHEMA_FETCHED\",\r\n};\r\nvar FormsListAction = /** @class */ (function () {\r\n    function FormsListAction() {\r\n        this.type = FormsListActionTypes.FORMS_LIST;\r\n    }\r\n    return FormsListAction;\r\n}());\r\nvar FormsListStartAction = /** @class */ (function () {\r\n    function FormsListStartAction() {\r\n        this.type = FormsListActionTypes.FORMS_LIST_START;\r\n    }\r\n    return FormsListStartAction;\r\n}());\r\nvar FormsListSucceedAction = /** @class */ (function () {\r\n    function FormsListSucceedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = FormsListActionTypes.FORMS_LIST_SUCCEED;\r\n    }\r\n    return FormsListSucceedAction;\r\n}());\r\nvar FormsListFailedAction = /** @class */ (function () {\r\n    function FormsListFailedAction() {\r\n        this.type = FormsListActionTypes.FORMS_LIST_FAILED;\r\n    }\r\n    return FormsListFailedAction;\r\n}());\r\nvar UpdateFormSchemaAction = /** @class */ (function () {\r\n    function UpdateFormSchemaAction(payload) {\r\n        this.payload = payload;\r\n        this.type = FormsListActionTypes.FORM_SCHEMA_UPDATE;\r\n    }\r\n    return UpdateFormSchemaAction;\r\n}());\r\nvar AddFormSchemaAction = /** @class */ (function () {\r\n    function AddFormSchemaAction(payload) {\r\n        this.payload = payload;\r\n        this.type = FormsListActionTypes.ADD_FORM_SCHEMA;\r\n    }\r\n    return AddFormSchemaAction;\r\n}());\r\nvar GetFormSchemaAction = /** @class */ (function () {\r\n    function GetFormSchemaAction(payload) {\r\n        this.payload = payload;\r\n        this.type = FormsListActionTypes.GET_FORM_SCHEMA;\r\n    }\r\n    return GetFormSchemaAction;\r\n}());\r\nvar FormSchemaFechedAction = /** @class */ (function () {\r\n    function FormSchemaFechedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = FormsListActionTypes.FORM_SCHEMA_FETCHED;\r\n    }\r\n    return FormSchemaFechedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DateFormInputControlComponent = /** @class */ (function () {\r\n    function DateFormInputControlComponent() {\r\n    }\r\n    DateFormInputControlComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"ngs-form-control-date\",\r\n                    template: \"<mat-form-field fxFlexFill [formGroup]=\\\"group\\\">\\n\\n  <!-- <input matInput [id]=\\\"config.name\\\" [type]=\\\"config.inputType\\\" [placeholder]=\\\"config.title\\\" [formControlName]=\\\"config.name\\\"> -->\\n  <input matInput [id]=\\\"config.name\\\" [matDatepicker]=\\\"_datepicker\\\" [placeholder]=\\\"config.title\\\" [formControlName]=\\\"config.name\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"_datepicker\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #_datepicker></mat-datepicker>\\n\\n  <mat-error *ngIf=\\\"group.get(config.name).errors?.required\\\">\\n    {{config.validator.required.message}}\\n  </mat-error>\\n  <mat-error *ngIf=\\\"group.get(config.name).errors?.minlength\\\">\\n    {{config.validator.minlength.message}}\\n  </mat-error>\\n  <!-- <mat-error *ngIf=\\\"group.get(config.name).email?.minlength\\\">\\n    {{config.validator.email.message}}\\n  </mat-error> -->\\n\\n  <!-- <div *ngIf=\\\"form.get(config.name).invalid && (form.get(config.name).dirty || form.get(config.name).touched)\\\" class=\\\"alert alert-danger\\\">\\n  </div> -->\\n\\n</mat-form-field>\\n\\n<!-- \\n\\n<div [formGroup]=\\\"formGroup\\\">\\n    <div class=\\\"field-wrapper\\\">\\n      <div [@filedAnimation]=\\\"mode\\\">\\n        <mat-form-field class=\\\"fit\\\" [(ngClass)]=\\\"mode\\\">\\n            <input matInput [matDatepicker]=\\\"_datepicker\\\" [placeholder]=\\\"placeholder\\\" [formControlName]=\\\"controlName\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"_datepicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #_datepicker></mat-datepicker>\\n            \\n          <mat-icon class=\\\"tooltip md-18\\\" *ngIf=\\\"tooltip\\\" [matTooltip]=\\\"tooltip\\\">help</mat-icon>\\n        </mat-form-field>\\n        <div class=\\\"value-box\\\"> \\n          <span class=\\\"name\\\">\\n            {{ placeholder }} :\\n          </span>\\n          <span class=\\\"value\\\">\\n            {{(DisplayValue$ | async | persianDate)}} \\n          </span>\\n          </div>\\n      </div>\\n    </div>\\n</div> -->\",\r\n                    styles: [\":host{display:block}.mat-form-field{width:100%}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DateFormInputControlComponent.ctorParameters = function () { return []; };\r\n    return DateFormInputControlComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FileFormInputControlComponent = /** @class */ (function () {\r\n    function FileFormInputControlComponent() {\r\n    }\r\n    FileFormInputControlComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"ngs-form-control-file\",\r\n                    template: \"<div fxFlexFill [formGroup]=\\\"group\\\">\\n\\n  <!-- <input matInput [id]=\\\"config.name\\\" [type]=\\\"config.inputType\\\" [placeholder]=\\\"config.title\\\" [formControlName]=\\\"config.name\\\"> -->\\n  <input [id]=\\\"config.name\\\" [type]=\\\"config.inputType\\\" [placeholder]=\\\"config.title\\\" [formControlName]=\\\"config.name\\\">\\n\\n  <mat-error *ngIf=\\\"group.get(config.name).errors?.required\\\">\\n    {{config.validator.required.message}}\\n  </mat-error>\\n  <mat-error *ngIf=\\\"group.get(config.name).errors?.minlength\\\">\\n    {{config.validator.minlength.message}}\\n  </mat-error>\\n  <!-- <mat-error *ngIf=\\\"group.get(config.name).email?.minlength\\\">\\n    {{config.validator.email.message}}\\n  </mat-error> -->\\n\\n  <!-- <div *ngIf=\\\"form.get(config.name).invalid && (form.get(config.name).dirty || form.get(config.name).touched)\\\" class=\\\"alert alert-danger\\\">\\n  </div> -->\\n\\n</div>\\n\\n<!-- \\n\\n<div [formGroup]=\\\"formGroup\\\">\\n    <div class=\\\"field-wrapper\\\">\\n      <div [@filedAnimation]=\\\"mode\\\">\\n        <mat-form-field class=\\\"fit\\\" [(ngClass)]=\\\"mode\\\">\\n            <input matInput [matDatepicker]=\\\"_datepicker\\\" [placeholder]=\\\"placeholder\\\" [formControlName]=\\\"controlName\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"_datepicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #_datepicker></mat-datepicker>\\n            \\n          <mat-icon class=\\\"tooltip md-18\\\" *ngIf=\\\"tooltip\\\" [matTooltip]=\\\"tooltip\\\">help</mat-icon>\\n        </mat-form-field>\\n        <div class=\\\"value-box\\\"> \\n          <span class=\\\"name\\\">\\n            {{ placeholder }} :\\n          </span>\\n          <span class=\\\"value\\\">\\n            {{(DisplayValue$ | async | persianDate)}} \\n          </span>\\n          </div>\\n      </div>\\n    </div>\\n</div> -->\",\r\n                    styles: [\":host{display:block}.mat-form-field{width:100%}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    FileFormInputControlComponent.ctorParameters = function () { return []; };\r\n    return FileFormInputControlComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FormCaptchaService = /** @class */ (function () {\r\n    function FormCaptchaService(http, store, configurationService) {\r\n        this.http = http;\r\n        this.store = store;\r\n        this.configurationService = configurationService;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormCaptchaService.prototype.getCaptcha = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        debugger;\r\n        return this.configurationService.config$.pipe(filter(function (captcha) { return captcha.endpoints.captchaUrl != \"\"; }), take(1), switchMap(function (captcha) {\r\n            return _this.http.get(captcha.env.server + captcha.endpoints.captchaUrl);\r\n        }), map(function (response) { return response.Result; }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormCaptchaService.prototype.sendCaptcha = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.getList != \"\"; }), switchMap(function (config) { return _this.http.get(config.env.server + config.endpoints.getList); }), map(function (response) { return response.Result; }));\r\n    };\r\n    FormCaptchaService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    FormCaptchaService.ctorParameters = function () { return [\r\n        { type: HttpClient },\r\n        { type: Store },\r\n        { type: FormConfigurationService }\r\n    ]; };\r\n    /** @nocollapse */ FormCaptchaService.ngInjectableDef = defineInjectable({ factory: function FormCaptchaService_Factory() { return new FormCaptchaService(inject(HttpClient), inject(Store), inject(FormConfigurationService)); }, token: FormCaptchaService, providedIn: \"root\" });\r\n    return FormCaptchaService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar CaptchaModel = /** @class */ (function () {\r\n    function CaptchaModel(_a) {\r\n        var _b = _a === void 0 ? {} : _a, captchaImg = _b.captchaImg, captchaCode = _b.captchaCode;\r\n        this.captchaImg = captchaImg + \"?\" + Math.random();\r\n        this.captchaCode = captchaCode || \"\";\r\n    }\r\n    return CaptchaModel;\r\n}());\r\nvar UpsertCaptchaApiModel;\r\n(function (UpsertCaptchaApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = {}; }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.Captcha.captchaCode;\r\n        };\r\n        return Request;\r\n    }());\r\n    UpsertCaptchaApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    UpsertCaptchaApiModel.Response = Response;\r\n})(UpsertCaptchaApiModel || (UpsertCaptchaApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FormCaptchaComponent = /** @class */ (function () {\r\n    function FormCaptchaComponent(service, store, configurationService) {\r\n        // this.captcha = new CaptchaModel({\r\n        // \tcaptchaImg: \"http://172.22.34.28:8001/api/authentication/captcha\"\r\n        // });\r\n        this.service = service;\r\n        this.store = store;\r\n        this.configurationService = configurationService;\r\n        this._captcha_generate();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormCaptchaComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        debugger;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormCaptchaComponent.prototype.refresh = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.captcha.captchaImg = this._captcha_generate() + (\"?\" + Math.random());\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormCaptchaComponent.prototype._captcha_generate = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.configurationService.config$.pipe(map(function (config) { return config.env.server + config.endpoints.captchaUrl; })).subscribe(function (captcha) {\r\n            _this.captcha = new CaptchaModel({\r\n                captchaImg: captcha\r\n            });\r\n        });\r\n    };\r\n    FormCaptchaComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"lib-form-captcha\",\r\n                    template: \"<div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start center\\\">\\n  <img [src]=\\\"captcha.captchaImg\\\" />\\n\\n  <button mat-icon-button color=\\\"primary\\\" (click)=\\\"refresh()\\\">\\n    <mat-icon>refresh</mat-icon>\\n  </button>\\n\\n  <div [formGroup]=\\\"group\\\">\\n    <mat-form-field fxFlex>\\n      <input matInput [id]=\\\"config.name\\\" [placeholder]=\\\"config.title\\\" [formControlName]=\\\"config.name\\\" />\\n    </mat-form-field>\\n  </div>\\n</div>\",\r\n                    styles: [\"img{border:1px solid #e4e4e4}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    FormCaptchaComponent.ctorParameters = function () { return [\r\n        { type: FormCaptchaService },\r\n        { type: Store },\r\n        { type: FormConfigurationService }\r\n    ]; };\r\n    return FormCaptchaComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FormViewComponent = /** @class */ (function () {\r\n    function FormViewComponent(service, compiler, resolver, store) {\r\n        var _this = this;\r\n        this.service = service;\r\n        this.compiler = compiler;\r\n        this.resolver = resolver;\r\n        this.store = store;\r\n        this.unsubscribe = new Subject();\r\n        this.accept = new EventEmitter();\r\n        this.cancel = new EventEmitter();\r\n        this.card = false;\r\n        this.formGroupCreated = false;\r\n        this.schema$ = new BehaviorSubject$1(undefined);\r\n        this.schema$.pipe(takeUntil(this.unsubscribe)).subscribe(function (schema) {\r\n            if (!schema)\r\n                return;\r\n            _this.formGroup = /** @type {?} */ (_this.createFrom(schema.form));\r\n            if (!schema.form.name)\r\n                return;\r\n            _this.formGroupCreated = true;\r\n        });\r\n    }\r\n    Object.defineProperty(FormViewComponent.prototype, \"id\", {\r\n        set: /**\r\n         * @param {?} id\r\n         * @return {?}\r\n         */\r\n        function (id) {\r\n            var _this = this;\r\n            if (!this.local)\r\n                this.store.dispatch(new GetFormSchemaAction(id));\r\n            this.service\r\n                .selectFormById(id)\r\n                .pipe(takeUntil(this.unsubscribe))\r\n                .subscribe(function (schema) { return _this.schema$.next(schema); });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FormViewComponent.prototype, \"schema\", {\r\n        set: /**\r\n         * @param {?} schema\r\n         * @return {?}\r\n         */\r\n        function (schema) {\r\n            this.schema$.next(schema);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormViewComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    };\r\n    /**\r\n     * @param {?} schema\r\n     * @return {?}\r\n     */\r\n    FormViewComponent.prototype.generate = /**\r\n     * @param {?} schema\r\n     * @return {?}\r\n     */\r\n    function (schema) {\r\n        this.schema$.next(schema);\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @param {?=} parentPath\r\n     * @return {?}\r\n     */\r\n    FormViewComponent.prototype.createFrom = /**\r\n     * @param {?} data\r\n     * @param {?=} parentPath\r\n     * @return {?}\r\n     */\r\n    function (data, parentPath) {\r\n        var _this = this;\r\n        if (parentPath === void 0) { parentPath = \"\"; }\r\n        if (data.type == \"control\") {\r\n            /** @type {?} */\r\n            var formGroupPath = void 0;\r\n            if (data.parentType == \"array\") ;\r\n            else if (data.parentType == \"group\") {\r\n                formGroupPath = parentPath;\r\n                parentPath = parentPath + \".controls.\" + ((/** @type {?} */ (data))).name;\r\n            }\r\n            /** @type {?} */\r\n            var validators = [];\r\n            if (data.validator.required && data.validator.required.active) {\r\n                validators.push(Validators.required);\r\n            }\r\n            if (data.validator.minlength && data.validator.minlength.active) {\r\n                validators.push(Validators.minLength(data.validator.minlength.value));\r\n            }\r\n            if (data.validator.email && data.validator.email.active) {\r\n                validators.push(Validators.email);\r\n            }\r\n            /** @type {?} */\r\n            var ctr = new FormControl(data.value, validators);\r\n            (/** @type {?} */ (ctr)).schema = data;\r\n            (/** @type {?} */ (ctr)).schema.path = parentPath;\r\n            (/** @type {?} */ (ctr)).schema.formGroupPath = formGroupPath;\r\n            return ctr;\r\n        }\r\n        else if (data.type == \"group\") {\r\n            /** @type {?} */\r\n            var formGroup_1 = new FormGroup({});\r\n            if (data.parentType == undefined) {\r\n                parentPath = (/** @type {?} */ (data)).name;\r\n            }\r\n            else if (data.parentType == \"array\") {\r\n                parentPath = parentPath + \".controls[\" + ((/** @type {?} */ (data))).name + \"]\";\r\n            }\r\n            else if (data.parentType == \"group\") {\r\n                parentPath = parentPath + \".controls.\" + ((/** @type {?} */ (data))).name;\r\n            }\r\n            (/** @type {?} */ (formGroup_1)).schema = data;\r\n            (/** @type {?} */ (formGroup_1)).schema.path = parentPath;\r\n            data.fields.forEach(function (item) {\r\n                item.parentType = \"group\";\r\n                formGroup_1.addControl(item.name, _this.createFrom(item, parentPath));\r\n            });\r\n            return formGroup_1;\r\n        }\r\n        else {\r\n            /** @type {?} */\r\n            var formArray_1 = new FormArray([]);\r\n            parentPath =\r\n                parentPath == \"\" ? (/** @type {?} */ (data)).name : parentPath + \".controls.\" + ((/** @type {?} */ (data))).name;\r\n            (/** @type {?} */ (formArray_1)).schema = data;\r\n            (/** @type {?} */ (formArray_1)).schema.path = parentPath;\r\n            data.fields.forEach(function (item, idx) {\r\n                item.parentType = \"array\";\r\n                item.name = idx.toString();\r\n                formArray_1.controls.push(_this.createFrom(item, parentPath));\r\n            });\r\n            return formArray_1;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormViewComponent.prototype.accepted = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.accept.emit(this.formGroup);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormViewComponent.prototype.canceled = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.cancel.emit(this.formGroup);\r\n    };\r\n    FormViewComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"ngs-form-view\",\r\n                    template: \"<div fxFlex=\\\"nogrow\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"main-container\\\">\\n  <form *ngIf=\\\"formGroupCreated && card\\\" class=\\\"ngs-dynamic-form\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"accepted()\\\">\\n    <mat-card>\\n      <mat-card-title>\\n        {{(schema$ | async)?.name}}\\n      </mat-card-title>\\n      <mat-card-content fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"25px\\\">\\n        <div *ngFor=\\\"let field of (schema$ | async)?.form.fields;\\\" [fxFlex]=\\\"field.width * 10\\\">\\n          <ng-container *ngIf=\\\"field && field.inputType\\\" dynamicField [config]=\\\"field\\\" [group]=\\\"formGroup\\\"></ng-container>\\n        </div>\\n      </mat-card-content>\\n      <mat-card-actions align=\\\"end\\\">\\n        <button type=\\\"button\\\" *ngIf=\\\"(schema$ | async)?.events.cancel.show\\\" (click)=\\\"cancel.emit()\\\" mat-button color=\\\"primary\\\">{{(schema$\\n          | async)?.events.cancel.text}}</button>\\n        <button type=\\\"submit\\\" *ngIf=\\\"(schema$ | async)?.events.accept.show\\\" mat-raised-button color=\\\"primary\\\">{{(schema$\\n          | async)?.events.accept.text}}</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </form>\\n  <form *ngIf=\\\"formGroupCreated && !card\\\" class=\\\"ngs-dynamic-form\\\" [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"accepted()\\\">\\n    <div>\\n      <h3>\\n        {{(schema$ | async)?.name}}\\n      </h3>\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"5px\\\">\\n        <div *ngFor=\\\"let field of (schema$ | async)?.form.fields;\\\" [fxFlex]=\\\"field.width * 10\\\">\\n          <ng-container dynamicField [config]=\\\"field\\\" [group]=\\\"formGroup\\\"></ng-container>\\n        </div>\\n      </div>\\n      <div>\\n        <button type=\\\"button\\\" *ngIf=\\\"(schema$ | async)?.events.cancel.show\\\" (click)=\\\"cancel.emit()\\\" mat-button color=\\\"primary\\\">{{(schema$\\n          | async)?.events.cancel.text}}</button>\\n        <button type=\\\"submit\\\" *ngIf=\\\"(schema$ | async)?.events.accept.show\\\" mat-raised-button color=\\\"primary\\\">{{(schema$\\n          | async)?.events.accept.text}}</button>\\n      </div>\\n    </div>\\n  </form>\\n\\n</div>\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    FormViewComponent.ctorParameters = function () { return [\r\n        { type: FormService },\r\n        { type: Compiler },\r\n        { type: ComponentFactoryResolver },\r\n        { type: Store }\r\n    ]; };\r\n    FormViewComponent.propDecorators = {\r\n        accept: [{ type: Output }],\r\n        cancel: [{ type: Output }],\r\n        local: [{ type: Input }],\r\n        card: [{ type: Input }],\r\n        id: [{ type: Input }],\r\n        schema: [{ type: Input }]\r\n    };\r\n    return FormViewComponent;\r\n}());\r\n/** @type {?} */\r\nvar components = {\r\n    checkbox: CheckboxComponent,\r\n    text: TextComponent,\r\n    password: TextComponent,\r\n    date: DateFormInputControlComponent,\r\n    file: FileFormInputControlComponent,\r\n    table: TableComponent,\r\n    color: ColorComponent,\r\n    email: EmailComponent,\r\n    captcha: FormCaptchaComponent,\r\n    select: SelectComponent\r\n};\r\nvar DynamicFieldDirective = /** @class */ (function () {\r\n    function DynamicFieldDirective(resolver, container) {\r\n        this.resolver = resolver;\r\n        this.container = container;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DynamicFieldDirective.prototype.ngOnChanges = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        debugger;\r\n        if (this.component) {\r\n            this.component.instance.config = this.config;\r\n            this.component.instance.group = this.group;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DynamicFieldDirective.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        debugger;\r\n        if (this.config.inputType == undefined)\r\n            return;\r\n        if (!components[this.config.inputType]) {\r\n            /** @type {?} */\r\n            var supportedTypes = Object.keys(components).join(\", \");\r\n            throw new Error(\"Trying to use an unsupported type (\" + this.config.inputType + \").\\n\\t\\t  Supported types: \" + supportedTypes);\r\n        }\r\n        /** @type {?} */\r\n        var component = this.resolver.resolveComponentFactory(components[this.config.inputType]);\r\n        this.component = this.container.createComponent(component);\r\n        this.component.instance.config = this.config;\r\n        this.component.instance.group = this.group;\r\n    };\r\n    DynamicFieldDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: \"[dynamicField]\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DynamicFieldDirective.ctorParameters = function () { return [\r\n        { type: ComponentFactoryResolver },\r\n        { type: ViewContainerRef }\r\n    ]; };\r\n    DynamicFieldDirective.propDecorators = {\r\n        config: [{ type: Input }],\r\n        group: [{ type: Input }]\r\n    };\r\n    return DynamicFieldDirective;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar initialState = {\r\n    status: \"pristine\",\r\n    data: []\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction reducer(state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    switch (action.type) {\r\n        case FormsListActionTypes.FORMS_LIST: {\r\n            return __assign({}, state, { status: \"dirty\" });\r\n        }\r\n        case FormsListActionTypes.FORMS_LIST_START: {\r\n            return __assign({}, state, { status: \"pending\" });\r\n        }\r\n        case FormsListActionTypes.FORMS_LIST_SUCCEED: {\r\n            return __assign({}, state, { data: action.payload, status: \"succeed\" });\r\n        }\r\n        case FormsListActionTypes.FORMS_LIST_FAILED: {\r\n            return __assign({}, state, { status: \"failed\" });\r\n        }\r\n        case FormsListActionTypes.FORM_SCHEMA_UPDATE: {\r\n            /** @type {?} */\r\n            var data = state.data.concat();\r\n            /** @type {?} */\r\n            var entityIdx = state.data.findIndex(function (form) { return form._id == action.payload._id; });\r\n            if (entityIdx > -1) {\r\n                data[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n            }\r\n            else {\r\n                data.push(action.payload);\r\n            }\r\n            return __assign({}, state, { data: data });\r\n        }\r\n        case FormsListActionTypes.ADD_FORM_SCHEMA: {\r\n            /** @type {?} */\r\n            var data = state.data.concat();\r\n            /** @type {?} */\r\n            var entityIdx = state.data.findIndex(function (form) { return form._id == action.payload._id; });\r\n            if (entityIdx > -1) {\r\n                data[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n            }\r\n            else {\r\n                data.push(action.payload);\r\n            }\r\n            return __assign({}, state, { data: data });\r\n        }\r\n        case FormsListActionTypes.FORM_SCHEMA_FETCHED: {\r\n            /** @type {?} */\r\n            var data = state.data.concat();\r\n            /** @type {?} */\r\n            var entityIdx = state.data.findIndex(function (form) { return form._id == action.payload._id; });\r\n            if (entityIdx > -1) {\r\n                data[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n            }\r\n            else {\r\n                data.push(action.payload);\r\n            }\r\n            return __assign({}, state, { data: data });\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar FormReducers = {\r\n    list: reducer\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FormGroupComponent = /** @class */ (function () {\r\n    function FormGroupComponent() {\r\n        this.noHeader = false;\r\n        this.changes = new EventEmitter();\r\n        this.delete = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormGroupComponent.prototype.changed = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.changes.emit();\r\n    };\r\n    /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    FormGroupComponent.prototype.addFormGroup = /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    function (root) {\r\n        /** @type {?} */\r\n        var group = new FieldConfig(\"group\");\r\n        group.fields = [];\r\n        root.fields.push(group);\r\n        this.schema.id = this.schema.id + 1;\r\n        return group;\r\n    };\r\n    /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    FormGroupComponent.prototype.addFormArray = /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    function (root) {\r\n        /** @type {?} */\r\n        var array = new FieldConfig(\"array\");\r\n        array.fields = [];\r\n        root.fields.push(array);\r\n        return array;\r\n    };\r\n    /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    FormGroupComponent.prototype.addFormControl = /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    function (root) {\r\n        /** @type {?} */\r\n        var control = new FieldConfig(\"control\");\r\n        root.fields.push(control);\r\n        return control;\r\n    };\r\n    /**\r\n     * @param {?} idx\r\n     * @return {?}\r\n     */\r\n    FormGroupComponent.prototype.deleteFormGroup = /**\r\n     * @param {?} idx\r\n     * @return {?}\r\n     */\r\n    function (idx) {\r\n        this.schema.fields.splice(idx, 1);\r\n    };\r\n    FormGroupComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"app-form-group\",\r\n                    template: \"<div>\\n\\n  <mat-form-field *ngIf=\\\"!noHeader\\\">\\n    <input matInput [(ngModel)]=\\\"schema.name\\\" placeholder=\\\"Name\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field *ngIf=\\\"!noHeader\\\">\\n    <input matInput [(ngModel)]=\\\"schema.title\\\" placeholder=\\\"\\u0639\\u0646\\u0648\\u0627\\u0646\\\">\\n  </mat-form-field>\\n\\n  <div class=\\\"button-row\\\">\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"addFormGroup(schema)\\\"> addFormGroup </button>\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"addFormArray(schema)\\\"> addFormArray </button>\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"addFormControl(schema)\\\">addFormControl</button>\\n  </div>\\n\\n  <div *ngFor=\\\"let field of schema.fields;let i = index\\\">\\n    <div [ngSwitch]=\\\"field.type\\\">\\n      <app-form-group *ngSwitchCase=\\\"'group'\\\" [schema]=\\\"field\\\" (change)=\\\"changed()\\\"></app-form-group>\\n      <!-- <app-form-array *ngSwitchCase=\\\"'array'\\\" [schema]=\\\"field\\\" (change)=\\\"changed()\\\"></app-form-array> -->\\n      <app-form-control *ngSwitchCase=\\\"'control'\\\" [schema]=\\\"field\\\" (changes)=\\\"changed()\\\" (delete)=\\\"deleteFormGroup(i)\\\"></app-form-control>\\n    </div>\\n  </div>\\n</div>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    FormGroupComponent.ctorParameters = function () { return []; };\r\n    FormGroupComponent.propDecorators = {\r\n        schema: [{ type: Input }],\r\n        noHeader: [{ type: Input }],\r\n        changes: [{ type: Output }],\r\n        delete: [{ type: Output }]\r\n    };\r\n    return FormGroupComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FormArrayComponent = /** @class */ (function () {\r\n    function FormArrayComponent() {\r\n        this.changes = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormArrayComponent.prototype.changed = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.changes.emit();\r\n    };\r\n    /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    FormArrayComponent.prototype.addFormGroup = /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    function (root) {\r\n        /** @type {?} */\r\n        var group = new FieldConfig(\"group\");\r\n        group.fields = [];\r\n        root.fields.push(group);\r\n        return group;\r\n    };\r\n    /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    FormArrayComponent.prototype.addFormArray = /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    function (root) {\r\n        /** @type {?} */\r\n        var array = new FieldConfig(\"array\");\r\n        array.fields = [];\r\n        root.fields.push(array);\r\n        return array;\r\n    };\r\n    /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    FormArrayComponent.prototype.addFormControl = /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    function (root) {\r\n        /** @type {?} */\r\n        var control = new FieldConfig(\"control\");\r\n        root.fields.push(control);\r\n        return control;\r\n    };\r\n    FormArrayComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"app-form-array\",\r\n                    template: \"<mat-card>\\n  <mat-card-content>\\n    <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"schema.name\\\" placeholder=\\\"Name\\\">\\n    </mat-form-field>\\n      \\n    <div class=\\\"button-row\\\">\\n      <button mat-button color=\\\"primary\\\" (click)=\\\"addFormGroup(schema)\\\">addFormGroup</button>\\n      <button mat-button color=\\\"primary\\\" (click)=\\\"addFormArray(schema)\\\">addFormArray</button>\\n      <!-- <button mat-button color=\\\"primary\\\" (click)=\\\"addFormControl(schema)\\\">addFormControl</button> -->\\n    </div>\\n    \\n    <div *ngFor=\\\"let field of schema.fields\\\">\\n      <div [ngSwitch]=\\\"field.type\\\">\\n        <app-form-group *ngSwitchCase=\\\"'group'\\\" [schema]=\\\"field\\\" (changes)=\\\"changed()\\\"></app-form-group>\\n        <app-form-array *ngSwitchCase=\\\"'array'\\\" [schema]=\\\"field\\\" (changes)=\\\"changed()\\\"></app-form-array>\\n        <!-- <app-form-control *ngSwitchCase=\\\"'control'\\\" [schema]=\\\"field\\\" (change)=\\\"changed($event)\\\"></app-form-control> -->\\n      </div>\\n    </div>\\n    \\n  </mat-card-content>\\n</mat-card>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    FormArrayComponent.ctorParameters = function () { return []; };\r\n    FormArrayComponent.propDecorators = {\r\n        schema: [{ type: Input }],\r\n        changes: [{ type: Output }]\r\n    };\r\n    return FormArrayComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FormControlComponent = /** @class */ (function () {\r\n    function FormControlComponent() {\r\n        this.changes = new EventEmitter();\r\n        this.delete = new EventEmitter();\r\n        this.width = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n        this.options = new FormArray([\r\n            new FormGroup({\r\n                key: new FormControl(),\r\n                value: new FormControl()\r\n            })\r\n        ]);\r\n        this.tableOptions = new FormGroup({\r\n            dataEndpoint: new FormControl(\"\")\r\n        });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormControlComponent.prototype.changed = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if ([this.schema.name, this.schema.title, this.schema.inputType].some(function (item) { return !item; }))\r\n            return true;\r\n        if (this.schema.inputType == \"table\") {\r\n            this.schema.options = this.tableOptions.value;\r\n        }\r\n        else if (this.schema.inputType == \"select\") {\r\n            this.schema.options = this.options.value;\r\n        }\r\n        this.changes.emit();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormControlComponent.prototype.addOption = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.options.push(new FormGroup({\r\n            key: new FormControl(),\r\n            value: new FormControl()\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} i\r\n     * @return {?}\r\n     */\r\n    FormControlComponent.prototype.removeOption = /**\r\n     * @param {?} i\r\n     * @return {?}\r\n     */\r\n    function (i) {\r\n        this.options.controls.splice(i, 1);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormControlComponent.prototype.insertOptions = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.schema.options = this.options.value;\r\n    };\r\n    FormControlComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"app-form-control\",\r\n                    template: \"<mat-expansion-panel>\\n  <mat-expansion-panel-header>\\n    <mat-panel-title fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n      <button mat-icon-button (click)=\\\"delete.emit()\\\">\\n        <mat-icon aria-label=\\\"icon-button\\\">delete_forever</mat-icon>\\n      </button>\\n      <span>{{schema.name}}</span>\\n\\n    </mat-panel-title>\\n  </mat-expansion-panel-header>\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10px\\\">\\n    <mat-form-field fxFlex>\\n      <input matInput [(ngModel)]=\\\"schema.name\\\" (change)=\\\"changed()\\\" placeholder=\\\"Name\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex>\\n      <input matInput [(ngModel)]=\\\"schema.title\\\" (change)=\\\"changed()\\\" placeholder=\\\"Placeholder\\\" />\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex>\\n      <mat-select [(ngModel)]=\\\"schema.inputType\\\" (change)=\\\"changed()\\\" placeholder=\\\"Input Type\\\">\\n        <mat-option value=\\\"table\\\">table</mat-option>\\n        <mat-option value=\\\"select\\\">select</mat-option>\\n        <mat-option value=\\\"text\\\">text</mat-option>\\n        <mat-option value=\\\"number\\\">number</mat-option>\\n        <mat-option value=\\\"email\\\">email</mat-option>\\n        <mat-option value=\\\"color\\\">color</mat-option>\\n        <mat-option value=\\\"radio\\\">radio</mat-option>\\n        <mat-option value=\\\"checkbox\\\">checkbox</mat-option>\\n        <mat-option value=\\\"checkbox\\\">captcha</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n  <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10px\\\">\\n    <mat-form-field fxFlex>\\n      <input matInput [(ngModel)]=\\\"schema.value\\\" (change)=\\\"changed()\\\" placeholder=\\\"Value\\\" />\\n    </mat-form-field>\\n\\n    <mat-form-field fxFlex>\\n      <mat-select [(ngModel)]=\\\"schema.width\\\" (change)=\\\"changed()\\\" placeholder=\\\"width\\\">\\n        <mat-option *ngFor=\\\"let item of width\\\" [value]=\\\"item\\\">{{item}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n  <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n    <div *ngIf=\\\"schema.inputType=='table'\\\" [formGroup]=\\\"tableOptions\\\">\\n      <mat-form-field>\\n        <input matInput (change)=\\\"changed()\\\" formControlName=\\\"dataEndpoint\\\" placeholder=\\\"dataEndpoint\\\" />\\n      </mat-form-field>\\n    </div>\\n\\n    <div *ngIf=\\\"schema.inputType=='select'\\\">\\n      [options]\\n      <button (click)=\\\"addOption()\\\">+</button>\\n      <button (click)=\\\"insertOptions()\\\">insert</button>\\n      <div *ngFor=\\\"let option of options.controls;index as i\\\">\\n        {{i}}\\n        <div [formGroup]=\\\"options.controls[i]\\\">\\n          <mat-form-field>\\n            <input matInput (change)=\\\"changed()\\\" formControlName=\\\"key\\\" placeholder=\\\"key\\\" />\\n          </mat-form-field>\\n          <mat-form-field>\\n            <input matInput (change)=\\\"changed()\\\" formControlName=\\\"value\\\" placeholder=\\\"value\\\" />\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <br />\\n    <mat-card fxLayout=\\\"column\\\">\\n      <mat-slide-toggle (change)=\\\"changed()\\\" [(ngModel)]=\\\"schema.validator.required.active\\\">\\u0627\\u062C\\u0628\\u0627\\u0631\\u06CC</mat-slide-toggle>\\n      <mat-form-field>\\n        <input matInput (change)=\\\"changed()\\\" [(ngModel)]=\\\"schema.validator.required.message\\\" placeholder=\\\"\\u067E\\u06CC\\u063A\\u0627\\u0645\\\" />\\n      </mat-form-field>\\n    </mat-card>\\n    <mat-card fxLayout=\\\"column\\\">\\n      <mat-slide-toggle (change)=\\\"changed()\\\" [(ngModel)]=\\\"schema.validator.email.active\\\">\\u0627\\u06CC\\u0645\\u06CC\\u0644</mat-slide-toggle>\\n      <mat-form-field>\\n        <input matInput (change)=\\\"changed()\\\" [(ngModel)]=\\\"schema.validator.email.message\\\" placeholder=\\\"\\u067E\\u06CC\\u063A\\u0627\\u0645\\\" />\\n      </mat-form-field>\\n    </mat-card>\\n    <mat-card fxLayout=\\\"column\\\">\\n      <mat-slide-toggle (change)=\\\"changed()\\\" [(ngModel)]=\\\"schema.validator.minlength.active\\\">\\u062D\\u062F\\u0627\\u0642\\u0644 \\u062A\\u0639\\u062F\\u0627\\u062F \\u06A9\\u0627\\u0631\\u0627\\u06A9\\u062A\\u0631</mat-slide-toggle>\\n      <mat-form-field>\\n        <input matInput (change)=\\\"changed()\\\" [(ngModel)]=\\\"schema.validator.minlength.message\\\" placeholder=\\\"\\u067E\\u06CC\\u063A\\u0627\\u0645\\\" />\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput (change)=\\\"changed()\\\" [(ngModel)]=\\\"schema.validator.minlength.value\\\" placeholder=\\\"\\u062A\\u0639\\u062F\\u0627\\u062F \\u062D\\u062F\\u0627\\u0642\\u0644 \\u06A9\\u0627\\u0631\\u0627\\u06A9\\u062A\\u0631\\\" />\\n      </mat-form-field>\\n    </mat-card>\\n  </div>\\n</mat-expansion-panel>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    FormControlComponent.ctorParameters = function () { return []; };\r\n    FormControlComponent.propDecorators = {\r\n        schema: [{ type: Input }],\r\n        changes: [{ type: Output }],\r\n        delete: [{ type: Output }]\r\n    };\r\n    return FormControlComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar EditFormActionTypes = {\r\n    EDIT_FORM: \"[FORM][EDIT] EDIT_FORM\",\r\n    EDIT_FORM_START: \"[FORM][EDIT] EDIT_FORM_START\",\r\n    EDIT_FORM_SUCCEED: \"[FORM][EDIT] EDIT_FORM_SUCCEED\",\r\n    EDIT_FORM_FAILED: \"[FORM][EDIT] EDIT_FORM_FAILED\",\r\n};\r\nvar EditFormAction = /** @class */ (function () {\r\n    function EditFormAction(payload) {\r\n        this.payload = payload;\r\n        this.type = EditFormActionTypes.EDIT_FORM;\r\n    }\r\n    return EditFormAction;\r\n}());\r\nvar EditFormStartAction = /** @class */ (function () {\r\n    function EditFormStartAction(payload) {\r\n        this.payload = payload;\r\n        this.type = EditFormActionTypes.EDIT_FORM_START;\r\n    }\r\n    return EditFormStartAction;\r\n}());\r\nvar EditFormSucceedAction = /** @class */ (function () {\r\n    function EditFormSucceedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = EditFormActionTypes.EDIT_FORM_SUCCEED;\r\n    }\r\n    return EditFormSucceedAction;\r\n}());\r\nvar EditFormFailedAction = /** @class */ (function () {\r\n    function EditFormFailedAction() {\r\n        this.type = EditFormActionTypes.EDIT_FORM_FAILED;\r\n    }\r\n    return EditFormFailedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar AddFormActionTypes = {\r\n    ADD_FORM: \"[FORM][ADD] ADD_FORM_PROFILE\",\r\n    ADD_FORM_START: \"[FORM][ADD] ADD_FORM_START\",\r\n    ADD_FORM_SUCCEED: \"[FORM][ADD] ADD_FORM_SUCCEED\",\r\n    ADD_FORM_FAILED: \"[FORM][ADD] ADD_FORM_FAILED\",\r\n};\r\nvar AddFormAction = /** @class */ (function () {\r\n    function AddFormAction(payload) {\r\n        this.payload = payload;\r\n        this.type = AddFormActionTypes.ADD_FORM;\r\n    }\r\n    return AddFormAction;\r\n}());\r\nvar AddFormStartAction = /** @class */ (function () {\r\n    function AddFormStartAction(payload) {\r\n        this.payload = payload;\r\n        this.type = AddFormActionTypes.ADD_FORM_START;\r\n    }\r\n    return AddFormStartAction;\r\n}());\r\nvar AddFormSucceedAction = /** @class */ (function () {\r\n    function AddFormSucceedAction() {\r\n        this.type = AddFormActionTypes.ADD_FORM_SUCCEED;\r\n    }\r\n    return AddFormSucceedAction;\r\n}());\r\nvar AddFormFailedAction = /** @class */ (function () {\r\n    function AddFormFailedAction() {\r\n        this.type = AddFormActionTypes.ADD_FORM_FAILED;\r\n    }\r\n    return AddFormFailedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar AddFormContainerComponent = /** @class */ (function () {\r\n    function AddFormContainerComponent(store, service) {\r\n        this.store = store;\r\n        this.service = service;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AddFormContainerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.schema = new FormSchemaModel();\r\n        this.schema.init();\r\n        this.store.dispatch(new AddFormSchemaAction(this.schema));\r\n    };\r\n    /**\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    AddFormContainerComponent.prototype.add = /**\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    function (form) {\r\n        this.store.dispatch(new AddFormAction(form));\r\n    };\r\n    /**\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    AddFormContainerComponent.prototype.update_schema = /**\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    function (form) {\r\n        this.store.dispatch(new UpdateFormSchemaAction(form));\r\n    };\r\n    AddFormContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<ngs-form-add \\n\\t\\t\\t\\t\\t[schema]=\\\"schema\\\" \\n\\t\\t\\t\\t\\t(changes)=\\\"update_schema($event)\\\" \\n\\t\\t\\t\\t\\t(submited)=add($event)\\n\\t\\t\\t\\t></ngs-form-add>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    AddFormContainerComponent.ctorParameters = function () { return [\r\n        { type: Store },\r\n        { type: FormService }\r\n    ]; };\r\n    return AddFormContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar EditFormContainerComponent = /** @class */ (function (_super) {\r\n    __extends(EditFormContainerComponent, _super);\r\n    function EditFormContainerComponent(service, route, store) {\r\n        var _this = _super.call(this, store, service) || this;\r\n        _this.service = service;\r\n        _this.route = route;\r\n        _this.store = store;\r\n        _this.formGroup = EditFormApiModel.Request.formGroup;\r\n        return _this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    EditFormContainerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.route.params\r\n            .map(function (params) { return params[\"_id\"]; })\r\n            .subscribe(function (id) { return _this.store.dispatch(new GetFormSchemaAction(id)); });\r\n        this.route.params\r\n            .map(function (params) { return params[\"_id\"]; })\r\n            .switchMap(function (id) { return _this.service.selectFormById(id); })\r\n            .filter(function (data) { return data != null; })\r\n            .take(1)\r\n            .subscribe(function (formSchema) {\r\n            _this.schema = formSchema;\r\n            _this.formGroup.patchValue(formSchema);\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    EditFormContainerComponent.prototype.update = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        this.store.dispatch(new EditFormAction(data));\r\n    };\r\n    EditFormContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<edit-form\\n\\t\\t\\t\\t\\t[formGroup]=\\\"formGroup\\\"\\n\\t\\t\\t\\t\\t[schema]=\\\"schema\\\"\\n\\t\\t\\t\\t\\t(changes)=\\\"update_schema($event)\\\"\\n\\t\\t\\t\\t\\t(submited)=\\\"update($event)\\\">\\n\\t\\t\\t\\t</edit-form>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    EditFormContainerComponent.ctorParameters = function () { return [\r\n        { type: FormService },\r\n        { type: ActivatedRoute },\r\n        { type: Store }\r\n    ]; };\r\n    return EditFormContainerComponent;\r\n}(AddFormContainerComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar AddFormComponent = /** @class */ (function () {\r\n    function AddFormComponent() {\r\n        this.formGroup = AddFormApiModel.Request.formGroup;\r\n        this.submited = new EventEmitter();\r\n        this.changes = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AddFormComponent.prototype.emit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.formGroup.patchValue({ form: this.schema.form });\r\n        this.submited.emit(this.formGroup.value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    AddFormComponent.prototype.changed = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.formGroup.patchValue({ form: this.schema.form });\r\n        this.changes.emit(this.formGroup.value);\r\n    };\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    AddFormComponent.prototype.changeOrder = /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    function ($event) { };\r\n    /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    AddFormComponent.prototype.addFormGroup = /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    function (root) {\r\n        /** @type {?} */\r\n        var group = new FieldConfig(\"group\");\r\n        group.fields = [];\r\n        root.fields.push(group);\r\n        return group;\r\n    };\r\n    /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    AddFormComponent.prototype.addFormArray = /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    function (root) {\r\n        /** @type {?} */\r\n        var array = new FieldConfig(\"array\");\r\n        array.fields = [];\r\n        root.fields.push(array);\r\n        return array;\r\n    };\r\n    /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    AddFormComponent.prototype.addFormControl = /**\r\n     * @param {?} root\r\n     * @return {?}\r\n     */\r\n    function (root) {\r\n        /** @type {?} */\r\n        var control = new FieldConfig(\"control\");\r\n        root.fields.push(control);\r\n        return control;\r\n    };\r\n    AddFormComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"ngs-form-add\",\r\n                    template: \"<div fxLayout=\\\"row\\\" *ngIf=\\\"schema\\\">\\n  <div [fxFlex]=\\\"50\\\" *ngIf=\\\"formGroup\\\">\\n    <form [formGroup]=\\\"formGroup\\\">\\n      <mat-card>\\n        <mat-card-title>\\u0627\\u06CC\\u062C\\u0627\\u062F \\u0641\\u0631\\u0645 \\u062C\\u062F\\u06CC\\u062F</mat-card-title>\\n        <mat-card-content>\\n          <mat-form-field>\\n            <input type=\\\"text\\\" matInput (change)=\\\"changed()\\\" placeholder=\\\"\\u0646\\u0627\\u0645 \\u0641\\u0631\\u0645\\\" formControlName=\\\"name\\\">\\n          </mat-form-field>\\n          <!-- <div class=\\\"button-row\\\">\\n                <button mat-button color=\\\"primary\\\" (click)=\\\"addFormGroup(schema.form)\\\">Add form group</button>\\n                <button mat-button color=\\\"primary\\\" (click)=\\\"addFormArray(schema.form)\\\">Add form array</button>\\n                <button mat-button color=\\\"primary\\\" (click)=\\\"addFormControl(schema.form)\\\">Add form control</button>\\n              </div> -->\\n        </mat-card-content>\\n      </mat-card>\\n      <mat-card>\\n        <mat-card-content>\\n          <div [ngSwitch]=\\\"schema.form?.type\\\">\\n            <app-form-group *ngSwitchCase=\\\"'group'\\\" [schema]=\\\"schema.form\\\" noHeader=\\\"true\\\" (changes)=\\\"changed()\\\"></app-form-group>\\n            <app-form-array *ngSwitchCase=\\\"'array'\\\" [schema]=\\\"schema.form\\\" (changes)=\\\"changed()\\\"></app-form-array>\\n          </div>\\n        </mat-card-content>\\n        <mat-card-actions>\\n          <!-- <button mat-raised-button color=\\\"primary\\\" (click)=\\\"form.generate(schema)\\\">\\u0627\\u06CC\\u062C\\u0627\\u062F \\u0641\\u0631\\u0645</button> -->\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"emit()\\\" type=\\\"submit\\\">\\u062B\\u0628\\u062A</button>\\n        </mat-card-actions>\\n\\n        <div [formGroup]=\\\"$any(formGroup.controls.events).controls.accept\\\">\\n          <mat-slide-toggle (change)=\\\"changed()\\\" formControlName=\\\"show\\\">\\u0646\\u0645\\u0627\\u06CC\\u0634 \\u062A\\u0627\\u06CC\\u06CC\\u062F</mat-slide-toggle>\\n          <mat-form-field>\\n            <input type=\\\"text\\\" (change)=\\\"changed()\\\" matInput placeholder=\\\"\\u0645\\u062A\\u0646 \\u062A\\u0627\\u06CC\\u06CC\\u062F\\\" formControlName=\\\"text\\\">\\n          </mat-form-field>\\n        </div>\\n        <div [formGroup]=\\\"$any(formGroup.controls.events).controls.cancel\\\">\\n          <mat-slide-toggle (change)=\\\"changed()\\\" formControlName=\\\"show\\\">\\u0646\\u0645\\u0627\\u06CC\\u0634 \\u0627\\u0646\\u0635\\u0631\\u0627\\u0641</mat-slide-toggle>\\n          <mat-form-field>\\n            <input type=\\\"text\\\" (change)=\\\"changed()\\\" matInput placeholder=\\\"\\u0645\\u062A\\u0646 \\u0627\\u0646\\u0635\\u0631\\u0627\\u0641\\\" formControlName=\\\"text\\\">\\n          </mat-form-field>\\n        </div>\\n\\n      </mat-card>\\n    </form>\\n  </div>\\n  <div [fxFlex]=\\\"50\\\">\\n    <ngs-form-view [local]='true' [id]=\\\"schema._id\\\"></ngs-form-view>\\n  </div>\\n</div>\"\r\n                },] },\r\n    ];\r\n    AddFormComponent.propDecorators = {\r\n        schema: [{ type: Input }],\r\n        formGroup: [{ type: Input }],\r\n        submited: [{ type: Output }],\r\n        changes: [{ type: Output }]\r\n    };\r\n    return AddFormComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar EditFormComponent = /** @class */ (function (_super) {\r\n    __extends(EditFormComponent, _super);\r\n    function EditFormComponent() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    EditFormComponent.prototype.emit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.formGroup.valid)\r\n            return;\r\n        return this.submited.emit(this.formGroup.value);\r\n    };\r\n    EditFormComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"edit-form\",\r\n                    template: \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"25px\\\" class=\\\"main-container\\\">\\n\\n  <div class=\\\"content-action\\\">\\n    <mat-card fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start\\\" class=\\\"with-sticky-action\\\">\\n      <div fxLayout=\\\"row wrap\\\" *ngIf=\\\"schema\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutAlign.lt-md=\\\"center\\\">\\n        <div fxFlex.gt-md=\\\"50\\\" fxFlex.lt-md=\\\"100\\\" *ngIf=\\\"formGroup\\\">\\n          <form [formGroup]=\\\"formGroup\\\">\\n            <mat-card>\\n              <mat-card-title>\\u0627\\u06CC\\u062C\\u0627\\u062F \\u0641\\u0631\\u0645 \\u062C\\u062F\\u06CC\\u062F</mat-card-title>\\n              <mat-card-content>\\n                <mat-form-field>\\n                  <input type=\\\"text\\\" matInput (change)=\\\"changed()\\\" placeholder=\\\"\\u0646\\u0627\\u0645 \\u0641\\u0631\\u0645\\\" formControlName=\\\"name\\\">\\n                </mat-form-field>\\n                <!-- <div class=\\\"button-row\\\">\\n                <button mat-button color=\\\"primary\\\" (click)=\\\"addFormGroup(schema.form)\\\">Add form group</button>\\n                <button mat-button color=\\\"primary\\\" (click)=\\\"addFormArray(schema.form)\\\">Add form array</button>\\n                <button mat-button color=\\\"primary\\\" (click)=\\\"addFormControl(schema.form)\\\">Add form control</button>\\n              </div> -->\\n                <mat-divider></mat-divider>\\n                <div [ngSwitch]=\\\"schema.form?.type\\\" class=\\\"schema-form\\\">\\n                  <app-form-group *ngSwitchCase=\\\"'group'\\\" [schema]=\\\"schema.form\\\" noHeader=\\\"true\\\" (changes)=\\\"changed()\\\"></app-form-group>\\n                  <app-form-array *ngSwitchCase=\\\"'array'\\\" [schema]=\\\"schema.form\\\" (changes)=\\\"changed()\\\"></app-form-array>\\n                </div>\\n\\n                <mat-divider></mat-divider>\\n                <div class=\\\"form-buttons\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10px\\\">\\n\\n                  <div fxLayout=\\\"column\\\" [formGroup]=\\\"$any(formGroup.controls.events).controls.accept\\\">\\n                    <mat-slide-toggle (change)=\\\"changed()\\\" formControlName=\\\"show\\\">\\u0646\\u0645\\u0627\\u06CC\\u0634 \\u062A\\u0627\\u06CC\\u06CC\\u062F</mat-slide-toggle>\\n                    <mat-form-field>\\n                      <input type=\\\"text\\\" (change)=\\\"changed()\\\" matInput placeholder=\\\"\\u0645\\u062A\\u0646 \\u062A\\u0627\\u06CC\\u06CC\\u062F\\\" formControlName=\\\"text\\\">\\n                    </mat-form-field>\\n                  </div>\\n                  <div fxLayout=\\\"column\\\" [formGroup]=\\\"$any(formGroup.controls.events).controls.cancel\\\">\\n                    <mat-slide-toggle (change)=\\\"changed()\\\" formControlName=\\\"show\\\">\\u0646\\u0645\\u0627\\u06CC\\u0634 \\u0627\\u0646\\u0635\\u0631\\u0627\\u0641</mat-slide-toggle>\\n                    <mat-form-field>\\n                      <input type=\\\"text\\\" (change)=\\\"changed()\\\" matInput placeholder=\\\"\\u0645\\u062A\\u0646 \\u0627\\u0646\\u0635\\u0631\\u0627\\u0641\\\" formControlName=\\\"text\\\">\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n\\n\\n                <mat-card-actions>\\n                  <!-- <button mat-raised-button color=\\\"primary\\\" (click)=\\\"$any(form).generate(schema)\\\">\\u0627\\u06CC\\u062C\\u0627\\u062F \\u0641\\u0631\\u0645</button> -->\\n                  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"emit()\\\" type=\\\"submit\\\">\\u062B\\u0628\\u062A</button>\\n                </mat-card-actions>\\n\\n              </mat-card-content>\\n            </mat-card>\\n          </form>\\n        </div>\\n        <div fxFlex.gt-md=\\\"50\\\" fxFlex.lt-md=\\\"100\\\" fxLayoutAlign=\\\"center start\\\">\\n          <ngs-form-view [local]='true' [id]=\\\" schema._id\\\">\\n          </ngs-form-view>\\n\\n        </div>\\n      </div>\\n    </mat-card>\\n  </div>\\n</div>\",\r\n                    styles: [\".form-buttons,.schema-form{padding:25px 10px}\"]\r\n                },] },\r\n    ];\r\n    EditFormComponent.propDecorators = {\r\n        schema: [{ type: Input }]\r\n    };\r\n    return EditFormComponent;\r\n}(AddFormComponent));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FormListContainerComponent = /** @class */ (function () {\r\n    function FormListContainerComponent(store) {\r\n        this.store = store;\r\n        this.data$ = this.store.select(function (state) { return state.form.list.data; });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FormListContainerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.store.dispatch(new FormsListAction());\r\n    };\r\n    FormListContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<form-list\\n\\t\\t\\t\\t\\t[data]=\\\"data$\\\">\\n\\t\\t\\t\\t</form-list>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    FormListContainerComponent.ctorParameters = function () { return [\r\n        { type: Store }\r\n    ]; };\r\n    return FormListContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FormListComponent = /** @class */ (function () {\r\n    function FormListComponent() {\r\n    }\r\n    FormListComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"form-list\",\r\n                    template: \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"25px\\\" class=\\\"main-container\\\">\\n\\n  <div class=\\\"content-action\\\">\\n    <mat-card class=\\\"with-sticky-action\\\">\\n      <mat-card-header>\\n        <mat-card-title fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\n          <mat-icon>assignment</mat-icon>\\n          <span>\\u0645\\u062F\\u06CC\\u0631\\u06CC\\u062A \\u0641\\u0631\\u0645 \\u0647\\u0627</span>\\n        </mat-card-title>\\n        <mat-card-subtitle fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n          <span>\\n            \\u0634\\u0627\\u0645\\u0644 \\u062A\\u0645\\u0627\\u0645\\u06CC \\u062F\\u0631\\u062E\\u0648\\u0627\\u0633\\u062A\\u200C\\u0647\\u0627 \\u0627\\u0632 \\u0642\\u0628\\u06CC\\u0644 \\u062F\\u0627\\u0626\\u0631\\u06CC\\u060C \\u062C\\u0645\\u0639\\u200C\\u0622\\u0648\\u0631\\u06CC \\u0648 ...\\n          </span>\\n        </mat-card-subtitle>\\n      </mat-card-header>\\n\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"start\\\">\\n\\n        <button fxFlex.lt-lg=\\\"19\\\" fxFlex.lg=\\\"24\\\" fxFlex.md=\\\"32\\\" fxFlex.sm=\\\"49\\\" fxFlex.xs=\\\"100\\\" class='link'\\n          mat-raised-button [routerLink]=\\\"['edit' ,  item._id]\\\" *ngFor=\\\"let item of (data$ | async)\\\">\\n          <div fxLayout='column' fxLayoutAlign='center center'>\\n            <mat-icon color='primary'>settings</mat-icon>\\n            <h3 class='title'>{{item.name}}</h3>\\n          </div>\\n        </button>\\n\\n      </div>\\n    </mat-card>\\n  </div>\\n</div>\",\r\n                    styles: [\"button.link{padding:25px 15px;margin:.5%;box-sizing:border-box}button mat-icon{font-size:34px;width:34px;height:34px}\"]\r\n                },] },\r\n    ];\r\n    FormListComponent.propDecorators = {\r\n        data$: [{ type: Input, args: [\"data\",] }]\r\n    };\r\n    return FormListComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar MainContainerComponent = /** @class */ (function () {\r\n    function MainContainerComponent(route, store) {\r\n        this.route = route;\r\n        this.store = store;\r\n    }\r\n    MainContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<router-outlet></router-outlet>\",\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MainContainerComponent.ctorParameters = function () { return [\r\n        { type: ActivatedRoute },\r\n        { type: Store }\r\n    ]; };\r\n    return MainContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar AddFormEffects = /** @class */ (function () {\r\n    function AddFormEffects(actions$, router, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.router = router;\r\n        this.service = service;\r\n        this.AddForm$ = this.actions$\r\n            .ofType(AddFormActionTypes.ADD_FORM)\r\n            .pipe(map(function (action) { return action.payload; }), map(function (data) { return new AddFormStartAction(data); }));\r\n        this.AddFormStart$ = this.actions$\r\n            .ofType(AddFormActionTypes.ADD_FORM_START)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (data) { return _this.service.add(data); }), map(function (res) { return new AddFormSucceedAction(); }), catchError(function () { return of(new AddFormFailedAction()); }));\r\n    }\r\n    AddFormEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    AddFormEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: Router },\r\n        { type: FormService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], AddFormEffects.prototype, \"AddForm$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], AddFormEffects.prototype, \"AddFormStart$\", void 0);\r\n    return AddFormEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FormsListEffects = /** @class */ (function () {\r\n    function FormsListEffects(actions$, router, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.router = router;\r\n        this.service = service;\r\n        this.EditProfileRequest$ = this.actions$.ofType(FormsListActionTypes.FORMS_LIST).map(function (data) { return new FormsListStartAction(); });\r\n        this.GetForm$ = this.actions$\r\n            .ofType(FormsListActionTypes.GET_FORM_SCHEMA)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (id) { return _this.service.get(id); }), map(function (formSchema) { return new FormSchemaFechedAction(formSchema); }));\r\n        this.get_forms_list$ = this.actions$\r\n            .ofType(FormsListActionTypes.FORMS_LIST_START)\r\n            .pipe(switchMap(function (data) { return _this.service.getList(); }), map(function (res) { return new FormsListSucceedAction(res); }), catchError(function () { return of(new FormsListFailedAction()); }));\r\n    }\r\n    FormsListEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    FormsListEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: Router },\r\n        { type: FormService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], FormsListEffects.prototype, \"EditProfileRequest$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], FormsListEffects.prototype, \"GetForm$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], FormsListEffects.prototype, \"get_forms_list$\", void 0);\r\n    return FormsListEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar EditFormEffects = /** @class */ (function () {\r\n    function EditFormEffects(actions$, router, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.router = router;\r\n        this.service = service;\r\n        this.EditForm$ = this.actions$\r\n            .ofType(EditFormActionTypes.EDIT_FORM)\r\n            .pipe(map(function (action) { return action.payload; }), map(function (data) { return new EditFormStartAction(data); }));\r\n        this.EditFormStart$ = this.actions$\r\n            .ofType(EditFormActionTypes.EDIT_FORM_START)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (data) { return _this.service.update(data); }), map(function (formSchema) { return new EditFormSucceedAction(formSchema); }), catchError(function () { return of(new EditFormFailedAction()); }));\r\n        this.UpdateFormsListStart$ = this.actions$\r\n            .ofType(EditFormActionTypes.EDIT_FORM_SUCCEED)\r\n            .pipe(map(function (action) { return action.payload; }), map(function (formSchema) { return new UpdateFormSchemaAction(formSchema); }));\r\n    }\r\n    EditFormEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    EditFormEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: Router },\r\n        { type: FormService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], EditFormEffects.prototype, \"EditForm$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], EditFormEffects.prototype, \"EditFormStart$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], EditFormEffects.prototype, \"UpdateFormsListStart$\", void 0);\r\n    return EditFormEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar routes = [\r\n    {\r\n        path: \"form\",\r\n        component: MainContainerComponent,\r\n        children: [\r\n            {\r\n                path: \"add\",\r\n                component: AddFormContainerComponent\r\n            },\r\n            {\r\n                path: \"edit/:_id\",\r\n                component: EditFormContainerComponent\r\n            },\r\n            {\r\n                path: \"\",\r\n                component: FormListContainerComponent\r\n            }\r\n        ]\r\n    }\r\n];\r\n/** @type {?} */\r\nvar RoutingModule = RouterModule.forChild(routes);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar CaptchaActionTypes = {\r\n    GET_CAPTCHA: \"[CAPTCHA][GET] GET_CAPTCHA\",\r\n    GET_CAPTCHA_START: \"[CAPTCHA][GET] GET_CAPTCHA_START\",\r\n    GET_CAPTCHA_SUCCEED: \"[CAPTCHA][GET] GET_CAPTCHA_SUCCEED\",\r\n    GET_CAPTCHA_FAILED: \"[CAPTCHA][GET] GET_CAPTCHA_FAILED\",\r\n};\r\nvar GetCaptchaStartAction = /** @class */ (function () {\r\n    function GetCaptchaStartAction(payload) {\r\n        this.payload = payload;\r\n        this.type = CaptchaActionTypes.GET_CAPTCHA_START;\r\n    }\r\n    return GetCaptchaStartAction;\r\n}());\r\nvar GetCaptchaSucceedAction = /** @class */ (function () {\r\n    function GetCaptchaSucceedAction() {\r\n        this.type = CaptchaActionTypes.GET_CAPTCHA_SUCCEED;\r\n    }\r\n    return GetCaptchaSucceedAction;\r\n}());\r\nvar GetCaptchaFailedAction = /** @class */ (function () {\r\n    function GetCaptchaFailedAction() {\r\n        this.type = CaptchaActionTypes.GET_CAPTCHA_FAILED;\r\n    }\r\n    return GetCaptchaFailedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar CaptchaEffects = /** @class */ (function () {\r\n    function CaptchaEffects(actions$, router, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.router = router;\r\n        this.service = service;\r\n        this.GetCaptcha$ = this.actions$\r\n            .ofType(CaptchaActionTypes.GET_CAPTCHA)\r\n            .pipe(map(function (action) { return action.payload; }), map(function (data) { return new GetCaptchaStartAction(data); }));\r\n        this.AddFormStart$ = this.actions$\r\n            .ofType(CaptchaActionTypes.GET_CAPTCHA_START)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (data) { return _this.service.getCaptcha(); }), map(function (res) { return new GetCaptchaSucceedAction(); }), catchError(function () { return of(new GetCaptchaFailedAction()); }));\r\n    }\r\n    CaptchaEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    CaptchaEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: Router },\r\n        { type: FormCaptchaService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], CaptchaEffects.prototype, \"GetCaptcha$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], CaptchaEffects.prototype, \"AddFormStart$\", void 0);\r\n    return CaptchaEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NgsFormModule = /** @class */ (function () {\r\n    function NgsFormModule() {\r\n    }\r\n    /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    NgsFormModule.forRoot = /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        return {\r\n            ngModule: RootNgsFormModule,\r\n            providers: [{ provide: MODULE_CONFIG_TOKEN, useValue: config }, FormConfigurationService]\r\n        };\r\n    };\r\n    NgsFormModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        HttpClientModule,\r\n                        FormsModule,\r\n                        RouterModule,\r\n                        CommonModule,\r\n                        MatExpansionModule,\r\n                        MatSnackBarModule,\r\n                        MatIconModule,\r\n                        MatDatepickerModule,\r\n                        MatButtonModule,\r\n                        MatCardModule,\r\n                        MatCheckboxModule,\r\n                        MatTableModule,\r\n                        MatSelectModule,\r\n                        MatInputModule,\r\n                        MatFormFieldModule,\r\n                        MatTabsModule,\r\n                        MatDividerModule,\r\n                        FlexLayoutModule,\r\n                        MatRadioModule,\r\n                        MatSlideToggleModule,\r\n                        ReactiveFormsModule\r\n                    ],\r\n                    declarations: [\r\n                        EditFormContainerComponent,\r\n                        EditFormComponent,\r\n                        FormListContainerComponent,\r\n                        FormListComponent,\r\n                        AddFormContainerComponent,\r\n                        MainContainerComponent,\r\n                        AddFormComponent,\r\n                        FormGroupComponent,\r\n                        FormArrayComponent,\r\n                        FormControlComponent,\r\n                        FormViewComponent,\r\n                        DynamicFieldDirective,\r\n                        SelectComponent,\r\n                        CheckboxComponent,\r\n                        EmailComponent,\r\n                        ColorComponent,\r\n                        DateFormInputControlComponent,\r\n                        FileFormInputControlComponent,\r\n                        TextComponent,\r\n                        NumberComponent,\r\n                        TableComponent,\r\n                        FormCaptchaComponent\r\n                    ],\r\n                    entryComponents: [\r\n                        SelectComponent,\r\n                        CheckboxComponent,\r\n                        EmailComponent,\r\n                        ColorComponent,\r\n                        DateFormInputControlComponent,\r\n                        FileFormInputControlComponent,\r\n                        TextComponent,\r\n                        NumberComponent,\r\n                        TableComponent,\r\n                        FormCaptchaComponent\r\n                    ],\r\n                    exports: [FormViewComponent]\r\n                },] },\r\n    ];\r\n    return NgsFormModule;\r\n}());\r\nvar RootNgsFormModule = /** @class */ (function () {\r\n    function RootNgsFormModule() {\r\n    }\r\n    RootNgsFormModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        NgsFormModule,\r\n                        StoreModule.forFeature(\"form\", FormReducers),\r\n                        EffectsModule.forFeature([AddFormEffects, EditFormEffects, FormsListEffects, CaptchaEffects]),\r\n                        RoutingModule\r\n                    ],\r\n                    exports: [NgsFormModule]\r\n                },] },\r\n    ];\r\n    return RootNgsFormModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { FormService, FormViewComponent, DynamicFieldDirective, NgsFormModule, RootNgsFormModule, AddFormComponent as ɵi, AddFormContainerComponent as ɵg, AddFormContainerComponent as ɵl, AddFormEffects as ɵbd, AddFormComponent as ɵn, CaptchaEffects as ɵbg, FormArrayComponent as ɵp, FormControlComponent as ɵq, FormGroupComponent as ɵo, EditFormContainerComponent as ɵf, EditFormEffects as ɵbe, EditFormComponent as ɵh, RoutingModule as ɵbh, MODULE_CONFIG_TOKEN as ɵa, FormListContainerComponent as ɵj, FormListComponent as ɵk, FormsListEffects as ɵbf, reducer as ɵbc, MainContainerComponent as ɵm, FormReducers as ɵb, FormCaptchaService as ɵbb, FormConfigurationService as ɵd, CheckboxComponent as ɵs, ColorComponent as ɵu, DateFormInputControlComponent as ɵv, EmailComponent as ɵt, FileFormInputControlComponent as ɵw, FormCaptchaComponent as ɵba, NumberComponent as ɵy, SelectComponent as ɵr, TableComponent as ɵz, TextComponent as ɵx };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { __decorate, __metadata, __assign } from 'tslib';\nimport { createSelector, createFeatureSelector, Store, StoreModule } from '@ngrx/store';\nimport { Component, InjectionToken, Injectable, Inject, NgModule, Input, Output, EventEmitter, defineInjectable, inject } from '@angular/core';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { RouterModule, Router } from '@angular/router';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { MatSnackBar, MatBottomSheet, MatIconModule, MatButtonModule, MatCardModule, MatSnackBarModule, MatSidenavModule, MatExpansionModule, MatSelectModule, MatFormFieldModule, MatListModule, MatMenuModule, MatRadioModule, MatInputModule, MatToolbarModule, MatDatepickerModule, MatProgressBarModule, MatBottomSheetModule } from '@angular/material';\nimport { map, switchMap, take, filter, catchError, tap, pluck } from 'rxjs/operators';\nimport { MatSnackBar as MatSnackBar$1 } from '@angular/material/snack-bar';\nimport { Actions, Effect, EffectsModule } from '@ngrx/effects';\nimport { UserActionTypes } from '@soushians/user';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgsFormModule } from '@soushians/form';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UserModel = /** @class */ (function () {\r\n    function UserModel(params) {\r\n        var _this = this;\r\n        // IdentificationNo: string;\r\n        // IdentifierType: string;\r\n        // RegisterDate: string;\r\n        // UserType: string;\r\n        this.Roles = [];\r\n        params &&\r\n            Object.keys(params).forEach(function (key) {\r\n                if (key in params)\r\n                    (/** @type {?} */ (_this))[key] = params[key];\r\n            });\r\n    }\r\n    return UserModel;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar SignInActionTypes = {\r\n    WHO_AM_I: \"[FRONTEND_AUTHENTICATION] who am i\",\r\n    SIGNIN: \"[FRONTEND_AUTHENTICATION] Signin\",\r\n    DO_SIGNOUT: \"[FRONTEND_AUTHENTICATION] Do Signout\",\r\n    SIGNOUT: \"[FRONTEND_AUTHENTICATION] Signout\",\r\n    SIGNIN_SUCCEED: \"[FRONTEND_AUTHENTICATION][Signin] Success\",\r\n    SIGNIN_FAILURE: \"[FRONTEND_AUTHENTICATION][Signin] Failure\",\r\n    SIGNIN_REDIRECT: \"[FRONTEND_AUTHENTICATION][Signin] Redirect\",\r\n    SIGNIN_REQUIRED: \"[FRONTEND_AUTHENTICATION][Signin] Required\",\r\n};\r\nvar Signin = /** @class */ (function () {\r\n    function Signin(payload) {\r\n        this.payload = payload;\r\n        this.type = SignInActionTypes.SIGNIN;\r\n    }\r\n    return Signin;\r\n}());\r\nvar SigninSecceed = /** @class */ (function () {\r\n    function SigninSecceed(payload) {\r\n        this.payload = payload;\r\n        this.type = SignInActionTypes.SIGNIN_SUCCEED;\r\n    }\r\n    return SigninSecceed;\r\n}());\r\nvar SigninFailed = /** @class */ (function () {\r\n    function SigninFailed(payload) {\r\n        this.payload = payload;\r\n        this.type = SignInActionTypes.SIGNIN_FAILURE;\r\n    }\r\n    return SigninFailed;\r\n}());\r\nvar DoSignoutAction = /** @class */ (function () {\r\n    function DoSignoutAction() {\r\n        this.type = SignInActionTypes.DO_SIGNOUT;\r\n    }\r\n    return DoSignoutAction;\r\n}());\r\nvar SignoutAction = /** @class */ (function () {\r\n    function SignoutAction() {\r\n        this.type = SignInActionTypes.SIGNOUT;\r\n    }\r\n    return SignoutAction;\r\n}());\r\nvar SigninRequiredAction = /** @class */ (function () {\r\n    function SigninRequiredAction() {\r\n        this.type = SignInActionTypes.SIGNIN_REQUIRED;\r\n    }\r\n    return SigninRequiredAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar initialState = {\r\n    loggedIn: false,\r\n    user: new UserModel({ Id: 1 })\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction UserReducer(state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    switch (action.type) {\r\n        case SignInActionTypes.SIGNIN_SUCCEED: {\r\n            return __assign({}, state, { loggedIn: true, user: action.payload });\r\n        }\r\n        case SignInActionTypes.SIGNOUT: {\r\n            debugger;\r\n            return __assign({}, state, { loggedIn: false, user: new UserModel() });\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n/** @type {?} */\r\nvar getLoggedIn = function (state) { return state.loggedIn; };\r\n/** @type {?} */\r\nvar getUser = function (state) { return state.user; };\r\n//#endregion\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar FrontendAuthenticationReducers = {\r\n    userStatus: UserReducer\r\n};\r\n/** @type {?} */\r\nvar selectFrontendAuthenticationState = createFeatureSelector(\"frontend-authentication\");\r\n/** @type {?} */\r\nvar selectAuthState = createSelector(selectFrontendAuthenticationState, function (state) { return state.userStatus; });\r\n/** @type {?} */\r\nvar getFrontendAuthenticationState = createSelector(selectAuthState, getLoggedIn);\r\n/** @type {?} */\r\nvar getFrontendUser = createSelector(selectAuthState, getUser);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FrontendAuthenticationContainerComponent = /** @class */ (function () {\r\n    function FrontendAuthenticationContainerComponent() {\r\n    }\r\n    FrontendAuthenticationContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"\\n          <router-outlet></router-outlet>\\n        \"\r\n                },] },\r\n    ];\r\n    return FrontendAuthenticationContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar MODULE_DEFAULT_CONFIG = {\r\n    endpoints: {\r\n        signIn: \"/api/user/signin\",\r\n        signOut: \"/api/user/signout\",\r\n        whoAmI: \"/api/user/account/profile\"\r\n    },\r\n    forms: {\r\n        signIn: \"5a951cfbfd791632a09b3bc6\"\r\n    },\r\n    env: {\r\n        production: false,\r\n        frontend_server: \"auth/module/frontend/server/not/set\",\r\n        server: \"auth/module/server/not/set\"\r\n    },\r\n    afterSignoutRedirectTo: \"/\"\r\n};\r\n/** @type {?} */\r\nvar MODULE_CONFIG_TOKEN = new InjectionToken(\"ModuleConfig\");\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FrontendAuthenticationConfigurationService = /** @class */ (function () {\r\n    function FrontendAuthenticationConfigurationService(configFile, store) {\r\n        this.store = store;\r\n        this.config$ = new BehaviorSubject(this._config);\r\n        this._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n        this.config$.next(this._config);\r\n        // this.store.select(getFrontendAuthenticationModuleConfig).subscribe(storeConfig => {\r\n        // \tif (!storeConfig) return;\r\n        // \tthis._config = Object.assign({}, this._config, storeConfig.Config);\r\n        // \tthis.config$.next(this._config);\r\n        // });\r\n    }\r\n    Object.defineProperty(FrontendAuthenticationConfigurationService.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._config;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FrontendAuthenticationConfigurationService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    FrontendAuthenticationConfigurationService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [MODULE_CONFIG_TOKEN,] }] },\r\n        { type: Store }\r\n    ]; };\r\n    /** @nocollapse */ FrontendAuthenticationConfigurationService.ngInjectableDef = defineInjectable({ factory: function FrontendAuthenticationConfigurationService_Factory() { return new FrontendAuthenticationConfigurationService(inject(MODULE_CONFIG_TOKEN), inject(Store)); }, token: FrontendAuthenticationConfigurationService, providedIn: \"root\" });\r\n    return FrontendAuthenticationConfigurationService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SigninContainerComponent = /** @class */ (function () {\r\n    function SigninContainerComponent(configurationService, store) {\r\n        this.configurationService = configurationService;\r\n        this.store = store;\r\n        this.signedIn$ = new EventEmitter();\r\n        this.formId$ = this.configurationService.config$.map(function (config) { return config.forms.signIn; });\r\n    }\r\n    /**\r\n     * @param {?} formValue\r\n     * @return {?}\r\n     */\r\n    SigninContainerComponent.prototype.signIn = /**\r\n     * @param {?} formValue\r\n     * @return {?}\r\n     */\r\n    function (formValue) {\r\n        this.store.dispatch(new Signin(formValue));\r\n        this.signedIn$.emit(true);\r\n    };\r\n    SigninContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"\\n        <auth-signin \\n                [formId]='(formId$ | async)'\\n                (signedin)=\\\"signIn($event)\\\"\\n        ></auth-signin>\\n  \"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SigninContainerComponent.ctorParameters = function () { return [\r\n        { type: FrontendAuthenticationConfigurationService },\r\n        { type: Store }\r\n    ]; };\r\n    SigninContainerComponent.propDecorators = {\r\n        signedIn$: [{ type: Output }]\r\n    };\r\n    return SigninContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar routes = [\r\n    {\r\n        path: \"auth/frontend\",\r\n        component: FrontendAuthenticationContainerComponent,\r\n        children: [\r\n            {\r\n                path: \"signin\",\r\n                // canActivate: [ SigninGuard ],\r\n                component: SigninContainerComponent\r\n            }\r\n        ]\r\n    }\r\n];\r\n/** @type {?} */\r\nvar FrontendAuthenticationRoutingModule = RouterModule.forChild(routes);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SigninComponent = /** @class */ (function () {\r\n    function SigninComponent() {\r\n        this.signedin = new EventEmitter();\r\n    }\r\n    /**\r\n     * @param {?} formGroup\r\n     * @return {?}\r\n     */\r\n    SigninComponent.prototype.signin = /**\r\n     * @param {?} formGroup\r\n     * @return {?}\r\n     */\r\n    function (formGroup) {\r\n        if (!formGroup.valid)\r\n            return;\r\n        this.signedin.emit(formGroup.value);\r\n    };\r\n    SigninComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"auth-signin\",\r\n                    template: \"<div fxLayout='row' fxLayoutAlign=\\\"center center\\\">\\n    <ngs-form-view \\n        [id]=\\\"formId\\\"\\n        [card]=\\\"true\\\"\\n        (accept)=\\\"signin($event)\\\"\\n    ></ngs-form-view>\\n</div>\\n<!-- <div>\\n    <a fxFlex=\\\"nogrow\\\" routerLink=\\\"/user/password/reset\\\" mat-raised-button fxFlexFill>\\u06A9\\u0644\\u0645\\u0647 \\u0639\\u0628\\u0648\\u0631 \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0641\\u0631\\u0627\\u0645\\u0648\\u0634 \\u06A9\\u0631\\u062F\\u0647 \\u0627\\u06CC\\u062F\\u061F</a>\\n</div> -->\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SigninComponent.ctorParameters = function () { return []; };\r\n    SigninComponent.propDecorators = {\r\n        signedin: [{ type: Output }],\r\n        formId: [{ type: Input }]\r\n    };\r\n    return SigninComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FrontendSigninService = /** @class */ (function () {\r\n    function FrontendSigninService(http, store, configurationService, snackBar) {\r\n        // setTimeout(() => this.store.dispatch(new WhoAmIAction()), 300);\r\n        this.http = http;\r\n        this.store = store;\r\n        this.configurationService = configurationService;\r\n        this.snackBar = snackBar;\r\n    }\r\n    /**\r\n     * @param {?} token\r\n     * @return {?}\r\n     */\r\n    FrontendSigninService.prototype.signin = /**\r\n     * @param {?} token\r\n     * @return {?}\r\n     */\r\n    function (token) {\r\n        var _this = this;\r\n        this.configurationService.config$.subscribe(function (c) {\r\n            debugger;\r\n        });\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.signIn != \"\"; }), take(1), switchMap(function (config) { return _this.http.post(config.env.frontend_server + config.endpoints.signIn, { token: token }); }), map(function (response) {\r\n            /** @type {?} */\r\n            var user = Object.assign({}, response.Result);\r\n            if (user.Role) {\r\n                user.Roles = [user.Role];\r\n            }\r\n            return user;\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FrontendSigninService.prototype.signout = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.http\r\n            .get(this.configurationService.config.env.frontend_server +\r\n            this.configurationService.config.endpoints.signOut)\r\n            .map(function (response) { return response; });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FrontendSigninService.prototype.whoAmI = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.http\r\n            .get(this.configurationService.config.env.frontend_server + this.configurationService.config.endpoints.whoAmI)\r\n            .map(function (response) { return response; });\r\n    };\r\n    FrontendSigninService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    FrontendSigninService.ctorParameters = function () { return [\r\n        { type: HttpClient },\r\n        { type: Store },\r\n        { type: FrontendAuthenticationConfigurationService },\r\n        { type: MatSnackBar }\r\n    ]; };\r\n    /** @nocollapse */ FrontendSigninService.ngInjectableDef = defineInjectable({ factory: function FrontendSigninService_Factory() { return new FrontendSigninService(inject(HttpClient), inject(Store), inject(FrontendAuthenticationConfigurationService), inject(MatSnackBar$1)); }, token: FrontendSigninService, providedIn: \"root\" });\r\n    return FrontendSigninService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SigninEffects = /** @class */ (function () {\r\n    function SigninEffects(actions$, router, frontendSigninService, configurationService, bottomSheet) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.router = router;\r\n        this.frontendSigninService = frontendSigninService;\r\n        this.configurationService = configurationService;\r\n        this.bottomSheet = bottomSheet;\r\n        this.whoAmI$ = this.actions$\r\n            .ofType(SignInActionTypes.WHO_AM_I)\r\n            .pipe(switchMap(function () { return _this.frontendSigninService.whoAmI(); }), map(function (user) { return new SigninSecceed(user); }), catchError(function (error) { return of(new SigninFailed(error)); }));\r\n        this.Signin$ = this.actions$\r\n            .ofType(SignInActionTypes.SIGNIN)\r\n            .pipe(pluck(\"payload\"), switchMap(function (payload) { return _this.frontendSigninService.signin(payload); }), map(function (user) { return new SigninSecceed(user); }), catchError(function (error) { return of(new SigninFailed(error)); }));\r\n        this.SignInRequired$ = this.actions$.ofType(SignInActionTypes.SIGNIN_REQUIRED).pipe(tap(function (data) {\r\n            /** @type {?} */\r\n            var signinBottomSheetRef = _this.bottomSheet.open(SigninContainerComponent, {\r\n                panelClass: \"clear-mat-card-box\"\r\n            });\r\n            signinBottomSheetRef.instance.signedIn$.subscribe(function () {\r\n                signinBottomSheetRef.dismiss();\r\n            });\r\n            return signinBottomSheetRef;\r\n        }));\r\n        this.SigninSucceed$ = this.actions$.ofType(SignInActionTypes.SIGNIN_SUCCEED).pipe(tap(function (data) {\r\n            debugger;\r\n            if (location.pathname.indexOf(\"signin\") > -1)\r\n                _this.router.navigate([\"/\"]);\r\n        }));\r\n        this.DoSignout$ = this.actions$.ofType(SignInActionTypes.DO_SIGNOUT).pipe(switchMap(function (data) {\r\n            return _this.frontendSigninService.signout().pipe(map(function () { return new SignoutAction(); }), catchError(function (err) {\r\n                // TODO: dispatch valid action\r\n                debugger;\r\n                return of(err);\r\n            }));\r\n        }));\r\n        // TODO\r\n        // @Effect() Signout$ = this.actions$.ofType(SignInActionTypes.DO_SIGNOUT).pipe(map(() => new SignoutAction()));\r\n        this.redirectToLoginPage$ = this.actions$\r\n            .ofType(SignInActionTypes.SIGNIN_REDIRECT)\r\n            .pipe(tap(function (authed) { return _this.router.navigate([\"auth/signin\"]); }));\r\n        this.redirectAfterSignout$ = this.actions$\r\n            .ofType(SignInActionTypes.SIGNOUT)\r\n            .pipe(tap(function (authed) { return _this.router.navigate([_this.configurationService.config$.getValue().afterSignoutRedirectTo]); }));\r\n    }\r\n    SigninEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    SigninEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: Router },\r\n        { type: FrontendSigninService },\r\n        { type: FrontendAuthenticationConfigurationService },\r\n        { type: MatBottomSheet }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"whoAmI$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"Signin$\", void 0);\r\n    __decorate([\r\n        Effect({ dispatch: false }),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"SignInRequired$\", void 0);\r\n    __decorate([\r\n        Effect({ dispatch: false }),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"SigninSucceed$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"DoSignout$\", void 0);\r\n    __decorate([\r\n        Effect({ dispatch: false }),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"redirectToLoginPage$\", void 0);\r\n    __decorate([\r\n        Effect({ dispatch: false }),\r\n        __metadata(\"design:type\", Object)\r\n    ], SigninEffects.prototype, \"redirectAfterSignout$\", void 0);\r\n    return SigninEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FrontendAuthenticationModuleEffects = /** @class */ (function () {\r\n    function FrontendAuthenticationModuleEffects(actions$, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.service = service;\r\n        this.goToList$ = this.actions$.ofType(UserActionTypes.REFRESH_USER_INFO).pipe(map(function (action) { return action.payload; }), filter(function (user) { return user.Token != null; }), switchMap(function (user) {\r\n            return _this.service.signin(user.Token).map(function (_user) {\r\n                return new SigninSecceed(_user);\r\n            });\r\n        }));\r\n    }\r\n    FrontendAuthenticationModuleEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    FrontendAuthenticationModuleEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: FrontendSigninService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], FrontendAuthenticationModuleEffects.prototype, \"goToList$\", void 0);\r\n    return FrontendAuthenticationModuleEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NgsFrontendAuthenticationModule = /** @class */ (function () {\r\n    function NgsFrontendAuthenticationModule() {\r\n    }\r\n    /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    NgsFrontendAuthenticationModule.forRoot = /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        if (config === void 0) { config = /** @type {?} */ ({}); }\r\n        return {\r\n            ngModule: RootNgsFrontendAuthenticationModule,\r\n            providers: [{ provide: MODULE_CONFIG_TOKEN, useValue: config }, FrontendSigninService]\r\n        };\r\n    };\r\n    NgsFrontendAuthenticationModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        RouterModule,\r\n                        FormsModule,\r\n                        HttpClientModule,\r\n                        FlexLayoutModule,\r\n                        MatIconModule,\r\n                        MatButtonModule,\r\n                        MatCardModule,\r\n                        MatSnackBarModule,\r\n                        MatSidenavModule,\r\n                        MatExpansionModule,\r\n                        MatSelectModule,\r\n                        MatBottomSheetModule,\r\n                        MatFormFieldModule,\r\n                        MatListModule,\r\n                        MatMenuModule,\r\n                        MatRadioModule,\r\n                        MatInputModule,\r\n                        MatToolbarModule,\r\n                        MatDatepickerModule,\r\n                        MatProgressBarModule,\r\n                        BrowserAnimationsModule,\r\n                        ReactiveFormsModule,\r\n                        FormsModule,\r\n                        NgsFormModule\r\n                    ],\r\n                    declarations: [SigninContainerComponent, SigninComponent, FrontendAuthenticationContainerComponent],\r\n                    entryComponents: [SigninContainerComponent],\r\n                    providers: [],\r\n                    exports: []\r\n                },] },\r\n    ];\r\n    return NgsFrontendAuthenticationModule;\r\n}());\r\nvar RootNgsFrontendAuthenticationModule = /** @class */ (function () {\r\n    function RootNgsFrontendAuthenticationModule() {\r\n    }\r\n    RootNgsFrontendAuthenticationModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        StoreModule.forFeature(\"frontend-authentication\", FrontendAuthenticationReducers),\r\n                        EffectsModule.forFeature([FrontendAuthenticationModuleEffects, SigninEffects]),\r\n                        FrontendAuthenticationRoutingModule,\r\n                        NgsFrontendAuthenticationModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    return RootNgsFrontendAuthenticationModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { UserModel, SignInActionTypes, DoSignoutAction, SigninRequiredAction, getFrontendAuthenticationState, getFrontendUser, NgsFrontendAuthenticationModule, SigninComponent as ɵm, SigninEffects as ɵq, FrontendAuthenticationRoutingModule as ɵr, MODULE_CONFIG_TOKEN as ɵj, FrontendAuthenticationModuleEffects as ɵo, RootNgsFrontendAuthenticationModule as ɵd, FrontendAuthenticationReducers as ɵa, selectAuthState as ɵc, selectFrontendAuthenticationState as ɵb, UserReducer as ɵe, getLoggedIn as ɵf, getUser as ɵg, FrontendAuthenticationConfigurationService as ɵi, FrontendSigninService as ɵp, FrontendAuthenticationContainerComponent as ɵn, SigninContainerComponent as ɵh };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { InjectionToken, Component, Inject, Injectable, ComponentFactoryResolver, ViewContainerRef, Directive, Input, ViewChild, NgModule, EventEmitter, Output, defineInjectable, inject } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { Store, StoreModule } from '@ngrx/store';\nimport { map, filter, tap, take, switchMap, skipUntil, catchError, pluck } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { getFrontendUser } from '@soushians/frontend-authentication';\nimport { UserFacadeService, getAccountInfo } from '@soushians/user';\nimport { stringTemplate } from '@soushians/shared';\nimport { __assign, __decorate, __metadata } from 'tslib';\nimport { Actions, Effect, EffectsModule } from '@ngrx/effects';\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheet, MatExpansionModule, MatSnackBarModule, MatIconModule, MatButtonModule, MatCardModule, MatSelectModule, MatInputModule, MatFormFieldModule, MatTabsModule, MatRadioModule, MatSlideToggleModule, MatDividerModule, MatCheckboxModule, MatTableModule, MatBottomSheetModule, MatMenuModule, MatToolbarModule } from '@angular/material';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { GridsterModule } from 'angular-gridster2';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar MODULE_DEFAULT_CONFIG = {\r\n    env: {\r\n        production: false,\r\n        frontend_server: \"\"\r\n    },\r\n    endpoints: {\r\n        upsert: \"/api/grid\",\r\n        find: \"/api/grid\",\r\n        get: \"/api/grid/${model._id}\",\r\n        update_item: \"/api/grid/item\",\r\n        update_item_access: \"/api/grid/item/access\"\r\n    },\r\n    types: {}\r\n};\r\n/** @type {?} */\r\nvar MODULE_CONFIG_TOKEN = new InjectionToken(\"GridModuleConfig\");\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar RootComponent = /** @class */ (function () {\r\n    function RootComponent() {\r\n    }\r\n    RootComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"ngs-grid-root\",\r\n                    template: \"<router-outlet></router-outlet>\"\r\n                },] },\r\n    ];\r\n    return RootComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar routes = [\r\n    {\r\n        path: \"grid\",\r\n        component: RootComponent,\r\n        children: []\r\n    }\r\n];\r\n/** @type {?} */\r\nvar GridRoutingModule = RouterModule.forChild(routes);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GridModel = /** @class */ (function () {\r\n    function GridModel(_a) {\r\n        var _b = _a === void 0 ? {\r\n            config: {},\r\n            items: []\r\n        } : _a, _id = _b._id, oid = _b.oid, name = _b.name, type = _b.type, config = _b.config, items = _b.items;\r\n        this._id = _id;\r\n        this.oid = oid;\r\n        this.name = name;\r\n        this.type = type;\r\n        this.config = config;\r\n        this.items = items;\r\n    }\r\n    return GridModel;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UpsertGridApiModel;\r\n(function (UpsertGridApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(grid) {\r\n            if (grid === void 0) { grid = {}; }\r\n            debugger;\r\n            this.grid = new GridModel(grid);\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.grid;\r\n        };\r\n        return Request;\r\n    }());\r\n    UpsertGridApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    UpsertGridApiModel.Response = Response;\r\n})(UpsertGridApiModel || (UpsertGridApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GridConfigurationService = /** @class */ (function () {\r\n    function GridConfigurationService(configFile, store) {\r\n        this.store = store;\r\n        this.config$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n        this._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n        this.config$.next(this._config);\r\n        // this.store.select(getGridModuleConfig).subscribe((gridConfig) => {\r\n        // \tif (!gridConfig) {\r\n        // \t\treturn;\r\n        // \t}\r\n        // \tthis._config = Object.assign({}, this._config, gridConfig.Config);\r\n        // \tthis.config$.next(this._config);\r\n        // });\r\n    }\r\n    Object.defineProperty(GridConfigurationService.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._config;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GridConfigurationService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    GridConfigurationService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [MODULE_CONFIG_TOKEN,] }] },\r\n        { type: Store }\r\n    ]; };\r\n    return GridConfigurationService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetGridStartAction = /** @class */ (function () {\r\n    function GetGridStartAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[GRID][API][GetGrid] start\" /* START */;\r\n    }\r\n    return GetGridStartAction;\r\n}());\r\nvar GetGridSucceedAction = /** @class */ (function () {\r\n    function GetGridSucceedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[GRID][API][GetGrid] succeed\" /* SUCCEED */;\r\n    }\r\n    return GetGridSucceedAction;\r\n}());\r\nvar GetGridFailedAction = /** @class */ (function () {\r\n    function GetGridFailedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[GRID][API][GetGrid] failed\" /* FAILED */;\r\n    }\r\n    return GetGridFailedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GridService = /** @class */ (function () {\r\n    function GridService(http, store, userFacadeService, configurationService) {\r\n        this.http = http;\r\n        this.store = store;\r\n        this.userFacadeService = userFacadeService;\r\n        this.configurationService = configurationService;\r\n    }\r\n    /**\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    GridService.prototype.get = /**\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    function (_id) {\r\n        var _this = this;\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.get !== \"\"; }), take(1), skipUntil(this.store.select(getFrontendUser)), switchMap(function (config) {\r\n            return _this.http\r\n                .get(stringTemplate(config.env.frontend_server + config.endpoints.get, { _id: _id }), {})\r\n                .pipe(map(function (response) { return response.Result; }));\r\n        }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GridService.prototype.getGrids = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.find != \"\"; }), switchMap(function (config) { return _this.http.get(config.env.frontend_server + config.endpoints.find); }), map(function (response) { return response.Result; }));\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    GridService.prototype.update_item = /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        var _this = this;\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.update_item != \"\"; }), switchMap(function (config) { return _this.http.patch(config.env.frontend_server + config.endpoints.update_item, item); }), map(function (response) { return response.Result; }));\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    GridService.prototype.update_item_access = /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        var _this = this;\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.update_item_access != \"\"; }), switchMap(function (config) {\r\n            return _this.http.patch(config.env.frontend_server + config.endpoints.update_item_access, item);\r\n        }), map(function (response) { return response.Result; }));\r\n    };\r\n    /**\r\n     * @param {?} grid\r\n     * @return {?}\r\n     */\r\n    GridService.prototype.upsert = /**\r\n     * @param {?} grid\r\n     * @return {?}\r\n     */\r\n    function (grid) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var model = new UpsertGridApiModel.Request(grid);\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.upsert != \"\"; }), take(1), switchMap(function (config) {\r\n            return _this.http.post(config.env.frontend_server + config.endpoints.upsert, model.getRequestBody(), {});\r\n        }), map(function (response) { return response.Result; }));\r\n    };\r\n    // delete(_id: string) {\r\n    // \treturn this.configurationService.config$\r\n    // \t\t.filter((config) => config.endpoints.deleteForm != \"\")\r\n    // \t\t.switchMap((config) => this.http.get(config.endpoints.deleteForm));\r\n    // }\r\n    /**\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    GridService.prototype.selectById = /**\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    function (_id) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var subject = new BehaviorSubject(undefined);\r\n        this.store\r\n            .select(function (state) { return state.grids.db.data; })\r\n            .pipe(filter(function (grids) { return grids != null; }), map(function (grids) { return grids.find(function (grid) { return grid._id == _id; }); }), tap(function (grid) {\r\n            if (grid == null) {\r\n                _this.store.dispatch(new GetGridStartAction(_id));\r\n            }\r\n        }))\r\n            .subscribe(function (FormSchemaModel) { return subject.next(FormSchemaModel); });\r\n        return subject.asObservable();\r\n    };\r\n    /**\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    GridService.prototype.selectByOid = /**\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    function (_id) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var subject = new BehaviorSubject(undefined);\r\n        this.store\r\n            .select(function (state) { return state.grids.db.data; })\r\n            .pipe(filter(function (grids) { return grids != null; }), map(function (grids) { return grids.find(function (grid) { return grid._id == _id; }); }), tap(function (grid) {\r\n            if (grid == null) {\r\n                _this.store.dispatch(new GetGridStartAction(_id));\r\n            }\r\n        }))\r\n            .subscribe(function (FormSchemaModel) { return subject.next(FormSchemaModel); });\r\n        return subject.asObservable();\r\n    };\r\n    GridService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    GridService.ctorParameters = function () { return [\r\n        { type: HttpClient },\r\n        { type: Store },\r\n        { type: UserFacadeService },\r\n        { type: GridConfigurationService }\r\n    ]; };\r\n    /** @nocollapse */ GridService.ngInjectableDef = defineInjectable({ factory: function GridService_Factory() { return new GridService(inject(HttpClient), inject(Store), inject(UserFacadeService), inject(GridConfigurationService)); }, token: GridService, providedIn: \"root\" });\r\n    return GridService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetGridApiEffects = /** @class */ (function () {\r\n    function GetGridApiEffects(actions$, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.service = service;\r\n        this.start$ = this.actions$\r\n            .ofType(\"[GRID][API][GetGrid] start\" /* START */)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (payload) { return _this.service.get(payload); }), map(function (res) { return new GetGridSucceedAction(res); }), catchError(function (err) { return of(new GetGridFailedAction(err)); }));\r\n    }\r\n    GetGridApiEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    GetGridApiEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: GridService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], GetGridApiEffects.prototype, \"start$\", void 0);\r\n    return GetGridApiEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UpsertGridStartAction = /** @class */ (function () {\r\n    function UpsertGridStartAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[UPSERT_GRID][API][UpsertGrid] start\" /* START */;\r\n    }\r\n    return UpsertGridStartAction;\r\n}());\r\nvar UpsertGridSucceedAction = /** @class */ (function () {\r\n    function UpsertGridSucceedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[UPSERT_GRID][API][UpsertGrid] succeed\" /* SUCCEED */;\r\n    }\r\n    return UpsertGridSucceedAction;\r\n}());\r\nvar UpsertGridFailedAction = /** @class */ (function () {\r\n    function UpsertGridFailedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[UPSERT_GRID][API][UpsertGrid] failed\" /* FAILED */;\r\n    }\r\n    return UpsertGridFailedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UpsertGridApiEffects = /** @class */ (function () {\r\n    function UpsertGridApiEffects(actions$, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.service = service;\r\n        this.start$ = this.actions$\r\n            .ofType(\"[UPSERT_GRID][API][UpsertGrid] start\" /* START */)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (payload) { return _this.service.upsert(payload); }), map(function (res) { return new UpsertGridSucceedAction(res); }), catchError(function (err) { return of(new UpsertGridFailedAction(err)); }));\r\n    }\r\n    UpsertGridApiEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    UpsertGridApiEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: GridService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], UpsertGridApiEffects.prototype, \"start$\", void 0);\r\n    return UpsertGridApiEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetGridsSucceedAction = /** @class */ (function () {\r\n    function GetGridsSucceedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[GET_GRIDS][API][GetGrids] succeed\" /* SUCCEED */;\r\n    }\r\n    return GetGridsSucceedAction;\r\n}());\r\nvar GetGridsFailedAction = /** @class */ (function () {\r\n    function GetGridsFailedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[GET_GRIDS][API][GetGrids] failed\" /* FAILED */;\r\n    }\r\n    return GetGridsFailedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetGridsApiEffects = /** @class */ (function () {\r\n    function GetGridsApiEffects(actions$, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.service = service;\r\n        this.start$ = this.actions$\r\n            .ofType(\"[GET_GRIDS][API][GetGrids] start\" /* START */)\r\n            .pipe(switchMap(function () {\r\n            return _this.service\r\n                .getGrids()\r\n                .pipe(map(function (res) { return new GetGridsSucceedAction(res); }), catchError(function (err) { return of(new GetGridsFailedAction(err)); }));\r\n        }));\r\n    }\r\n    GetGridsApiEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    GetGridsApiEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: GridService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], GetGridsApiEffects.prototype, \"start$\", void 0);\r\n    return GetGridsApiEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar GridsActionTypes = {\r\n    UPSERT: \"[GRID][DB] UPSERT\",\r\n    DELETE: \"[GRID][DB] DELETE\",\r\n};\r\nvar UpsertGridAction = /** @class */ (function () {\r\n    function UpsertGridAction(payload) {\r\n        this.payload = payload;\r\n        this.type = GridsActionTypes.UPSERT;\r\n    }\r\n    return UpsertGridAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ɵ0 = [];\r\n/** @type {?} */\r\nvar initialState = {\r\n    data: ɵ0\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction Reducer(state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    /** @type {?} */\r\n    var _data;\r\n    switch (action.type) {\r\n        case GridsActionTypes.UPSERT:\r\n            _data = state.data.concat();\r\n            /** @type {?} */\r\n            var newGrids = action.payload;\r\n            newGrids.forEach(function (newGrid) {\r\n                /** @type {?} */\r\n                var existedGridIndex = _data.findIndex(function (w) { return w._id == newGrid._id; });\r\n                if (existedGridIndex > -1) {\r\n                    _data.splice(existedGridIndex, 1, newGrid);\r\n                }\r\n                else {\r\n                    _data.push(newGrid);\r\n                }\r\n            });\r\n            return __assign({}, state, { data: _data });\r\n        case GridsActionTypes.DELETE:\r\n            _data = Object.assign({}, state.data);\r\n            /** @type {?} */\r\n            var gridIndex = state.data.findIndex(function (w) { return w._id == action.payload._id; });\r\n            _data.splice(gridIndex, 1);\r\n            return __assign({}, state, { data: _data });\r\n        default:\r\n            return state;\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar GridReducer = {\r\n    db: Reducer\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GridDbEffects = /** @class */ (function () {\r\n    function GridDbEffects(actions$) {\r\n        this.actions$ = actions$;\r\n        this.Upsert$ = this.actions$\r\n            .ofType(\"[GRID][API][GetGrid] succeed\" /* SUCCEED */, \"[UPSERT_GRID][API][UpsertGrid] succeed\" /* SUCCEED */)\r\n            .pipe(pluck(\"payload\"), map(function (grid) { return new UpsertGridAction([grid]); }));\r\n        this.UpsertMany$ = this.actions$\r\n            .ofType(\"[GET_GRIDS][API][GetGrids] succeed\" /* SUCCEED */)\r\n            .pipe(pluck(\"payload\"), map(function (grids) { return new UpsertGridAction(grids); }));\r\n    }\r\n    GridDbEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    GridDbEffects.ctorParameters = function () { return [\r\n        { type: Actions }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], GridDbEffects.prototype, \"Upsert$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], GridDbEffects.prototype, \"UpsertMany$\", void 0);\r\n    return GridDbEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DynamicGridItremConfigDirective = /** @class */ (function () {\r\n    function DynamicGridItremConfigDirective(configurationService, resolver, container) {\r\n        this.configurationService = configurationService;\r\n        this.resolver = resolver;\r\n        this.container = container;\r\n        this.mapTypeToComponent = this.configurationService.config$.getValue().types;\r\n    }\r\n    Object.defineProperty(DynamicGridItremConfigDirective.prototype, \"type\", {\r\n        set: /**\r\n         * @param {?} type\r\n         * @return {?}\r\n         */\r\n        function (type) {\r\n            if (!type)\r\n                return;\r\n            this._resolve_correct_component_base_on_widget_type(type);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DynamicGridItremConfigDirective.prototype, \"valid\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.component.instance.valid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DynamicGridItremConfigDirective.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.component.instance.config;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DynamicGridItremConfigDirective.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    DynamicGridItremConfigDirective.prototype._resolve_correct_component_base_on_widget_type = /**\r\n     * @param {?} type\r\n     * @return {?}\r\n     */\r\n    function (type) {\r\n        if (!this.mapTypeToComponent[type]) {\r\n            /** @type {?} */\r\n            var supportedTypes = Object.keys(this.mapTypeToComponent).join(\", \");\r\n            throw new Error(\"Trying to use an unsupported type (\" + type + \").\\n\\t\\t  \\t\\t Supported types: \" + supportedTypes);\r\n        }\r\n        /** @type {?} */\r\n        var component = this.resolver.resolveComponentFactory(this.mapTypeToComponent[type].configComponent);\r\n        this.component = this.container.createComponent(component);\r\n        // this.widget$.subscribe((w) => (this.component.instance.widget = w));\r\n    };\r\n    DynamicGridItremConfigDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: \"[ngsDynamicGridItemConfig]\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DynamicGridItremConfigDirective.ctorParameters = function () { return [\r\n        { type: GridConfigurationService },\r\n        { type: ComponentFactoryResolver },\r\n        { type: ViewContainerRef }\r\n    ]; };\r\n    DynamicGridItremConfigDirective.propDecorators = {\r\n        type: [{ type: Input }]\r\n    };\r\n    return DynamicGridItremConfigDirective;\r\n}());\r\nvar DynamicGridItemConfigComponent = /** @class */ (function () {\r\n    function DynamicGridItemConfigComponent(data) {\r\n        this.data = data;\r\n    }\r\n    Object.defineProperty(DynamicGridItemConfigComponent.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.DynamicWidgetRef.config;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DynamicGridItemConfigComponent.prototype, \"valid\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.DynamicWidgetRef.valid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DynamicGridItemConfigComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"\\n\\t<div ngsDynamicGridItemConfig [type]=\\\"data.type\\\"></div>\\n\\t\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DynamicGridItemConfigComponent.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_BOTTOM_SHEET_DATA,] }] }\r\n    ]; };\r\n    DynamicGridItemConfigComponent.propDecorators = {\r\n        DynamicWidgetRef: [{ type: ViewChild, args: [DynamicGridItremConfigDirective,] }]\r\n    };\r\n    return DynamicGridItemConfigComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GridConfigComponent = /** @class */ (function () {\r\n    function GridConfigComponent(store, data) {\r\n        this.store = store;\r\n        this.data = data;\r\n        this.grid = this.data.grid;\r\n        this.oid = this.data.oid;\r\n        this._init_properties();\r\n        this._init_form_group();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GridConfigComponent.prototype.save = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var grid = __assign({}, this.grid, this.gridFormGroup.value, { config: __assign({}, this.configFormGroup.value) });\r\n        this.store.dispatch(new UpsertGridStartAction(grid));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GridConfigComponent.prototype._init_form_group = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.configFormGroup = new FormGroup({\r\n            gridType: new FormControl(\"fit\"),\r\n            compactType: new FormControl(\"none\"),\r\n            displayGrid: new FormControl(\"onDrag&Resize\"),\r\n            // empty cell\r\n            enableEmptyCellDrag: new FormControl(true),\r\n            enableEmptyCellClick: new FormControl(false),\r\n            enableEmptyCellContextMenu: new FormControl(false),\r\n            //\r\n            scrollToNewItems: new FormControl(true),\r\n            // margins\r\n            margin: new FormControl(10),\r\n            outerMargin: new FormControl(true),\r\n            outerMarginTop: new FormControl(10),\r\n            outerMarginRight: new FormControl(10),\r\n            outerMarginBottom: new FormControl(10),\r\n            outerMarginLeft: new FormControl(10),\r\n            // grid size\r\n            minCols: new FormControl(3),\r\n            maxCols: new FormControl(3),\r\n            //\r\n            draggable: new FormGroup({\r\n                enabled: new FormControl(),\r\n                delayStart: new FormControl(333)\r\n            }),\r\n            resizable: new FormGroup({\r\n                enabled: new FormControl()\r\n            })\r\n        });\r\n        this.gridFormGroup = new FormGroup({\r\n            oid: new FormControl(this.oid),\r\n            name: new FormControl(\"\")\r\n        });\r\n        this.gridFormGroup.patchValue(this.grid);\r\n        this.configFormGroup.patchValue(this.grid.config);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GridConfigComponent.prototype._init_properties = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.gridTypes = [\"fit\", \"scrollVertical\", \"scrollHorizontal\", \"fixed\", \"verticalFixed\", \"horizontalFixed\"];\r\n        this.compactType = [\"none\", \"compactUp\", \"compactLeft\", \"compactUp&Left\", \"compactLeft&Up\"];\r\n        this.displayGridTypes = [\"always\", \"onDrag&Resize\", \"none\"];\r\n    };\r\n    GridConfigComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<h4> \\u062A\\u0646\\u0638\\u06CC\\u0645\\u0627\\u062A \\u062F\\u0627\\u0634\\u0628\\u0648\\u0631\\u062F</h4>\\n<div fxLayout=\\\"column wrap\\\" fxLayoutGap=\\\"15px\\\">\\n    <div fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\" [formGroup]=\\\"gridFormGroup\\\">\\n        <mat-form-field fxFlex=\\\"20\\\">\\n            <input matInput placeholder=\\\"\\u0646\\u0627\\u0645\\\" formControlName=\\\"name\\\">\\n        </mat-form-field>\\n    </div>\\n    <div fxLayout=\\\"column wrap\\\" fxLayoutGap=\\\"15px\\\"  fxFlex=\\\"100\\\" [formGroup]=\\\"configFormGroup\\\">\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"25px\\\">\\n            <mat-form-field fxFlex=\\\"20\\\">\\n                <mat-select placeholder=\\\"\\u0646\\u0648\\u0639 \\u0642\\u0631\\u0627\\u0631\\u06AF\\u06CC\\u0631\\u06CC \\u06AF\\u0631\\u06CC\\u062F\\u0647\\u0627 \\u062F\\u0631 \\u0635\\u0641\\u062D\\u0647\\\" formControlName=\\\"gridType\\\">\\n                    <mat-option *ngFor=\\\"let item of gridTypes\\\" [value]=\\\"item\\\">\\n                        {{item}}\\n                    </mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n            <mat-form-field fxFlex=\\\"20\\\">\\n                <mat-select placeholder=\\\"\\u0646\\u0648\\u0639 \\u0641\\u0634\\u0631\\u062F\\u0647 \\u0634\\u062F\\u0646 \\u06AF\\u0631\\u06CC\\u062F\\u0647\\u0627 \\u062F\\u0631 \\u0635\\u0641\\u062D\\u0647\\\" formControlName=\\\"compactType\\\">\\n                    <mat-option *ngFor=\\\"let item of compactType\\\" [value]=\\\"item\\\">\\n                        {{item}}\\n                    </mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n            <mat-form-field fxFlex=\\\"20\\\">\\n                <mat-select placeholder=\\\"\\u0646\\u0634\\u0627\\u0646 \\u062F\\u0627\\u062F\\u0646 \\u0633\\u0644\\u0648\\u0644\\u200C\\u0647\\u0627\\u06CC \\u06AF\\u0631\\u06CC\\u062F\\\" formControlName=\\\"displayGrid\\\">\\n                    <mat-option *ngFor=\\\"let item of displayGridTypes\\\" [value]=\\\"item\\\">\\n                        {{item}}\\n                    </mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n        </div>\\n        <div fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"25px\\\">\\n            <div fxFlex=\\\"20\\\">\\n                <mat-checkbox formControlName=\\\"enableEmptyCellDrag\\\">\\u0627\\u06CC\\u062C\\u0627\\u062F \\u06AF\\u0631\\u06CC\\u062F \\u0628\\u0627 \\u062F\\u0631\\u06AF \\u06A9\\u0631\\u062F\\u0646</mat-checkbox>\\n                <!-- <mat-checkbox formControlName=\\\"enableEmptyCellClick\\\">enableEmptyCellClick</mat-checkbox> -->\\n            </div>\\n            <div fxFlex=\\\"20\\\" [formGroup]=\\\"configFormGroup.get('draggable')\\\">\\n                <mat-checkbox formControlName=\\\"enabled\\\">\\u0642\\u0627\\u0628\\u0644\\u06CC\\u062A \\u062C\\u0627\\u0628\\u062C\\u0627\\u06CC\\u06CC \\u06AF\\u0631\\u06CC\\u062F\\u0647\\u0627</mat-checkbox>\\n            </div>\\n            <div fxFlex=\\\"20\\\" [formGroup]=\\\"configFormGroup.get('resizable')\\\">\\n                <mat-checkbox formControlName=\\\"enabled\\\">\\u0642\\u0627\\u0628\\u0644\\u06CC\\u062A \\u062A\\u063A\\u06CC\\u06CC\\u0631 \\u0633\\u0627\\u06CC\\u0632 \\u06AF\\u0631\\u06CC\\u062F\\u0647\\u0627</mat-checkbox>\\n            </div>\\n        </div>\\n        <!-- Margins -->\\n        <div fxFlex=\\\"100\\\" fxLayout=\\\"column wrap\\\" fxLayoutGap=\\\"25px\\\">\\n            <h4 fxFlex=\\\"100\\\">\\u062D\\u0627\\u0634\\u06CC\\u0647:</h4>\\n            <div fxFlex fxLayout=\\\"column\\\" fxLayoutGap=\\\"25px\\\">\\n                <mat-checkbox fxFlex formControlName=\\\"outerMargin\\\">\\u0627\\u0645\\u06A9\\u0627\\u0646 \\u062A\\u0646\\u0638\\u06CC\\u0645 \\u0641\\u0627\\u0635\\u0644\\u0647 \\u06AF\\u0631\\u06CC\\u062F\\u0647\\u0627</mat-checkbox>\\n            </div>\\n            <div fxFlex=\\\"100\\\"  fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"25px\\\">\\n                <mat-form-field fxFlex>\\n                    <input matInput type=\\\"number\\\" placeholder=\\\"\\u0641\\u0627\\u0635\\u0644\\u0647 \\u06AF\\u0631\\u06CC\\u062F\\u0647\\u0627 \\u0627\\u0632 \\u0647\\u0645\\\" formControlName=\\\"margin\\\" />\\n                </mat-form-field>\\n                <mat-form-field fxFlex>\\n                    <input matInput type=\\\"number\\\" placeholder=\\\"\\u0641\\u0627\\u0635\\u0644\\u0647 \\u06AF\\u0631\\u06CC\\u062F\\u0647\\u0627 \\u0627\\u0631 \\u0628\\u0627\\u0644\\u0627 \\u062F\\u0627\\u0634\\u0628\\u0648\\u0631\\u062F\\\" formControlName=\\\"outerMarginTop\\\" />\\n                </mat-form-field>\\n                <mat-form-field fxFlex>\\n                    <input matInput type=\\\"number\\\" placeholder=\\\"\\u0641\\u0627\\u0635\\u0644\\u0647 \\u06AF\\u0631\\u06CC\\u062F\\u0647\\u0627 \\u0627\\u0632 \\u0631\\u0627\\u0633\\u062A \\u062F\\u0627\\u0634\\u0628\\u0648\\u0631\\u062F\\\" formControlName=\\\"outerMarginRight\\\" />\\n                </mat-form-field>\\n                <mat-form-field fxFlex>\\n                    <input matInput type=\\\"number\\\" placeholder=\\\"\\u0641\\u0627\\u0635\\u0644\\u0647 \\u06AF\\u0631\\u06CC\\u062F\\u0647\\u0627 \\u0627\\u0632 \\u067E\\u0627\\u06CC\\u06CC\\u0646 \\u062F\\u0627\\u0634\\u0628\\u0648\\u0631\\u062F\\\" formControlName=\\\"outerMarginBottom\\\" />\\n                </mat-form-field>\\n                <mat-form-field fxFlex>\\n                    <input matInput type=\\\"number\\\" placeholder=\\\"\\u0641\\u0627\\u0635\\u0644\\u0647 \\u06AF\\u0631\\u06CC\\u062F\\u0647\\u0627 \\u0627\\u0632 \\u0686\\u067E \\u062F\\u0627\\u0634\\u0628\\u0648\\u0631\\u062F\\\" formControlName=\\\"outerMarginLeft\\\" />\\n                </mat-form-field>\\n            </div>\\n        </div>\\n        <!-- Grid Size -->\\n        <div fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"25px\\\">\\n            <h4 fxFlex=\\\"100\\\">\\u062A\\u0639\\u062F\\u0627\\u062F \\u0633\\u062A\\u0648\\u0646\\u200C\\u0647\\u0627:</h4>\\n            <mat-form-field fxFlex=\\\"18\\\">\\n                <input matInput type=\\\"number\\\" placeholder=\\\"\\u06A9\\u0645\\u062A\\u0631\\u06CC\\u0646 \\u0633\\u062A\\u0648\\u0646\\\" formControlName=\\\"minCols\\\" />\\n            </mat-form-field>\\n            <mat-form-field fxFlex=\\\"18\\\">\\n                <input matInput type=\\\"number\\\" placeholder=\\\"\\u0628\\u06CC\\u0634\\u062A\\u0631\\u06CC\\u0646 \\u0633\\u062A\\u0648\\u0646\\\" formControlName=\\\"maxCols\\\" />\\n            </mat-form-field>\\n        </div> \\n        <div fxFlex=\\\"20\\\" fxLayoutAlign=\\\"flex-end center\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"25px\\\">\\n         <button color=\\\"primary\\\" mat-raised-button (click)=\\\"save()\\\">\\u0630\\u062E\\u06CC\\u0631\\u0647</button>\\n    </div>\\n</div>\\n</div>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    GridConfigComponent.ctorParameters = function () { return [\r\n        { type: Store },\r\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_BOTTOM_SHEET_DATA,] }] }\r\n    ]; };\r\n    return GridConfigComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GridComponent = /** @class */ (function () {\r\n    function GridComponent(store, service, userFacadeService, configurationService, bottomSheet) {\r\n        var _this = this;\r\n        this.store = store;\r\n        this.service = service;\r\n        this.userFacadeService = userFacadeService;\r\n        this.configurationService = configurationService;\r\n        this.bottomSheet = bottomSheet;\r\n        this.itemValidateCallback = new EventEmitter();\r\n        this.itemRemovedCallback = new EventEmitter();\r\n        this.itemInitCallback = new EventEmitter();\r\n        this.itemResizeCallback = new EventEmitter();\r\n        this.itemChangeCallback = new EventEmitter();\r\n        this.gridSizeChangedCallback = new EventEmitter();\r\n        this.destroyCallback = new EventEmitter();\r\n        this.initCallback = new EventEmitter();\r\n        this.ready = false;\r\n        this.options = {};\r\n        this.userFacadeService\r\n            .getInfo()\r\n            .pipe(filter(function (user) { return user.CurrentSession != undefined; }), map(function (user) { return user.CurrentSession.Username; }))\r\n            .subscribe(function (username) {\r\n            _this.username = username;\r\n        });\r\n        this.gridItemTypes = Object.keys(this.configurationService.config$.getValue().types);\r\n        this.havePermission$ = this.store.select(getAccountInfo).pipe(map(function (user) {\r\n            /** @type {?} */\r\n            var criteria = [user, user._id, _this.grid, _this.grid.owner];\r\n            if (criteria.some(function (i) { return !i; }))\r\n                return false;\r\n            return user._id == _this.grid.owner;\r\n        }));\r\n    }\r\n    /**\r\n     * @param {?} item\r\n     * @param {?} itemComponent\r\n     * @return {?}\r\n     */\r\n    GridComponent.itemChange = /**\r\n     * @param {?} item\r\n     * @param {?} itemComponent\r\n     * @return {?}\r\n     */\r\n    function (item, itemComponent) {\r\n        console.log(\"itemChanged\", item, itemComponent);\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @param {?} itemComponent\r\n     * @return {?}\r\n     */\r\n    GridComponent.itemResize = /**\r\n     * @param {?} item\r\n     * @param {?} itemComponent\r\n     * @return {?}\r\n     */\r\n    function (item, itemComponent) {\r\n        console.log(\"itemResized\", item, itemComponent);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GridComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // this.items = [ { cols: 2, rows: 1, y: 0, x: 0 }, { cols: 2, rows: 2, y: 0, x: 2 } ];\r\n        this.grid = new GridModel({\r\n            oid: this.oid,\r\n            config: {}\r\n        });\r\n        this._get_grid_by_oid_and_update_component();\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    GridComponent.prototype._initCallback = /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        this.initCallback.emit(item);\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    GridComponent.prototype.removeItem = /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        this.grid.items.splice(this.grid.items.indexOf(item), 1);\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    GridComponent.prototype.make_public = /**\r\n     * @param {?} item\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (item, event) {\r\n        debugger;\r\n        item.access = event.checked ? \"public\" : \"private\";\r\n        this.service.update_item_access(item).subscribe(function (item) {\r\n            debugger;\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    GridComponent.prototype.addItem = /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    function (e) {\r\n        debugger;\r\n        e.stopPropagation();\r\n        this.grid.items.push(/** @type {?} */ ({}));\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    GridComponent.prototype.emptyCellClick = /**\r\n     * @param {?} event\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (event, item) {\r\n        console.log(\"empty cell click\", event, item);\r\n        this.grid.items.push(/** @type {?} */ (item));\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    GridComponent.prototype.openConfig = /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    function (e) {\r\n        debugger;\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        this.bottomSheet.open(GridConfigComponent, {\r\n            data: {\r\n                grid: this.grid\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    GridComponent.prototype.saveConfig = /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    function (e) {\r\n        debugger;\r\n        e.stopPropagation();\r\n        e.stopImmediatePropagation();\r\n        e.preventDefault();\r\n        /**\r\n                 * TODO:\r\n                 * احزار هویت در سمت نود اتحام شود\r\n                * کانفیگ برای گرفتن شناسه کاربر\r\n                 */\r\n        this.store.dispatch(new UpsertGridStartAction(this.grid));\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    GridComponent.prototype.gridItemTypeChanged = /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        /** @type {?} */\r\n        var bs = this.bottomSheet.open(DynamicGridItemConfigComponent, {\r\n            data: {\r\n                type: item.type\r\n            }\r\n        });\r\n        bs.afterDismissed().subscribe(function (data) {\r\n            item.config = bs.instance.config;\r\n            item.valid = bs.instance.valid;\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    GridComponent.prototype.showConfig = /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        /** @type {?} */\r\n        var bs = this.bottomSheet.open(DynamicGridItemConfigComponent, {\r\n            data: {\r\n                type: item.type\r\n            }\r\n        });\r\n        bs.afterDismissed().subscribe(function (data) {\r\n            item.config = bs.instance.config;\r\n            item.valid = bs.instance.valid;\r\n        });\r\n    };\r\n    // tslint:disable-next-line:member-ordering\r\n    // @ViewChild(\"DiagramViewComponent\") _ngsDynamicGridItemView: DiagramViewComponent;\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GridComponent.prototype.goToEdit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        debugger;\r\n        // tslint:disable-next-line:no-unused-expression\r\n        // this._ngsDynamicGridItemView;\r\n    };\r\n    /**\r\n     * private methods\r\n     */\r\n    /**\r\n     * private methods\r\n     * @return {?}\r\n     */\r\n    GridComponent.prototype._get_grid_by_oid_and_update_component = /**\r\n     * private methods\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.service.selectById(this.oid).pipe(filter(function (data) { return data != undefined; })).subscribe(function (data) {\r\n            _this.grid = data;\r\n            debugger;\r\n            data.config.outerMarginBottom = +data.config.outerMarginBottom;\r\n            data.config.outerMarginRight = +data.config.outerMarginRight;\r\n            _this.options = __assign({}, _this.options, data.config);\r\n            // this.options.draggable = {\r\n            // \tenabled: true\r\n            // };\r\n            // this.options.emptyCellContextMenuCallback = this.emptyCellClick.bind(this);\r\n            // this.options.emptyCellDropCallback = this.emptyCellClick.bind(this);\r\n            if (_this.options.enableEmptyCellDrag)\r\n                _this.options.emptyCellDragCallback = _this.emptyCellClick.bind(_this);\r\n            // if (this.options.enableEmptyCellClick) this.options.emptyCellClickCallback = this.emptyCellClick.bind(this);\r\n            // if (this.options.enableEmptyCellClick) this.options.emptyCellClickCallback = this.emptyCellClick.bind(this);\r\n            _this.ready = true;\r\n            // this.options.api.optionsChanged();\r\n        });\r\n    };\r\n    GridComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"ngs-grid\",\r\n                    template: \"<gridster [options]=\\\"options\\\">\\n    <div class=\\\"actions\\\" >\\n        <button mat-mini-fab (click)=\\\"addItem($event)\\\">\\n            <mat-icon>add</mat-icon>\\n        </button>\\n        <button mat-mini-fab (click)=\\\"openConfig($event)\\\" *ngIf=\\\"havePermission$ | async\\\">\\n            <mat-icon>dashboard</mat-icon>\\n        </button>\\n        <button mat-mini-fab (click)=\\\"saveConfig($event)\\\">\\n            <mat-icon>done</mat-icon>\\n        </button>\\n    </div>\\n    <gridster-item [item]=\\\"item\\\" *ngFor=\\\"let item of grid.items\\\">\\n        <div class=\\\"initializer\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n            <div fxFlex=\\\"nogrow\\\">\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n                    <mat-icon>more_horiz</mat-icon>\\n                </button>\\n                <mat-menu #menu=\\\"matMenu\\\" class=\\\"rtl\\\">\\n                    <mat-checkbox *ngIf=\\\"grid.owner == username\\\" labelPosition=\\\"before\\\" [checked]=\\\"item.access=='public'\\\"\\n                        (change)=\\\"make_public(item,$event)\\\">\\u0639\\u0645\\u0648\\u0645\\u06CC</mat-checkbox>\\n                    <button mat-menu-item class=\\\"rtl\\\" (click)=\\\"goToEdit()\\\">\\n                        <mat-icon>edit</mat-icon>\\n                        <span>\\u0648\\u06CC\\u0631\\u0627\\u06CC\\u0634 \\u0627\\u0641\\u0632\\u0648\\u0646\\u0647</span>\\n                    </button>\\n                    <!-- <button mat-menu-item class=\\\"rtl\\\" (click)=\\\"showConfig(item)\\\">\\n                        <mat-icon>settings</mat-icon>\\n                        <span>\\u062A\\u0646\\u0638\\u06CC\\u0645\\u0627\\u062A</span>\\n                    </button> -->\\n                    <button mat-menu-item class=\\\"rtl\\\" (click)=\\\"removeItem(item)\\\">\\n                        <mat-icon>delete</mat-icon>\\n                        <span>\\u062D\\u0630\\u0641</span>\\n                    </button>\\n                </mat-menu>\\n            </div>\\n        </div>\\n        <div class=\\\"widget-content\\\">\\n            <div *ngIf=\\\"!item.valid\\\" fxFlex=\\\"100\\\" class=\\\"form-container\\\">\\n                <h4>\\u062A\\u0646\\u0638\\u06CC\\u0645\\u0627\\u062A</h4>\\n                <mat-form-field fxFlex=\\\"grow\\\">\\n                    <mat-select placeholder=\\\"Grid Item Type\\\" [(ngModel)]=\\\"item.type\\\" (selectionChange)=\\\"gridItemTypeChanged(item)\\\">\\n                        <mat-option *ngFor=\\\"let item of gridItemTypes\\\" [value]=\\\"item\\\">\\n                            {{item}}\\n                        </mat-option>\\n                    </mat-select>\\n                </mat-form-field>\\n            </div>\\n            <div *ngIf=\\\"item.valid\\\" #test [ngsDynamicGridItemView]=\\\"item\\\"></div>\\n        </div>\\n    </gridster-item>\\n</gridster>\",\r\n                    styles: [\":host{width:100%;min-height:calc(100vh - 205px);display:block;direction:ltr}.initializer{position:absolute;z-index:10;top:5px;left:5px;height:25px}.actions{position:absolute;top:25px;right:25px;z-index:5}.actions button{margin-left:10px}.widget-content{position:relative;height:100%}.form-container{padding:25px;width:100%}[dir=rtl] .form-container{direction:rtl}.form-container mat-form-field{width:100%}.rtl{direction:rtl}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    GridComponent.ctorParameters = function () { return [\r\n        { type: Store },\r\n        { type: GridService },\r\n        { type: UserFacadeService },\r\n        { type: GridConfigurationService },\r\n        { type: MatBottomSheet }\r\n    ]; };\r\n    GridComponent.propDecorators = {\r\n        itemValidateCallback: [{ type: Output }],\r\n        itemRemovedCallback: [{ type: Output }],\r\n        itemInitCallback: [{ type: Output }],\r\n        itemResizeCallback: [{ type: Output }],\r\n        itemChangeCallback: [{ type: Output }],\r\n        gridSizeChangedCallback: [{ type: Output }],\r\n        destroyCallback: [{ type: Output }],\r\n        initCallback: [{ type: Output }],\r\n        oid: [{ type: Input }]\r\n    };\r\n    return GridComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DynamicGridItemViewDirective = /** @class */ (function () {\r\n    function DynamicGridItemViewDirective(configurationService, resolver, container) {\r\n        this.configurationService = configurationService;\r\n        this.resolver = resolver;\r\n        this.container = container;\r\n        this.mapTypeToComponent = this.configurationService.config$.getValue().types;\r\n    }\r\n    Object.defineProperty(DynamicGridItemViewDirective.prototype, \"item\", {\r\n        set: /**\r\n         * @param {?} item\r\n         * @return {?}\r\n         */\r\n        function (item) {\r\n            if (!item)\r\n                return;\r\n            if (!item.valid)\r\n                return;\r\n            this._resolve_correct_component_base_on_widget_type(item);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DynamicGridItemViewDirective.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    DynamicGridItemViewDirective.prototype._resolve_correct_component_base_on_widget_type = /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        var _this = this;\r\n        debugger;\r\n        if (!this.mapTypeToComponent[item.type]) {\r\n            /** @type {?} */\r\n            var supportedTypes = Object.keys(this.mapTypeToComponent).join(\", \");\r\n            throw new Error(\"Trying to use an unsupported type (\" + item.type + \").\\n\\t\\t  \\t\\t Supported types: \" + supportedTypes);\r\n        }\r\n        /** @type {?} */\r\n        var componentFactory = this.resolver.resolveComponentFactory(this.mapTypeToComponent[item.type].viewComponent);\r\n        this.component = this.container.createComponent(componentFactory);\r\n        Object.keys(item.config || {}).forEach(function (key) {\r\n            _this.component.instance[key] = item.config[key];\r\n        });\r\n    };\r\n    DynamicGridItemViewDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: \"[ngsDynamicGridItemView]\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DynamicGridItemViewDirective.ctorParameters = function () { return [\r\n        { type: GridConfigurationService },\r\n        { type: ComponentFactoryResolver },\r\n        { type: ViewContainerRef }\r\n    ]; };\r\n    DynamicGridItemViewDirective.propDecorators = {\r\n        item: [{ type: Input, args: [\"ngsDynamicGridItemView\",] }]\r\n    };\r\n    return DynamicGridItemViewDirective;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NgsGridModule = /** @class */ (function () {\r\n    function NgsGridModule() {\r\n    }\r\n    /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    NgsGridModule.forRoot = /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        return {\r\n            ngModule: NgsGridRootModule,\r\n            providers: [{ provide: MODULE_CONFIG_TOKEN, useValue: config }, GridConfigurationService, GridService]\r\n        };\r\n    };\r\n    NgsGridModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        RouterModule,\r\n                        MatExpansionModule,\r\n                        MatSnackBarModule,\r\n                        MatIconModule,\r\n                        MatButtonModule,\r\n                        MatCardModule,\r\n                        MatSelectModule,\r\n                        MatInputModule,\r\n                        MatFormFieldModule,\r\n                        MatTabsModule,\r\n                        MatBottomSheetModule,\r\n                        MatRadioModule,\r\n                        FlexLayoutModule,\r\n                        MatMenuModule,\r\n                        MatToolbarModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule,\r\n                        MatSlideToggleModule,\r\n                        MatDividerModule,\r\n                        MatCheckboxModule,\r\n                        MatTableModule,\r\n                        GridsterModule\r\n                    ],\r\n                    declarations: [\r\n                        RootComponent,\r\n                        GridComponent,\r\n                        GridConfigComponent,\r\n                        DynamicGridItremConfigDirective,\r\n                        DynamicGridItemConfigComponent,\r\n                        DynamicGridItemViewDirective\r\n                    ],\r\n                    entryComponents: [GridConfigComponent, DynamicGridItemConfigComponent],\r\n                    exports: [GridComponent]\r\n                },] },\r\n    ];\r\n    return NgsGridModule;\r\n}());\r\nvar NgsGridRootModule = /** @class */ (function () {\r\n    function NgsGridRootModule() {\r\n    }\r\n    NgsGridRootModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        NgsGridModule,\r\n                        GridRoutingModule,\r\n                        StoreModule.forFeature(\"grids\", GridReducer),\r\n                        EffectsModule.forFeature([GridDbEffects, GetGridApiEffects, GetGridsApiEffects, UpsertGridApiEffects])\r\n                    ],\r\n                    exports: [NgsGridModule]\r\n                },] },\r\n    ];\r\n    return NgsGridRootModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { GridModel, NgsGridModule, NgsGridRootModule, MODULE_DEFAULT_CONFIG, MODULE_CONFIG_TOKEN, GridConfigComponent as ɵg, DynamicGridItemConfigComponent as ɵi, DynamicGridItremConfigDirective as ɵh, DynamicGridItemViewDirective as ɵj, GridRoutingModule as ɵk, GridReducer as ɵc, GridComponent as ɵb, GridDbEffects as ɵm, Reducer as ɵl, RootComponent as ɵa, GetGridApiEffects as ɵn, GetGridsApiEffects as ɵp, UpsertGridApiEffects as ɵr, GridConfigurationService as ɵf, GridService as ɵe };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { Component, NgModule } from '@angular/core';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { map, filter } from 'rxjs/operators';\nimport { UserFacadeService, getAccountInfo } from '@soushians/user';\nimport { GwtStepTypes } from '@soushians/rule';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatExpansionModule, MatSnackBarModule, MatIconModule, MatButtonModule, MatCardModule, MatSelectModule, MatInputModule, MatFormFieldModule, MatTabsModule, MatRadioModule, MatSlideToggleModule, MatDividerModule, MatCheckboxModule, MatTableModule, MatAutocompleteModule } from '@angular/material';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GivenUserIsAuthenticatedStepComponent = /** @class */ (function () {\r\n    function GivenUserIsAuthenticatedStepComponent() {\r\n        this.formGroup = new FormGroup({\r\n            role: new FormControl(\"\")\r\n        });\r\n    }\r\n    Object.defineProperty(GivenUserIsAuthenticatedStepComponent.prototype, \"params\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.formGroup.value;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.formGroup.patchValue(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GivenUserIsAuthenticatedStepComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<mat-card class=\\\"step\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"25px\\\" fxLayoutAlign=\\\"center end\\\">\\n  <div class=\\\"step-text\\\" fxFlex=\\\"nogrow\\\">\\n    <span class=\\\"given\\\">\\n        \\u0647\\u0646\\u06AF\\u0627\\u0645\\u06CC \\u06A9\\u0647\\n    </span>\\n    \\u06A9\\u0627\\u0631\\u0628\\u0631 \\u0627\\u062D\\u0631\\u0627\\u0632 \\u0647\\u0648\\u06CC\\u062A \\u06A9\\u0631\\u062F\\u0647 \\u0627\\u0633\\u062A\\n    </div>\\n</mat-card>\",\r\n                    styles: [\":host{width:100%}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    GivenUserIsAuthenticatedStepComponent.ctorParameters = function () { return []; };\r\n    return GivenUserIsAuthenticatedStepComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar IfUserIsAuthenticatedGwtGivenStep = /** @class */ (function () {\r\n    function IfUserIsAuthenticatedGwtGivenStep(injector) {\r\n        this.injector = injector;\r\n        this.stepComponent = GivenUserIsAuthenticatedStepComponent;\r\n        debugger;\r\n        this.id = \"if_user_is_authenticated\";\r\n        this.name = \"if user is authenticated\";\r\n        this.description = \"هنگامی که کاربر احراز هویت کرده است\";\r\n        this.type = GwtStepTypes.Given;\r\n        this.store = this.injector.get(Store);\r\n        this.userFacadeService = this.injector.get(UserFacadeService);\r\n    }\r\n    /**\r\n     * @param {?} params\r\n     * @param {?} elementRef\r\n     * @return {?}\r\n     */\r\n    IfUserIsAuthenticatedGwtGivenStep.prototype.interperator = /**\r\n     * @param {?} params\r\n     * @param {?} elementRef\r\n     * @return {?}\r\n     */\r\n    function (params, elementRef) {\r\n        return this.userFacadeService.getDisplayName().pipe(map(function (userDispalyName) {\r\n            debugger;\r\n            return !!userDispalyName;\r\n        }));\r\n    };\r\n    return IfUserIsAuthenticatedGwtGivenStep;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar IfUserHaveRoleGwtGivenStepComponent = /** @class */ (function () {\r\n    function IfUserHaveRoleGwtGivenStepComponent() {\r\n        this.formGroup = new FormGroup({\r\n            role: new FormControl(\"\")\r\n        });\r\n    }\r\n    Object.defineProperty(IfUserHaveRoleGwtGivenStepComponent.prototype, \"params\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.formGroup.value;\r\n        },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this.formGroup.patchValue(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    IfUserHaveRoleGwtGivenStepComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<mat-card class=\\\"step\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"25px\\\" fxLayoutAlign=\\\"center end\\\">\\n  <div class=\\\"step-text\\\" fxFlex=\\\"nogrow\\\">\\n    <span class=\\\"given\\\">\\n        \\u0647\\u0646\\u06AF\\u0627\\u0645\\u06CC \\u06A9\\u0647\\n    </span>\\n    \\u06A9\\u0627\\u0631\\u0628\\u0631 \\u0646\\u0642\\u0634\\n    </div>\\n  <div fxFlex [formGroup]=\\\"formGroup\\\">\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"\\u062F\\u0633\\u062A\\u0631\\u0633\\u06CC\\\" formControlName=\\\"role\\\">\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"step-text\\\" fxFlex=\\\"nogrow\\\">\\u062F\\u0627\\u0631\\u062F</div>\\n</mat-card>\",\r\n                    styles: [\":host{width:100%}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    IfUserHaveRoleGwtGivenStepComponent.ctorParameters = function () { return []; };\r\n    return IfUserHaveRoleGwtGivenStepComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar IfUserHaveRoleGwtGivenStep = /** @class */ (function () {\r\n    function IfUserHaveRoleGwtGivenStep(injector) {\r\n        this.injector = injector;\r\n        this.stepComponent = IfUserHaveRoleGwtGivenStepComponent;\r\n        this.id = \"if_user_have_role_given_step\";\r\n        this.name = \"if user have role given step\";\r\n        this.description = \"هنگامی که کاربر نقش .. را ندارد\";\r\n        this.type = GwtStepTypes.Given;\r\n        this.store = this.injector.get(Store);\r\n    }\r\n    /**\r\n     * @param {?} params\r\n     * @param {?} elementRef\r\n     * @return {?}\r\n     */\r\n    IfUserHaveRoleGwtGivenStep.prototype.interperator = /**\r\n     * @param {?} params\r\n     * @param {?} elementRef\r\n     * @return {?}\r\n     */\r\n    function (params, elementRef) {\r\n        /** @type {?} */\r\n        var user$ = this.store\r\n            .select(getAccountInfo)\r\n            .pipe(filter(function (user) { return !!user.Roles; }), filter(function (user) { return user.Roles.length > 0; }));\r\n        return user$.pipe(map(function (user) {\r\n            debugger;\r\n            return !(/** @type {?} */ (user)).Roles.map(function (item) { return item.toLowerCase(); }).includes(params.role.toLowerCase());\r\n        }));\r\n    };\r\n    return IfUserHaveRoleGwtGivenStep;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GwtThenAuthorizeStepComponent = /** @class */ (function () {\r\n    function GwtThenAuthorizeStepComponent() {\r\n        var _this = this;\r\n        this.params$ = new BehaviorSubject(/** @type {?} */ ({}));\r\n        this.formGroup = this._create_formGroup();\r\n        this.params$.subscribe(function (params) { return _this.formGroup.patchValue(params); });\r\n    }\r\n    Object.defineProperty(GwtThenAuthorizeStepComponent.prototype, \"params\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return Object.assign({}, this.formGroup.value);\r\n        },\r\n        set: /**\r\n         * @param {?} params\r\n         * @return {?}\r\n         */\r\n        function (params) {\r\n            if (this.formGroup) {\r\n                this.formGroup.patchValue(params);\r\n            }\r\n            this.params$.next(params);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * private methods\r\n     */\r\n    /**\r\n     * private methods\r\n     * @return {?}\r\n     */\r\n    GwtThenAuthorizeStepComponent.prototype._create_formGroup = /**\r\n     * private methods\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new FormGroup({\r\n            verb: new FormControl(\"hidden\")\r\n        });\r\n    };\r\n    GwtThenAuthorizeStepComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<mat-card class=\\\"step\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"start end\\\" [formGroup]=\\\"formGroup\\\">\\n  <div fxFlex=\\\"0 0 auto\\\" class=\\\"step-text then\\\">\\n    \\u0622\\u0646\\u06AF\\u0627\\u0647\\n  </div>\\n  <div fxFlex=\\\"0 0 auto\\\" class=\\\"step-text\\\">\\n    \\u0627\\u06CC\\u0646 \\u0628\\u062E\\u0634 \\u0642\\u0627\\u0628\\u0644 \\u0646\\u0645\\u0627\\u06CC\\u0634\\n  </div>\\n  <div fxFlex=\\\"nogrow\\\">\\n    <mat-form-field fxFlex=\\\"nogrow\\\">\\n      <mat-select formControlName=\\\"verb\\\">\\n        <mat-option value=\\\"visible\\\">\\u0628\\u0627\\u0634\\u062F</mat-option>\\n        <mat-option value=\\\"hidden\\\">\\u0646\\u0628\\u0627\\u0634\\u062F</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n</mat-card>\",\r\n                    styles: [\":host{width:100%}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    GwtThenAuthorizeStepComponent.ctorParameters = function () { return []; };\r\n    return GwtThenAuthorizeStepComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GwtThenAuthorizeStep = /** @class */ (function () {\r\n    function GwtThenAuthorizeStep(injector) {\r\n        this.injector = injector;\r\n        this.stepComponent = GwtThenAuthorizeStepComponent;\r\n        this.id = \"authorize_and_show_block\";\r\n        this.name = \"authorize and show block\";\r\n        this.description = \"آنگاه این بخش قابل نمایش است\";\r\n        this.type = GwtStepTypes.Then;\r\n        this.store = this.injector.get(Store);\r\n    }\r\n    /**\r\n     * @param {?} params\r\n     * @param {?} elementRef\r\n     * @return {?}\r\n     */\r\n    GwtThenAuthorizeStep.prototype.interperator = /**\r\n     * @param {?} params\r\n     * @param {?} elementRef\r\n     * @return {?}\r\n     */\r\n    function (params, elementRef) {\r\n        debugger;\r\n        /** @type {?} */\r\n        var display = (params.verb === \"visible\") ? \"initial\" : \"none\";\r\n        elementRef.nativeElement.style.display = display;\r\n        return of(true);\r\n    };\r\n    return GwtThenAuthorizeStep;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GwtStepsModule = /** @class */ (function () {\r\n    function GwtStepsModule() {\r\n    }\r\n    GwtStepsModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        HttpClientModule,\r\n                        FormsModule,\r\n                        RouterModule,\r\n                        CommonModule,\r\n                        MatExpansionModule,\r\n                        MatSnackBarModule,\r\n                        MatIconModule,\r\n                        MatButtonModule,\r\n                        MatCardModule,\r\n                        MatCheckboxModule,\r\n                        MatTableModule,\r\n                        MatSelectModule,\r\n                        MatAutocompleteModule,\r\n                        MatInputModule,\r\n                        MatFormFieldModule,\r\n                        MatTabsModule,\r\n                        MatDividerModule,\r\n                        FlexLayoutModule,\r\n                        MatRadioModule,\r\n                        MatSlideToggleModule,\r\n                        ReactiveFormsModule,\r\n                        BrowserAnimationsModule\r\n                    ],\r\n                    declarations: [\r\n                        GwtThenAuthorizeStepComponent,\r\n                        IfUserHaveRoleGwtGivenStepComponent,\r\n                        GivenUserIsAuthenticatedStepComponent\r\n                    ],\r\n                    entryComponents: [\r\n                        GwtThenAuthorizeStepComponent,\r\n                        IfUserHaveRoleGwtGivenStepComponent,\r\n                        GivenUserIsAuthenticatedStepComponent\r\n                    ],\r\n                    exports: []\r\n                },] },\r\n    ];\r\n    return GwtStepsModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { IfUserIsAuthenticatedGwtGivenStep, IfUserHaveRoleGwtGivenStep, GwtThenAuthorizeStep, GwtStepsModule, GivenUserIsAuthenticatedStepComponent as ɵc, IfUserHaveRoleGwtGivenStepComponent as ɵb, GwtThenAuthorizeStepComponent as ɵa };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { __read, __decorate, __metadata, __assign } from 'tslib';\nimport { createSelector, createFeatureSelector, Store, StoreModule } from '@ngrx/store';\nimport { InjectionToken, Injectable, Inject, Component, Input, Output, EventEmitter, ViewChild, HostListener, NgModule, LOCALE_ID, HostBinding, defineInjectable, inject } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { getConfigs, NgsConfigModule } from '@soushians/config';\nimport 'rxjs/Observable';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { SigninService, DoSignoutAction } from '@soushians/authentication';\nimport { map, combineLatest, withLatestFrom } from 'rxjs/operators';\nimport { getAccountInfo, UserFacadeService } from '@soushians/user';\nimport { Location, CommonModule } from '@angular/common';\nimport { DOCUMENT, BrowserModule } from '@angular/platform-browser';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { Router, NavigationEnd, RouterModule } from '@angular/router';\nimport { BehaviorSubject as BehaviorSubject$1 } from 'rxjs';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/empty';\nimport { Actions, Effect, EffectsModule } from '@ngrx/effects';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatIconModule, MatButtonModule, MatCardModule, MatSnackBarModule, MatSidenavModule, MatExpansionModule, MatSelectModule, MatFormFieldModule, MatListModule, MatMenuModule, MatRadioModule, MatInputModule, MatToolbarModule, MatDatepickerModule, MatProgressBarModule } from '@angular/material';\nimport { RuleModule } from '@soushians/rule';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar OPEN_SIDENAV = \"[Layout] Open Sidenav\";\r\n/** @type {?} */\r\nvar CLOSE_SIDENAV = \"[Layout] Close Sidenav\";\r\n/** @enum {string} */\r\nvar LayoutActionTypes = {\r\n    UPDATE_LAYOUT_CONFIG: \"[Layout] UPDATE_LAYOUT_CONFIG\",\r\n    DO_SIGNOUT: \"[Layout] do signout\",\r\n    TITLE_CHANGED: \"[LAYOUT] TITLE_CHANGED\",\r\n    CHANGE_LAYOUT: \"[Layout] Change Layout\",\r\n    CHANGE_MAIN_SIDENAVE_MODE: \"[Layout] Change main sidenav mode\",\r\n    OPEN_SECOND_SIDEBAR: \"[Layout] Open Second Sidebar\",\r\n    CLOSE_SECOND_SIDEBAR: \"[Layout] Close Second Sidebar\",\r\n    CHANGE_SECOND_SIDENAV_MODE: \"[Layout] Change second sidenav mode\",\r\n    FULLSCREEN: \"[Layout] FULLSCREEN\",\r\n    EXIT_FULLSCREEN: \"[Layout] EXIT_FULLSCREEN\",\r\n    TOGGLE_FULLSCREEN: \"[Layout] TOGGLE_FULLSCREEN\",\r\n};\r\nvar UpdateLayoutConfigAction = /** @class */ (function () {\r\n    function UpdateLayoutConfigAction(payload) {\r\n        this.payload = payload;\r\n        this.type = LayoutActionTypes.UPDATE_LAYOUT_CONFIG;\r\n    }\r\n    return UpdateLayoutConfigAction;\r\n}());\r\nvar OpenSidenavAction = /** @class */ (function () {\r\n    function OpenSidenavAction() {\r\n        this.type = OPEN_SIDENAV;\r\n    }\r\n    return OpenSidenavAction;\r\n}());\r\nvar CloseSidenavAction = /** @class */ (function () {\r\n    function CloseSidenavAction() {\r\n        this.type = CLOSE_SIDENAV;\r\n    }\r\n    return CloseSidenavAction;\r\n}());\r\nvar ChangeLayout = /** @class */ (function () {\r\n    function ChangeLayout(name) {\r\n        this.name = name;\r\n        this.type = LayoutActionTypes.CHANGE_LAYOUT;\r\n    }\r\n    return ChangeLayout;\r\n}());\r\nvar ChangeSideNavMode = /** @class */ (function () {\r\n    function ChangeSideNavMode(mode) {\r\n        this.mode = mode;\r\n        this.type = LayoutActionTypes.CHANGE_MAIN_SIDENAVE_MODE;\r\n    }\r\n    return ChangeSideNavMode;\r\n}());\r\nvar ChangeSecondSidenavMode = /** @class */ (function () {\r\n    function ChangeSecondSidenavMode(mode) {\r\n        this.mode = mode;\r\n        this.type = LayoutActionTypes.CHANGE_SECOND_SIDENAV_MODE;\r\n    }\r\n    return ChangeSecondSidenavMode;\r\n}());\r\nvar DoSignoutAction$1 = /** @class */ (function () {\r\n    function DoSignoutAction$$1() {\r\n        this.type = LayoutActionTypes.DO_SIGNOUT;\r\n    }\r\n    return DoSignoutAction$$1;\r\n}());\r\nvar TitleChangedAction = /** @class */ (function () {\r\n    function TitleChangedAction(title) {\r\n        this.title = title;\r\n        this.type = LayoutActionTypes.TITLE_CHANGED;\r\n    }\r\n    return TitleChangedAction;\r\n}());\r\nvar OpenSecondSidenavAction = /** @class */ (function () {\r\n    function OpenSecondSidenavAction() {\r\n        this.type = LayoutActionTypes.OPEN_SECOND_SIDEBAR;\r\n    }\r\n    return OpenSecondSidenavAction;\r\n}());\r\nvar CloseSecondSidenavAction = /** @class */ (function () {\r\n    function CloseSecondSidenavAction() {\r\n        this.type = LayoutActionTypes.CLOSE_SECOND_SIDEBAR;\r\n    }\r\n    return CloseSecondSidenavAction;\r\n}());\r\nvar FullscreenAction = /** @class */ (function () {\r\n    function FullscreenAction() {\r\n        this.type = LayoutActionTypes.FULLSCREEN;\r\n    }\r\n    return FullscreenAction;\r\n}());\r\nvar ExitFullscreenAction = /** @class */ (function () {\r\n    function ExitFullscreenAction() {\r\n        this.type = LayoutActionTypes.EXIT_FULLSCREEN;\r\n    }\r\n    return ExitFullscreenAction;\r\n}());\r\nvar ToggleFullscreenAction = /** @class */ (function () {\r\n    function ToggleFullscreenAction() {\r\n        this.type = LayoutActionTypes.TOGGLE_FULLSCREEN;\r\n    }\r\n    return ToggleFullscreenAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar initialState = {\r\n    showMainSidenav: false,\r\n    showSecondSideNav: false,\r\n    secondSideNavMode: \"over\",\r\n    mainSideNavMode: \"over\",\r\n    showLeftNavBar: false,\r\n    stickyLeftNavBar: false,\r\n    layoutMode: \"default\",\r\n    title: \"\",\r\n    menuItems: [],\r\n    signoutAction: /** @type {?} */ ({}),\r\n    fullscreen: false\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction Reducer(state$$1, action) {\r\n    if (state$$1 === void 0) { state$$1 = initialState; }\r\n    switch (action.type) {\r\n        case LayoutActionTypes.UPDATE_LAYOUT_CONFIG:\r\n            /** @type {?} */\r\n            var _state_1 = {};\r\n            Object.keys(action.payload).forEach(function (k) {\r\n                if (k in state$$1)\r\n                    _state_1[k] = action.payload[k];\r\n            });\r\n            return __assign({}, state$$1, _state_1);\r\n        case CLOSE_SIDENAV:\r\n            return __assign({}, state$$1, { showMainSidenav: false });\r\n        case OPEN_SIDENAV:\r\n            return __assign({}, state$$1, { showMainSidenav: true });\r\n        case LayoutActionTypes.TITLE_CHANGED:\r\n            return __assign({}, state$$1, { title: action.title });\r\n        case LayoutActionTypes.CHANGE_LAYOUT:\r\n            return __assign({}, state$$1, { layoutMode: action.name });\r\n        case LayoutActionTypes.CHANGE_MAIN_SIDENAVE_MODE:\r\n            return __assign({}, state$$1, { mainSideNavMode: action.mode });\r\n        case LayoutActionTypes.CLOSE_SECOND_SIDEBAR:\r\n            return __assign({}, state$$1, { showSecondSideNav: false });\r\n        case LayoutActionTypes.OPEN_SECOND_SIDEBAR:\r\n            return __assign({}, state$$1, { showSecondSideNav: true });\r\n        case LayoutActionTypes.CHANGE_SECOND_SIDENAV_MODE:\r\n            return __assign({}, state$$1, { secondSideNavMode: action.mode });\r\n        case LayoutActionTypes.FULLSCREEN:\r\n            return __assign({}, state$$1, { fullscreen: true });\r\n        case LayoutActionTypes.EXIT_FULLSCREEN:\r\n            return __assign({}, state$$1, { fullscreen: false });\r\n        // case layout.LayoutActionTypes.TOGGLE_FULLSCREEN:\r\n        // \treturn {\r\n        // \t\t...state,\r\n        // \t\tfullscreen: state.fullscreen === true ? false : true\r\n        // \t};\r\n        default:\r\n            return state$$1;\r\n    }\r\n}\r\n/** @type {?} */\r\nvar getTitle = function (state$$1) { return state$$1.title; };\r\n/** @type {?} */\r\nvar getShowMainSidenav = function (state$$1) { return state$$1.showMainSidenav; };\r\n/** @type {?} */\r\nvar getMainSideNavMode = function (state$$1) { return state$$1.mainSideNavMode; };\r\n/** @type {?} */\r\nvar getLayoutMode = function (state$$1) { return state$$1.layoutMode; };\r\n/** @type {?} */\r\nvar getShowSecondSidebarStatus = function (state$$1) { return state$$1.showSecondSideNav; };\r\n/** @type {?} */\r\nvar getSecondSidebarMode = function (state$$1) { return state$$1.secondSideNavMode; };\r\n/** @type {?} */\r\nvar getFullscreenMode = function (state$$1) { return state$$1.fullscreen; };\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar ToolbarActionTypes = {\r\n    COMPORTABLE: \"[Layout][TOOLBAR] COMPORTABLE\",\r\n    COMPACT: \"[Layout][TOOLBAR] COMPACT\",\r\n    SUMMARY: \"[Layout][TOOLBAR] SUMMARY\",\r\n    ENABLE_COMFORTABLE_MODE: \"[Layout][TOOLBAR] ENABLE_COMFORTABLE_MODE\",\r\n    DISBALE_COMFORTABLE_MODE: \"[Layout][TOOLBAR] DISBALE_COMFORTABLE_MODE\",\r\n    VISIBLE: \"[Layout][TOOLBAR] VISIBLE\",\r\n    INVISIBLE: \"[Layout][TOOLBAR] INVISIBLE\",\r\n};\r\nvar ChangeToolbatToComfortableModeAction = /** @class */ (function () {\r\n    function ChangeToolbatToComfortableModeAction() {\r\n        this.type = ToolbarActionTypes.COMPORTABLE;\r\n    }\r\n    return ChangeToolbatToComfortableModeAction;\r\n}());\r\nvar ChangeToolbatToCompactModeAction = /** @class */ (function () {\r\n    function ChangeToolbatToCompactModeAction() {\r\n        this.type = ToolbarActionTypes.COMPACT;\r\n    }\r\n    return ChangeToolbatToCompactModeAction;\r\n}());\r\nvar ChangeToolbatToSummaryModeAction = /** @class */ (function () {\r\n    function ChangeToolbatToSummaryModeAction() {\r\n        this.type = ToolbarActionTypes.SUMMARY;\r\n    }\r\n    return ChangeToolbatToSummaryModeAction;\r\n}());\r\nvar EnableComfortableModeAction = /** @class */ (function () {\r\n    function EnableComfortableModeAction() {\r\n        this.type = ToolbarActionTypes.ENABLE_COMFORTABLE_MODE;\r\n    }\r\n    return EnableComfortableModeAction;\r\n}());\r\nvar DisableComfortableModeAction = /** @class */ (function () {\r\n    function DisableComfortableModeAction() {\r\n        this.type = ToolbarActionTypes.DISBALE_COMFORTABLE_MODE;\r\n    }\r\n    return DisableComfortableModeAction;\r\n}());\r\nvar VisibleToolbarAction = /** @class */ (function () {\r\n    function VisibleToolbarAction() {\r\n        this.type = ToolbarActionTypes.VISIBLE;\r\n    }\r\n    return VisibleToolbarAction;\r\n}());\r\nvar InvisibleToolbarAction = /** @class */ (function () {\r\n    function InvisibleToolbarAction() {\r\n        this.type = ToolbarActionTypes.INVISIBLE;\r\n    }\r\n    return InvisibleToolbarAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar initialState$1 = {\r\n    mode: \"compact\",\r\n    enableComfortableMode: false,\r\n    comfortableModeHaveBeenDone: false,\r\n    visibility: true\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction Reducer$1(state$$1, action) {\r\n    if (state$$1 === void 0) { state$$1 = initialState$1; }\r\n    switch (action.type) {\r\n        case ToolbarActionTypes.COMPACT:\r\n            if (!state$$1.visibility)\r\n                return __assign({}, state$$1, { mode: \"hide\" });\r\n            return __assign({}, state$$1, { mode: \"compact\" });\r\n        case ToolbarActionTypes.COMPORTABLE:\r\n            if (!state$$1.visibility)\r\n                return __assign({}, state$$1, { mode: \"hide\" });\r\n            return __assign({}, state$$1, { mode: state$$1.enableComfortableMode ? \"comfortable\" : \"compact\" });\r\n        case ToolbarActionTypes.SUMMARY:\r\n            if (!state$$1.visibility)\r\n                return __assign({}, state$$1, { mode: \"hide\" });\r\n            return __assign({}, state$$1, { mode: \"summary\" });\r\n        case ToolbarActionTypes.ENABLE_COMFORTABLE_MODE:\r\n            if (!state$$1.visibility)\r\n                return __assign({}, state$$1, { mode: \"hide\" });\r\n            return __assign({}, state$$1, { enableComfortableMode: true });\r\n        case ToolbarActionTypes.DISBALE_COMFORTABLE_MODE:\r\n            if (!state$$1.visibility)\r\n                return __assign({}, state$$1, { mode: \"hide\" });\r\n            return __assign({}, state$$1, { mode: \"compact\", enableComfortableMode: false });\r\n        case ToolbarActionTypes.VISIBLE:\r\n            return __assign({}, state$$1, { mode: \"compact\", visibility: true });\r\n        case ToolbarActionTypes.INVISIBLE:\r\n            return __assign({}, state$$1, { mode: \"hide\", visibility: false });\r\n        default:\r\n            return state$$1;\r\n    }\r\n}\r\n/** @type {?} */\r\nvar getToolbarMode = function (state$$1) { return state$$1.mode; };\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar LayoutReducers = {\r\n    layout: Reducer,\r\n    toolbar: Reducer$1\r\n};\r\n/** @type {?} */\r\nvar selectLayoutState = createFeatureSelector(\"layout\");\r\n/** @type {?} */\r\nvar getLayout = createSelector(selectLayoutState, function (state$$1) { return state$$1.layout; });\r\n/** @type {?} */\r\nvar getTitle$1 = createSelector(getLayout, getTitle);\r\n/** @type {?} */\r\nvar getShowMainSidenav$1 = createSelector(getLayout, getShowMainSidenav);\r\n/** @type {?} */\r\nvar getMainSideNavMode$1 = createSelector(getLayout, getMainSideNavMode);\r\n/** @type {?} */\r\nvar getLayoutMode$1 = createSelector(getLayout, getLayoutMode);\r\n/** @type {?} */\r\nvar getShowSecondSidebarStatus$1 = createSelector(getLayout, getShowSecondSidebarStatus);\r\n/** @type {?} */\r\nvar getSecondSidebarMode$1 = createSelector(getLayout, getSecondSidebarMode);\r\n/** @type {?} */\r\nvar getFullscreenMode$1 = createSelector(getLayout, getFullscreenMode);\r\n/** @type {?} */\r\nvar getLayoutToolbar = createSelector(selectLayoutState, function (state$$1) { return state$$1.toolbar; });\r\n/** @type {?} */\r\nvar getLayoutToolbarMode = createSelector(getLayoutToolbar, getToolbarMode);\r\n//#endregion\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar menu_item_authorization_operator = function (_a) {\r\n    var _b = __read(_a, 2), routes = _b[0], user = _b[1];\r\n    if (!user.Roles)\r\n        return [];\r\n    if (user.Roles.length == 0) {\r\n        return [];\r\n    }\r\n    else {\r\n        return routes.filter(function (route) { return user.Roles.some(function (userRole) { return route.roles.indexOf(userRole) > -1; }); });\r\n    }\r\n};\r\n/** @type {?} */\r\nvar MODULE_DEFAULT_CONFIG = {\r\n    theme: \"theme_B\",\r\n    showMainSidenav: false,\r\n    showSecondSideNav: true,\r\n    secondSideNavMode: \"over\",\r\n    // | \"push\" | \"side\",\r\n    mainSideNavMode: \"over\",\r\n    // | \"push\" | \"side\",\r\n    showLeftNavBar: false,\r\n    stickyLeftNavBar: false,\r\n    layoutMode: \"with-margin\",\r\n    // | \"without-margin\" | \"default\",\r\n    title: \"\",\r\n    menuItems: [],\r\n    signoutAction: /** @type {?} */ ({}),\r\n    menu_item_authorization_operator: menu_item_authorization_operator\r\n};\r\n/** @type {?} */\r\nvar MODULE_CONFIG_TOKEN = new InjectionToken(\"LayoutModuleConfigModel\");\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar LayoutConfigurationService = /** @class */ (function () {\r\n    function LayoutConfigurationService(configFile, store) {\r\n        var _this = this;\r\n        this.store = store;\r\n        this.config$ = new BehaviorSubject(this._config);\r\n        this._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n        this.config$.next(this._config);\r\n        this.store\r\n            .select(getConfigs)\r\n            .map(function (configs) { return configs.find(function (config) { return config.Name == \"layout_config\"; }); })\r\n            .subscribe(function (config) {\r\n            if (!config)\r\n                return;\r\n            _this.store.dispatch(new UpdateLayoutConfigAction(config.Config));\r\n            _this._config = Object.assign({}, _this._config, config.Config);\r\n            _this.config$.next(_this._config);\r\n        });\r\n    }\r\n    Object.defineProperty(LayoutConfigurationService.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._config;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LayoutConfigurationService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    LayoutConfigurationService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [MODULE_CONFIG_TOKEN,] }] },\r\n        { type: Store }\r\n    ]; };\r\n    /** @nocollapse */ LayoutConfigurationService.ngInjectableDef = defineInjectable({ factory: function LayoutConfigurationService_Factory() { return new LayoutConfigurationService(inject(MODULE_CONFIG_TOKEN), inject(Store)); }, token: LayoutConfigurationService, providedIn: \"root\" });\r\n    return LayoutConfigurationService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar MainMenuComponent = /** @class */ (function () {\r\n    function MainMenuComponent(store, signinService, configurationService) {\r\n        this.store = store;\r\n        this.signinService = signinService;\r\n        this.configurationService = configurationService;\r\n        this.closeSidebar = new EventEmitter();\r\n        this.user$ = this.store.select(getAccountInfo);\r\n        this._observe_on_layout_config_and_filter_routes();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MainMenuComponent.prototype._observe_on_layout_config_and_filter_routes = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.routes$ = this.configurationService.config$.pipe(map(function (config) { return config.menuItems; }), combineLatest(this.user$), map(this.configurationService.config$.getValue().menu_item_authorization_operator));\r\n    };\r\n    MainMenuComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"ngs-layout-main-menu\",\r\n                    template: \"<mat-list class=\\\"main-menu-container\\\">\\n  <div *ngIf=\\\"authenticated | async\\\">\\n    <a *ngFor=\\\"let item of routes$ | async\\\" (click)=\\\"closeSidebar.emit()\\\" routerLinkActive=\\\"active\\\" mat-list-item [routerLink]=\\\"[item.route]\\\">\\n      <mat-icon mat-list-icon>{{item.icon}}</mat-icon>\\n      <span mdLine>{{item.title}}</span>\\n    </a>\\n  </div>\\n</mat-list>\",\r\n                    styles: [\".active{background:rgba(0,0,0,.15)}.mat-list-item.active mat-icon{color:#0072ae}a.mat-list-item.child{margin-right:20px}#clearUserMenuItem{position:absolute;left:13px;top:13px}\"],\r\n                    animations: [\r\n                        trigger(\"childMenu\", [\r\n                            state(\"inactive\", style({\r\n                                // transform: 'scale(1)',\r\n                                height: \"0px\",\r\n                                opacity: \"0\"\r\n                            })),\r\n                            state(\"active\", style({\r\n                                // transform: 'scale(1.1)',\r\n                                height: \"48px\",\r\n                                opacity: \"1\"\r\n                            })),\r\n                            transition(\"inactive => active\", animate(\"100ms ease-in\")),\r\n                            transition(\"active => inactive\", animate(\"100ms ease-out\"))\r\n                        ]),\r\n                        trigger(\"menuItem\", [\r\n                            state(\"inactive\", style({\r\n                                height: \"48px\"\r\n                            })),\r\n                            state(\"active\", style({\r\n                                height: \"100px\"\r\n                            })),\r\n                            transition(\"inactive => active\", animate(\"100ms ease-in\")),\r\n                            transition(\"active => inactive\", animate(\"100ms ease-out\"))\r\n                        ])\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MainMenuComponent.ctorParameters = function () { return [\r\n        { type: Store },\r\n        { type: SigninService },\r\n        { type: LayoutConfigurationService }\r\n    ]; };\r\n    MainMenuComponent.propDecorators = {\r\n        closeSidebar: [{ type: Output }],\r\n        authenticated: [{ type: Input }],\r\n        customerMobileInput: [{ type: ViewChild, args: [\"customerMobileInput\",] }]\r\n    };\r\n    return MainMenuComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SearchBoxComponent = /** @class */ (function () {\r\n    function SearchBoxComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SearchBoxComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n    };\r\n    SearchBoxComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'app-search-box',\r\n                    template: \"<div class=\\\"search-box\\\">\\n  <!--<td-search-box class=\\\"search-box-container\\\" backIcon=\\\"arrow_back\\\" placeholder=\\\"\\u062C\\u0633\\u062A\\u062C\\u0648\\\" [showUnderline]=\\\"false\\\" [debounce]=\\\"500\\\" [alwaysVisible]=\\\"false\\\"\\n                 (searchDebounce)=\\\"searchInputTerm = $event\\\" (search)=\\\"searchInputTerm = $event\\\" (clear)=\\\"searchInputTerm = ''\\\">\\n  </td-search-box>-->\\n</div>\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SearchBoxComponent.ctorParameters = function () { return []; };\r\n    return SearchBoxComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar LogoContainerComponent = /** @class */ (function () {\r\n    function LogoContainerComponent(sdf) {\r\n        this.sdf = sdf;\r\n    }\r\n    LogoContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"app-logo-container\",\r\n                    template: \"\\n<!--<img class=\\\"logoTypeAnimation\\\" src='../../../assets/images/logo-type.png' />-->\",\r\n                    styles: [\".logoAnimation{height:36px;cursor:pointer;z-index:2}#background{position:absolute;top:0;right:0;width:300px;height:70px}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    LogoContainerComponent.ctorParameters = function () { return [\r\n        { type: LayoutConfigurationService }\r\n    ]; };\r\n    return LogoContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ToolbarMenuComponent = /** @class */ (function () {\r\n    function ToolbarMenuComponent(document, _location, store, configurationService) {\r\n        var _this = this;\r\n        this.document = document;\r\n        this._location = _location;\r\n        this.store = store;\r\n        this.configurationService = configurationService;\r\n        this.toolbarAnimationState = \"compact\";\r\n        this.menuAnimationState = \"compact\";\r\n        this.logoAnimationState = \"compact\";\r\n        this.titleAnimationState = \"compact\";\r\n        this.anchorsMode = false;\r\n        this.user$ = this.store.select(getAccountInfo);\r\n        this.store.dispatch(new ChangeToolbatToComfortableModeAction());\r\n        this.config$ = this.store.select(getLayoutToolbar);\r\n        this.config$.subscribe(function (config) { return (_this.config = config); });\r\n        this.lastScroll = this.document.body.scrollTop;\r\n        this.showSecondSidenav = this.store.select(getShowSecondSidebarStatus$1);\r\n        this.showMainSidenav = this.store.select(getShowMainSidenav$1);\r\n        this.store.select(getLayoutToolbarMode).subscribe(function (state$$1) {\r\n            setTimeout(function () { return (_this.menuAnimationState = state$$1); }, 1);\r\n            setTimeout(function () { return (_this.logoAnimationState = state$$1); }, 1);\r\n            setTimeout(function () { return (_this.titleAnimationState = state$$1); }, 1);\r\n            setTimeout(function () { return (_this.toolbarAnimationState = state$$1); }, 1);\r\n        });\r\n        this._observe_on_layout_config_and_filter_routes();\r\n        fromEvent(this.document.body, \"scroll\").subscribe(function () {\r\n            /** @type {?} */\r\n            var scrolledAmount = _this.document.body.scrollTop;\r\n            /** @type {?} */\r\n            var scrollToTop = scrolledAmount - _this.lastScroll < 0 && _this.document.body.scrollHeight - scrolledAmount < 300;\r\n            // let scrollToTop = scrolledAmount - this.lastScroll < 0;\r\n            // let scrollToTop = scrolledAmount - this.lastScroll < 0;\r\n            _this.lastScroll = _this.document.body.scrollTop;\r\n            if (!_this.config.visibility)\r\n                return;\r\n            if (scrolledAmount == 0) {\r\n                if (_this.config.mode == \"comfortable\")\r\n                    return;\r\n                _this.store.dispatch(new ChangeToolbatToComfortableModeAction());\r\n            }\r\n            else if (scrolledAmount < 200 || scrollToTop) {\r\n                if (_this.config.mode == \"compact\")\r\n                    return;\r\n                _this.store.dispatch(new ChangeToolbatToCompactModeAction());\r\n            }\r\n            else {\r\n                if (_this.config.mode == \"summary\")\r\n                    return;\r\n                _this.store.dispatch(new ChangeToolbatToSummaryModeAction());\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ToolbarMenuComponent.prototype.onWindowScroll = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // of(1)\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ToolbarMenuComponent.prototype.signout = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.store.dispatch(new DoSignoutAction$1());\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ToolbarMenuComponent.prototype.goback = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._location.back();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ToolbarMenuComponent.prototype.toggleSecondSidebar = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var action;\r\n        this.showSecondSidenav.subscribe(function (state$$1) {\r\n            action = state$$1 ? new CloseSecondSidenavAction() : new OpenSecondSidenavAction();\r\n        });\r\n        this.store.dispatch(action);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ToolbarMenuComponent.prototype.toggleMainSidebar = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var action;\r\n        this.showMainSidenav.subscribe(function (state$$1) {\r\n            action = state$$1 ? new CloseSidenavAction() : new OpenSidenavAction();\r\n        });\r\n        this.store.dispatch(action);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ToolbarMenuComponent.prototype._observe_on_layout_config_and_filter_routes = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.menuItems$ = this.configurationService.config$.pipe(map(function (config) { return config.menuItems; }), combineLatest(this.user$), map(this.configurationService.config$.getValue().menu_item_authorization_operator));\r\n    };\r\n    ToolbarMenuComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"layout-toolbar\",\r\n                    template: \"<mat-toolbar [@toolbarAnimation]=\\\"toolbarAnimationState\\\">\\n  <mat-toolbar-row id=\\\"firstToolbar\\\">\\n    <!-- <div id=\\\"background\\\"></div> -->\\n    <img [@logoAnimation]=\\\"logoAnimationState\\\" id=\\\"logo\\\" routerLink='/' src='assets/images/shatel-logo.png' />\\n\\n    <button type=\\\"button\\\" *ngIf='showSidebarMenu && false' (click)=\\\"toggleMainSidebar()\\\" mat-icon-button fxFlex=\\\"nogrow\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n    <span [@titleAnimation]=\\\"titleAnimationState\\\" id='app-name'>\\n      {{app_config?.Config.AppTitle}}\\n    </span>\\n    <app-title fxFlex fxLayoutAlign=\\\"start center\\\"></app-title>\\n    <app-search-box fxFlex fxLayoutAlign=\\\"end center\\\"></app-search-box>\\n\\n\\n    <button *ngIf=\\\"!displayName\\\" mat-button routerLink=\\\"auth/signin\\\">\\n      \\u0648\\u0631\\u0648\\u062F\\n    </button>\\n    <button *ngIf=\\\"!displayName\\\" mat-button routerLink=\\\"auth/signup\\\">\\n      \\u062B\\u0628\\u062A \\u0646\\u0627\\u0645\\n    </button>\\n    <button *ngIf=\\\"displayName\\\" mat-icon-button [matMenuTriggerFor]=\\\"toolbarMenu1\\\">\\n      <mat-icon>account_circle</mat-icon>\\n    </button>\\n    <mat-menu #toolbarMenu1 class=\\\"rtl-dir\\\">\\n      <div id=\\\"acccountName\\\">\\n        {{displayName}}\\n      </div>\\n      <button routerLink='/user/panel' mat-menu-item class=\\\"rtl-dir\\\">\\n        <mat-icon>fingerprint</mat-icon>\\n        <span>\\n          \\u0645\\u062F\\u06CC\\u0631\\u06CC\\u062A \\u06A9\\u0627\\u0631\\u0628\\u0631\\u06CC\\n        </span>\\n      </button>\\n      <button (click)='signout()' mat-menu-item class=\\\"rtl-dir\\\">\\n        <mat-icon>exit_to_app</mat-icon>\\n        <span>\\u062E\\u0631\\u0648\\u062C</span>\\n      </button>\\n    </mat-menu>\\n    <button mat-icon-button type=\\\"button\\\" (click)=\\\"toggleSecondSidebar()\\\" fxFlex=\\\"nogrow\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-icon>notifications</mat-icon>\\n    </button>\\n    <button mat-icon-button (click)='goback()'>\\n      <mat-icon>arrow_back</mat-icon>\\n    </button>\\n\\n  </mat-toolbar-row>\\n  <mat-toolbar-row>\\n    <div id=\\\"secondToolbar\\\" [@menuAnimation]=\\\"menuAnimationState\\\">\\n      <router-outlet name=\\\"ngs-layout-before-toolbar-menu\\\"></router-outlet>\\n      <button mat-button *ngFor=\\\"let menu of menuItems$ | async\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"[menu.route]\\\">\\n        <!-- <mat-icon mat-list-icon>{{menu.icon}}</mat-icon> -->\\n        <span>{{menu.title}}</span>\\n      </button>\\n      <router-outlet name=\\\"ngs-layout-after-toolbar-menu\\\"></router-outlet>\\n    </div>\\n  </mat-toolbar-row>\\n</mat-toolbar>\",\r\n                    styles: [\"mat-toolbar{background-color:#fff!important;top:0;box-shadow:rgba(0,0,0,.5) 1px 1px 3px!important}#secondToolbar{transition:none;position:absolute}#secondToolbar button{opacity:.6;font-family:iran-sans-bold,sans-serif!important;font-size:.65em!important}#secondToolbar.active{opacity:1}#logo{transition:none;position:absolute}#app-name{padding-right:8px;font-family:iran-sans-bold,sans-serif!important}button.rtl-dir{direction:rtl!important}#acccountName{display:block;text-align:right;padding-right:20px;font-size:14px;font-weight:bolder}\"],\r\n                    animations: [\r\n                        trigger(\"logoAnimation\", [\r\n                            state(\"comfortable\", style({\r\n                                width: \"90px\",\r\n                                height: \"90px\",\r\n                                top: \"50px\",\r\n                                right: \"calc(50% - 50px)\"\r\n                            })),\r\n                            state(\"compact\", style({\r\n                                width: \"36px\",\r\n                                height: \"36px\",\r\n                                top: \"13px\",\r\n                                right: \"13px\"\r\n                            })),\r\n                            state(\"summary\", style({\r\n                                width: \"36px\",\r\n                                height: \"36px\",\r\n                                top: \"76px\",\r\n                                right: \"10px\"\r\n                            })),\r\n                            state(\"hide\", style({\r\n                                width: \"0\",\r\n                                height: \"0\",\r\n                                top: \"76px\",\r\n                                right: \"10px\"\r\n                            })),\r\n                            transition(\"comfortable => compact\", animate(\"800ms ease-out\")),\r\n                            transition(\"comfortable => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => comfortable\", animate(\"800ms ease-in\")),\r\n                            transition(\"compact => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => compact\", animate(\"800ms ease-in\")),\r\n                            transition(\"summary => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => summary\", animate(\"800ms ease-in\")),\r\n                            // transition(\"comfortable => summary\", animate(\"800ms ease-in\")),\r\n                            transition(\"summary => compact\", animate(\"400ms ease-out\")),\r\n                            transition(\"summary => comfortable\", animate(\"800ms ease-out\")),\r\n                            transition(\"compact => comfortable\", animate(\"800ms ease-out\")),\r\n                            transition(\"compact => summary\", animate(\"400ms ease-out\"))\r\n                        ]),\r\n                        trigger(\"menuAnimation\", [\r\n                            state(\"comfortable\", style({\r\n                                right: \"50%\",\r\n                                transform: \"translateX(50%)\",\r\n                                bottom: \"25px\"\r\n                            })),\r\n                            state(\"compact\", style({\r\n                                right: \"45px\",\r\n                                transform: \"translateX(0)\",\r\n                                bottom: \"13px\"\r\n                            })),\r\n                            state(\"summary\", style({\r\n                                right: \"75px\",\r\n                                transform: \"translateX(0)\",\r\n                                bottom: \"14px\"\r\n                            })),\r\n                            state(\"hide\", style({\r\n                                right: \"75px\",\r\n                                transform: \"translateX(0)\",\r\n                                bottom: \"14px\"\r\n                            })),\r\n                            transition(\"comfortable => compact\", animate(\"800ms ease-in\")),\r\n                            transition(\"comfortable => hide\", animate(\"400ms ease-in\")),\r\n                            transition(\"hide => comfortable\", animate(\"600ms ease-in\")),\r\n                            transition(\"compact => hide\", animate(\"400ms ease-in\")),\r\n                            transition(\"hide => compact\", animate(\"600ms ease-in\")),\r\n                            transition(\"summary => hide\", animate(\"400ms ease-in\")),\r\n                            transition(\"hide => summary\", animate(\"600ms ease-in\")),\r\n                            // transition(\"comfortable => summary\", animate(\"800ms ease-in\")),\r\n                            transition(\"summary => compact\", animate(\"400ms ease-out\")),\r\n                            transition(\"summary => comfortable\", animate(\"800ms ease-out\")),\r\n                            transition(\"compact => comfortable\", animate(\"800ms ease-out\")),\r\n                            transition(\"compact => summary\", animate(\"400ms ease-in\"))\r\n                        ]),\r\n                        trigger(\"titleAnimation\", [\r\n                            state(\"comfortable\", style({\r\n                                \"margin-right\": \"0px\",\r\n                                \"font-size\": \"larger\",\r\n                                \"font-weight\": \"bolder\",\r\n                                transform: \"translateX(50%)\",\r\n                                right: \"calc(50%)\",\r\n                                bottom: \"75px\",\r\n                                position: \"absolute\",\r\n                                padding: 0\r\n                            })),\r\n                            state(\"compact\", style({\r\n                                \"margin-right\": \"0px\",\r\n                                \"font-size\": \"16px\",\r\n                                \"font-weight\": \"bolder\",\r\n                                transform: \"translateX(0)\",\r\n                                right: \"60px\",\r\n                                bottom: \"79px\",\r\n                                position: \"absolute\",\r\n                                padding: 0\r\n                            })),\r\n                            state(\"summary\", style({\r\n                                \"margin-right\": \"0px\",\r\n                                \"font-size\": \"16px\",\r\n                                \"font-weight\": \"bolder\",\r\n                                transform: \"translateX(0)\",\r\n                                right: \"60px\",\r\n                                bottom: \"79px\",\r\n                                position: \"absolute\",\r\n                                padding: 0\r\n                            })),\r\n                            state(\"hide\", style({\r\n                                \"margin-right\": \"0px\",\r\n                                \"font-size\": \"1px\",\r\n                                \"font-weight\": \"bolder\",\r\n                                transform: \"translateX(0)\",\r\n                                right: \"60px\",\r\n                                bottom: \"79px\",\r\n                                position: \"absolute\",\r\n                                padding: 0\r\n                            })),\r\n                            transition(\"comfortable => compact\", animate(\"850ms ease-out\")),\r\n                            transition(\"comfortable => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => comfortable\", animate(\"800ms ease-in\")),\r\n                            transition(\"compact => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => compact\", animate(\"800ms ease-in\")),\r\n                            transition(\"summary => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => summary\", animate(\"800ms ease-in\")),\r\n                            // transition(\"comfortable => summary\", animate(\"800ms ease-in\")),\r\n                            transition(\"summary => compact\", animate(\"400ms ease-out\")),\r\n                            transition(\"summary => comfortable\", animate(\"800ms ease-out\")),\r\n                            transition(\"compact => comfortable\", animate(\"800ms ease-out\")),\r\n                            transition(\"compact => summary\", animate(\"400ms ease-in\"))\r\n                        ]),\r\n                        trigger(\"toolbarAnimation\", [\r\n                            state(\"comfortable\", style({\r\n                                // backgroundColor: \"rgba(119,181,63,1)\",\r\n                                backgroundColor: \"rgba(256,256,256,1)\",\r\n                                color: \"rgba(30,30,30,1)\",\r\n                                height: \"33vh\",\r\n                                top: \"0\",\r\n                                boxShadow: \"1px 1px 3px rgba(0,0,0,0)\"\r\n                            })),\r\n                            state(\"compact\", style({\r\n                                backgroundColor: \"rgba(256,256,256,1)\",\r\n                                height: \"128px\",\r\n                                top: \"0\",\r\n                                boxShadow: \"1px 1px 3px rgba(0,0,0,0.5)\"\r\n                            })),\r\n                            state(\"summary\", style({\r\n                                backgroundColor: \"rgba(256,256,256,1)\",\r\n                                height: \"128px\",\r\n                                top: \"-64px\",\r\n                                boxShadow: \"1px 1px 3px rgba(0,0,0,0.5)\"\r\n                            })),\r\n                            state(\"hide\", style({\r\n                                backgroundColor: \"rgba(256,256,256,1)\",\r\n                                height: \"128px\",\r\n                                top: \"-128px\",\r\n                                boxShadow: \"1px 1px 3px rgba(0,0,0,0.5)\"\r\n                            })),\r\n                            transition(\"comfortable => compact\", animate(\"800ms ease-in\")),\r\n                            transition(\"comfortable => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => comfortable\", animate(\"800ms ease-in\")),\r\n                            transition(\"compact => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => compact\", animate(\"800ms ease-in\")),\r\n                            transition(\"summary => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => summary\", animate(\"800ms ease-in\")),\r\n                            // transition(\"comfortable => summary\", animate(\"800ms ease-in\")),\r\n                            transition(\"summary => compact\", animate(\"400ms ease-out\")),\r\n                            transition(\"summary => comfortable\", animate(\"800ms ease-out\")),\r\n                            transition(\"compact => comfortable\", animate(\"800ms ease-out\")),\r\n                            transition(\"compact => summary\", animate(\"400ms ease-in\"))\r\n                        ])\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ToolbarMenuComponent.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\r\n        { type: Location },\r\n        { type: Store },\r\n        { type: LayoutConfigurationService }\r\n    ]; };\r\n    ToolbarMenuComponent.propDecorators = {\r\n        showSidebarMenu: [{ type: Input }],\r\n        app_config: [{ type: Input, args: [\"app-config\",] }],\r\n        user: [{ type: Input }],\r\n        displayName: [{ type: Input }],\r\n        onWindowScroll: [{ type: HostListener, args: [\"body:scroll\", [],] }]\r\n    };\r\n    return ToolbarMenuComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FooterComponent = /** @class */ (function () {\r\n    function FooterComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    FooterComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    FooterComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"app-footer\",\r\n                    template: \"<div fxLayoutAlign=\\\"center center\\\" class=\\\"footer-text\\\">\\n    {{app_config?.Config.FooterCopyright}}\\n</div>\",\r\n                    styles: [\":host{border-top:1px solid #e5e5e5;padding:8px;overflow:hidden}.footer-text{position:relative;top:12px}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    FooterComponent.ctorParameters = function () { return []; };\r\n    FooterComponent.propDecorators = {\r\n        app_config: [{ type: Input, args: [\"app-config\",] }]\r\n    };\r\n    return FooterComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar TitleComponent = /** @class */ (function () {\r\n    function TitleComponent(store, router) {\r\n        var _this = this;\r\n        this.store = store;\r\n        this.router = router;\r\n        this.mapper = [];\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.endsWith('profile-edit')) ? 'ویرایش اطلاعات کاربری' : null;\r\n        // });\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.endsWith('success-payment-report')) ? 'گزارش پرداخت های موفق' : null;\r\n        // });\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.endsWith('failed-login-report')) ? 'گزارش خطاها' : null;\r\n        // });\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.endsWith('active-session-info')) ? 'جزئیات بسته فعال' : null;\r\n        // });\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.endsWith('session-detail-report')) ? 'جزئیات اتصال' : null;\r\n        // });\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.endsWith('daily-session-report')) ? 'گزارش تجمیعی روزانه' : null;\r\n        // });\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.endsWith('monthly-session-report')) ? 'گزارش تجمیعی ماهانه' : null;\r\n        // });\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.startsWith('/packages/user-packages')) ? 'لیست پکیج ها' : null;\r\n        // });\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.endsWith('/change-password')) ? 'تغییر کلمه عبور' : null;\r\n        // });\r\n        this.title$ = this.store.select(getTitle$1);\r\n        this.router.events.subscribe(function (event) {\r\n            if (event instanceof NavigationEnd) {\r\n                /** @type {?} */\r\n                var title = \"\";\r\n                _this.mapper.forEach(function (mapper) {\r\n                    /** @type {?} */\r\n                    var res = mapper(event);\r\n                    if (res) {\r\n                        title = res;\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        return false;\r\n                    }\r\n                });\r\n                _this.store.dispatch(new TitleChangedAction(\"/ \" + title || \"\"));\r\n            }\r\n        });\r\n    }\r\n    TitleComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"app-title\",\r\n                    template: \"<div id=\\\"title\\\">\\n    {{title$ | async}}\\n</div>\",\r\n                    styles: [\"#title{margin-right:-30px;font-weight:bolder;font-size:13px;padding:18px 40px}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    TitleComponent.ctorParameters = function () { return [\r\n        { type: Store },\r\n        { type: Router }\r\n    ]; };\r\n    return TitleComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NgsLayoutMainComponent = /** @class */ (function () {\r\n    function NgsLayoutMainComponent(store, router, configService, translateService, userFacadeService) {\r\n        var _this = this;\r\n        this.store = store;\r\n        this.router = router;\r\n        this.configService = configService;\r\n        this.translateService = translateService;\r\n        this.userFacadeService = userFacadeService;\r\n        this.showSidebarMenu = new BehaviorSubject$1(true);\r\n        this.width = 100;\r\n        this._set_i18n_resource();\r\n        this.configService.config$.subscribe(function (config) {\r\n            _this.theme = config.theme;\r\n            _this.theme_A = config.theme == \"theme_A\";\r\n            _this.theme_B = config.theme == \"theme_B\";\r\n        });\r\n        this.store.dispatch(new ChangeSideNavMode(\"push\"));\r\n        this.user$ = this.store.select(function (s) { return (/** @type {?} */ (s)).user.user.data; });\r\n        this.displayName$ = this.userFacadeService.getDisplayName();\r\n        this.showMainSidenav = this.store.select(getShowMainSidenav$1);\r\n        this.mainSidenavMode = this.store.select(getMainSideNavMode$1);\r\n        this.toolbarAnimationState = this.store.select(getLayoutToolbarMode);\r\n        this.isFullscreen$ = this.store.select(getFullscreenMode$1);\r\n        this.mode$ = this.isFullscreen$.map(function (mode) { return (mode ? \"invisible\" : \"visible\"); });\r\n        //#region manage second sidebar\r\n        this.store.dispatch(new ChangeSecondSidenavMode(\"push\"));\r\n        this.showSecondSidenav = this.store.select(getShowSecondSidebarStatus$1);\r\n        this.secondSidenavMode = this.store.select(getSecondSidebarMode$1);\r\n        //#endregion manage second sidebar\r\n        this.layoutMode = this.store.select(getLayoutMode$1);\r\n        this.router.events.filter(function (data) { return data instanceof NavigationEnd; }).subscribe(function (event) {\r\n            /** @type {?} */\r\n            var hideSituations = [\r\n                (/** @type {?} */ (event)).urlAfterRedirects == \"/auth/signin\",\r\n                (/** @type {?} */ (event)).urlAfterRedirects == \"/auth/signup/register\",\r\n                (/** @type {?} */ (event)).urlAfterRedirects == \"/auth/signup/verification\",\r\n                (/** @type {?} */ (event)).urlAfterRedirects == \"/user/password/reset\"\r\n            ];\r\n            if (hideSituations.some(function (i) { return i; }))\r\n                _this.showSidebarMenu.next(false);\r\n            else\r\n                _this.showSidebarMenu.next(true);\r\n        });\r\n    }\r\n    // ngAfterViewInit() {\r\n    // \tthis.store.dispatch(new ChangeLayout(\"with-margin\"));\r\n    // }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgsLayoutMainComponent.prototype.onSecondSidebarClosedStart = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.store.dispatch(new CloseSecondSidenavAction());\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgsLayoutMainComponent.prototype.onSidebarClosedStart = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.store.dispatch(new CloseSidenavAction());\r\n    };\r\n    /**\r\n     * private methods\r\n     */\r\n    /**\r\n     * private methods\r\n     * @return {?}\r\n     */\r\n    NgsLayoutMainComponent.prototype._set_i18n_resource = /**\r\n     * private methods\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.translateService.setTranslation(\"en\", {\r\n            __signin: \"Signin\",\r\n            __signup: \"Signup\",\r\n            __account_mangement: \"Account\",\r\n            __signout: \"Signout\"\r\n        });\r\n        this.translateService.setTranslation(\"fa\", {\r\n            __signin: \"ورود\",\r\n            __signup: \"ثبت نام\",\r\n            __account_mangement: \"مدریت کاربری\",\r\n            __signout: \"خروج\"\r\n        });\r\n    };\r\n    NgsLayoutMainComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"layout-main\",\r\n                    template: \"<div #mainSideNav [ngClass]=\\\"toolbarAnimationState | async\\\" [class.fullscreen]=\\\"isFullscreen$ | async\\\">\\n  <!-- <mat-progress-bar *ngIf='progressStatus$ | async' color=\\\"primary\\\" mode=\\\"query\\\"></mat-progress-bar> -->\\n  <layout-toolbar  *ngIf=\\\"theme == 'theme_A'\\\" [user]=\\\"user$ | async\\\" [displayName]=\\\"displayName$ | async\\\" [showSidebarMenu]='showSidebarMenu | async' [app-config]=\\\"app_config\\\"></layout-toolbar>\\n  <layout-toolbar-b *ngIf=\\\"theme == 'theme_B'\\\" [user]=\\\"user$ | async\\\" [displayName]=\\\"displayName$ | async\\\" [showSidebarMenu]='showSidebarMenu | async' [app-config]=\\\"app_config\\\"></layout-toolbar-b>\\n  \\n  <mat-sidenav-container id=\\\"layout-sidnav\\\" [className]=\\\"layoutMode | async\\\">\\n    <mat-sidenav [mode]=\\\"mainSidenavMode | async\\\" [opened]='showMainSidenav | async' #sidebar (closedStart)=\\\"onSidebarClosedStart()\\\">\\n      <mat-nav-list>\\n        <ngs-layout-main-menu [authenticated]='showSidebarMenu' (closeSidebar)=\\\"sidebar.close()\\\" (click)=\\\"onSecondSidebarClosedStart()\\\"></ngs-layout-main-menu>\\n      </mat-nav-list>\\n    </mat-sidenav>\\n    <!-- <mat-sidenav [mode]=\\\"secondSidenavMode | async\\\" [opened]='showSecondSidenav | async' (closedStart)=\\\"onSecondSidebarClosedStart()\\\"\\n      position=\\\"end\\\" #second_sidebar class=\\\"second_sidebar\\\">\\n      <mat-nav-list fxLayout='column'>\\n      </mat-nav-list>\\n    </mat-sidenav> -->\\n    <div fxFlexLayout='column' id=\\\"app-main-container\\\" fxLayoutAlign='center center'>\\n      <div fxFlex='0 0 100'>\\n        <router-outlet></router-outlet>\\n        <footer [@mode]=\\\"mode$ | async\\\" ruleAnchor=\\\"layout_footer\\\">\\n          <router-outlet name=\\\"footer_A\\\"></router-outlet>\\n          <router-outlet name=\\\"footer_B\\\"></router-outlet>\\n          <app-footer [app-config]=\\\"app_config\\\"></app-footer>\\n        </footer>\\n      </div>\\n    </div>\\n  </mat-sidenav-container>\\n</div>\",\r\n                    styles: [\"#purchase-fab-button{position:fixed;bottom:23px;left:31px}md-progress-bar{position:absolute!important}.with-margin #app-main-container{margin-top:25px;padding-right:25px;padding-left:25px}.second_sidebar{width:380px}.more-detail{margin:8px;box-sizing:border-box;padding:10px;text-align:center;width:96%;border:1px solid #dedede;outline:0;cursor:pointer;transition:.3s}.more-detail:hover{background:#eee}footer{border-top:1px solid #e5e5e5;margin-top:25px;background-color:#f1f1f1}\"],\r\n                    animations: [\r\n                        trigger(\"mode\", [\r\n                            state(\"visible\", style({ transform: \"scaleY(1) translateY(0)\" })),\r\n                            state(\"invisible\", style({ height: \"0\", transform: \"scaleY(0) translateY(100%)\" })),\r\n                            transition(\"visible => invisible\", [animate(\"1000ms\")]),\r\n                            transition(\"invisible => visible\", [animate(\"1000ms\")])\r\n                        ])\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NgsLayoutMainComponent.ctorParameters = function () { return [\r\n        { type: Store },\r\n        { type: Router },\r\n        { type: LayoutConfigurationService },\r\n        { type: TranslateService },\r\n        { type: UserFacadeService }\r\n    ]; };\r\n    NgsLayoutMainComponent.propDecorators = {\r\n        app_config: [{ type: Input, args: [\"app-config\",] }],\r\n        mainSideNav: [{ type: ViewChild, args: [\"mainSideNav\",] }],\r\n        theme_A: [{ type: HostBinding, args: [\"class.theme_A\",] }],\r\n        theme_B: [{ type: HostBinding, args: [\"class.theme_B\",] }]\r\n    };\r\n    return NgsLayoutMainComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar LayoutEffects = /** @class */ (function () {\r\n    function LayoutEffects(actions$, router, store) {\r\n        this.actions$ = actions$;\r\n        this.router = router;\r\n        this.store = store;\r\n        this.DoSignout$ = this.actions$.ofType(LayoutActionTypes.DO_SIGNOUT).pipe(map(function () { return new DoSignoutAction(); }));\r\n        this.fullscreen$ = this.actions$.ofType(LayoutActionTypes.FULLSCREEN).pipe(map(function () { return new InvisibleToolbarAction(); }));\r\n        this.exit_fullscreen$ = this.actions$\r\n            .ofType(LayoutActionTypes.EXIT_FULLSCREEN)\r\n            .pipe(map(function () { return new VisibleToolbarAction(); }));\r\n        this.fullscren_toolbar$ = this.actions$.ofType(LayoutActionTypes.TOGGLE_FULLSCREEN).pipe(withLatestFrom(this.store.select(getFullscreenMode$1)), map(function (_a) {\r\n            var _b = __read(_a, 2), action = _b[0], toolbarMode = _b[1];\r\n            if (toolbarMode)\r\n                return new ExitFullscreenAction();\r\n            else\r\n                return new FullscreenAction();\r\n        }));\r\n    }\r\n    LayoutEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    LayoutEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: Router },\r\n        { type: Store }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], LayoutEffects.prototype, \"DoSignout$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], LayoutEffects.prototype, \"fullscreen$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], LayoutEffects.prototype, \"exit_fullscreen$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], LayoutEffects.prototype, \"fullscren_toolbar$\", void 0);\r\n    return LayoutEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ToolbarMenuThemeBComponent = /** @class */ (function () {\r\n    function ToolbarMenuThemeBComponent(document, _location, store, translateService, configurationService) {\r\n        var _this = this;\r\n        this.document = document;\r\n        this._location = _location;\r\n        this.store = store;\r\n        this.translateService = translateService;\r\n        this.configurationService = configurationService;\r\n        this.toolbarAnimationState = \"compact\";\r\n        this.menuAnimationState = \"compact\";\r\n        this.logoAnimationState = \"compact\";\r\n        this.titleAnimationState = \"compact\";\r\n        this.anchorsMode = false;\r\n        this.user$ = this.store.select(getAccountInfo);\r\n        this.store.dispatch(new ChangeToolbatToComfortableModeAction());\r\n        this.config$ = this.store.select(getLayoutToolbar);\r\n        this.config$.subscribe(function (config) { return (_this.config = config); });\r\n        this.lastScroll = this.document.body.scrollTop;\r\n        this.showSecondSidenav = this.store.select(getShowSecondSidebarStatus$1);\r\n        this.showMainSidenav = this.store.select(getShowMainSidenav$1);\r\n        this.store.select(getLayoutToolbarMode).subscribe(function (state$$1) {\r\n            setTimeout(function () { return (_this.menuAnimationState = state$$1); }, 1);\r\n            setTimeout(function () { return (_this.logoAnimationState = state$$1); }, 1);\r\n            setTimeout(function () { return (_this.titleAnimationState = state$$1); }, 1);\r\n            setTimeout(function () { return (_this.toolbarAnimationState = state$$1); }, 1);\r\n        });\r\n        this._observe_on_layout_config_and_filter_routes();\r\n        fromEvent(this.document.body, \"scroll\").subscribe(function () {\r\n            /** @type {?} */\r\n            var scrolledAmount = _this.document.body.scrollTop;\r\n            /** @type {?} */\r\n            var scrollToTop = scrolledAmount - _this.lastScroll < 0 &&\r\n                _this.document.body.scrollHeight - document.body.offsetHeight - scrolledAmount > 300;\r\n            // let scrollToTop = scrolledAmount - this.lastScroll < 0;\r\n            // let scrollToTop = scrolledAmount - this.lastScroll < 0;\r\n            _this.lastScroll = scrolledAmount;\r\n            if (!_this.config.visibility)\r\n                return;\r\n            if (scrolledAmount == 0) {\r\n                if (_this.config.mode == \"comfortable\")\r\n                    return;\r\n                _this.store.dispatch(new ChangeToolbatToComfortableModeAction());\r\n            }\r\n            else if (scrolledAmount < 150 || scrollToTop) {\r\n                if (_this.config.mode == \"compact\")\r\n                    return;\r\n                _this.store.dispatch(new ChangeToolbatToCompactModeAction());\r\n            }\r\n            else {\r\n                if (_this.config.mode == \"summary\")\r\n                    return;\r\n                _this.store.dispatch(new ChangeToolbatToSummaryModeAction());\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ToolbarMenuThemeBComponent.prototype.onWindowScroll = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // of(1)\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ToolbarMenuThemeBComponent.prototype.signout = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.store.dispatch(new DoSignoutAction$1());\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ToolbarMenuThemeBComponent.prototype.goback = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._location.back();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ToolbarMenuThemeBComponent.prototype.toggleSecondSidebar = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var action;\r\n        this.showSecondSidenav.subscribe(function (state$$1) {\r\n            action = state$$1 ? new CloseSecondSidenavAction() : new OpenSecondSidenavAction();\r\n        });\r\n        this.store.dispatch(action);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ToolbarMenuThemeBComponent.prototype.toggleMainSidebar = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var action;\r\n        this.showMainSidenav.subscribe(function (state$$1) {\r\n            action = state$$1 ? new CloseSidenavAction() : new OpenSidenavAction();\r\n        });\r\n        this.store.dispatch(action);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ToolbarMenuThemeBComponent.prototype._observe_on_layout_config_and_filter_routes = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.menuItems$ = this.configurationService.config$.pipe(map(function (config) { return config.menuItems; }), combineLatest(this.user$), map(this.configurationService.config$.getValue().menu_item_authorization_operator));\r\n    };\r\n    ToolbarMenuThemeBComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"layout-toolbar-b\",\r\n                    template: \"<mat-toolbar dir=\\\"rtl\\\" color=\\\"primary\\\" [@toolbarAnimation]=\\\"toolbarAnimationState\\\">\\n  <mat-toolbar-row dir=\\\"rtl\\\" id=\\\"firstToolbar\\\">\\n    <!-- <div id=\\\"background\\\"></div> -->\\n    <img [@logoAnimation]=\\\"logoAnimationState\\\" id=\\\"logo\\\" routerLink='/' src='assets/logos/logo-type.png' />\\n\\n    <button type=\\\"button\\\" *ngIf='showSidebarMenu && false' (click)=\\\"toggleMainSidebar()\\\" mat-icon-button fxFlex=\\\"nogrow\\\"\\n      fxLayoutAlign=\\\"center center\\\">\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n    <span [@titleAnimation]=\\\"titleAnimationState\\\" id='app-name'>\\n      {{app_config?.Config.AppTitle}}\\n    </span>\\n    <app-title fxFlex fxLayoutAlign=\\\"start center\\\"></app-title>\\n    <app-search-box fxFlex fxLayoutAlign=\\\"end center\\\"></app-search-box>\\n\\n\\n    <button *ngIf=\\\"!displayName\\\" mat-button routerLink=\\\"auth/signin\\\">\\n      <span [translate]=\\\"'__signin'\\\"></span>\\n    </button>\\n    <button translate *ngIf=\\\"!displayName\\\" mat-button routerLink=\\\"auth/signup\\\">\\n      {{'__signup' | translate}}\\n    </button>\\n    <button *ngIf=\\\"displayName\\\" mat-icon-button [matMenuTriggerFor]=\\\"toolbarMenu1\\\">\\n      <mat-icon>account_circle</mat-icon>\\n    </button>\\n    <mat-menu #toolbarMenu1 class=\\\"rtl-dir\\\">\\n      <div id=\\\"acccountName\\\">\\n        {{displayName}}\\n      </div>\\n      <button routerLink='/user/panel' mat-menu-item class=\\\"rtl-dir\\\">\\n        <mat-icon>fingerprint</mat-icon>\\n        <span translate=\\\"__account_mangement\\\">\\n        </span>\\n      </button>\\n      <button (click)='signout()' mat-menu-item class=\\\"rtl-dir\\\">\\n        <mat-icon>exit_to_app</mat-icon>\\n        <span translate>__signout</span>\\n      </button>\\n    </mat-menu>\\n    <button mat-icon-button type=\\\"button\\\" (click)=\\\"toggleSecondSidebar()\\\" fxFlex=\\\"nogrow\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-icon>notifications</mat-icon>\\n    </button>\\n    <button mat-icon-button (click)='goback()'>\\n      <mat-icon>arrow_back</mat-icon>\\n    </button>\\n\\n  </mat-toolbar-row>\\n  <mat-toolbar-row>\\n    <div id=\\\"secondToolbar\\\" [@menuAnimation]=\\\"menuAnimationState\\\">\\n      <router-outlet name=\\\"ngs-layout-before-toolbar-menu\\\"></router-outlet>\\n      <button mat-button *ngFor=\\\"let menu of menuItems$ | async\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"[menu.route]\\\">\\n        <!-- <mat-icon mat-list-icon>{{menu.icon}}</mat-icon> -->\\n        <span>{{menu.title}}</span>\\n      </button>\\n      <router-outlet name=\\\"ngs-layout-after-toolbar-menu\\\"></router-outlet>\\n    </div>\\n  </mat-toolbar-row>\\n</mat-toolbar>\",\r\n                    styles: [\"#secondToolbar{transition:none;position:absolute}#secondToolbar button{opacity:.6;font-family:iran-sans-bold,sans-serif!important;font-size:.65em!important;height:50px!important;border-radius:0!important}#secondToolbar button.active{border-bottom:2px solid #ff7400;opacity:1}#logo{transition:none;position:absolute}#app-name{padding-right:8px;font-family:iran-sans-bold,sans-serif!important}button.rtl-dir{direction:rtl!important}#acccountName{display:block;text-align:right;padding-right:20px;font-size:14px;font-weight:bolder}\"],\r\n                    animations: [\r\n                        trigger(\"logoAnimation\", [\r\n                            state(\"comfortable\", style({\r\n                                height: \"48px\",\r\n                                top: \"50px\",\r\n                                right: \"calc(50% - 50px)\"\r\n                            })),\r\n                            state(\"compact\", style({\r\n                                height: \"36px\",\r\n                                top: \"13px\",\r\n                                right: \"13px\"\r\n                            })),\r\n                            state(\"summary\", style({\r\n                                height: \"36px\",\r\n                                top: \"57px\",\r\n                                right: \"10px\"\r\n                            })),\r\n                            state(\"hide\", style({\r\n                                width: \"0\",\r\n                                height: \"0\",\r\n                                top: \"57px\",\r\n                                right: \"10px\"\r\n                            })),\r\n                            transition(\"comfortable => compact\", animate(\"800ms ease-out\")),\r\n                            transition(\"comfortable => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => comfortable\", animate(\"800ms ease-in\")),\r\n                            transition(\"compact => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => compact\", animate(\"800ms ease-in\")),\r\n                            transition(\"summary => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => summary\", animate(\"800ms ease-in\")),\r\n                            // transition(\"comfortable => summary\", animate(\"800ms ease-in\")),\r\n                            transition(\"summary => compact\", animate(\"400ms ease-out\")),\r\n                            transition(\"summary => comfortable\", animate(\"800ms ease-out\")),\r\n                            transition(\"compact => comfortable\", animate(\"800ms ease-out\")),\r\n                            transition(\"compact => summary\", animate(\"400ms ease-out\"))\r\n                        ]),\r\n                        trigger(\"menuAnimation\", [\r\n                            state(\"comfortable\", style({\r\n                                right: \"50%\",\r\n                                transform: \"translateX(50%)\",\r\n                                bottom: \"0\"\r\n                            })),\r\n                            state(\"compact\", style({\r\n                                right: \"50%\",\r\n                                transform: \"translateX(50%)\",\r\n                                bottom: \"0\"\r\n                            })),\r\n                            state(\"summary\", style({\r\n                                right: \"165px\",\r\n                                transform: \"translateX(0)\",\r\n                                bottom: \"0\"\r\n                            })),\r\n                            state(\"hide\", style({\r\n                                right: \"165px\",\r\n                                transform: \"translateX(0)\",\r\n                                bottom: \"0\"\r\n                            })),\r\n                            transition(\"comfortable => compact\", animate(\"800ms ease-in-out\")),\r\n                            transition(\"comfortable => hide\", animate(\"400ms ease-in-out\")),\r\n                            transition(\"hide => comfortable\", animate(\"600ms ease-in-out\")),\r\n                            transition(\"compact => hide\", animate(\"400ms ease-in-out\")),\r\n                            transition(\"hide => compact\", animate(\"600ms ease-in-out\")),\r\n                            transition(\"summary => hide\", animate(\"400ms ease-in-out\")),\r\n                            transition(\"hide => summary\", animate(\"600ms ease-in-out\")),\r\n                            // transition(\"comfortable => summary\", animate(\"800ms ease-in\")),\r\n                            transition(\"summary => compact\", animate(\"400ms ease-out\")),\r\n                            transition(\"summary => comfortable\", animate(\"800ms ease-out\")),\r\n                            transition(\"compact => comfortable\", animate(\"800ms ease-out\")),\r\n                            transition(\"compact => summary\", animate(\"400ms ease-in-out\"))\r\n                        ]),\r\n                        trigger(\"titleAnimation\", [\r\n                            state(\"comfortable\", style({\r\n                                \"margin-right\": \"0px\",\r\n                                \"font-size\": \"larger\",\r\n                                \"font-weight\": \"bolder\",\r\n                                transform: \"translateX(50%)\",\r\n                                right: \"calc(50%)\",\r\n                                bottom: \"165px\",\r\n                                position: \"absolute\",\r\n                                padding: 0\r\n                            })),\r\n                            state(\"compact\", style({\r\n                                \"margin-right\": \"0px\",\r\n                                \"font-size\": \"16px\",\r\n                                \"font-weight\": \"bolder\",\r\n                                right: \"50%\",\r\n                                transform: \"translateX(50%)\",\r\n                                bottom: \"51px\",\r\n                                position: \"absolute\",\r\n                                padding: 0\r\n                            })),\r\n                            state(\"summary\", style({\r\n                                \"margin-right\": \"0px\",\r\n                                \"font-size\": \"16px\",\r\n                                \"font-weight\": \"bolder\",\r\n                                transform: \"translateX(50%)\",\r\n                                right: \"50%\",\r\n                                bottom: \"79px\",\r\n                                position: \"absolute\",\r\n                                padding: 0\r\n                            })),\r\n                            state(\"hide\", style({\r\n                                \"margin-right\": \"0px\",\r\n                                \"font-size\": \"1px\",\r\n                                \"font-weight\": \"bolder\",\r\n                                // transform: \"translateX(0)\",\r\n                                // right: \"60px\",\r\n                                bottom: \"79px\",\r\n                                position: \"absolute\",\r\n                                padding: 0\r\n                            })),\r\n                            transition(\"comfortable => compact\", animate(\"850ms ease-out\")),\r\n                            transition(\"comfortable => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => comfortable\", animate(\"800ms ease-in\")),\r\n                            transition(\"compact => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => compact\", animate(\"800ms ease-in\")),\r\n                            transition(\"summary => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => summary\", animate(\"800ms ease-in\")),\r\n                            // transition(\"comfortable => summary\", animate(\"800ms ease-in\")),\r\n                            transition(\"summary => compact\", animate(\"400ms ease-out\")),\r\n                            transition(\"summary => comfortable\", animate(\"800ms ease-out\")),\r\n                            transition(\"compact => comfortable\", animate(\"800ms ease-out\")),\r\n                            transition(\"compact => summary\", animate(\"400ms ease-in\"))\r\n                        ]),\r\n                        trigger(\"toolbarAnimation\", [\r\n                            state(\"comfortable\", style({\r\n                                // backgroundColor: \"rgba(119,181,63,1)\",\r\n                                backgroundColor: \"rgba(256,256,256,1)\",\r\n                                color: \"rgba(30,30,30,1)\",\r\n                                height: \"33vh\",\r\n                                top: \"0\",\r\n                            })),\r\n                            state(\"compact\", style({\r\n                                // backgroundColor: \"rgba(256,256,256,1)\",\r\n                                height: \"100px\",\r\n                                top: \"0\",\r\n                            })),\r\n                            state(\"summary\", style({\r\n                                // backgroundColor: \"rgba(256,256,256,1)\",\r\n                                height: \"100px\",\r\n                                top: \"-50px\",\r\n                            })),\r\n                            state(\"hide\", style({\r\n                                // backgroundColor: \"rgba(256,256,256,1)\",\r\n                                height: \"100px\",\r\n                                top: \"-100px\",\r\n                            })),\r\n                            transition(\"comfortable => compact\", animate(\"800ms ease-in\")),\r\n                            transition(\"comfortable => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => comfortable\", animate(\"800ms ease-in\")),\r\n                            transition(\"compact => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => compact\", animate(\"800ms ease-in\")),\r\n                            transition(\"summary => hide\", animate(\"800ms ease-in\")),\r\n                            transition(\"hide => summary\", animate(\"800ms ease-in\")),\r\n                            // transition(\"comfortable => summary\", animate(\"800ms ease-in\")),\r\n                            transition(\"summary => compact\", animate(\"400ms ease-out\")),\r\n                            transition(\"summary => comfortable\", animate(\"800ms ease-out\")),\r\n                            transition(\"compact => comfortable\", animate(\"800ms ease-out\")),\r\n                            transition(\"compact => summary\", animate(\"400ms ease-in\"))\r\n                        ])\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ToolbarMenuThemeBComponent.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\r\n        { type: Location },\r\n        { type: Store },\r\n        { type: TranslateService },\r\n        { type: LayoutConfigurationService }\r\n    ]; };\r\n    ToolbarMenuThemeBComponent.propDecorators = {\r\n        showSidebarMenu: [{ type: Input }],\r\n        app_config: [{ type: Input, args: [\"app-config\",] }],\r\n        user: [{ type: Input }],\r\n        displayName: [{ type: Input }],\r\n        onWindowScroll: [{ type: HostListener, args: [\"body:scroll\", [],] }]\r\n    };\r\n    return ToolbarMenuThemeBComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NgsLayoutModule = /** @class */ (function () {\r\n    function NgsLayoutModule() {\r\n    }\r\n    /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    NgsLayoutModule.forRoot = /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        return {\r\n            ngModule: RootNgsLayoutModule,\r\n            providers: [\r\n                { provide: LOCALE_ID, useValue: \"en en-US\" },\r\n                { provide: MODULE_CONFIG_TOKEN, useValue: config }\r\n            ]\r\n        };\r\n    };\r\n    NgsLayoutModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        BrowserModule,\r\n                        RouterModule,\r\n                        FormsModule,\r\n                        HttpClientModule,\r\n                        FlexLayoutModule,\r\n                        MatIconModule,\r\n                        MatButtonModule,\r\n                        MatCardModule,\r\n                        MatSnackBarModule,\r\n                        MatSidenavModule,\r\n                        MatExpansionModule,\r\n                        MatSelectModule,\r\n                        MatFormFieldModule,\r\n                        MatListModule,\r\n                        MatMenuModule,\r\n                        MatRadioModule,\r\n                        MatInputModule,\r\n                        MatToolbarModule,\r\n                        MatDatepickerModule,\r\n                        MatProgressBarModule,\r\n                        RouterModule,\r\n                        TranslateModule,\r\n                        NgsConfigModule,\r\n                        RuleModule\r\n                    ],\r\n                    declarations: [\r\n                        MainMenuComponent,\r\n                        SearchBoxComponent,\r\n                        LogoContainerComponent,\r\n                        ToolbarMenuComponent,\r\n                        ToolbarMenuThemeBComponent,\r\n                        FooterComponent,\r\n                        TitleComponent,\r\n                        NgsLayoutMainComponent\r\n                    ],\r\n                    exports: [\r\n                        MainMenuComponent,\r\n                        SearchBoxComponent,\r\n                        LogoContainerComponent,\r\n                        ToolbarMenuComponent,\r\n                        ToolbarMenuThemeBComponent,\r\n                        FooterComponent,\r\n                        TitleComponent,\r\n                        NgsLayoutMainComponent\r\n                    ]\r\n                },] },\r\n    ];\r\n    return NgsLayoutModule;\r\n}());\r\nvar RootNgsLayoutModule = /** @class */ (function () {\r\n    function RootNgsLayoutModule() {\r\n    }\r\n    RootNgsLayoutModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        NgsLayoutModule,\r\n                        StoreModule.forFeature(\"layout\", LayoutReducers),\r\n                        EffectsModule.forFeature([LayoutEffects])\r\n                    ],\r\n                    exports: [NgsLayoutModule]\r\n                },] },\r\n    ];\r\n    return RootNgsLayoutModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar LayoutOutlets = {\r\n    // TODO: remove in next major version : 6.0.45\r\n    ngs_layout_toolbar_menu: \"ngs-layout-after-toolbar-menu\",\r\n    ngs_layout_after_toolbar_menu: \"ngs-layout-after-toolbar-menu\",\r\n    ngs_layout_before_toolbar_menu: \"ngs-layout-before-toolbar-menu\",\r\n    footer_B: \"footer_B\",\r\n    footer_A: \"footer_A\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { LayoutActionTypes, TitleChangedAction, OpenSidenavAction, CloseSidenavAction, ChangeSideNavMode, ChangeLayout, CloseSecondSidenavAction, ChangeSecondSidenavMode, OpenSecondSidenavAction, ChangeToolbatToComfortableModeAction, ChangeToolbatToCompactModeAction, DisableComfortableModeAction, EnableComfortableModeAction, VisibleToolbarAction, FullscreenAction, ExitFullscreenAction, InvisibleToolbarAction, ToggleFullscreenAction, NgsLayoutMainComponent, LayoutOutlets, NgsLayoutModule, RootNgsLayoutModule, MODULE_DEFAULT_CONFIG, MODULE_CONFIG_TOKEN, FooterComponent as ɵh, LogoContainerComponent as ɵe, MainMenuComponent as ɵa, SearchBoxComponent as ɵd, TitleComponent as ɵi, ToolbarMenuThemeBComponent as ɵg, ToolbarMenuComponent as ɵf, LayoutEffects as ɵn, LayoutReducers as ɵj, Reducer as ɵl, Reducer$1 as ɵm, LayoutConfigurationService as ɵc };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { InjectionToken, Inject, Injectable, Component, ComponentFactoryResolver, ViewContainerRef, NgModule } from '@angular/core';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { Store, StoreModule } from '@ngrx/store';\nimport { __decorate, __metadata, __assign, __read } from 'tslib';\nimport { map, filter, tap, take, switchMap, combineLatest, pluck, catchError } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { UserFacadeService } from '@soushians/user';\nimport { stringTemplate } from '@soushians/shared';\nimport { Location, CommonModule } from '@angular/common';\nimport { ActivatedRoute, RouterModule } from '@angular/router';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Actions, Effect, EffectsModule } from '@ngrx/effects';\nimport { MatCardModule, MatIconModule, MatButtonModule, MatFormFieldModule, MatInputModule, MatDividerModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgsGridModule } from '@soushians/grid';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar MODULE_DEFAULT_CONFIG = {\r\n    env: {\r\n        production: false,\r\n        frontend_server: \"frontend_server/did/not/set\"\r\n    },\r\n    endpoints: {\r\n        upsert: \"/api/page\",\r\n        delete: \"/api/page/${model._id}\",\r\n        find: \"/api/page\",\r\n        get: \"/api/page/${model.name}\"\r\n    }\r\n};\r\n/** @type {?} */\r\nvar MODULE_CONFIG_TOKEN = new InjectionToken(\"PageModuleConfig\");\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar PageConfigurationService = /** @class */ (function () {\r\n    function PageConfigurationService(configFile, store) {\r\n        this.store = store;\r\n        this.config$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n        this._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n        this.config$.next(this._config);\r\n        // this.store.select(getPageModuleConfig).subscribe((pageConfig) => {\r\n        // \tif (!pageConfig) {\r\n        // \t\treturn;\r\n        // \t}\r\n        // \tthis._config = Object.assign({}, this._config, pageConfig.Config);\r\n        // \tthis.config$.next(this._config);\r\n        // });\r\n    }\r\n    Object.defineProperty(PageConfigurationService.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._config;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PageConfigurationService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    PageConfigurationService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [MODULE_CONFIG_TOKEN,] }] },\r\n        { type: Store }\r\n    ]; };\r\n    return PageConfigurationService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetPagesApiModel;\r\n(function (GetPagesApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = {}; }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {};\r\n        };\r\n        return Request;\r\n    }());\r\n    GetPagesApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    GetPagesApiModel.Response = Response;\r\n})(GetPagesApiModel || (GetPagesApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetPagesStartAction = /** @class */ (function () {\r\n    function GetPagesStartAction() {\r\n        this.type = \"[GET_PAGES][API][GetPages] start\" /* START */;\r\n    }\r\n    return GetPagesStartAction;\r\n}());\r\nvar GetPagesSucceedAction = /** @class */ (function () {\r\n    function GetPagesSucceedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[GET_PAGES][API][GetPages] succeed\" /* SUCCEED */;\r\n    }\r\n    return GetPagesSucceedAction;\r\n}());\r\nvar GetPagesFailedAction = /** @class */ (function () {\r\n    function GetPagesFailedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[GET_PAGES][API][GetPages] failed\" /* FAILED */;\r\n    }\r\n    return GetPagesFailedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetPageApiModel;\r\n(function (GetPageApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = {}; }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {};\r\n        };\r\n        return Request;\r\n    }());\r\n    GetPageApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    GetPageApiModel.Response = Response;\r\n})(GetPageApiModel || (GetPageApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetPageStartAction = /** @class */ (function () {\r\n    function GetPageStartAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[PAGE][API][GetPage] start\" /* START */;\r\n    }\r\n    return GetPageStartAction;\r\n}());\r\nvar GetPageSucceedAction = /** @class */ (function () {\r\n    function GetPageSucceedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[PAGE][API][GetPage] succeed\" /* SUCCEED */;\r\n    }\r\n    return GetPageSucceedAction;\r\n}());\r\nvar GetPageFailedAction = /** @class */ (function () {\r\n    function GetPageFailedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[PAGE][API][GetPage] failed\" /* FAILED */;\r\n    }\r\n    return GetPageFailedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DeletePageApiModel;\r\n(function (DeletePageApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = {}; }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {};\r\n        };\r\n        return Request;\r\n    }());\r\n    DeletePageApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    DeletePageApiModel.Response = Response;\r\n})(DeletePageApiModel || (DeletePageApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DeletePageStartAction = /** @class */ (function () {\r\n    function DeletePageStartAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[PAGE][API][DELETE] start\" /* START */;\r\n    }\r\n    return DeletePageStartAction;\r\n}());\r\nvar DeletePageSucceedAction = /** @class */ (function () {\r\n    function DeletePageSucceedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[PAGE][API][DELETE] succeed\" /* SUCCEED */;\r\n    }\r\n    return DeletePageSucceedAction;\r\n}());\r\nvar DeletePageFailedAction = /** @class */ (function () {\r\n    function DeletePageFailedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[PAGE][API][DELETE] failed\" /* FAILED */;\r\n    }\r\n    return DeletePageFailedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar PageModel = /** @class */ (function () {\r\n    function PageModel(_a) {\r\n        var _b = _a === void 0 ? {} : _a, _id = _b._id, name = _b.name, grid = _b.grid;\r\n        this._id = _id;\r\n        this.name = name || \"\";\r\n        this.grid = grid || \"\";\r\n    }\r\n    return PageModel;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UpsertPageApiModel;\r\n(function (UpsertPageApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(page) {\r\n            if (page === void 0) { page = {}; }\r\n            debugger;\r\n            this.page = new PageModel(page);\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.page;\r\n        };\r\n        return Request;\r\n    }());\r\n    UpsertPageApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    UpsertPageApiModel.Response = Response;\r\n})(UpsertPageApiModel || (UpsertPageApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UpsertPageStartAction = /** @class */ (function () {\r\n    function UpsertPageStartAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[UPSERT_PAGE][API][UpsertPage] start\" /* START */;\r\n    }\r\n    return UpsertPageStartAction;\r\n}());\r\nvar UpsertPageSucceedAction = /** @class */ (function () {\r\n    function UpsertPageSucceedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[UPSERT_PAGE][API][UpsertPage] succeed\" /* SUCCEED */;\r\n    }\r\n    return UpsertPageSucceedAction;\r\n}());\r\nvar UpsertPageFailedAction = /** @class */ (function () {\r\n    function UpsertPageFailedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[UPSERT_PAGE][API][UpsertPage] failed\" /* FAILED */;\r\n    }\r\n    return UpsertPageFailedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar PageService = /** @class */ (function () {\r\n    function PageService(http, store, configurationService, _location, userFacadeService) {\r\n        this.http = http;\r\n        this.store = store;\r\n        this.configurationService = configurationService;\r\n        this._location = _location;\r\n        this.userFacadeService = userFacadeService;\r\n        this.userId$ = this.userFacadeService.getDisplayName().pipe(filter(function (i) { return i != undefined; }));\r\n    }\r\n    /**\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    PageService.prototype.get = /**\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function (name) {\r\n        var _this = this;\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.get !== \"\"; }), take(1), combineLatest(this.userId$), switchMap(function (_a) {\r\n            var _b = __read(_a, 2), config = _b[0], userId = _b[1];\r\n            return _this.http.get(stringTemplate(config.env.frontend_server + config.endpoints.get, { name: name }));\r\n        }), map(function (response) { return response.Result; }));\r\n    };\r\n    /**\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    PageService.prototype.delete = /**\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    function (_id) {\r\n        var _this = this;\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.delete !== \"\"; }), take(1), switchMap(function (config) {\r\n            return _this.http.delete(stringTemplate(config.env.frontend_server + config.endpoints.delete, { _id: _id }));\r\n        }), map(function (response) { return response.Result; }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PageService.prototype.getPages = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.find != \"\"; }), combineLatest(this.userId$), switchMap(function (_a) {\r\n            var _b = __read(_a, 2), config = _b[0], userId = _b[1];\r\n            return _this.http.get(config.env.frontend_server + config.endpoints.find);\r\n        }), map(function (response) { return response.Result; }));\r\n    };\r\n    /**\r\n     * @template T\r\n     * @param {?} page\r\n     * @return {?}\r\n     */\r\n    PageService.prototype.upsert = /**\r\n     * @template T\r\n     * @param {?} page\r\n     * @return {?}\r\n     */\r\n    function (page) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var model = new UpsertPageApiModel.Request(page);\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.upsert != \"\"; }), take(1), combineLatest(this.userId$), switchMap(function (_a) {\r\n            var _b = __read(_a, 2), config = _b[0], userId = _b[1];\r\n            return _this.http.post(config.env.frontend_server + config.endpoints.upsert, model.getRequestBody());\r\n        }), map(function (response) { return response.Result; }), tap(function () { return _this._location.back(); }));\r\n    };\r\n    // delete(name: string) {\r\n    // \treturn this.configurationService.config$\r\n    // \t\t.filter((config) => config.endpoints.deleteForm != \"\")\r\n    // \t\t.switchMap((config) => this.http.get(config.endpoints.deleteForm));\r\n    // }\r\n    /**\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    PageService.prototype.selectByName = /**\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function (name) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var subject = new BehaviorSubject(undefined);\r\n        this.store\r\n            .select(function (state) { return state.pages.db.data; })\r\n            .pipe(filter(function (pages) { return pages != null; }), map(function (pages) { return pages.find(function (page) { return page.name == name; }); }), tap(function (page) {\r\n            if (page == null) {\r\n                debugger;\r\n                _this.store.dispatch(new GetPageStartAction(name));\r\n            }\r\n        }))\r\n            .subscribe(function (page) { return subject.next(page); });\r\n        return subject.asObservable();\r\n    };\r\n    PageService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    PageService.ctorParameters = function () { return [\r\n        { type: HttpClient },\r\n        { type: Store },\r\n        { type: PageConfigurationService },\r\n        { type: Location },\r\n        { type: UserFacadeService }\r\n    ]; };\r\n    return PageService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar PageViewComponent = /** @class */ (function () {\r\n    function PageViewComponent(store, service, route, resolver, container) {\r\n        this.store = store;\r\n        this.service = service;\r\n        this.route = route;\r\n        this.resolver = resolver;\r\n        this.container = container;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PageViewComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._selectPage();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PageViewComponent.prototype._selectPage = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.page$ = this.route.params.pipe(pluck(\"name\"), switchMap(function (name) { return _this.service.selectByName(name); }), filter(function (page) { return page != undefined; }));\r\n    };\r\n    PageViewComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<div *ngIf=\\\"(page$ | async)?.grid\\\">\\n    <ngs-grid [oid]=\\\"(page$ | async)?.grid\\\"></ngs-grid>\\n</div>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PageViewComponent.ctorParameters = function () { return [\r\n        { type: Store },\r\n        { type: PageService },\r\n        { type: ActivatedRoute },\r\n        { type: ComponentFactoryResolver },\r\n        { type: ViewContainerRef }\r\n    ]; };\r\n    return PageViewComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar RootComponent = /** @class */ (function () {\r\n    function RootComponent() {\r\n    }\r\n    RootComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"page-root\",\r\n                    template: \"<router-outlet></router-outlet>\"\r\n                },] },\r\n    ];\r\n    return RootComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UpsertComponent = /** @class */ (function () {\r\n    function UpsertComponent(store, route, service) {\r\n        this.store = store;\r\n        this.route = route;\r\n        this.service = service;\r\n        this._init_formgroup();\r\n    }\r\n    /**\r\n     * view methods\r\n     */\r\n    /**\r\n     * view methods\r\n     * @return {?}\r\n     */\r\n    UpsertComponent.prototype.upsert = /**\r\n     * view methods\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        debugger;\r\n        /** @type {?} */\r\n        var page = __assign({}, this.formGroup.value);\r\n        this.store.dispatch(new UpsertPageStartAction(page));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UpsertComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._select_page();\r\n        this._update_formgroup_base_on_page();\r\n    };\r\n    /**\r\n     * private methods\r\n     */\r\n    /**\r\n     * private methods\r\n     * @return {?}\r\n     */\r\n    UpsertComponent.prototype._init_formgroup = /**\r\n     * private methods\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.formGroup = new FormGroup({\r\n            _id: new FormControl(\"\"),\r\n            name: new FormControl(\"\"),\r\n            grid: new FormControl(\"\")\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UpsertComponent.prototype._select_page = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.page$ = this.route.params.pipe(pluck(\"name\"), filter(function (name) { return name != undefined; }), switchMap(function (name) { return _this.service.selectByName(name); }), filter(function (page) { return page != undefined; }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UpsertComponent.prototype._update_formgroup_base_on_page = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.page$.subscribe(function (page) {\r\n            _this.formGroup.patchValue(page);\r\n        });\r\n    };\r\n    UpsertComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"main-container\\\">\\n    <mat-card fxFlex=\\\"50\\\">\\n        <mat-card-header>\\n            <mat-card-title fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\n                <mat-icon>receipt</mat-icon>\\n                <span>\\u0627\\u06CC\\u062C\\u0627\\u062F \\u0635\\u0641\\u062D\\u0647 \\u062C\\u062F\\u06CC\\u062F</span>\\n            </mat-card-title>\\n            <mat-card-subtitle fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                <span>\\n                    \\u0646\\u0627\\u0645 \\u0635\\u0641\\u062D\\u0647 \\u0631\\u0627 \\u0648\\u0627\\u0631\\u062F \\u0646\\u0645\\u0627\\u06CC\\u06CC\\u062F \\u0648 \\u0628\\u0647 \\u0645\\u0631\\u062D\\u0644\\u0647 \\u0628\\u0639\\u062F \\u0628\\u0631\\u0648\\u06CC\\u062F ...\\n                </span>\\n            </mat-card-subtitle>\\n        </mat-card-header>\\n\\n        <mat-card-content [formGroup]=\\\"formGroup\\\">\\n            <mat-form-field>\\n                <input type=\\\"text\\\" matInput placeholder=\\\"\\u0646\\u0627\\u0645\\\" formControlName=\\\"name\\\">\\n            </mat-form-field>\\n        </mat-card-content>\\n        <mat-card-actions align=\\\"end\\\">\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"upsert()\\\">\\u062B\\u0628\\u062A</button>\\n        </mat-card-actions>\\n    </mat-card>\\n</div>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UpsertComponent.ctorParameters = function () { return [\r\n        { type: Store },\r\n        { type: ActivatedRoute },\r\n        { type: PageService }\r\n    ]; };\r\n    return UpsertComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar PagesManagementComponent = /** @class */ (function () {\r\n    function PagesManagementComponent(store) {\r\n        this.store = store;\r\n        this.pages$ = this.store.select(function (state) { return state.pages.db.data; });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    PagesManagementComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.store.dispatch(new GetPagesStartAction());\r\n    };\r\n    /**\r\n     * view methods\r\n     */\r\n    /**\r\n     * view methods\r\n     * @param {?} page\r\n     * @return {?}\r\n     */\r\n    PagesManagementComponent.prototype.delete = /**\r\n     * view methods\r\n     * @param {?} page\r\n     * @return {?}\r\n     */\r\n    function (page) {\r\n        this.store.dispatch(new DeletePageStartAction(page._id));\r\n    };\r\n    PagesManagementComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"25px\\\" class=\\\"main-container\\\">\\n\\n  <div class=\\\"content-action\\\">\\n    <mat-card class=\\\"with-sticky-action\\\">\\n      <mat-card-header>\\n        <mat-card-title fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\n          <mat-icon>list_alt</mat-icon>\\n          <span>\\u0645\\u062F\\u06CC\\u0631\\u06CC\\u062A \\u0635\\u063A\\u062D\\u0627\\u062A</span>\\n        </mat-card-title>\\n        <mat-card-subtitle fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n          <span>\\n            \\u062F\\u0631 \\u0627\\u06CC\\u0646 \\u0642\\u0633\\u0645\\u062A \\u0645\\u06CC\\u200C\\u062A\\u0648\\u0627\\u0646\\u06CC\\u062F \\u0635\\u063A\\u062D\\u0627\\u062A \\u0628\\u0627 \\u06AF\\u0631\\u06CC\\u062F\\u0647\\u0627\\u06CC \\u062F\\u0644\\u062E\\u0648\\u0627\\u0647 \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0627\\u06CC\\u062C\\u0627\\u062F \\u0646\\u0645\\u0627\\u06CC\\u06CC\\u062F ...\\n          </span>\\n        </mat-card-subtitle>\\n      </mat-card-header>\\n\\n      <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"25px\\\">\\n        <div fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start center\\\">\\n          <mat-card fxFlex.gt-lg=\\\"24\\\" fxFlex.lg=\\\"32\\\" fxFlex.md=\\\"48\\\" fxFlex.sm=\\\"100\\\" fxFlex.xs=\\\"100\\\" class=\\\"link\\\" *ngFor=\\\"let item of (pages$ | async)\\\"\\n            fxFlex=\\\"32\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n            <div fxFlex fxLayoutAlign=\\\"start center\\\">\\n              <h3> {{item.name}}</h3>\\n            </div>\\n            <div fxFlex fxLayoutAlign=\\\"center center\\\">\\n              {{item.type}}\\n            </div>\\n            <div fxLayout=\\\"row\\\">\\n              <div fxFlex=\\\"nogrow\\\">\\n                <a mat-icon-button [routerLink]=\\\"['../upsert' , item.name]\\\">\\n                  <mat-icon aria-label=\\\"edit page\\\">edit</mat-icon>\\n                </a>\\n              </div>\\n\\n              <div fxFlex=\\\"nogrow\\\">\\n                <button mat-icon-button (click)=\\\"delete(item)\\\">\\n                  <mat-icon aria-label=\\\"delete page\\\">delete</mat-icon>\\n                </button>\\n              </div>\\n              <div fxFlex=\\\"nogrow\\\">\\n                <a mat-icon-button [routerLink]=\\\"['/page' , item.name]\\\">\\n                  <mat-icon aria-label=\\\"edit page\\\">remove_red_eye</mat-icon>\\n                </a>\\n              </div>\\n            </div>\\n          </mat-card>\\n        </div>\\n      </div>\\n    </mat-card>\\n    <div fxLayout=\\\"column\\\" class=\\\"sticky-action\\\">\\n      <a color=\\\"primary\\\" mat-mini-fab routerLink=\\\"../upsert\\\">\\n        <mat-icon>add</mat-icon>\\n      </a>\\n    </div>\\n  </div>\\n</div>\",\r\n                    styles: [\"mat-card.link{padding:25px 15px;margin:.5%;box-sizing:border-box}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PagesManagementComponent.ctorParameters = function () { return [\r\n        { type: Store }\r\n    ]; };\r\n    return PagesManagementComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar routes = [\r\n    {\r\n        path: \"pages\",\r\n        component: RootComponent,\r\n        children: [\r\n            {\r\n                path: \"management\",\r\n                component: PagesManagementComponent\r\n            },\r\n            {\r\n                path: \"upsert\",\r\n                component: UpsertComponent\r\n            },\r\n            {\r\n                path: \"upsert/:name\",\r\n                component: UpsertComponent\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: \"page/:name\",\r\n        component: PageViewComponent\r\n    }\r\n];\r\n/** @type {?} */\r\nvar RoutingModule = RouterModule.forChild(routes);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar PagesActionTypes = {\r\n    UPSERT: \"[PAGE][DB] UPSERT\",\r\n    DELETE: \"[PAGE][DB] DELETE\",\r\n};\r\nvar UpsertPageAction = /** @class */ (function () {\r\n    function UpsertPageAction(payload) {\r\n        this.payload = payload;\r\n        this.type = PagesActionTypes.UPSERT;\r\n    }\r\n    return UpsertPageAction;\r\n}());\r\nvar DeletePageAction = /** @class */ (function () {\r\n    function DeletePageAction(payload) {\r\n        this.payload = payload;\r\n        this.type = PagesActionTypes.DELETE;\r\n    }\r\n    return DeletePageAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar PageDbEffects = /** @class */ (function () {\r\n    function PageDbEffects(actions$) {\r\n        this.actions$ = actions$;\r\n        this.Upsert$ = this.actions$\r\n            .ofType(\"[PAGE][API][GetPage] succeed\" /* SUCCEED */)\r\n            .pipe(pluck(\"payload\"), map(function (page) { return new UpsertPageAction([page]); }));\r\n        this.UpsertMany$ = this.actions$\r\n            .ofType(\"[GET_PAGES][API][GetPages] succeed\" /* SUCCEED */)\r\n            .pipe(pluck(\"payload\"), map(function (pages) { return new UpsertPageAction(pages); }));\r\n        this.delete$ = this.actions$\r\n            .ofType(\"[PAGE][API][DELETE] succeed\" /* SUCCEED */)\r\n            .pipe(pluck(\"payload\"), map(function (page) { return new DeletePageAction(page); }));\r\n    }\r\n    PageDbEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    PageDbEffects.ctorParameters = function () { return [\r\n        { type: Actions }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], PageDbEffects.prototype, \"Upsert$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], PageDbEffects.prototype, \"UpsertMany$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], PageDbEffects.prototype, \"delete$\", void 0);\r\n    return PageDbEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ɵ0 = [];\r\n/** @type {?} */\r\nvar initialState = {\r\n    data: ɵ0\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction Reducer(state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    /** @type {?} */\r\n    var _data;\r\n    switch (action.type) {\r\n        case PagesActionTypes.UPSERT:\r\n            debugger;\r\n            _data = state.data.concat();\r\n            /** @type {?} */\r\n            var newPages = action.payload;\r\n            if (!(newPages instanceof Array)) {\r\n                newPages = [newPages];\r\n                console.error(\"'PagesActionTypes.UPSERT' does not get array payload\");\r\n            }\r\n            newPages.forEach(function (newPage) {\r\n                /** @type {?} */\r\n                var existedPageIndex = _data.findIndex(function (w) { return w._id == newPage._id; });\r\n                if (existedPageIndex > -1) {\r\n                    _data.splice(existedPageIndex, 1, newPage);\r\n                }\r\n                else {\r\n                    _data.push(newPage);\r\n                }\r\n            });\r\n            return __assign({}, state, { data: _data });\r\n        case PagesActionTypes.DELETE:\r\n            debugger;\r\n            _data = state.data.concat();\r\n            /** @type {?} */\r\n            var pageIndex = state.data.findIndex(function (w) { return w._id == action.payload._id; });\r\n            _data.splice(pageIndex, 1);\r\n            return __assign({}, state, { data: _data });\r\n        default:\r\n            return state;\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar PageReducer = {\r\n    db: Reducer\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetPageApiEffects = /** @class */ (function () {\r\n    function GetPageApiEffects(actions$, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.service = service;\r\n        this.start$ = this.actions$\r\n            .ofType(\"[PAGE][API][GetPage] start\" /* START */)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (payload) { return _this.service.get(payload); }), map(function (res) { return new GetPageSucceedAction(res); }), catchError(function (err) { return of(new GetPageFailedAction(err)); }));\r\n    }\r\n    GetPageApiEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    GetPageApiEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: PageService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], GetPageApiEffects.prototype, \"start$\", void 0);\r\n    return GetPageApiEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetPagesApiEffects = /** @class */ (function () {\r\n    function GetPagesApiEffects(actions$, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.service = service;\r\n        this.start$ = this.actions$\r\n            .ofType(\"[GET_PAGES][API][GetPages] start\" /* START */)\r\n            .pipe(switchMap(function () {\r\n            return _this.service\r\n                .getPages()\r\n                .pipe(map(function (res) { return new GetPagesSucceedAction(res); }), catchError(function (err) { return of(new GetPagesFailedAction(err)); }));\r\n        }));\r\n    }\r\n    GetPagesApiEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    GetPagesApiEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: PageService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], GetPagesApiEffects.prototype, \"start$\", void 0);\r\n    return GetPagesApiEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UpsertPageApiEffects = /** @class */ (function () {\r\n    function UpsertPageApiEffects(actions$, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.service = service;\r\n        this.start$ = this.actions$\r\n            .ofType(\"[UPSERT_PAGE][API][UpsertPage] start\" /* START */)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (payload) { return _this.service.upsert(payload); }), map(function (res) { return new UpsertPageSucceedAction(res); }), catchError(function (err) { return of(new UpsertPageFailedAction(err)); }));\r\n    }\r\n    UpsertPageApiEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    UpsertPageApiEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: PageService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], UpsertPageApiEffects.prototype, \"start$\", void 0);\r\n    return UpsertPageApiEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DeletePageApiEffects = /** @class */ (function () {\r\n    function DeletePageApiEffects(actions$, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.service = service;\r\n        this.start$ = this.actions$\r\n            .ofType(\"[PAGE][API][DELETE] start\" /* START */)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (payload) { return _this.service.delete(payload); }), map(function (res) { return new DeletePageSucceedAction(res); }), catchError(function (err) { return of(new DeletePageFailedAction(err)); }));\r\n    }\r\n    DeletePageApiEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    DeletePageApiEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: PageService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], DeletePageApiEffects.prototype, \"start$\", void 0);\r\n    return DeletePageApiEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NgsPageModule = /** @class */ (function () {\r\n    function NgsPageModule() {\r\n    }\r\n    /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    NgsPageModule.forRoot = /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        return {\r\n            ngModule: NgsPageRootModule,\r\n            providers: [{ provide: MODULE_CONFIG_TOKEN, useValue: config }, PageConfigurationService, PageService]\r\n        };\r\n    };\r\n    NgsPageModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        RouterModule,\r\n                        MatInputModule,\r\n                        MatFormFieldModule,\r\n                        MatCardModule,\r\n                        MatButtonModule,\r\n                        MatIconModule,\r\n                        MatDividerModule,\r\n                        FlexLayoutModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule,\r\n                        NgsGridModule\r\n                    ],\r\n                    declarations: [PageViewComponent, PagesManagementComponent, RootComponent, UpsertComponent],\r\n                    exports: []\r\n                },] },\r\n    ];\r\n    return NgsPageModule;\r\n}());\r\nvar NgsPageRootModule = /** @class */ (function () {\r\n    function NgsPageRootModule() {\r\n    }\r\n    NgsPageRootModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        NgsPageModule,\r\n                        RoutingModule,\r\n                        StoreModule.forFeature(\"pages\", PageReducer),\r\n                        EffectsModule.forFeature([\r\n                            PageDbEffects,\r\n                            GetPageApiEffects,\r\n                            GetPagesApiEffects,\r\n                            UpsertPageApiEffects,\r\n                            DeletePageApiEffects\r\n                        ])\r\n                    ],\r\n                    exports: [NgsPageModule]\r\n                },] },\r\n    ];\r\n    return NgsPageRootModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { NgsPageModule, NgsPageRootModule, MODULE_DEFAULT_CONFIG, MODULE_CONFIG_TOKEN, PagesManagementComponent as ɵf, RoutingModule as ɵi, PageReducer as ɵb, PageDbEffects as ɵk, Reducer as ɵj, RootComponent as ɵg, DeletePageApiEffects as ɵr, GetPageApiEffects as ɵl, GetPagesApiEffects as ɵn, UpsertPageApiEffects as ɵp, PageConfigurationService as ɵe, PageService as ɵd, UpsertComponent as ɵh, PageViewComponent as ɵa };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { InjectionToken, Component, Injectable, Inject, Injector, Input, ViewContainerRef, ComponentFactoryResolver, ViewChild, Directive, ViewChildren, HostListener, ElementRef, Renderer2, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { __decorate, __metadata, __assign } from 'tslib';\nimport { Store, StoreModule } from '@ngrx/store';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { filter, map, startWith, share, takeUntil, switchMap } from 'rxjs/operators';\nimport { BehaviorSubject as BehaviorSubject$1 } from 'rxjs/Rx';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { stringTemplate } from '@soushians/shared';\nimport { BehaviorSubject as BehaviorSubject$2, Subject, of, combineLatest } from 'rxjs';\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheet, MatExpansionModule, MatSnackBarModule, MatIconModule, MatButtonModule, MatCardModule, MatSelectModule, MatInputModule, MatFormFieldModule, MatTabsModule, MatRadioModule, MatSlideToggleModule, MatDividerModule, MatCheckboxModule, MatTableModule } from '@angular/material';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Actions, Effect, EffectsModule } from '@ngrx/effects';\nimport { getFrontendAuthenticationState } from '@soushians/frontend-authentication';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar MODULE_DEFAULT_CONFIG = {\r\n    endpoints: {\r\n        upsert: \"/api/gwt/scenario\",\r\n        get: \"/api/gwt/anchor/${model.anchorId}/scenarios\"\r\n    },\r\n    stepClasses: [],\r\n    env: {\r\n        production: false,\r\n        frontend_server: \"frontend_server/did/not/set\"\r\n    }\r\n};\r\n/** @type {?} */\r\nvar MODULE_CONFIG_TOKEN = new InjectionToken(\"RuleModuleConfig\");\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar RuleComponent = /** @class */ (function () {\r\n    function RuleComponent() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RuleComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    RuleComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"app-rule\",\r\n                    template: \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n  <router-outlet></router-outlet>\\n</div>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    RuleComponent.ctorParameters = function () { return []; };\r\n    return RuleComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar routes = [\r\n    {\r\n        path: \"rule\",\r\n        component: RuleComponent\r\n    }\r\n];\r\n/** @type {?} */\r\nvar RoutingModule = RouterModule.forChild(routes);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar RuleAnchorsActionTypes = {\r\n    SHOW_ANCHORS: \"[RULE][ANCHORS] SHOW_ANCHORS\",\r\n    HIDE_ANCHORS: \"[RULE][ANCHORS] HIDE_ANCHORS\",\r\n};\r\nvar ShowAnchorsAction = /** @class */ (function () {\r\n    function ShowAnchorsAction() {\r\n        this.type = RuleAnchorsActionTypes.SHOW_ANCHORS;\r\n    }\r\n    return ShowAnchorsAction;\r\n}());\r\nvar HideAnchorsAction = /** @class */ (function () {\r\n    function HideAnchorsAction() {\r\n        this.type = RuleAnchorsActionTypes.HIDE_ANCHORS;\r\n    }\r\n    return HideAnchorsAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar initialState = {\r\n    active: false\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction Reducer(state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    switch (action.type) {\r\n        case RuleAnchorsActionTypes.SHOW_ANCHORS: {\r\n            return __assign({}, state, { active: true });\r\n        }\r\n        case RuleAnchorsActionTypes.HIDE_ANCHORS: {\r\n            return __assign({}, state, { active: false });\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n//#endregion\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar RulesListActionTypes = {\r\n    RULES_LIST: \"[RULE][DB] RULES_LIST\",\r\n    RULES_LIST_START: \"[RULE][DB] RULES_LIST_START\",\r\n    RULES_LIST_SUCCEED: \"[RULE][DB] RULES_LIST_SUCCEED\",\r\n    RULES_LIST_FAILED: \"[RULE][DB] RULES_LIST_FAILED\",\r\n    RULE_UPSERT: \"[RULE][DB] RULE_UPSERT\",\r\n    GET_RULE: \"[RULE][DB] GET_RULE\",\r\n    RULE_FETCHED: \"[RULE][DB] RULE_FETCHED\",\r\n};\r\nvar RulesListStartAction = /** @class */ (function () {\r\n    function RulesListStartAction() {\r\n        this.type = RulesListActionTypes.RULES_LIST_START;\r\n    }\r\n    return RulesListStartAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar initialState$1 = {\r\n    status: \"pristine\",\r\n    data: []\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction reducer(state, action) {\r\n    if (state === void 0) { state = initialState$1; }\r\n    switch (action.type) {\r\n        case RulesListActionTypes.RULES_LIST: {\r\n            return __assign({}, state, { status: \"dirty\" });\r\n        }\r\n        case RulesListActionTypes.RULES_LIST_START: {\r\n            return __assign({}, state, { status: \"pending\" });\r\n        }\r\n        case RulesListActionTypes.RULES_LIST_SUCCEED: {\r\n            return __assign({}, state, { data: action.payload, status: \"succeed\" });\r\n        }\r\n        case RulesListActionTypes.RULES_LIST_FAILED: {\r\n            return __assign({}, state, { status: \"failed\" });\r\n        }\r\n        case RulesListActionTypes.RULE_UPSERT: {\r\n            /** @type {?} */\r\n            var data = state.data.concat();\r\n            /** @type {?} */\r\n            var entityIdx = state.data.findIndex(function (form) { return form._id == action.payload._id; });\r\n            if (entityIdx > -1) {\r\n                data[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n            }\r\n            else {\r\n                data.push(action.payload);\r\n            }\r\n            return __assign({}, state, { data: data });\r\n        }\r\n        case RulesListActionTypes.RULE_FETCHED: {\r\n            /** @type {?} */\r\n            var data = state.data.concat();\r\n            /** @type {?} */\r\n            var entityIdx = state.data.findIndex(function (form) { return form._id == action.payload._id; });\r\n            if (entityIdx > -1) {\r\n                data[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n            }\r\n            else {\r\n                data.push(action.payload);\r\n            }\r\n            return __assign({}, state, { data: data });\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar ScenariosListActionTypes = {\r\n    SCENARIOS_LIST: \"[GWT][SCENARIO][DB][LIST] SCENARIOS_LIST\",\r\n    SCENARIOS_LIST_START: \"[SCENARIO][DB] SCENARIOS_LIST_START\",\r\n    SCENARIOS_LIST_SUCCEED: \"[SCENARIO][DB] SCENARIOS_LIST_SUCCEED\",\r\n    SCENARIOS_LIST_FAILED: \"[SCENARIO][DB] SCENARIOS_LIST_FAILED\",\r\n    UPSERT: \"[GWT][SCENARIO][DB][UPSERT] SCENARIO_UPSERT\",\r\n    GET_SCENARIO: \"[SCENARIO][DB] GET_SCENARIO\",\r\n    SCENARIO_FETCHED: \"[SCENARIO][DB] SCENARIO_FETCHED\",\r\n    UPDATE_DB: \"[GWT][SCENARIO][DB] UPDATE_DB\",\r\n};\r\nvar ScenariosListStartAction = /** @class */ (function () {\r\n    function ScenariosListStartAction() {\r\n        this.type = ScenariosListActionTypes.SCENARIOS_LIST_START;\r\n    }\r\n    return ScenariosListStartAction;\r\n}());\r\nvar UpsertScenarioAction = /** @class */ (function () {\r\n    function UpsertScenarioAction(payload) {\r\n        this.payload = payload;\r\n        this.type = ScenariosListActionTypes.UPSERT;\r\n    }\r\n    return UpsertScenarioAction;\r\n}());\r\nvar ScenarioFechedAction = /** @class */ (function () {\r\n    function ScenarioFechedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = ScenariosListActionTypes.SCENARIO_FETCHED;\r\n    }\r\n    return ScenarioFechedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar initialState$2 = {\r\n    status: \"pristine\",\r\n    data: []\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction reducer$1(state, action) {\r\n    if (state === void 0) { state = initialState$2; }\r\n    switch (action.type) {\r\n        case ScenariosListActionTypes.SCENARIOS_LIST: {\r\n            return __assign({}, state, { status: \"dirty\" });\r\n        }\r\n        case ScenariosListActionTypes.SCENARIOS_LIST_START: {\r\n            return __assign({}, state, { status: \"pending\" });\r\n        }\r\n        case ScenariosListActionTypes.SCENARIOS_LIST_SUCCEED: {\r\n            return __assign({}, state, { data: action.payload, status: \"succeed\" });\r\n        }\r\n        case ScenariosListActionTypes.SCENARIOS_LIST_FAILED: {\r\n            return __assign({}, state, { status: \"failed\" });\r\n        }\r\n        case ScenariosListActionTypes.UPSERT: {\r\n            /** @type {?} */\r\n            var data = state.data.concat();\r\n            /** @type {?} */\r\n            var entityIdx = state.data.findIndex(function (form) { return form._id == action.payload._id; });\r\n            if (entityIdx > -1) {\r\n                data[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n            }\r\n            else {\r\n                data.push(action.payload);\r\n            }\r\n            return __assign({}, state, { data: data });\r\n        }\r\n        case ScenariosListActionTypes.SCENARIO_FETCHED: {\r\n            /** @type {?} */\r\n            var data = state.data.concat();\r\n            /** @type {?} */\r\n            var entityIdx = state.data.findIndex(function (form) { return form._id == action.payload._id; });\r\n            if (entityIdx > -1) {\r\n                data[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n            }\r\n            else {\r\n                data.push(action.payload);\r\n            }\r\n            return __assign({}, state, { data: data });\r\n        }\r\n        case ScenariosListActionTypes.UPDATE_DB: {\r\n            /** @type {?} */\r\n            var data_1 = state.data.concat();\r\n            /** @type {?} */\r\n            var scenarios = action.payload;\r\n            scenarios.forEach(function (scenario) {\r\n                /** @type {?} */\r\n                var entityIdx = state.data.findIndex(function (form) { return form._id == scenario._id; });\r\n                if (entityIdx > -1) {\r\n                    data_1[entityIdx] = Object.assign({}, data_1[entityIdx], scenario);\r\n                }\r\n                else {\r\n                    data_1.push(scenario);\r\n                }\r\n            });\r\n            return __assign({}, state, { data: data_1 });\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar RuleReducers = {\r\n    ruleAnchors: Reducer,\r\n    rules: reducer,\r\n    scenarios: reducer$1\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar RuleConfigurationService = /** @class */ (function () {\r\n    function RuleConfigurationService(configFile, store, injector) {\r\n        var _this = this;\r\n        this.store = store;\r\n        this.injector = injector;\r\n        this.config$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n        // instantiate steps and used them\r\n        configFile.steps = configFile.stepClasses.map(function (step) { return new step(_this.injector); });\r\n        this._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n        this.config$.next(this._config);\r\n        // this.store.select(getRuleModuleConfig).subscribe(userConfig => {\r\n        // \tif (!userConfig) return;\r\n        // \tthis._config = Object.assign({}, this._config, userConfig.Config);\r\n        // \tthis.config$.next(this._config);\r\n        // });\r\n    }\r\n    Object.defineProperty(RuleConfigurationService.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._config;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RuleConfigurationService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    RuleConfigurationService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [MODULE_CONFIG_TOKEN,] }] },\r\n        { type: Store },\r\n        { type: Injector }\r\n    ]; };\r\n    return RuleConfigurationService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GwtScenarioModel = /** @class */ (function () {\r\n    function GwtScenarioModel(_a) {\r\n        var _b = _a === void 0 ? {} : _a, _id = _b._id, anchorId = _b.anchorId, steps = _b.steps, name = _b.name, featureId = _b.featureId;\r\n        this._id = _id || \"\";\r\n        this.name = name || \"\";\r\n        this.featureId = featureId || \"\";\r\n        this._id = _id || \"\";\r\n        this.anchorId = anchorId || \"\";\r\n        this.steps = steps || [];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GwtScenarioModel.prototype.getRequsetBody = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            _id: this._id,\r\n            anchorId: this.anchorId,\r\n            name: this.name,\r\n            featureId: this.featureId,\r\n            steps: this.steps.map(function (step) { return ({\r\n                id: step.id,\r\n                opposite: step.opposite,\r\n                params: step.params\r\n            }); })\r\n        };\r\n    };\r\n    return GwtScenarioModel;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar StepLoaderDirective = /** @class */ (function () {\r\n    function StepLoaderDirective(resolver, container) {\r\n        this.resolver = resolver;\r\n        this.container = container;\r\n    }\r\n    Object.defineProperty(StepLoaderDirective.prototype, \"params\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.component.instance.params || {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    StepLoaderDirective.prototype.ngOnChanges = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.component) ;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    StepLoaderDirective.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.step.stepComponent) {\r\n            debugger;\r\n            throw new Error(\"Trying to use an unsupported type ().\\n\\t\\t  Supported types: \");\r\n        }\r\n        /** @type {?} */\r\n        var component = this.resolver.resolveComponentFactory(this.step.stepComponent);\r\n        this.component = this.container.createComponent(component);\r\n        debugger;\r\n        this.component.instance.params = this.step.params;\r\n    };\r\n    StepLoaderDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: \"[rule-step-loader]\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    StepLoaderDirective.ctorParameters = function () { return [\r\n        { type: ComponentFactoryResolver },\r\n        { type: ViewContainerRef }\r\n    ]; };\r\n    StepLoaderDirective.propDecorators = {\r\n        step: [{ type: Input }],\r\n        component: [{ type: ViewChild, args: [\"container\", { read: ViewContainerRef },] }]\r\n    };\r\n    return StepLoaderDirective;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ScenarioService = /** @class */ (function () {\r\n    function ScenarioService(http, store, configService) {\r\n        var _this = this;\r\n        this.http = http;\r\n        this.store = store;\r\n        this.configService = configService;\r\n        this.config$ = this.configService.config$;\r\n        this.config$.subscribe(function (config) { return (_this.config = config); });\r\n    }\r\n    /**\r\n     * @param {?} scenario\r\n     * @return {?}\r\n     */\r\n    ScenarioService.prototype.upsert = /**\r\n     * @param {?} scenario\r\n     * @return {?}\r\n     */\r\n    function (scenario) {\r\n        /** @type {?} */\r\n        var model = new GwtScenarioModel(scenario);\r\n        return this.http\r\n            .post(this.config.env.frontend_server + this.config.endpoints.upsert, model.getRequsetBody())\r\n            .pipe(map(function (response) { return (response); }), share());\r\n    };\r\n    /**\r\n     * @param {?} anchorId\r\n     * @return {?}\r\n     */\r\n    ScenarioService.prototype.getAnchorScenarios = /**\r\n     * @param {?} anchorId\r\n     * @return {?}\r\n     */\r\n    function (anchorId) {\r\n        return this.http\r\n            .get(this.config.env.frontend_server + stringTemplate(this.config.endpoints.get, { anchorId: anchorId }))\r\n            .map(function (response) { return (response.Result); });\r\n    };\r\n    /**\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    ScenarioService.prototype.selectScenarioById = /**\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    function (_id) {\r\n        /** @type {?} */\r\n        var subject = new BehaviorSubject$1(undefined);\r\n        this.store\r\n            .select(function (state) { return state.rule.scenarios.data; })\r\n            .pipe(filter(function (scenarios) { return scenarios != null; }), map(function (scenarios) {\r\n            return scenarios.find(function (scenario) { return scenario._id == _id; });\r\n        }), filter(function (scenario) { return scenario != undefined; }))\r\n            .subscribe(function (scenario) {\r\n            subject.next(scenario);\r\n        });\r\n        return subject.asObservable();\r\n    };\r\n    /**\r\n     * @param {?} anchorId\r\n     * @return {?}\r\n     */\r\n    ScenarioService.prototype.selectAnchorScenarios = /**\r\n     * @param {?} anchorId\r\n     * @return {?}\r\n     */\r\n    function (anchorId) {\r\n        /** @type {?} */\r\n        var subject = new BehaviorSubject$1(undefined);\r\n        this.store\r\n            .select(function (state) { return state.rule.scenarios.data; })\r\n            .pipe(startWith([]), filter(function (scenarios) { return scenarios != null; }), map(function (scenarios) {\r\n            return scenarios.filter(function (scenario) { return scenario._id == anchorId; });\r\n        }))\r\n            .subscribe(function (scenarios) {\r\n            subject.next(scenarios);\r\n        });\r\n        return subject.asObservable();\r\n    };\r\n    ScenarioService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    ScenarioService.ctorParameters = function () { return [\r\n        { type: HttpClient },\r\n        { type: Store },\r\n        { type: RuleConfigurationService }\r\n    ]; };\r\n    return ScenarioService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GwtViewComponent = /** @class */ (function () {\r\n    function GwtViewComponent(store, configService, scenarioService, injector, data) {\r\n        this.store = store;\r\n        this.configService = configService;\r\n        this.scenarioService = scenarioService;\r\n        this.injector = injector;\r\n        this.data = data;\r\n        this.unsubscribe = new Subject();\r\n        this.scenario$ = new BehaviorSubject$2(new GwtScenarioModel());\r\n        this.scenarios$ = new BehaviorSubject$2([]);\r\n        this._create_scenario_form_group();\r\n        this._init_features_list();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GwtViewComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.steps$ = this.configService.config$.pipe(map(function (config) { return config.steps; }), takeUntil(this.unsubscribe));\r\n        this.steps$.subscribe(function (steps) { return (_this.steps = steps); });\r\n        this._load_scenario_and_map_scenario_step_to_steps_class();\r\n        this.scenario$.subscribe(function (s) {\r\n            debugger;\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GwtViewComponent.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GwtViewComponent.prototype.save = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var scenario = this.scenario$.getValue();\r\n        this.stepLoaders.forEach(function (stepLoader) {\r\n            scenario.steps.find(function (step) { return step.name === stepLoader.step.name; }).params = stepLoader.params;\r\n        });\r\n        scenario.featureId = this.scenarioFormGroup.value.featureId;\r\n        scenario.name = this.scenarioFormGroup.value.name;\r\n        this.store.dispatch(new UpsertScenarioAction(scenario));\r\n    };\r\n    /**\r\n     * @param {?} step\r\n     * @return {?}\r\n     */\r\n    GwtViewComponent.prototype.addStepToScenario = /**\r\n     * @param {?} step\r\n     * @return {?}\r\n     */\r\n    function (step) {\r\n        /** @type {?} */\r\n        var scenario = this.scenario$.getValue();\r\n        scenario.steps.push(step);\r\n        this.scenario$.next(scenario);\r\n    };\r\n    /**\r\n     * @param {?} step\r\n     * @return {?}\r\n     */\r\n    GwtViewComponent.prototype.deleteStepFromScenario = /**\r\n     * @param {?} step\r\n     * @return {?}\r\n     */\r\n    function (step) {\r\n        /** @type {?} */\r\n        var scenario = this.scenario$.getValue();\r\n        scenario.steps.splice(scenario.steps.findIndex(function (item) { return item.name === step.name; }), 1);\r\n        this.scenario$.next(scenario);\r\n    };\r\n    /**\r\n     * @param {?} step\r\n     * @return {?}\r\n     */\r\n    GwtViewComponent.prototype.decScenarioStepPriority = /**\r\n     * @param {?} step\r\n     * @return {?}\r\n     */\r\n    function (step) { };\r\n    /**\r\n     * @param {?} step\r\n     * @return {?}\r\n     */\r\n    GwtViewComponent.prototype.incScenarioStepPriority = /**\r\n     * @param {?} step\r\n     * @return {?}\r\n     */\r\n    function (step) { };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GwtViewComponent.prototype.addNewScenario = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var scenarios = this.scenarios$.getValue();\r\n        scenarios.push(new GwtScenarioModel({\r\n            anchorId: this.data.anchorId\r\n        }));\r\n        this.scenarios$.next(scenarios);\r\n    };\r\n    /**\r\n     * @param {?} scenario\r\n     * @return {?}\r\n     */\r\n    GwtViewComponent.prototype.activeScenario = /**\r\n     * @param {?} scenario\r\n     * @return {?}\r\n     */\r\n    function (scenario) {\r\n        var _this = this;\r\n        debugger;\r\n        scenario.steps = scenario.steps.map(function (scenarioStep) {\r\n            /** @type {?} */\r\n            var _step = _this.steps.find(function (step) { return step.id === scenarioStep.id; });\r\n            /** @type {?} */\r\n            var step = Object.create(_step);\r\n            step.params = scenarioStep.params;\r\n            return step;\r\n        });\r\n        this.scenarioFormGroup.patchValue(scenario);\r\n        scenario.anchorId = this.data.anchorId;\r\n        this.scenario$.next(scenario);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GwtViewComponent.prototype._load_scenario_and_map_scenario_step_to_steps_class = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.scenarioService\r\n            .getAnchorScenarios(this.data.anchorId)\r\n            .pipe(takeUntil(this.unsubscribe))\r\n            .subscribe(function (scenarios) {\r\n            _this.scenarios$.next(scenarios);\r\n            _this.activeScenario(scenarios[0] || new GwtScenarioModel());\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GwtViewComponent.prototype._create_scenario_form_group = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.scenarioFormGroup = new FormGroup({\r\n            featureId: new FormControl(),\r\n            name: new FormControl()\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GwtViewComponent.prototype._reset_scenario_form_group_and_patch_with_active_scenario = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.scenarioFormGroup.reset();\r\n        this.scenarioFormGroup.patchValue(this.scenario$.getValue());\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GwtViewComponent.prototype._init_features_list = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.features$ = [\"مدیریت نمایش براساس دسترسی های کاربر\"];\r\n    };\r\n    GwtViewComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"app-gwt-view\",\r\n                    template: \"<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"25px\\\">\\n  <div fxFlex=\\\"400px\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"15px\\\">\\n    <!-- <div fxLayout=\\\"row wrap\\\">\\n    <mat-form-field appearance=\\\"fill\\\" fxFlex=\\\"100\\\">\\n      <input matInput placeholder=\\\"\\u0641\\u06CC\\u0644\\u062A\\u0631\\\">\\n      <mat-icon matSuffix>search</mat-icon>\\n    </mat-form-field>\\n    <mat-checkbox fxFlex class=\\\"example-margin\\\">\\u0641\\u0631\\u0636 \\u06A9\\u0646\\u06CC\\u062F</mat-checkbox>\\n    <mat-checkbox fxFlex class=\\\"example-margin\\\">\\u0647\\u0646\\u06AF\\u0627\\u0645\\u06CC \\u06A9\\u0647</mat-checkbox>\\n    <mat-checkbox fxFlex class=\\\"example-margin\\\">\\u0622\\u0646\\u06AF\\u0627\\u0647</mat-checkbox>\\n  </div> -->\\n    <mat-card class=\\\"steps-item\\\" *ngFor=\\\"let step of steps$ | async\\\">\\n      <span class=\\\"step-text\\\">\\n        {{step.description}}\\n      </span>\\n      <button mat-icon-button class=\\\"add-button\\\" (click)=\\\"addStepToScenario(step)\\\">\\n        <mat-icon>arrow_back_ios</mat-icon>\\n      </button>\\n    </mat-card>\\n  </div>\\n\\n  <div fxFlex=\\\"700px\\\">\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"25px\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"scenario-toolbar\\\">\\n      <div fxFlex>\\n        <mat-form-field class=\\\"fit\\\">\\n          <mat-select placeholder=\\\"\\u0648\\u0650\\u06CC\\u0698\\u06AF\\u06CC\\\" (selectionChange)=\\\"activeScenario($event.value)\\\">\\n            <mat-option *ngFor=\\\"let scenario of scenarios$ | async\\\" [value]=\\\"scenario\\\">\\n              {{ scenario.featureId }} : {{ scenario.name }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <button fxFlex=\\\"nogrow\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"addNewScenario()\\\">\\n        \\u062B\\u0628\\u062A \\u0633\\u0646\\u0627\\u0631\\u06CC\\u0648 \\u062C\\u062F\\u06CC\\u062F\\n      </button>\\n    </div>\\n    <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"15px\\\">\\n      <div fxFlex=\\\"100\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"25px\\\" [formGroup]=\\\"scenarioFormGroup\\\">\\n        <mat-form-field fxFlex=\\\"50\\\">\\n          <mat-select placeholder=\\\"\\u0648\\u06CC\\u0698\\u06AF\\u06CC\\\" formControlName=\\\"featureId\\\">\\n            <mat-option *ngFor=\\\"let feature of features$\\\" [value]=\\\"feature\\\">\\n              {{ feature }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field fxFlex=\\\"50\\\">\\n          <input matInput placeholder=\\\"\\u0646\\u0627\\u0645\\\" formControlName=\\\"name\\\">\\n        </mat-form-field>\\n      </div>\\n      <ng-container *ngFor=\\\"let step of (scenario$ | async).steps\\\">\\n        <div class=\\\"scenario-steps-item\\\">\\n          <ng-container rule-step-loader [step]=\\\"step\\\"></ng-container>\\n          <div class=\\\"scenario-steps-action\\\">\\n            <button mat-icon-button (click)=\\\"deleteStepFromScenario(step)\\\">\\n              <mat-icon>delete</mat-icon>\\n            </button>\\n            <button mat-icon-button (click)=\\\"incScenarioStepPriority(step)\\\">\\n              <mat-icon>keyboard_arrow_up</mat-icon>\\n            </button>\\n            <button mat-icon-button (click)=\\\"decScenarioStepPriority(step)\\\">\\n              <mat-icon>keyboard_arrow_down</mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <button fxFlex=\\\"nogrow\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">\\n        \\u062B\\u0628\\u062A\\n      </button>\\n    </div>\\n  </div>\\n</div>\",\r\n                    styles: [\":host{width:100vw}.scenario-toolbar{height:60px;margin-bottom:20px}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    GwtViewComponent.ctorParameters = function () { return [\r\n        { type: Store },\r\n        { type: RuleConfigurationService },\r\n        { type: ScenarioService },\r\n        { type: Injector },\r\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_BOTTOM_SHEET_DATA,] }] }\r\n    ]; };\r\n    GwtViewComponent.propDecorators = {\r\n        stepLoaders: [{ type: ViewChildren, args: [StepLoaderDirective,] }]\r\n    };\r\n    return GwtViewComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar GwtStepTypes = {\r\n    \"Given\": \"Given\",\r\n    \"When\": \"When\",\r\n    \"Then\": \"Then\",\r\n    \"And\": \"And\",\r\n    \"But\": \"But\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar RuleAnchorDirective = /** @class */ (function () {\r\n    function RuleAnchorDirective(scenarioService, configService, store, el, renderer, bottomSheet) {\r\n        var _this = this;\r\n        this.scenarioService = scenarioService;\r\n        this.configService = configService;\r\n        this.store = store;\r\n        this.el = el;\r\n        this.renderer = renderer;\r\n        this.bottomSheet = bottomSheet;\r\n        this.unsubscribe = new Subject();\r\n        this.active$ = this.store.select(function (s) { return s.rule.ruleAnchors.active; }).pipe(takeUntil(this.unsubscribe));\r\n        this.active$.subscribe(function (active) { return (_this.active = active); });\r\n        this.el.nativeElement.classList.add(\"ngs-rule-anchor\");\r\n        this.steps = this.configService.config$.getValue().steps;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RuleAnchorDirective.prototype.onMouseEnter = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.active) {\r\n            return;\r\n        }\r\n        this.showAnchor();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RuleAnchorDirective.prototype.onMouseLeave = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.active) {\r\n            return;\r\n        }\r\n        this.hideAnchor();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RuleAnchorDirective.prototype.showAnchor = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.el.nativeElement.classList.add(\"show-anchor\");\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RuleAnchorDirective.prototype.hideAnchor = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.el.nativeElement.classList.remove(\"show-anchor\");\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RuleAnchorDirective.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        // TODO: remove\r\n        // this.store.dispatch(new ShowAnchorsAction());\r\n        this.anchorScenarios$ = this.scenarioService\r\n            .getAnchorScenarios(this.anchorId) // TODO: replace service call with ngrx action\r\n            .pipe(takeUntil(this.unsubscribe), filter(function (scenario) { return scenario !== undefined; }));\r\n        this.active$.subscribe(function (active) {\r\n            if (active) {\r\n                _this._activate_anchor();\r\n            }\r\n            else {\r\n                _this._deactivate_anchor();\r\n            }\r\n        });\r\n        this.anchorScenarios$.subscribe(function (scenarios) {\r\n            scenarios.forEach(function (scenario) {\r\n                scenario.steps = scenario.steps.map(function (scenarioStep) {\r\n                    /** @type {?} */\r\n                    var step = _this.steps.find(function (step) { return step.id === scenarioStep.id; });\r\n                    /** @type {?} */\r\n                    var _step = Object.create(step);\r\n                    _step.params = scenarioStep.params;\r\n                    return _step;\r\n                });\r\n                _this._do_scenario(scenario);\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RuleAnchorDirective.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RuleAnchorDirective.prototype._activate_anchor = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._create_anchor();\r\n        this._set_active_class_to_host();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RuleAnchorDirective.prototype._deactivate_anchor = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._remove_anchor();\r\n        this._remove_active_class_to_host();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RuleAnchorDirective.prototype._set_active_class_to_host = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.el.nativeElement.classList.add(\"anchor-active\");\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RuleAnchorDirective.prototype._remove_active_class_to_host = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.el.nativeElement.classList.remove(\"anchor-active\");\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RuleAnchorDirective.prototype._create_anchor = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.button = this.renderer.createElement(\"button\");\r\n        this.button.classList.add(\"ngs-rule-anchor-button\", \"mat-icon-button\");\r\n        this.button.setAttribute(\"mat-icon-button\", \"\");\r\n        this.button.addEventListener(\"click\", function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            _this.bottomSheet.open(GwtViewComponent, {\r\n                data: {\r\n                    anchorId: _this.anchorId\r\n                },\r\n                panelClass: \"magenta-theme\"\r\n            });\r\n        });\r\n        /** @type {?} */\r\n        var maticon = this.renderer.createElement(\"mat-icon\");\r\n        maticon.classList.add(\"mat-icon\", \"material-icons\");\r\n        /** @type {?} */\r\n        var icon = this.renderer.createText(\"settings\");\r\n        this.renderer.appendChild(maticon, icon);\r\n        this.renderer.appendChild(this.button, maticon);\r\n        this.renderer.appendChild(this.el.nativeElement, this.button);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    RuleAnchorDirective.prototype._remove_anchor = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.button) {\r\n            return;\r\n        }\r\n        this.button.parentNode.removeChild(this.button);\r\n    };\r\n    /**\r\n     * @param {?} _scenario\r\n     * @return {?}\r\n     */\r\n    RuleAnchorDirective.prototype._do_scenario = /**\r\n     * @param {?} _scenario\r\n     * @return {?}\r\n     */\r\n    function (_scenario) {\r\n        var _this = this;\r\n        debugger;\r\n        /** @type {?} */\r\n        var scenario = _scenario;\r\n        /** @type {?} */\r\n        var givenStepInterpretors = scenario.steps\r\n            .filter(function (step) { return step.type === GwtStepTypes.Given; })\r\n            .map(function (step) { return step.interperator(step.params); });\r\n        debugger;\r\n        combineLatest(givenStepInterpretors)\r\n            .pipe(takeUntil(this.unsubscribe), map(function (values) { return values.every(function (value) { return value === true; }); }), switchMap(function (givenResult) {\r\n            debugger;\r\n            if (givenResult) {\r\n                /** @type {?} */\r\n                var thenStepInterpretors = scenario.steps\r\n                    .filter(function (step) { return step.type === GwtStepTypes.Then; })\r\n                    .map(function (step) { return step.interperator(step.params, _this.el); });\r\n                return combineLatest\r\n                    .apply(null, thenStepInterpretors)\r\n                    .pipe(map(function (values) { return values.every(function (value) { return value === true; }); }));\r\n            }\r\n            else {\r\n                return of(false);\r\n            }\r\n        }))\r\n            .subscribe(function () { });\r\n    };\r\n    RuleAnchorDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: \"[ruleAnchor]\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    RuleAnchorDirective.ctorParameters = function () { return [\r\n        { type: ScenarioService },\r\n        { type: RuleConfigurationService },\r\n        { type: Store },\r\n        { type: ElementRef },\r\n        { type: Renderer2 },\r\n        { type: MatBottomSheet }\r\n    ]; };\r\n    RuleAnchorDirective.propDecorators = {\r\n        anchorId: [{ type: Input, args: [\"ruleAnchor\",] }],\r\n        onMouseEnter: [{ type: HostListener, args: [\"mouseenter\",] }],\r\n        onMouseLeave: [{ type: HostListener, args: [\"mouseleave\",] }]\r\n    };\r\n    return RuleAnchorDirective;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ScenariosDbEffects = /** @class */ (function () {\r\n    function ScenariosDbEffects(actions$, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.service = service;\r\n        this.EditProfileRequest$ = this.actions$\r\n            .ofType(ScenariosListActionTypes.SCENARIOS_LIST)\r\n            .pipe(map(function () { return new ScenariosListStartAction(); }));\r\n        this.UpsertScenario$ = this.actions$\r\n            .ofType(ScenariosListActionTypes.UPSERT)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (scenario) { return _this.service.upsert(scenario); }), map(function (scenario) { return new ScenarioFechedAction(scenario); }));\r\n    }\r\n    ScenariosDbEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    ScenariosDbEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: ScenarioService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], ScenariosDbEffects.prototype, \"EditProfileRequest$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], ScenariosDbEffects.prototype, \"UpsertScenario$\", void 0);\r\n    return ScenariosDbEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar RulesListEffects = /** @class */ (function () {\r\n    function RulesListEffects(actions$) {\r\n        this.actions$ = actions$;\r\n        this.EditProfileRequest$ = this.actions$.ofType(RulesListActionTypes.RULES_LIST).map(function () { return new RulesListStartAction(); });\r\n    }\r\n    RulesListEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    RulesListEffects.ctorParameters = function () { return [\r\n        { type: Actions }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], RulesListEffects.prototype, \"EditProfileRequest$\", void 0);\r\n    return RulesListEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GwtModeButtonComponent = /** @class */ (function () {\r\n    function GwtModeButtonComponent(store) {\r\n        this.store = store;\r\n        this.anchorsMode = false;\r\n        this.havePermission$ = this.store.select(getFrontendAuthenticationState);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GwtModeButtonComponent.prototype.toggleAnchors = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.anchorsMode === false) {\r\n            this.store.dispatch(new ShowAnchorsAction());\r\n            this.anchorsMode = true;\r\n        }\r\n        else {\r\n            this.store.dispatch(new HideAnchorsAction());\r\n            this.anchorsMode = false;\r\n        }\r\n    };\r\n    GwtModeButtonComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"gwt-mode-button\",\r\n                    template: \"    <button *ngIf=\\\"!(havePermission$ | async)\\\" class=\\\"btn\\\" mat-mini-fab type=\\\"button\\\" routerLink=\\\"auth/frontend/signin\\\" fxFlex=\\\"nogrow\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-icon>fingerprint</mat-icon>\\n    </button>\\n\\n    <button *ngIf=\\\"havePermission$ | async\\\" class=\\\"btn\\\" mat-mini-fab type=\\\"button\\\" (click)=\\\"toggleAnchors()\\\" fxFlex=\\\"nogrow\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-icon>settings</mat-icon>\\n    </button>\",\r\n                    styles: [\".btn{position:fixed;bottom:25px;left:25px;z-index:3}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    GwtModeButtonComponent.ctorParameters = function () { return [\r\n        { type: Store }\r\n    ]; };\r\n    return GwtModeButtonComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar RuleService = /** @class */ (function () {\r\n    function RuleService(http, store, configurationService) {\r\n        this.http = http;\r\n        this.store = store;\r\n        this.configurationService = configurationService;\r\n    }\r\n    RuleService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    RuleService.ctorParameters = function () { return [\r\n        { type: HttpClient },\r\n        { type: Store },\r\n        { type: RuleConfigurationService }\r\n    ]; };\r\n    return RuleService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar RuleModule = /** @class */ (function () {\r\n    function RuleModule() {\r\n    }\r\n    /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    RuleModule.forRoot = /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        return {\r\n            ngModule: RootRuleModule,\r\n            providers: [\r\n                { provide: MODULE_CONFIG_TOKEN, useValue: config || {} },\r\n                RuleService,\r\n                RuleConfigurationService,\r\n                ScenarioService\r\n            ]\r\n        };\r\n    };\r\n    RuleModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        HttpClientModule,\r\n                        FormsModule,\r\n                        RouterModule,\r\n                        CommonModule,\r\n                        MatExpansionModule,\r\n                        MatSnackBarModule,\r\n                        MatIconModule,\r\n                        MatButtonModule,\r\n                        MatCardModule,\r\n                        MatCheckboxModule,\r\n                        MatTableModule,\r\n                        MatSelectModule,\r\n                        MatInputModule,\r\n                        MatFormFieldModule,\r\n                        MatTabsModule,\r\n                        MatDividerModule,\r\n                        FlexLayoutModule,\r\n                        MatRadioModule,\r\n                        MatSlideToggleModule,\r\n                        ReactiveFormsModule,\r\n                        BrowserAnimationsModule\r\n                    ],\r\n                    declarations: [RuleComponent, RuleAnchorDirective, GwtViewComponent, StepLoaderDirective, GwtModeButtonComponent],\r\n                    entryComponents: [GwtViewComponent],\r\n                    exports: [RuleAnchorDirective, GwtModeButtonComponent]\r\n                },] },\r\n    ];\r\n    return RuleModule;\r\n}());\r\nvar RootRuleModule = /** @class */ (function () {\r\n    function RootRuleModule() {\r\n    }\r\n    RootRuleModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        RuleModule,\r\n                        StoreModule.forFeature(\"rule\", RuleReducers),\r\n                        EffectsModule.forFeature([RulesListEffects, ScenariosDbEffects]),\r\n                        RoutingModule\r\n                    ],\r\n                    exports: [RuleModule]\r\n                },] },\r\n    ];\r\n    return RootRuleModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { RuleModule, GwtStepTypes, ShowAnchorsAction, HideAnchorsAction, RulesListEffects as ɵp, reducer as ɵn, ScenariosDbEffects as ɵq, reducer$1 as ɵo, GwtViewComponent as ɵj, GwtModeButtonComponent as ɵl, RuleAnchorDirective as ɵd, Reducer as ɵm, RoutingModule as ɵr, RuleComponent as ɵc, MODULE_CONFIG_TOKEN as ɵb, RootRuleModule as ɵa, RuleReducers as ɵg, RuleConfigurationService as ɵi, RuleService as ɵs, ScenarioService as ɵe, StepLoaderDirective as ɵk };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { Pipe, NgModule, Injectable, defineInjectable } from '@angular/core';\nimport { __read } from 'tslib';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DataUnitPipe = /** @class */ (function () {\r\n    function DataUnitPipe() {\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @param {?} exponent\r\n     * @return {?}\r\n     */\r\n    DataUnitPipe.prototype.transform = /**\r\n     * @param {?} value\r\n     * @param {?} exponent\r\n     * @return {?}\r\n     */\r\n    function (value, exponent) {\r\n        if (value == 0)\r\n            return \"0 بایت\";\r\n        if (value == null)\r\n            return \"نامحدود\";\r\n        /** @type {?} */\r\n        var B = 1;\r\n        /** @type {?} */\r\n        var KB = B * 1024;\r\n        /** @type {?} */\r\n        var MB = KB * 1024;\r\n        /** @type {?} */\r\n        var GB = MB * 1024;\r\n        /** @type {?} */\r\n        var convertedValue;\r\n        /** @type {?} */\r\n        var suffix = \"بایت\";\r\n        if (value >= GB) {\r\n            suffix = \"گیگا بایت\";\r\n            convertedValue = (value / GB).toFixed(2);\r\n        }\r\n        else if (value >= MB) {\r\n            suffix = \"مگا بایت\";\r\n            convertedValue = (value / MB).toFixed(2);\r\n        }\r\n        else if (value >= KB) {\r\n            suffix = \"کیلو بایت\";\r\n            convertedValue = (value / KB).toFixed(2);\r\n        }\r\n        else {\r\n            suffix = \"بایت\";\r\n            convertedValue = value.toFixed(2);\r\n        }\r\n        return convertedValue + \" \" + suffix;\r\n    };\r\n    DataUnitPipe.decorators = [\r\n        { type: Pipe, args: [{ name: \"dataUnit\" },] },\r\n    ];\r\n    return DataUnitPipe;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar TimeUnitPipe = /** @class */ (function () {\r\n    function TimeUnitPipe() {\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    TimeUnitPipe.prototype.getDays = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        /** @type {?} */\r\n        var rate = 60 * 60 * 24;\r\n        /** @type {?} */\r\n        var count = Math.floor(value / rate);\r\n        return {\r\n            count: count,\r\n            value: count + ' روز',\r\n            remaining: value - count * rate\r\n        };\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    TimeUnitPipe.prototype.getHours = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        /** @type {?} */\r\n        var rate = 60 * 60;\r\n        /** @type {?} */\r\n        var count = Math.floor(value / rate);\r\n        return {\r\n            count: count,\r\n            value: count + ' ساعت',\r\n            remaining: value - count * rate\r\n        };\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    TimeUnitPipe.prototype.getMinuts = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        /** @type {?} */\r\n        var rate = 60;\r\n        /** @type {?} */\r\n        var count = Math.floor(value / rate);\r\n        return {\r\n            count: count,\r\n            value: count + ' دقیقه',\r\n            remaining: value - count * rate\r\n        };\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    TimeUnitPipe.prototype.getSeconds = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        /** @type {?} */\r\n        var count = Math.floor((value));\r\n        return {\r\n            count: count,\r\n            value: count + ' ثانیه',\r\n            remaining: value - count\r\n        };\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @param {?} exponent\r\n     * @return {?}\r\n     */\r\n    TimeUnitPipe.prototype.transform = /**\r\n     * @param {?} value\r\n     * @param {?} exponent\r\n     * @return {?}\r\n     */\r\n    function (value, exponent) {\r\n        if (value === 0)\r\n            return '0 دقیقه';\r\n        if (!value)\r\n            return '';\r\n        /** @type {?} */\r\n        var connector = ' و ';\r\n        /** @type {?} */\r\n        var daysData = this.getDays(value);\r\n        /** @type {?} */\r\n        var hoursData = this.getHours(daysData.remaining);\r\n        /** @type {?} */\r\n        var minutsData = this.getMinuts(hoursData.remaining);\r\n        // let secondssData = this.getSeconds(minutsData.remaining);\r\n        return [daysData, hoursData, minutsData]\r\n            .filter(function (i) { return i.count; })\r\n            .map(function (i) { return i.value; }).join(connector);\r\n    };\r\n    TimeUnitPipe.decorators = [\r\n        { type: Pipe, args: [{ name: 'timeUnit' },] },\r\n    ];\r\n    return TimeUnitPipe;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar PersianDatePipe = /** @class */ (function () {\r\n    function PersianDatePipe() {\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @param {?} exponent\r\n     * @return {?}\r\n     */\r\n    PersianDatePipe.prototype.transform = /**\r\n     * @param {?} value\r\n     * @param {?} exponent\r\n     * @return {?}\r\n     */\r\n    function (value, exponent) {\r\n        if (!value)\r\n            return \"\";\r\n        /** @type {?} */\r\n        var date;\r\n        if (value.toDate) {\r\n            date = value.toDate();\r\n        }\r\n        else {\r\n            date = new Date(parseInt(value.replace(\"/Date(\", \"\").replace(\")/\", \"\"), 10));\r\n        }\r\n        /** @type {?} */\r\n        var persianDate = _.date.georgian.to.persian(date.getFullYear(), date.getMonth() + 1, date.getDate());\r\n        return [\r\n            parseInt(persianDate[0]).toLocaleString(\"fa-IR\", { useGrouping: false }),\r\n            parseInt(persianDate[1]).toLocaleString(\"fa-IR\", { useGrouping: false }),\r\n            parseInt(persianDate[2]).toLocaleString(\"fa-IR\", { useGrouping: false })\r\n        ].join(\"/\");\r\n    };\r\n    PersianDatePipe.decorators = [\r\n        { type: Pipe, args: [{ name: \"persianDate\" },] },\r\n    ];\r\n    return PersianDatePipe;\r\n}());\r\nvar ɵ0 = function (_) {\r\n    /** @type {?} */\r\n    var is = function (node, selector) {\r\n        if (node.matches)\r\n            return node.matches(selector);\r\n        /** @type {?} */\r\n        var nodes = this.argToArray(node.parentNode.querySelectorAll(selector));\r\n        return nodes.indexOf(node) > -1 ? true : false;\r\n    };\r\n    is.object = function (_var) {\r\n        return Object.prototype.toString.call(_var) === \"[object Object]\";\r\n    };\r\n    is.nodeList = function (obj) {\r\n        if (_.is.not.ie())\r\n            return Object.prototype.toString.call(obj) === \"[object NodeList]\";\r\n        else\r\n            return (obj.length !== undefined &&\r\n                obj.push === undefined &&\r\n                (obj.length > 0 ? obj[0].tagName !== undefined : true));\r\n    };\r\n    is.element = function (obj) {\r\n        return Object.prototype.toString.call(obj).search(\"Element\") > -1;\r\n        //return !!Object.prototype.toString.call(_var).toLowerCase().search('element');;\r\n    };\r\n    is.HTMLCollection = function (obj) {\r\n        return Object.prototype.toString.call(obj) === \"[object HTMLCollection]\";\r\n    };\r\n    is.array = function (_var) {\r\n        return Object.prototype.toString.call(_var) === \"[object Array]\";\r\n    };\r\n    is.number = function (_var) {\r\n        return Object.prototype.toString.call(_var) === \"[object Number]\";\r\n    };\r\n    is[\"function\"] = function (_var) {\r\n        return Object.prototype.toString.call(_var) === \"[object Function]\";\r\n    };\r\n    is.string = function (_var) {\r\n        return Object.prototype.toString.call(_var) === \"[object String]\"; //&& ((isEmpty));\r\n    };\r\n    is.undefined = function (_var) {\r\n        return Object.prototype.toString.call(_var) === \"[object Undefined]\";\r\n    };\r\n    is.event = function (_var) {\r\n        return Object.prototype.toString.call(_var).toLowerCase().search(\"event\") > -1;\r\n    };\r\n    is.defined = function (_var) {\r\n        //return Object.prototype.toString.call(_var) !== '[object Undefined]' && Object.prototype.toString.call(_var) !== '[object Null]' && Object !== '';\r\n        return _var !== undefined && _var !== null && _var !== \"\";\r\n    };\r\n    is.json = function () { };\r\n    is.error = function () { };\r\n    is.startWith = function (str, prefix) {\r\n        return str.indexOf(prefix) === 0;\r\n    };\r\n    is.endWith = function (str) { };\r\n    is.value = function (_var) {\r\n        return _var ? true : false;\r\n    };\r\n    is.empty = function (o) {\r\n        if (_.is.object(0))\r\n            for (var i in o)\r\n                if (o.hasOwnProperty(i))\r\n                    return false;\r\n        if (_.is.array(o))\r\n            return o.length === 0;\r\n        return true;\r\n    };\r\n    is.truthy = function () { };\r\n    is.scalar = function (_var) {\r\n        //TODO : improve\r\n        return is.defined(_var) && is.not.array(_var) && is.not.object(_var) && is.not[\"function\"](_var);\r\n    };\r\n    is.prototypeProp = function (obj, prop) {\r\n        return obj[prop] && !obj.hasOwnProperty(prop);\r\n    };\r\n    is.equal = function (fv, sv) {\r\n        //if (!fv) that.warn('equal function :' + fv + ' is Not Object');\r\n        //if (!sv) that.warn('equal function :' + sv + ' is Not Object');\r\n        return JSON.stringify(fv) == JSON.stringify(sv) ? true : false;\r\n    };\r\n    is.equalText = function (fv, sv) {\r\n        return fv.toLowerCase(fv) === sv.toLowerCase(sv) ? true : false;\r\n    };\r\n    is.closet = function (fo, so) {\r\n        return _.is.equal(_.partial(fo, _.report.skeleton(so)), so);\r\n    };\r\n    is.contain = function (str, searchStr) {\r\n        /** @type {?} */\r\n        var reg = _.is.regex(searchStr) ? searchStr : new RegExp(searchStr, \"g\");\r\n        return str.match(reg) && str.match(reg).length > 0;\r\n    };\r\n    is.regex = function (r) {\r\n        return r.constructor.name === \"RegExp\";\r\n    };\r\n    is.same = function (fv, sv) {\r\n        //if (!fv) that.warn('equal function :' + fv + ' is Not Object');\r\n        //if (!sv) that.warn('equal function :' + sv + ' is Not Object');\r\n        return fv.isEqualNode ? fv.isEqualNode(sv) : fv === sv;\r\n    };\r\n    is.persianLeapYear = function (year) {\r\n        return (((year - (year > 0 ? 474 : 473)) % 2820 + 474 + 38) * 682) % 2816 < 682;\r\n    };\r\n    is.georgianLeapYear = function (year) {\r\n        return year % 4 == 0 && !(year % 100 == 0 && year % 400 != 0);\r\n    };\r\n    /** @type {?} */\r\n    var not = {};\r\n    /** @type {?} */\r\n    var i;\r\n    for (i in is)\r\n        (function (i) {\r\n            if (is.hasOwnProperty(i))\r\n                not[i] = function (a, b, c) {\r\n                    return !is[i](a, b, c);\r\n                };\r\n        })(i);\r\n    is.not = not;\r\n    /** @type {?} */\r\n    var all = {};\r\n    for (i in is)\r\n        (function (i) {\r\n            if (is.hasOwnProperty(i))\r\n                all[i] = function (o) { };\r\n        })(i);\r\n    is.all = all;\r\n    /** @type {?} */\r\n    var any = {};\r\n    for (var j in is)\r\n        (function (j) {\r\n            if (is.hasOwnProperty(j))\r\n                any[j] = function (o) { };\r\n        })(j);\r\n    is.any = any;\r\n    return is;\r\n}, ɵ1 = function () {\r\n    /** @type {?} */\r\n    var math = {};\r\n    math.mod = function (a, b) {\r\n        return a - b * Math.floor(a / b);\r\n    };\r\n    return math;\r\n}, ɵ2 = function () {\r\n    /** @type {?} */\r\n    var PERSIAN_EPOCH = 1948320.5;\r\n    /** @type {?} */\r\n    var GREGORIAN_EPOCH = 1721425.5;\r\n    /** @type {?} */\r\n    var date = {};\r\n    date.persian = {};\r\n    date.persian.to = {};\r\n    date.georgian = {};\r\n    date.georgian.to = {};\r\n    date.julian = {};\r\n    date.julian.to = {};\r\n    /** @type {?} */\r\n    var insertZero = function (i) {\r\n        i = i.toString();\r\n        return i.length == 1 ? \"0\" + i : i;\r\n    };\r\n    date.persian.to.julian = function (year, month, day) {\r\n        /** @type {?} */\r\n        var epbase;\r\n        /** @type {?} */\r\n        var epyear;\r\n        year = parseInt(year);\r\n        month = parseInt(month);\r\n        day = parseInt(day);\r\n        epbase = year - (year >= 0 ? 474 : 473);\r\n        epyear = 474 + _.math.mod(epbase, 2820);\r\n        return (day +\r\n            (month <= 7 ? (month - 1) * 31 : (month - 1) * 30 + 6) +\r\n            Math.floor((epyear * 682 - 110) / 2816) +\r\n            (epyear - 1) * 365 +\r\n            Math.floor(epbase / 2820) * 1029983 +\r\n            (PERSIAN_EPOCH - 1));\r\n    };\r\n    date.persian.to.georgian = function (year, month, day, joinCharacter) {\r\n        /** @type {?} */\r\n        var dateArray = date.julian.to.georgian(date.persian.to.julian(parseInt(year), parseInt(month) + 1, parseInt(day)));\r\n        return joinCharacter ? dateArray.join(joinCharacter) : dateArray;\r\n    };\r\n    date.georgian.to.julian = function (year, month, day) {\r\n        year = parseInt(year);\r\n        month = parseInt(month);\r\n        day = parseInt(day);\r\n        return (GREGORIAN_EPOCH -\r\n            1 +\r\n            365 * (year - 1) +\r\n            Math.floor((year - 1) / 4) +\r\n            -Math.floor((year - 1) / 100) +\r\n            Math.floor((year - 1) / 400) +\r\n            Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : _.is.georgianLeapYear(year) ? -1 : -2) + day));\r\n    };\r\n    date.georgian.to.persian = function (year, month, day, joinCharacter) {\r\n        /** @type {?} */\r\n        var dateArray = date.julian.to.persian(date.georgian.to.julian(parseInt(year), parseInt(month), parseInt(day)));\r\n        return joinCharacter ? dateArray.join(joinCharacter) : dateArray;\r\n    };\r\n    date.julian.to.georgian = function (jd) {\r\n        /** @type {?} */\r\n        var wjd;\r\n        /** @type {?} */\r\n        var depoch;\r\n        /** @type {?} */\r\n        var quadricent;\r\n        /** @type {?} */\r\n        var dqc;\r\n        /** @type {?} */\r\n        var cent;\r\n        /** @type {?} */\r\n        var dcent;\r\n        /** @type {?} */\r\n        var quad;\r\n        /** @type {?} */\r\n        var dquad;\r\n        /** @type {?} */\r\n        var yindex;\r\n        /** @type {?} */\r\n        var year;\r\n        /** @type {?} */\r\n        var month;\r\n        /** @type {?} */\r\n        var day;\r\n        /** @type {?} */\r\n        var yearday;\r\n        /** @type {?} */\r\n        var leapadj;\r\n        jd = parseFloat(jd);\r\n        wjd = Math.floor(jd - 0.5) + 0.5;\r\n        depoch = wjd - GREGORIAN_EPOCH;\r\n        quadricent = Math.floor(depoch / 146097);\r\n        dqc = _.math.mod(depoch, 146097);\r\n        cent = Math.floor(dqc / 36524);\r\n        dcent = _.math.mod(dqc, 36524);\r\n        quad = Math.floor(dcent / 1461);\r\n        dquad = _.math.mod(dcent, 1461);\r\n        yindex = Math.floor(dquad / 365);\r\n        year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\r\n        if (!(cent == 4 || yindex == 4)) {\r\n            year++;\r\n        }\r\n        yearday = wjd - _.date.georgian.to.julian(year, 1, 1);\r\n        leapadj = wjd < _.date.georgian.to.julian(year, 3, 1) ? 0 : _.is.georgianLeapYear(year) ? 1 : 2;\r\n        month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\r\n        day = wjd - _.date.georgian.to.julian(year, month, 1) + 1;\r\n        return new Array(insertZero(year), insertZero(month), insertZero(day));\r\n    };\r\n    date.julian.to.persian = function (jd) {\r\n        /** @type {?} */\r\n        var year;\r\n        /** @type {?} */\r\n        var month;\r\n        /** @type {?} */\r\n        var day;\r\n        /** @type {?} */\r\n        var depoch;\r\n        /** @type {?} */\r\n        var cycle;\r\n        /** @type {?} */\r\n        var cyear;\r\n        /** @type {?} */\r\n        var ycycle;\r\n        /** @type {?} */\r\n        var aux1;\r\n        /** @type {?} */\r\n        var aux2;\r\n        /** @type {?} */\r\n        var yday;\r\n        jd = parseFloat(jd);\r\n        jd = Math.floor(jd) + 0.5;\r\n        depoch = jd - _.date.persian.to.julian(475, 1, 1);\r\n        cycle = Math.floor(depoch / 1029983);\r\n        cyear = _.math.mod(depoch, 1029983);\r\n        if (cyear == 1029982) {\r\n            ycycle = 2820;\r\n        }\r\n        else {\r\n            aux1 = Math.floor(cyear / 366);\r\n            aux2 = _.math.mod(cyear, 366);\r\n            ycycle = Math.floor((2134 * aux1 + 2816 * aux2 + 2815) / 1028522) + aux1 + 1;\r\n        }\r\n        year = ycycle + 2820 * cycle + 474;\r\n        if (year <= 0) {\r\n            year--;\r\n        }\r\n        yday = jd - _.date.persian.to.julian(year, 1, 1) + 1;\r\n        month = yday <= 186 ? Math.ceil(yday / 31) : Math.ceil((yday - 6) / 30);\r\n        day = jd - _.date.persian.to.julian(year, month, 1) + 1;\r\n        return new Array(insertZero(year), insertZero(month), insertZero(day));\r\n    };\r\n    return date;\r\n};\r\n/** @type {?} */\r\nvar _ = {\r\n    is: (ɵ0)(this),\r\n    math: (ɵ1)(),\r\n    date: (ɵ2)()\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar CurrencyUnitPipe = /** @class */ (function () {\r\n    function CurrencyUnitPipe() {\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @param {?} exponent\r\n     * @return {?}\r\n     */\r\n    CurrencyUnitPipe.prototype.transform = /**\r\n     * @param {?} value\r\n     * @param {?} exponent\r\n     * @return {?}\r\n     */\r\n    function (value, exponent) {\r\n        if (!value && value != 0)\r\n            return '';\r\n        else if (value == 0)\r\n            return 'رایگان';\r\n        /** @type {?} */\r\n        var suffix = 'ریال';\r\n        return [value.toLocaleString('fa-IR'), suffix].join(' ');\r\n    };\r\n    CurrencyUnitPipe.decorators = [\r\n        { type: Pipe, args: [{ name: 'currencyUnit' },] },\r\n    ];\r\n    return CurrencyUnitPipe;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar PersianNumberPipe = /** @class */ (function () {\r\n    function PersianNumberPipe() {\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @param {?} exponent\r\n     * @return {?}\r\n     */\r\n    PersianNumberPipe.prototype.transform = /**\r\n     * @param {?} value\r\n     * @param {?} exponent\r\n     * @return {?}\r\n     */\r\n    function (value, exponent) {\r\n        if (!value)\r\n            return '';\r\n        /** @type {?} */\r\n        var res = '';\r\n        for (var index = 0; index < value.length; index++) {\r\n            res += (+value[index]).toLocaleString('fa-IR', {\r\n                useGrouping: false\r\n            });\r\n        }\r\n        return res;\r\n    };\r\n    PersianNumberPipe.decorators = [\r\n        { type: Pipe, args: [{ name: 'persianNumber' },] },\r\n    ];\r\n    return PersianNumberPipe;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar TimeCounterPipe = /** @class */ (function () {\r\n    function TimeCounterPipe() {\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    TimeCounterPipe.prototype.getHours = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        /** @type {?} */\r\n        var rate = 60 * 60;\r\n        /** @type {?} */\r\n        var count = Math.floor(value / rate);\r\n        return {\r\n            count: count,\r\n            value: count + ' ساعت',\r\n            remaining: value - count * rate\r\n        };\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    TimeCounterPipe.prototype.getMinuts = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        /** @type {?} */\r\n        var rate = 60;\r\n        /** @type {?} */\r\n        var count = Math.floor(value / rate);\r\n        return {\r\n            count: count,\r\n            value: count + ' دقیقه',\r\n            remaining: value - count * rate\r\n        };\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    TimeCounterPipe.prototype.getSeconds = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        /** @type {?} */\r\n        var count = Math.floor((value));\r\n        return {\r\n            count: count,\r\n            value: count + ' ثانیه',\r\n            remaining: value - count\r\n        };\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @param {?} exponent\r\n     * @return {?}\r\n     */\r\n    TimeCounterPipe.prototype.transform = /**\r\n     * @param {?} value\r\n     * @param {?} exponent\r\n     * @return {?}\r\n     */\r\n    function (value, exponent) {\r\n        if (!value)\r\n            return '';\r\n        /** @type {?} */\r\n        var connector = ' : ';\r\n        /** @type {?} */\r\n        var hoursData = this.getHours(value);\r\n        /** @type {?} */\r\n        var minutsData = this.getMinuts(hoursData.remaining);\r\n        /** @type {?} */\r\n        var secondssData = this.getSeconds(minutsData.remaining);\r\n        return [secondssData, minutsData, hoursData]\r\n            .map(function (i) { return i.count; }).join(connector);\r\n    };\r\n    TimeCounterPipe.decorators = [\r\n        { type: Pipe, args: [{ name: 'timeCounter' },] },\r\n    ];\r\n    return TimeCounterPipe;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SharedModule = /** @class */ (function () {\r\n    function SharedModule() {\r\n    }\r\n    SharedModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [DataUnitPipe, TimeUnitPipe, PersianDatePipe, CurrencyUnitPipe, PersianNumberPipe, TimeCounterPipe],\r\n                    exports: [DataUnitPipe, TimeUnitPipe, PersianDatePipe, CurrencyUnitPipe, PersianNumberPipe, TimeCounterPipe]\r\n                },] },\r\n    ];\r\n    return SharedModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @abstract\r\n * @template T\r\n */\r\nvar  /**\r\n * @abstract\r\n * @template T\r\n */\r\nHttpResponseBaseModel = /** @class */ (function () {\r\n    function HttpResponseBaseModel() {\r\n    }\r\n    return HttpResponseBaseModel;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @abstract\r\n * @template T\r\n */\r\nvar  /**\r\n * @abstract\r\n * @template T\r\n */\r\nHttpRequestBaseModel = /** @class */ (function () {\r\n    function HttpRequestBaseModel() {\r\n    }\r\n    return HttpRequestBaseModel;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar PERSIAN_MONTH_DAYS_COUNT = [31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 30];\r\n/** @type {?} */\r\nvar PERSIAN_MONTH_NAMES = [\r\n    \"فروردین\",\r\n    \"اردیبهشت\",\r\n    \"خرداد\",\r\n    \"تیر\",\r\n    \"مرداد\",\r\n    \"شهریور\",\r\n    \"مهر\",\r\n    \"آبان\",\r\n    \"آذر\",\r\n    \"دی\",\r\n    \"بهمن\",\r\n    \"اسفند\"\r\n];\r\nvar DateClass = /** @class */ (function () {\r\n    function DateClass(year, month, date) {\r\n        this.year = year;\r\n        this.month = month;\r\n        this.date = date;\r\n    }\r\n    /**\r\n     * @param {?=} seprator\r\n     * @return {?}\r\n     */\r\n    DateClass.prototype.fullDate = /**\r\n     * @param {?=} seprator\r\n     * @return {?}\r\n     */\r\n    function (seprator) {\r\n        if (seprator === void 0) { seprator = \"/\"; }\r\n        return [this.year, this.month, this.date].join(seprator);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DateClass.prototype.nativeDate = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new Date(parseInt(this.year), parseInt(this.month) - 1, parseInt(this.date));\r\n    };\r\n    return DateClass;\r\n}());\r\nvar UtilityService = /** @class */ (function () {\r\n    function UtilityService() {\r\n        this.is = (function (_, undefined) {\r\n            /** @type {?} */\r\n            var is = function (node, selector) {\r\n                if (node.matches)\r\n                    return node.matches(selector);\r\n                /** @type {?} */\r\n                var nodes = this.argToArray(node.parentNode.querySelectorAll(selector));\r\n                return nodes.indexOf(node) > -1 ? true : false;\r\n            };\r\n            is.object = function (_var) {\r\n                return Object.prototype.toString.call(_var) === \"[object Object]\";\r\n            };\r\n            is.nodeList = function (obj) {\r\n                if (_.is.not.ie())\r\n                    return Object.prototype.toString.call(obj) === \"[object NodeList]\";\r\n                else\r\n                    return (obj.length !== undefined &&\r\n                        obj.push === undefined &&\r\n                        (obj.length > 0 ? obj[0].tagName !== undefined : true));\r\n            };\r\n            is.element = function (obj) {\r\n                return Object.prototype.toString.call(obj).search(\"Element\") > -1;\r\n                //return !!Object.prototype.toString.call(_var).toLowerCase().search('element');;\r\n            };\r\n            is.HTMLCollection = function (obj) {\r\n                return Object.prototype.toString.call(obj) === \"[object HTMLCollection]\";\r\n            };\r\n            is.array = function (_var) {\r\n                return Object.prototype.toString.call(_var) === \"[object Array]\";\r\n            };\r\n            is.number = function (_var) {\r\n                return Object.prototype.toString.call(_var) === \"[object Number]\";\r\n            };\r\n            is[\"function\"] = function (_var) {\r\n                return Object.prototype.toString.call(_var) === \"[object Function]\";\r\n            };\r\n            is.string = function (_var) {\r\n                return Object.prototype.toString.call(_var) === \"[object String]\"; //&& ((isEmpty));\r\n            };\r\n            is.undefined = function (_var) {\r\n                return Object.prototype.toString.call(_var) === \"[object Undefined]\";\r\n            };\r\n            is.event = function (_var) {\r\n                return Object.prototype.toString.call(_var).toLowerCase().search(\"event\") > -1;\r\n            };\r\n            is.defined = function (_var) {\r\n                //return Object.prototype.toString.call(_var) !== '[object Undefined]' && Object.prototype.toString.call(_var) !== '[object Null]' && Object !== '';\r\n                return _var !== undefined && _var !== null && _var !== \"\";\r\n            };\r\n            is.json = function () { };\r\n            is.error = function () { };\r\n            is.startWith = function (str, prefix) {\r\n                return str.indexOf(prefix) === 0;\r\n            };\r\n            is.endWith = function (str) { };\r\n            is.value = function (_var) {\r\n                return _var ? true : false;\r\n            };\r\n            is.empty = function (o) {\r\n                if (_.is.object(0))\r\n                    for (var i in o)\r\n                        if (o.hasOwnProperty(i))\r\n                            return false;\r\n                if (_.is.array(o))\r\n                    return o.length === 0;\r\n                return true;\r\n            };\r\n            is.truthy = function () { };\r\n            is.scalar = function (_var) {\r\n                //TODO : improve\r\n                return is.defined(_var) && is.not.array(_var) && is.not.object(_var) && is.not[\"function\"](_var);\r\n            };\r\n            is.prototypeProp = function (obj, prop) {\r\n                return obj[prop] && !obj.hasOwnProperty(prop);\r\n            };\r\n            is.equal = function (fv, sv) {\r\n                //if (!fv) that.warn('equal function :' + fv + ' is Not Object');\r\n                //if (!sv) that.warn('equal function :' + sv + ' is Not Object');\r\n                return JSON.stringify(fv) == JSON.stringify(sv) ? true : false;\r\n            };\r\n            is.equalText = function (fv, sv) {\r\n                return fv.toLowerCase(fv) === sv.toLowerCase(sv) ? true : false;\r\n            };\r\n            is.contain = function (str, searchStr) {\r\n                /** @type {?} */\r\n                var reg = _.is.regex(searchStr) ? searchStr : new RegExp(searchStr, \"g\");\r\n                return str.match(reg) && str.match(reg).length > 0;\r\n            };\r\n            is.regex = function (r) {\r\n                return r.constructor.name === \"RegExp\";\r\n            };\r\n            is.same = function (fv, sv) {\r\n                //if (!fv) that.warn('equal function :' + fv + ' is Not Object');\r\n                //if (!sv) that.warn('equal function :' + sv + ' is Not Object');\r\n                return fv.isEqualNode ? fv.isEqualNode(sv) : fv === sv;\r\n            };\r\n            is.persianLeapYear = function (year) {\r\n                return (((year - (year > 0 ? 474 : 473)) % 2820 + 474 + 38) * 682) % 2816 < 682;\r\n            };\r\n            is.georgianLeapYear = function (year) {\r\n                return year % 4 == 0 && !(year % 100 == 0 && year % 400 != 0);\r\n            };\r\n            /** @type {?} */\r\n            var not = {};\r\n            /** @type {?} */\r\n            var i;\r\n            for (i in is)\r\n                (function (i) {\r\n                    if (is.hasOwnProperty(i))\r\n                        not[i] = function (a, b, c) {\r\n                            return !is[i](a, b, c);\r\n                        };\r\n                })(i);\r\n            is.not = not;\r\n            /** @type {?} */\r\n            var all = {};\r\n            for (i in is)\r\n                (function (i) {\r\n                    if (is.hasOwnProperty(i))\r\n                        all[i] = function (o) { };\r\n                })(i);\r\n            is.all = all;\r\n            /** @type {?} */\r\n            var any = {};\r\n            for (var j in is)\r\n                (function (j) {\r\n                    if (is.hasOwnProperty(j))\r\n                        any[j] = function (o) { };\r\n                })(j);\r\n            is.any = any;\r\n            return is;\r\n        })(this);\r\n        this.math = (function (_) {\r\n            /** @type {?} */\r\n            var math = {};\r\n            math.mod = function (a, b) {\r\n                return a - b * Math.floor(a / b);\r\n            };\r\n            return math;\r\n        })(this);\r\n        this.date = (function (_) {\r\n            /** @type {?} */\r\n            var PERSIAN_EPOCH = 1948320.5;\r\n            /** @type {?} */\r\n            var GREGORIAN_EPOCH = 1721425.5;\r\n            /** @type {?} */\r\n            var date = {\r\n                persian: {\r\n                    PERSIAN_MONTH_DAYS_COUNT: [],\r\n                    now: function () { return null; },\r\n                    create: function (y, m, d) { return null; },\r\n                    getDaysOfoMonth: function (idx) { return null; },\r\n                    getDayOfWeek: function (y, m, d) { return null; },\r\n                    foretimeMonthOfYear: function () { return []; },\r\n                    to: {\r\n                        georgian: function () { return null; },\r\n                        julian: function () { return null; }\r\n                    }\r\n                },\r\n                julian: {\r\n                    to: {\r\n                        georgian: function () { return null; },\r\n                        persian: function () { return null; }\r\n                    }\r\n                },\r\n                georgian: {\r\n                    // getFutureDate: (n: number) => null,\r\n                    now: function () { return null; },\r\n                    getRelativeDay: function (n) { return null; },\r\n                    parse: function (date) { return null; },\r\n                    to: {\r\n                        persian: function () { return null; },\r\n                        julian: function () { return null; }\r\n                    }\r\n                },\r\n                as: {\r\n                    Date: function () { return null; }\r\n                }\r\n            };\r\n            // date.persian = {};\r\n            // date.persian.to = {};\r\n            // date.georgian = {};\r\n            // date.georgian.to = {};\r\n            // date.julian = {};\r\n            // date.julian.to = {};\r\n            // date.as = {};\r\n            date.as.Date = function (_a) {\r\n                var _b = __read(_a, 3), y = _b[0], m = _b[1], d = _b[2];\r\n                return new Date(parseInt(y), parseInt(m) - 1, parseInt(d));\r\n            };\r\n            /** @type {?} */\r\n            var insertZero = function (i) {\r\n                i = i.toString();\r\n                return i.length == 1 ? \"0\" + i : i;\r\n            };\r\n            date.persian.PERSIAN_MONTH_DAYS_COUNT = [31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 30, 30];\r\n            date.persian.now = function () {\r\n                /** @type {?} */\r\n                var now = new Date();\r\n                return date.georgian.to.persian(now.getFullYear(), now.getMonth(), now.getDate());\r\n            };\r\n            date.persian.create = function (y, m, d) { return new DateClass(y, m, d); };\r\n            date.persian.getDaysOfoMonth = function (idx) {\r\n                /** @type {?} */\r\n                var count = PERSIAN_MONTH_DAYS_COUNT[idx];\r\n                /** @type {?} */\r\n                var res = [];\r\n                for (var i = 1; i < count + 1; i++) {\r\n                    /** @type {?} */\r\n                    var dayName = i < 10 ? \"0\" + i : i.toString();\r\n                    res.push(dayName);\r\n                }\r\n                return res;\r\n            };\r\n            date.persian.getDayOfWeek = function (y, m, d) {\r\n                /** @type {?} */\r\n                var persianHoliday = date.persian.create(\"1396\", \"1\", \"1\");\r\n                /** @type {?} */\r\n                var persianHolidayInGeorgian = date.persian.to.georgian(\"1396\", \"1\", \"1\").nativeDate();\r\n                /** @type {?} */\r\n                var month = +m - 1;\r\n                /** @type {?} */\r\n                var day = +d;\r\n                /** @type {?} */\r\n                var daysOfYear = PERSIAN_MONTH_DAYS_COUNT.reduce(function (a, b, idx) {\r\n                    if (idx == month)\r\n                        return a + day;\r\n                    if (idx > month)\r\n                        return a;\r\n                    return a + b;\r\n                });\r\n                return (daysOfYear + persianHolidayInGeorgian.getDay() - 1) % 7;\r\n            };\r\n            date.persian.foretimeMonthOfYear = function () {\r\n                return PERSIAN_MONTH_NAMES.filter(function (item, idx) { return idx <= +date.persian.now().month - 1; });\r\n            };\r\n            date.persian.to.julian = function (year, month, day) {\r\n                /** @type {?} */\r\n                var epbase;\r\n                /** @type {?} */\r\n                var epyear;\r\n                year = parseInt(year.toString());\r\n                month = parseInt(month.toString());\r\n                day = parseInt(day.toString());\r\n                epbase = year - (year >= 0 ? 474 : 473);\r\n                epyear = 474 + _.math.mod(epbase, 2820);\r\n                return (day +\r\n                    (month <= 7 ? (month - 1) * 31 : (month - 1) * 30 + 6) +\r\n                    Math.floor((epyear * 682 - 110) / 2816) +\r\n                    (epyear - 1) * 365 +\r\n                    Math.floor(epbase / 2820) * 1029983 +\r\n                    (PERSIAN_EPOCH - 1));\r\n            };\r\n            date.persian.to.georgian = function (year, month, day) {\r\n                /** @type {?} */\r\n                var dateArray = date.julian.to.georgian(date.persian.to.julian(parseInt(year.toString()), parseInt(month.toString()), parseInt(day.toString())));\r\n                return new DateClass(dateArray[0], parseInt(dateArray[1]), dateArray[2]);\r\n            };\r\n            date.georgian.parse = function (date) {\r\n                return new DateClass(date.getFullYear(), date.getMonth() + 1, date.getDate());\r\n            };\r\n            date.georgian.to.julian = function (year, month, day) {\r\n                year = parseInt(year.toString());\r\n                month = parseInt(month.toString()) + 1;\r\n                day = parseInt(day.toString());\r\n                return (GREGORIAN_EPOCH -\r\n                    1 +\r\n                    365 * (year - 1) +\r\n                    Math.floor((year - 1) / 4) +\r\n                    -Math.floor((year - 1) / 100) +\r\n                    Math.floor((year - 1) / 400) +\r\n                    Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : _.is.georgianLeapYear(year) ? -1 : -2) + day));\r\n            };\r\n            date.georgian.to.persian = function (year, month, day) {\r\n                /** @type {?} */\r\n                var dateArray = date.julian.to.persian(date.georgian.to.julian(parseInt(year.toString()), parseInt(month.toString()), parseInt(day.toString())));\r\n                return new DateClass(dateArray[0], dateArray[1], dateArray[2]);\r\n            };\r\n            // date.georgian.getFutureDate = function (n) {\r\n            //     var now = new Date();\r\n            //     return new Date(now.getFullYear(), now.getMonth(), now.getDate() + n);\r\n            // }\r\n            date.georgian.now = function () {\r\n                /** @type {?} */\r\n                var now = new Date();\r\n                return new DateClass(now.getFullYear(), now.getMonth() + 1, now.getDate());\r\n            };\r\n            (date.georgian.getRelativeDay = function (n) {\r\n                /** @type {?} */\r\n                var date = new Date(Date.now() + -1 * n * 24 * 60 * 60 * 1000);\r\n                return new DateClass(date.getFullYear(), date.getMonth() + 1, date.getDate());\r\n            }),\r\n                (date.julian.to.georgian = function (jd) {\r\n                    /** @type {?} */\r\n                    var wjd;\r\n                    /** @type {?} */\r\n                    var depoch;\r\n                    /** @type {?} */\r\n                    var quadricent;\r\n                    /** @type {?} */\r\n                    var dqc;\r\n                    /** @type {?} */\r\n                    var cent;\r\n                    /** @type {?} */\r\n                    var dcent;\r\n                    /** @type {?} */\r\n                    var quad;\r\n                    /** @type {?} */\r\n                    var dquad;\r\n                    /** @type {?} */\r\n                    var yindex;\r\n                    /** @type {?} */\r\n                    var year;\r\n                    /** @type {?} */\r\n                    var month;\r\n                    /** @type {?} */\r\n                    var day;\r\n                    /** @type {?} */\r\n                    var yearday;\r\n                    /** @type {?} */\r\n                    var leapadj;\r\n                    jd = parseFloat(jd.toString());\r\n                    wjd = Math.floor(jd - 0.5) + 0.5;\r\n                    depoch = wjd - GREGORIAN_EPOCH;\r\n                    quadricent = Math.floor(depoch / 146097);\r\n                    dqc = _.math.mod(depoch, 146097);\r\n                    cent = Math.floor(dqc / 36524);\r\n                    dcent = _.math.mod(dqc, 36524);\r\n                    quad = Math.floor(dcent / 1461);\r\n                    dquad = _.math.mod(dcent, 1461);\r\n                    yindex = Math.floor(dquad / 365);\r\n                    year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\r\n                    if (!(cent == 4 || yindex == 4)) {\r\n                        year++;\r\n                    }\r\n                    yearday = wjd - _.date.georgian.to.julian(year, 0, 1);\r\n                    leapadj = wjd < _.date.georgian.to.julian(year, 3, 1) ? 0 : _.is.georgianLeapYear(year) ? 1 : 2;\r\n                    month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\r\n                    day = wjd - _.date.georgian.to.julian(year, month - 1, 1) + 1;\r\n                    return new Array(insertZero(year), insertZero(month), insertZero(day));\r\n                });\r\n            date.julian.to.persian = function (jd) {\r\n                /** @type {?} */\r\n                var year;\r\n                /** @type {?} */\r\n                var month;\r\n                /** @type {?} */\r\n                var day;\r\n                /** @type {?} */\r\n                var depoch;\r\n                /** @type {?} */\r\n                var cycle;\r\n                /** @type {?} */\r\n                var cyear;\r\n                /** @type {?} */\r\n                var ycycle;\r\n                /** @type {?} */\r\n                var aux1;\r\n                /** @type {?} */\r\n                var aux2;\r\n                /** @type {?} */\r\n                var yday;\r\n                jd = parseFloat(jd.toString());\r\n                jd = Math.floor(jd) + 0.5;\r\n                depoch = jd - _.date.persian.to.julian(475, 1, 1);\r\n                cycle = Math.floor(depoch / 1029983);\r\n                cyear = _.math.mod(depoch, 1029983);\r\n                if (cyear == 1029982) {\r\n                    ycycle = 2820;\r\n                }\r\n                else {\r\n                    aux1 = Math.floor(cyear / 366);\r\n                    aux2 = _.math.mod(cyear, 366);\r\n                    ycycle = Math.floor((2134 * aux1 + 2816 * aux2 + 2815) / 1028522) + aux1 + 1;\r\n                }\r\n                year = ycycle + 2820 * cycle + 474;\r\n                if (year <= 0) {\r\n                    year--;\r\n                }\r\n                yday = jd - _.date.persian.to.julian(year, 1, 1) + 1;\r\n                month = yday <= 186 ? Math.ceil(yday / 31) : Math.ceil((yday - 6) / 30);\r\n                day = jd - _.date.persian.to.julian(year, month, 1) + 1;\r\n                return new Array(insertZero(year), insertZero(month), insertZero(day));\r\n            };\r\n            return date;\r\n        })(this);\r\n    }\r\n    UtilityService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */ UtilityService.ngInjectableDef = defineInjectable({ factory: function UtilityService_Factory() { return new UtilityService(); }, token: UtilityService, providedIn: \"root\" });\r\n    return UtilityService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar stringTemplate = function (template, model) {\r\n    /** @type {?} */\r\n    var url;\r\n    try {\r\n        // tslint:disable-next-line:no-eval\r\n        url = eval(\"`\" + template + \"`\");\r\n    }\r\n    catch (error) {\r\n        // tslint:disable-next-line:no-eval\r\n        url = \"\";\r\n    }\r\n    return url;\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar Cookie = /** @class */ (function () {\r\n    // private isConsented: boolean = false;\r\n    function Cookie() {\r\n        // this.isConsented = this.getCookie(COOKIE_CONSENT) === '1';\r\n    }\r\n    /**\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    Cookie.getCookie = /**\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function (name) {\r\n        /** @type {?} */\r\n        var ca = document.cookie.split(\";\");\r\n        /** @type {?} */\r\n        var caLen = ca.length;\r\n        /** @type {?} */\r\n        var cookieName = name + \"=\";\r\n        /** @type {?} */\r\n        var c;\r\n        for (var i = 0; i < caLen; i += 1) {\r\n            c = ca[i].replace(/^\\s+/g, \"\");\r\n            if (c.indexOf(cookieName) == 0) {\r\n                return c.substring(cookieName.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    Cookie.deleteCookie = /**\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    function (name) {\r\n        this.setCookie(name, \"\", -1);\r\n    };\r\n    /**\r\n     * @param {?} name\r\n     * @param {?} value\r\n     * @param {?} expireDays\r\n     * @param {?=} path\r\n     * @return {?}\r\n     */\r\n    Cookie.setCookie = /**\r\n     * @param {?} name\r\n     * @param {?} value\r\n     * @param {?} expireDays\r\n     * @param {?=} path\r\n     * @return {?}\r\n     */\r\n    function (name, value, expireDays, path) {\r\n        if (path === void 0) { path = \"\"; }\r\n        /** @type {?} */\r\n        var d = new Date();\r\n        d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\r\n        /** @type {?} */\r\n        var expires = \"expires=\" + d.toUTCString();\r\n        /** @type {?} */\r\n        var cpath = path ? \"; path=\" + path : \"\";\r\n        document.cookie = name + \"=\" + value + \"; \" + expires + cpath;\r\n    };\r\n    /**\r\n     * @param {?} isConsent\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    Cookie.consent = /**\r\n     * @param {?} isConsent\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    function (isConsent, e) {\r\n        // if (!isConsent) {\r\n        //     return this.isConsented;\r\n        // } else if (isConsent) {\r\n        //     this.setCookie(COOKIE_CONSENT, \"1\", COOKIE_CONSENT_EXPIRE_DAYS);\r\n        //     this.isConsented = true;\r\n        //     e.preventDefault();\r\n        // }\r\n    };\r\n    return Cookie;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @param {?} destination\r\n * @return {?}\r\n */\r\nfunction MatchValidator(destination) {\r\n    return function (control) {\r\n        if (!control.root.value)\r\n            return;\r\n        /** @type {?} */\r\n        var destinationValue = control.root.value[destination];\r\n        return (destinationValue == control.value)\r\n            ? null\r\n            : { key: \"don't matched\" };\r\n    };\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @template T\r\n */\r\nvar  /**\r\n * @template T\r\n */\r\nIResponse = /** @class */ (function () {\r\n    function IResponse() {\r\n    }\r\n    return IResponse;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { Cookie, SharedModule, HttpResponseBaseModel, HttpRequestBaseModel, PERSIAN_MONTH_DAYS_COUNT, PERSIAN_MONTH_NAMES, DateClass, UtilityService, stringTemplate, MatchValidator, IResponse, CurrencyUnitPipe as ɵd, DataUnitPipe as ɵa, PersianDatePipe as ɵc, PersianNumberPipe as ɵe, TimeCounterPipe as ɵf, TimeUnitPipe as ɵb };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { InjectionToken, Inject, Injectable, NgModule, defineInjectable, inject } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Store, StoreModule } from '@ngrx/store';\nimport { getSocketModuleConfig } from '@soushians/config';\nimport { map } from 'rxjs/operators';\nimport * as _io from 'socket.io-client';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar MODULE_DEFAULT_CONFIG = {\r\n    env: {\r\n        production: false,\r\n        frontend_server: \"frontend_server/did/not/set\"\r\n    }\r\n};\r\n/** @type {?} */\r\nvar MODULE_CONFIG_TOKEN = new InjectionToken(\"SocketModuleConfig\");\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SocketConfigurationService = /** @class */ (function () {\r\n    function SocketConfigurationService(configFile, store) {\r\n        var _this = this;\r\n        this.store = store;\r\n        this.config$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n        this._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n        this.config$.next(this._config);\r\n        this.store.select(getSocketModuleConfig).subscribe(function (userConfig) {\r\n            if (!userConfig) {\r\n                return;\r\n            }\r\n            _this._config = Object.assign({}, _this._config, userConfig.Config);\r\n            _this.config$.next(_this._config);\r\n        });\r\n    }\r\n    Object.defineProperty(SocketConfigurationService.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._config;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SocketConfigurationService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    SocketConfigurationService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [MODULE_CONFIG_TOKEN,] }] },\r\n        { type: Store }\r\n    ]; };\r\n    return SocketConfigurationService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar SocketActionTypes = {\r\n    SOCKET_RUN_SUCCESSFULLY: \"[SOCKET] SOCKET_RUN_SUCCESSFULLY\",\r\n    SOCKET_INITIALAZATION_FAILD: \"[SOCKET] SOCKET_INITIALAZATION_FAILD\",\r\n};\r\nvar SocketRunSuccessfullyAction = /** @class */ (function () {\r\n    function SocketRunSuccessfullyAction() {\r\n        this.type = SocketActionTypes.SOCKET_RUN_SUCCESSFULLY;\r\n    }\r\n    return SocketRunSuccessfullyAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar io = _io;\r\nvar SocketService = /** @class */ (function () {\r\n    function SocketService(configService, store) {\r\n        var _this = this;\r\n        this.configService = configService;\r\n        this.store = store;\r\n        this.configService.config$\r\n            .pipe(map(function (config) { return config.env.frontend_server; }), map(function (uri) {\r\n            console.log(uri, _this.configService.config);\r\n            _this.socket = io(uri);\r\n            return _this.store.dispatch(new SocketRunSuccessfullyAction());\r\n        }))\r\n            .subscribe(function () {\r\n            _this.socket.on(\"DISPATCH_ACTION\", function (data) {\r\n                _this.store.dispatch({\r\n                    type: data.type,\r\n                    payload: data.payload\r\n                });\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @example\r\n     * this.socketService.on<number>(\"chnage-number\").subscribe(data=>{})\r\n     * @returns\r\n     * Observable<T>\r\n     */\r\n    /**\r\n     * \\@example\r\n     * this.socketService.on<number>(\"chnage-number\").subscribe(data=>{})\r\n     * @template T\r\n     * @param {?} message\r\n     * @return {?}\r\n     * Observable<T>\r\n     */\r\n    SocketService.prototype.on = /**\r\n     * \\@example\r\n     * this.socketService.on<number>(\"chnage-number\").subscribe(data=>{})\r\n     * @template T\r\n     * @param {?} message\r\n     * @return {?}\r\n     * Observable<T>\r\n     */\r\n    function (message) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var observer$ = new Observable(function (observer) {\r\n            _this.socket.on(message, function (data) {\r\n                observer.next(data);\r\n            });\r\n        });\r\n        return observer$;\r\n    };\r\n    /**\r\n     * @example\r\n     * this.socketService.emit(\"chnage-number\",{number:2})\r\n     * @returns\r\n     * void\r\n     */\r\n    /**\r\n     * \\@example\r\n     * this.socketService.emit(\"chnage-number\",{number:2})\r\n     * @param {?} message\r\n     * @param {?} payload\r\n     * @return {?}\r\n     * void\r\n     */\r\n    SocketService.prototype.emit = /**\r\n     * \\@example\r\n     * this.socketService.emit(\"chnage-number\",{number:2})\r\n     * @param {?} message\r\n     * @param {?} payload\r\n     * @return {?}\r\n     * void\r\n     */\r\n    function (message, payload) {\r\n        this.socket.emit(message, payload);\r\n    };\r\n    SocketService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SocketService.ctorParameters = function () { return [\r\n        { type: SocketConfigurationService },\r\n        { type: Store }\r\n    ]; };\r\n    /** @nocollapse */ SocketService.ngInjectableDef = defineInjectable({ factory: function SocketService_Factory() { return new SocketService(inject(SocketConfigurationService), inject(Store)); }, token: SocketService, providedIn: \"root\" });\r\n    return SocketService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar initialState = {\r\n    number: 0\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction Reducer(state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    switch (action.type) {\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n/** @type {?} */\r\nvar SocketReducer = {\r\n    change: Reducer\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NgsSocketModule = /** @class */ (function () {\r\n    function NgsSocketModule() {\r\n    }\r\n    /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    NgsSocketModule.forRoot = /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        return {\r\n            ngModule: NgsSocketRootModule,\r\n            providers: [{ provide: MODULE_CONFIG_TOKEN, useValue: config }, SocketConfigurationService, SocketService]\r\n        };\r\n    };\r\n    NgsSocketModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule]\r\n                },] },\r\n    ];\r\n    return NgsSocketModule;\r\n}());\r\nvar NgsSocketRootModule = /** @class */ (function () {\r\n    function NgsSocketRootModule(socketService) {\r\n        this.socketService = socketService;\r\n    }\r\n    NgsSocketRootModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [NgsSocketModule, StoreModule.forFeature(\"socket\", SocketReducer)]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NgsSocketRootModule.ctorParameters = function () { return [\r\n        { type: SocketService }\r\n    ]; };\r\n    return NgsSocketRootModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { NgsSocketModule, SocketService, SocketConfigurationService as ɵe, MODULE_CONFIG_TOKEN as ɵf, NgsSocketRootModule as ɵa, Reducer as ɵb, SocketReducer as ɵc };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { __decorate, __metadata, __assign } from 'tslib';\nimport { createSelector, createFeatureSelector, Store, StoreModule } from '@ngrx/store';\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Injectable, Component, NgModule, defineInjectable, inject } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Observable } from 'rxjs/Rx';\nimport { ActivatedRoute, RouterModule, Router } from '@angular/router';\nimport { Observable as Observable$1 } from 'rxjs/Observable';\nimport { Actions, Effect, EffectsModule } from '@ngrx/effects';\nimport { of } from 'rxjs/observable/of';\nimport { map, switchMap, catchError } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatIconModule, MatButtonModule, MatCardModule, MatSnackBarModule, MatSidenavModule, MatExpansionModule, MatSelectModule, MatFormFieldModule, MatListModule, MatMenuModule, MatRadioModule, MatInputModule, MatCheckboxModule, MatToolbarModule, MatDatepickerModule, MatProgressBarModule } from '@angular/material';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from '@soushians/shared';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar SourceActionTypes = {\r\n    SOURCE_SUBMIT: \"[SOURCE] source submit\",\r\n    SOURCE_SUBMIT_SUCCEED: \"[SOURCE] source submit succeed\",\r\n    SOURCE_SUBMIT_FAILED: \"[SOURCE] source submit failed\",\r\n};\r\nvar SourceSubmit = /** @class */ (function () {\r\n    function SourceSubmit(payload) {\r\n        this.payload = payload;\r\n        this.type = SourceActionTypes.SOURCE_SUBMIT;\r\n    }\r\n    return SourceSubmit;\r\n}());\r\nvar SourceSubmitSucceed = /** @class */ (function () {\r\n    function SourceSubmitSucceed() {\r\n        this.type = SourceActionTypes.SOURCE_SUBMIT_SUCCEED;\r\n    }\r\n    return SourceSubmitSucceed;\r\n}());\r\nvar SourceSubmitFailed = /** @class */ (function () {\r\n    function SourceSubmitFailed() {\r\n        this.type = SourceActionTypes.SOURCE_SUBMIT_FAILED;\r\n    }\r\n    return SourceSubmitFailed;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ɵ0 = [];\r\n/** @type {?} */\r\nvar initialState = {\r\n    data: ɵ0\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction Reducer(state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    switch (action.type) {\r\n        case SourceActionTypes.SOURCE_SUBMIT:\r\n            return __assign({}, state);\r\n        case SourceActionTypes.SOURCE_SUBMIT_SUCCEED:\r\n            return __assign({}, state);\r\n        case SourceActionTypes.SOURCE_SUBMIT_FAILED:\r\n            return __assign({}, state);\r\n        default:\r\n            return state;\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar SourceReducers = {\r\n    sources: Reducer\r\n};\r\n/** @type {?} */\r\nvar selectSourceState = createFeatureSelector(\"source\");\r\n/** @type {?} */\r\nvar getSourceList = createSelector(selectSourceState, function (state) { return state.list; });\r\n//export const getSourceListData = createSelector(\r\n//        getSourceList,\r\n//        sourceList.getSourceListData\r\n//);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetSourcesApiModel;\r\n(function (GetSourcesApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = /** @type {?} */ ({}); }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {};\r\n        };\r\n        return Request;\r\n    }());\r\n    GetSourcesApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    GetSourcesApiModel.Response = Response;\r\n})(GetSourcesApiModel || (GetSourcesApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UpsertSourceApiModel;\r\n(function (UpsertSourceApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = /** @type {?} */ ({}); }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {\r\n                _id: this._id,\r\n                Endpoint: this.Endpoint,\r\n                Interval: this.Interval,\r\n                IsActive: this.IsActive,\r\n                Thresholds: this.Thresholds\r\n            };\r\n        };\r\n        Object.defineProperty(Request, \"formGroup\", {\r\n            get: /**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                return new FormGroup({\r\n                    _id: new FormControl(\"\", [Validators.required]),\r\n                    Endpoint: new FormControl(\"\", [Validators.required]),\r\n                    Interval: new FormControl(\"\", [Validators.required]),\r\n                    IsActive: new FormControl(\"false\", [Validators.required]),\r\n                    Thresholds: new FormArray([])\r\n                });\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Request;\r\n    }());\r\n    UpsertSourceApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    UpsertSourceApiModel.Response = Response;\r\n})(UpsertSourceApiModel || (UpsertSourceApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SourceService = /** @class */ (function () {\r\n    function SourceService(http) {\r\n        this.http = http;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SourceService.prototype.getSources = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.http\r\n            .get(\"http://localhost:3000/api/source\")\r\n            .map(function (response) {\r\n            return response;\r\n        })\r\n            .catch(function (err) {\r\n            return Observable.throw(err);\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    SourceService.prototype.getSourceById = /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (id) {\r\n        return this.http\r\n            .get(\"http://localhost:3000/api/source/\" + id)\r\n            .map(function (response) { return response.Result; })\r\n            .catch(function (err) {\r\n            return Observable.throw(err);\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} body\r\n     * @return {?}\r\n     */\r\n    SourceService.prototype.upsertSource = /**\r\n     * @param {?} body\r\n     * @return {?}\r\n     */\r\n    function (body) {\r\n        /** @type {?} */\r\n        var model = new UpsertSourceApiModel.Request(body);\r\n        return this.http\r\n            .put(\"http://localhost:3000/api/source\", model.getRequestBody(), { withCredentials: false })\r\n            .map(function (response) { return response; })\r\n            .catch(function (err) {\r\n            return Observable.throw(err);\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} source\r\n     * @param {?=} time\r\n     * @return {?}\r\n     */\r\n    SourceService.prototype.getData = /**\r\n     * @param {?} source\r\n     * @param {?=} time\r\n     * @return {?}\r\n     */\r\n    function (source, time) {\r\n        if (time === void 0) { time = 0; }\r\n        return this.http\r\n            .get(\"http://localhost:3000/api/data\", {\r\n            params: {\r\n                sourceId: source._id,\r\n                time: null\r\n            }\r\n        })\r\n            .map(function (res) { return res.Result; });\r\n    };\r\n    SourceService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SourceService.ctorParameters = function () { return [\r\n        { type: HttpClient }\r\n    ]; };\r\n    /** @nocollapse */ SourceService.ngInjectableDef = defineInjectable({ factory: function SourceService_Factory() { return new SourceService(inject(HttpClient)); }, token: SourceService, providedIn: \"root\" });\r\n    return SourceService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SourceModuleContainerComponent = /** @class */ (function () {\r\n    function SourceModuleContainerComponent(service) {\r\n        this.service = service;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SourceModuleContainerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    SourceModuleContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"source-module-container\",\r\n                    template: \"<div fxLayoutAlign=\\\"\\\" fxflex=\\\"100\\\" fxLayout=\\\"column\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SourceModuleContainerComponent.ctorParameters = function () { return [\r\n        { type: SourceService }\r\n    ]; };\r\n    return SourceModuleContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SourceListComponent = /** @class */ (function () {\r\n    function SourceListComponent(sourceService // private store: Store<FeatureReducer.FeatureState>\r\n    ) {\r\n        this.sourceService = sourceService;\r\n        this.sources = this.sourceService.getSources();\r\n        // this.sources.subscribe(data => { debugger})\r\n        //this.configs.subscribe(data => {\r\n        //        debugger;\r\n        //        this.store.dispatch(new ConfigLoaded(data.Result));\r\n        //});\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SourceListComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    SourceListComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"source-list\",\r\n                    template: \"<div fxFlexLayout=\\\"row\\\" fxLayoutWrap fxLayoutAlign=\\\"start center\\\">\\n  <mat-card class=\\\"source-box\\\" *ngFor=\\\"let source of (sources | async)?.Result\\\" [fxFlex]=\\\"32\\\">\\n      <mat-card-title fxFlexLayout=\\\"row\\\" flexLayoutAlign=\\\"space-between center\\\">\\n        \\n        <a [routerLink]=\\\"['edit' ,  source._id]\\\" fxFlex=\\\"40px\\\">\\n          <mat-icon fxLayoutAlign=\\\"start center\\\" aria-label=\\\"edit source\\\">edit</mat-icon>\\n        </a>\\n        <span fxFlex fxLayoutAlign=\\\"end center\\\" fxFlexAlign=\\\"center\\\">{{source.Endpoint}}</span>\\n      </mat-card-title>\\n    \\n  </mat-card>\\n\\n  <div fxLayoutAlign='end center'>\\n    <button mat-fab routerLink=\\\"../source/add\\\" class=\\\"add-btn\\\">\\n      <mat-icon>add</mat-icon>\\n    </button>\\n  </div>\\n</div>\\n\\n\\n\",\r\n                    styles: [\":host{width:100%}.source-box{margin:5px}.source-box a{text-decoration:none}.add-btn{position:fixed;bottom:50px;left:25px;z-index:1}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SourceListComponent.ctorParameters = function () { return [\r\n        { type: SourceService }\r\n    ]; };\r\n    return SourceListComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SourceUpsertComponent = /** @class */ (function () {\r\n    function SourceUpsertComponent(sourceService, formBuilder, route, store) {\r\n        var _this = this;\r\n        this.sourceService = sourceService;\r\n        this.formBuilder = formBuilder;\r\n        this.route = route;\r\n        this.store = store;\r\n        //configInforamation;\r\n        this.formGroup = UpsertSourceApiModel.Request.formGroup;\r\n        this.types = [\"critical\", \"goal\"];\r\n        // this.sources = this.sourceService.getSources();\r\n        this.thresholds = (/** @type {?} */ (this.formGroup.controls[\"Thresholds\"])).controls;\r\n        this.route.params.subscribe(function (params) {\r\n            /** @type {?} */\r\n            var sourceId = params[\"id\"];\r\n            sourceId &&\r\n                _this.sourceService.getSourceById(sourceId).subscribe(function (data) {\r\n                    _this.formGroup.patchValue({\r\n                        _id: data._id,\r\n                        Endpoint: data.Endpoint,\r\n                        Interval: data.Interval,\r\n                        IsActive: data.IsActive || false,\r\n                        Thresholds: data.Thresholds\r\n                    });\r\n                    data.Thresholds.forEach(function (mapping) {\r\n                        return _this.addItem(mapping.Name, mapping.Formula, mapping.Message, mapping.Type);\r\n                    });\r\n                });\r\n        });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SourceUpsertComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?=} Name\r\n     * @param {?=} Formula\r\n     * @param {?=} Message\r\n     * @param {?=} Type\r\n     * @return {?}\r\n     */\r\n    SourceUpsertComponent.prototype.addItem = /**\r\n     * @param {?=} Name\r\n     * @param {?=} Formula\r\n     * @param {?=} Message\r\n     * @param {?=} Type\r\n     * @return {?}\r\n     */\r\n    function (Name, Formula, Message, Type) {\r\n        if (Name === void 0) { Name = \"\"; }\r\n        if (Formula === void 0) { Formula = \"\"; }\r\n        if (Message === void 0) { Message = \"\"; }\r\n        if (Type === void 0) { Type = \"critical\"; }\r\n        /** @type {?} */\r\n        var control = /** @type {?} */ (this.formGroup.controls[\"Thresholds\"]);\r\n        control.push(new FormGroup({\r\n            Name: new FormControl(Name, [Validators.required]),\r\n            Formula: new FormControl(Formula, [Validators.required]),\r\n            Message: new FormControl(Message, [Validators.required]),\r\n            Type: new FormControl(Type, [Validators.required])\r\n        }));\r\n        //    control.push(this.formBuilder.group({\r\n        //      Name: [Name],\r\n        //      Formula: [Formula],\r\n        //      Message: [Message]\r\n        //    }));\r\n    };\r\n    /**\r\n     * @param {?} i\r\n     * @return {?}\r\n     */\r\n    SourceUpsertComponent.prototype.removeItem = /**\r\n     * @param {?} i\r\n     * @return {?}\r\n     */\r\n    function (i) {\r\n        /** @type {?} */\r\n        var control = /** @type {?} */ (this.formGroup.controls[\"Thresholds\"]);\r\n        control.removeAt(i);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SourceUpsertComponent.prototype.getData = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var o$ = this.sourceService.getData(this.formGroup.value);\r\n        o$.subscribe(function (data) {\r\n            _this.data = data.Data;\r\n        });\r\n        return o$;\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    SourceUpsertComponent.prototype.add = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        //if (!this.formGroup.valid) return;\r\n        this.store.dispatch(new SourceSubmit(this.formGroup.value));\r\n    };\r\n    SourceUpsertComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"source-source-upsert\",\r\n                    template: \"<div fxLayout=\\\"column\\\">\\n  <div fxFlex=\\\"100\\\">\\n    <mat-card fxLayout=\\\"column\\\" fxFlex=\\\"50\\\">\\n      <form [formGroup]=\\\"formGroup\\\" fxLayout='column'>\\n\\n        <mat-card-header>\\n          <mat-card-title>\\u0627\\u0641\\u0632\\u0648\\u062F\\u0646 \\u0646\\u0645\\u0648\\u062F\\u0627\\u0631 \\u062C\\u062F\\u06CC\\u062F</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n          <mat-form-field fxFlexFill>\\n            <input matInput placeholder=\\\"\\u0622\\u062F\\u0631\\u0633\\\" formControlName=\\\"Endpoint\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlexFill>\\n            <input matInput placeholder=\\\"\\u0645\\u062F\\u062A \\u0632\\u0645\\u0627\\u0646 \\u0628\\u0647 \\u0631\\u0648\\u0632 \\u0631\\u0633\\u0627\\u0646\\u06CC \\u062F\\u0627\\u062F\\u0647\\\" formControlName=\\\"Interval\\\">\\n          </mat-form-field>\\n          <div>\\n            <mat-checkbox formControlName=\\\"IsActive\\\" fxFlexFill>\\u0648\\u0636\\u0639\\u06CC\\u062A</mat-checkbox>\\n          </div>\\n        </mat-card-content>\\n      </form>\\n    </mat-card>\\n\\n    <mat-card fxLayout=\\\"column\\\" fxFlex=\\\"20\\\">\\n      <mat-card-content fxLayout=\\\"column\\\">\\n        <div>\\n          <button fxFlex mat-raised-button color=\\\"primary\\\" (click)=\\\"getData()\\\">\\u0633\\u0627\\u062E\\u062A\\u0627\\u0631 \\u062F\\u06CC\\u062A\\u0627</button>\\n        </div>\\n        <div class=\\\"item-margin\\\">\\n          <!-- TODO: -->\\n          <!-- <data-mapper destination=\\\"value\\\" [data]=\\\"data\\\"></data-mapper> -->\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n\\n    <mat-card fxLayout=\\\"column\\\" fxFlex=\\\"30\\\">\\n      <mat-card-content fxLayout=\\\"column\\\">\\n        <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"5px\\\">\\n          <div *ngFor=\\\"let threshold of thresholds; let i=index\\\" fxFlex=\\\"100\\\" class=\\\"add-item\\\">\\n            <div fxLayout=\\\"column\\\">\\n              <div [formGroup]=\\\"thresholds[i]\\\" fxLayout=\\\"column\\\">\\n                <mat-form-field fxFlexFill>\\n                  <input matInput placeholder=\\\"\\u0646\\u0627\\u0645\\\" formControlName=\\\"Name\\\">\\n                </mat-form-field>\\n                <mat-form-field fxFlexFill>\\n                  <input class=\\\"ltr\\\" matInput placeholder=\\\"\\u0641\\u0631\\u0645\\u0648\\u0644\\\" formControlName=\\\"Formula\\\">\\n                </mat-form-field>\\n                <mat-form-field fxFlexFill>\\n                  <input matInput placeholder=\\\"\\u062A\\u0648\\u0636\\u06CC\\u062D\\\" formControlName=\\\"Message\\\">\\n                </mat-form-field>\\n                <mat-radio-group formControlName=\\\"Type\\\" fxFlexFill>\\n                  <label>\\u0646\\u0648\\u0639 :</label>\\n                  <mat-radio-button *ngFor=\\\"let item of types\\\" [value]=\\\"item\\\" class=\\\"form-element-margin\\\">\\n                    {{item}}\\n                  </mat-radio-button>\\n                </mat-radio-group>\\n\\n                <button (click)=\\\"removeItem(i)\\\" fxFlex mat-button color=\\\"primary\\\" type=\\\"button\\\">\\u067E\\u0627\\u06A9 \\u06A9\\u0631\\u062F\\u0646</button>\\n              </div>\\n              <br />\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"item-margin\\\">\\n          <button (click)=\\\"addItem()\\\" fxFlex mat-raised-button color=\\\"primary\\\" type=\\\"button\\\">\\u0627\\u0641\\u0632\\u0648\\u062F\\u0646 \\u0622\\u0633\\u062A\\u0627\\u0646\\u0647</button>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <div fxFlex=\\\"100\\\">\\n    <mat-card fxLayoutAlign=\\\"end center\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\">\\n      <mat-card-content>\\n        <button mat-raised-button fxFlex color=\\\"primary\\\" (click)=\\\"add($event)\\\">\\u062B\\u0628\\u062A</button>\\n        <button fxFlex mat-raised-button routerLink='/source'  fxLayoutGap=\\\"5px\\\">\\u0627\\u0646\\u0635\\u0631\\u0627\\u0641</button>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</div>\\n\",\r\n                    styles: [\"mat-card{margin:5px}.add-item{border:1px solid #eaeaea;padding:10px;margin:5px 0}.item-margin{margin-top:10px}button[type=submit]{margin-left:5px}.ltr{direction:ltr}.form-element-margin{margin:5px 10px}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SourceUpsertComponent.ctorParameters = function () { return [\r\n        { type: SourceService },\r\n        { type: FormBuilder },\r\n        { type: ActivatedRoute },\r\n        { type: Store }\r\n    ]; };\r\n    return SourceUpsertComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar routes = [\r\n    {\r\n        path: \"source\",\r\n        component: SourceModuleContainerComponent,\r\n        children: [\r\n            {\r\n                path: \"\",\r\n                component: SourceListComponent\r\n            },\r\n            {\r\n                path: \"edit/:id\",\r\n                component: SourceUpsertComponent\r\n            },\r\n            {\r\n                path: \"add\",\r\n                component: SourceUpsertComponent\r\n            }\r\n        ]\r\n    }\r\n];\r\n/** @type {?} */\r\nvar RoutingModule = RouterModule.forChild(routes);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SourceEffects = /** @class */ (function () {\r\n    function SourceEffects(actions$, router, sourceService) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.router = router;\r\n        this.sourceService = sourceService;\r\n        this.afterSubmitSource$ = this.actions$.ofType(SourceActionTypes.SOURCE_SUBMIT).pipe(map(function (action) { return action.payload; }), switchMap(function (data) {\r\n            return _this.sourceService\r\n                .upsertSource(data)\r\n                .pipe(map(function (res) { return new SourceSubmitSucceed(); }), catchError(function () { return of(new SourceSubmitFailed()); }));\r\n        }));\r\n        this.SigninSucceed$ = this.actions$.ofType(SourceActionTypes.SOURCE_SUBMIT_SUCCEED).pipe(switchMap(function () {\r\n            _this.router.navigate([\"source\"]);\r\n            return Observable$1.empty();\r\n        }));\r\n    }\r\n    SourceEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    SourceEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: Router },\r\n        { type: SourceService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], SourceEffects.prototype, \"afterSubmitSource$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], SourceEffects.prototype, \"SigninSucceed$\", void 0);\r\n    return SourceEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SourceModule = /** @class */ (function () {\r\n    function SourceModule() {\r\n    }\r\n    SourceModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        RouterModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule,\r\n                        HttpClientModule,\r\n                        FlexLayoutModule,\r\n                        MatIconModule,\r\n                        MatButtonModule,\r\n                        MatCardModule,\r\n                        MatSnackBarModule,\r\n                        MatSidenavModule,\r\n                        MatExpansionModule,\r\n                        MatSelectModule,\r\n                        MatFormFieldModule,\r\n                        MatListModule,\r\n                        MatMenuModule,\r\n                        MatCheckboxModule,\r\n                        MatRadioModule,\r\n                        MatInputModule,\r\n                        MatToolbarModule,\r\n                        MatDatepickerModule,\r\n                        MatProgressBarModule,\r\n                        BrowserModule,\r\n                        StoreModule.forFeature(\"source\", SourceReducers),\r\n                        BrowserAnimationsModule,\r\n                        RoutingModule,\r\n                        EffectsModule.forFeature([SourceEffects]),\r\n                        SharedModule\r\n                    ],\r\n                    declarations: [SourceListComponent, SourceUpsertComponent, SourceModuleContainerComponent],\r\n                    exports: []\r\n                },] },\r\n    ];\r\n    return SourceModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n//services\r\n//actions\r\n//components\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { SourceModule, SourceEffects as ɵi, SourceReducers as ɵa, Reducer as ɵb, SourceService as ɵe, SourceListComponent as ɵf, SourceModuleContainerComponent as ɵd, SourceUpsertComponent as ɵg, RoutingModule as ɵc };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { InjectionToken, Injectable, Inject, NgModule, Component, Input, Output, EventEmitter, defineInjectable, inject } from '@angular/core';\nimport { map, filter, take, switchMap, combineLatest, catchError, takeWhile } from 'rxjs/operators';\nimport { Store, createSelector, createFeatureSelector, StoreModule } from '@ngrx/store';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { getUserModuleConfig, getAppConfig } from '@soushians/config';\nimport { __assign, __decorate, __metadata, __read, __extends } from 'tslib';\nimport { FormGroup, FormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { stringTemplate, MatchValidator } from '@soushians/shared';\nimport { getUser, SignInActionTypes } from '@soushians/authentication';\nimport { of, BehaviorSubject as BehaviorSubject$1 } from 'rxjs';\nimport { Router, ActivatedRoute, RouterModule } from '@angular/router';\nimport { Actions, Effect, EffectsModule } from '@ngrx/effects';\nimport { Observable } from 'rxjs/Observable';\nimport { MatSnackBar, MatExpansionModule, MatSnackBarModule, MatIconModule, MatButtonModule, MatCardModule, MatSelectModule, MatInputModule, MatFormFieldModule, MatTabsModule, MatRadioModule } from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgsFormModule } from '@soushians/form';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UserModel = /** @class */ (function () {\r\n    function UserModel() {\r\n        this.Roles = [];\r\n        this.Groups = [];\r\n    }\r\n    return UserModel;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar MODULE_DEFAULT_CONFIG = {\r\n    server: \"frontend_server\",\r\n    env: {\r\n        production: false,\r\n        frontend_server: \"user/module/frontend/server/did/not/set\",\r\n        server: \"user/module/server/did/not/set\"\r\n    },\r\n    endpoints: {\r\n        // resetPasswordRequest: '',\r\n        changePassword: \"\",\r\n        editProfile: \"\",\r\n        getAccountInfo: \"\",\r\n        profileInformation: \"\"\r\n    },\r\n    forms: {\r\n        profile_edit: \"\"\r\n    },\r\n    dashboardLinks: [],\r\n    responseToUserInfo: function (user$) { return user$; },\r\n    mapUserDisplayName: function (user$) { return user$.pipe(map(function (user) { return user.Username; })); }\r\n};\r\n/** @type {?} */\r\nvar MODULE_CONFIG_TOKEN = new InjectionToken(\"UserModuleConfig\");\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UserConfigurationService = /** @class */ (function () {\r\n    function UserConfigurationService(configFile, store) {\r\n        var _this = this;\r\n        this.store = store;\r\n        this.config$ = new BehaviorSubject(this._config);\r\n        this._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n        this.config$.next(this._config);\r\n        this.store.select(getUserModuleConfig).subscribe(function (userConfig) {\r\n            if (!userConfig)\r\n                return;\r\n            _this._config = Object.assign({}, _this._config, userConfig.Config);\r\n            _this.config$.next(_this._config);\r\n        });\r\n    }\r\n    Object.defineProperty(UserConfigurationService.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._config;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    UserConfigurationService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UserConfigurationService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [MODULE_CONFIG_TOKEN,] }] },\r\n        { type: Store }\r\n    ]; };\r\n    /** @nocollapse */ UserConfigurationService.ngInjectableDef = defineInjectable({ factory: function UserConfigurationService_Factory() { return new UserConfigurationService(inject(MODULE_CONFIG_TOKEN), inject(Store)); }, token: UserConfigurationService, providedIn: \"root\" });\r\n    return UserConfigurationService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar ProfileViewActionTypes = {\r\n    GET_PROFILE: \"[USER][PROFILE] GET_PROFILE\",\r\n    GET_PROFILE_START: \"[USER][PROFILE] GET_PROFILE_START\",\r\n    GET_PROFILE_SUCCEED: \"[USER][PROFILE] GET_PROFILE_SUCCEED\",\r\n    GET_PROFILE_FAILED: \"[USER][PROFILE] GET_PROFILE_FAILED\",\r\n};\r\nvar GetProfile = /** @class */ (function () {\r\n    function GetProfile() {\r\n        this.type = ProfileViewActionTypes.GET_PROFILE;\r\n    }\r\n    return GetProfile;\r\n}());\r\nvar GetProfileStart = /** @class */ (function () {\r\n    function GetProfileStart() {\r\n        this.type = ProfileViewActionTypes.GET_PROFILE_START;\r\n    }\r\n    return GetProfileStart;\r\n}());\r\nvar GetProfileSucceed = /** @class */ (function () {\r\n    function GetProfileSucceed(payload) {\r\n        this.payload = payload;\r\n        this.type = ProfileViewActionTypes.GET_PROFILE_SUCCEED;\r\n    }\r\n    return GetProfileSucceed;\r\n}());\r\nvar GetProfileFailed = /** @class */ (function () {\r\n    function GetProfileFailed() {\r\n        this.type = ProfileViewActionTypes.GET_PROFILE_FAILED;\r\n    }\r\n    return GetProfileFailed;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar UserActionTypes = {\r\n    USER_SELECTED: \"[USER] USER_SELECTED\",\r\n    REFRESH_USER_INFO: \"[USER] REFRESH_USER_INFO\",\r\n};\r\nvar RefreshUserInfoAction = /** @class */ (function () {\r\n    function RefreshUserInfoAction(payload) {\r\n        this.payload = payload;\r\n        this.type = UserActionTypes.REFRESH_USER_INFO;\r\n    }\r\n    return RefreshUserInfoAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar initialState = {\r\n    loaded: false,\r\n    data: new UserModel()\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction userReducer(state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    switch (action.type) {\r\n        case UserActionTypes.USER_SELECTED: {\r\n            return __assign({}, state, { loaded: true, data: action.payload });\r\n        }\r\n        case UserActionTypes.REFRESH_USER_INFO: {\r\n            return __assign({}, state, { loaded: true, data: action.payload });\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n/** @type {?} */\r\nvar getAccountInfo = function (state) { return state.data; };\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ProfileViewModel;\r\n(function (ProfileViewModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {};\r\n        };\r\n        Object.defineProperty(Request, \"formGroup\", {\r\n            get: /**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                return new FormGroup({\r\n                    Username: new FormControl(\"\", [Validators.minLength(8), Validators.required])\r\n                });\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Request;\r\n    }());\r\n    ProfileViewModel.Request = Request;\r\n    var Response = /** @class */ (function (_super) {\r\n        __extends(Response, _super);\r\n        function Response() {\r\n            return _super.call(this) || this;\r\n        }\r\n        return Response;\r\n    }(UserModel));\r\n    ProfileViewModel.Response = Response;\r\n})(ProfileViewModel || (ProfileViewModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar EditProfile_ApiModel;\r\n(function (EditProfile_ApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = /** @type {?} */ ({}); }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this;\r\n        };\r\n        Object.defineProperty(Request, \"formGroup\", {\r\n            get: /**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                return new FormGroup({\r\n                    Email: new FormControl(null, [Validators.required]),\r\n                    Roles: new FormControl(null, [Validators.required]),\r\n                    Groups: new FormControl(null, [Validators.required])\r\n                });\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Request;\r\n    }());\r\n    EditProfile_ApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response(initValue) {\r\n            if (initValue === void 0) { initValue = /** @type {?} */ ({}); }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Response.prototype.extractData = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.Result.User;\r\n        };\r\n        return Response;\r\n    }());\r\n    EditProfile_ApiModel.Response = Response;\r\n})(EditProfile_ApiModel || (EditProfile_ApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UserService = /** @class */ (function () {\r\n    function UserService(http, store, configurationService) {\r\n        var _this = this;\r\n        this.http = http;\r\n        this.store = store;\r\n        this.configurationService = configurationService;\r\n        this.configurationService.config$.subscribe(function (config) { return (_this.config = config); });\r\n        setTimeout(function () {\r\n            _this.store.dispatch(new GetProfile());\r\n        }, 999);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserService.prototype.getAccountInfo = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.profileInformation != \"\"; }), take(1), combineLatest(this.store.select(getUser)), filter(function (_a) {\r\n            var _b = __read(_a, 2), config = _b[0], user = _b[1];\r\n            return user != undefined;\r\n        }), switchMap(function (_a) {\r\n            var _b = __read(_a, 2), config = _b[0], user = _b[1];\r\n            return _this.http\r\n                .get(stringTemplate(config.env[config.server] + config.endpoints.profileInformation, {\r\n                user: user || {}\r\n            }))\r\n                .let(config.responseToUserInfo)\r\n                .pipe(map(function (response) {\r\n                /** @type {?} */\r\n                var _user = Object.assign({}, response);\r\n                if (_user.Role) {\r\n                    _user.Roles = [_user.Role];\r\n                }\r\n                return _user;\r\n            }), catchError(function (err) { return of(false); }));\r\n        }));\r\n    };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    UserService.prototype.editProfile = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        /** @type {?} */\r\n        var model = new EditProfile_ApiModel.Request(data);\r\n        return this.http\r\n            .put(stringTemplate(this.config.env[this.config.server] + this.config.endpoints.editProfile, model), model.getRequestBody())\r\n            .pipe(map(function (response) { return new EditProfile_ApiModel.Response(response).extractData(); }));\r\n    };\r\n    // TODO: remove\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    UserService.prototype.getInfo = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        /** @type {?} */\r\n        var model = new ProfileViewModel.Request(data);\r\n        return this.http\r\n            .get(stringTemplate(this.config.env[this.config.server] + this.config.endpoints.getAccountInfo, model))\r\n            .pipe(map(function (response) { return response; }));\r\n    };\r\n    /**\r\n     * @param {?} role\r\n     * @return {?}\r\n     */\r\n    UserService.prototype.is_role = /**\r\n     * @param {?} role\r\n     * @return {?}\r\n     */\r\n    function (role) {\r\n        return this.store\r\n            .select(getAccountInfo)\r\n            .pipe(filter(function (user) { return user && user.Roles != undefined; }), take(1), map(function (user) { return user.Roles.indexOf(role) > -1; }));\r\n    };\r\n    UserService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UserService.ctorParameters = function () { return [\r\n        { type: HttpClient },\r\n        { type: Store },\r\n        { type: UserConfigurationService }\r\n    ]; };\r\n    /** @nocollapse */ UserService.ngInjectableDef = defineInjectable({ factory: function UserService_Factory() { return new UserService(inject(HttpClient), inject(Store), inject(UserConfigurationService)); }, token: UserService, providedIn: \"root\" });\r\n    return UserService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar EditProfileActionTypes = {\r\n    EDIT_PROFILE: \"[USER][PASSWORD] EDIT_PROFILE\",\r\n    EDIT_PROFILE_START: \"[USER][PASSWORD] EDIT_PROFILE_START\",\r\n    EDIT_PROFILE_SUCCEED: \"[USER][PASSWORD] EDIT_PROFILE_SUCCEED\",\r\n    EDIT_PROFILE_FAILED: \"[USER][PASSWORD] EDIT_PROFILE_FAILED\",\r\n};\r\nvar EditProfile = /** @class */ (function () {\r\n    function EditProfile(payload) {\r\n        this.payload = payload;\r\n        this.type = EditProfileActionTypes.EDIT_PROFILE;\r\n    }\r\n    return EditProfile;\r\n}());\r\nvar EditProfileStart = /** @class */ (function () {\r\n    function EditProfileStart(payload) {\r\n        this.payload = payload;\r\n        this.type = EditProfileActionTypes.EDIT_PROFILE_START;\r\n    }\r\n    return EditProfileStart;\r\n}());\r\nvar EditProfileSucceed = /** @class */ (function () {\r\n    function EditProfileSucceed(payload) {\r\n        this.payload = payload;\r\n        this.type = EditProfileActionTypes.EDIT_PROFILE_SUCCEED;\r\n    }\r\n    return EditProfileSucceed;\r\n}());\r\nvar EditProfileFailed = /** @class */ (function () {\r\n    function EditProfileFailed() {\r\n        this.type = EditProfileActionTypes.EDIT_PROFILE_FAILED;\r\n    }\r\n    return EditProfileFailed;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar EditProfileEffects = /** @class */ (function () {\r\n    function EditProfileEffects(actions$, router, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.router = router;\r\n        this.service = service;\r\n        this.EditProfileRequest$ = this.actions$\r\n            .ofType(EditProfileActionTypes.EDIT_PROFILE)\r\n            .pipe(map(function (action) { return action.payload; }), map(function (data) { return new EditProfileStart(data); }));\r\n        this.RequestEditProfileLink$ = this.actions$\r\n            .ofType(EditProfileActionTypes.EDIT_PROFILE_START)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (data) { return _this.service.editProfile(data); }), map(function (res) { return new EditProfileSucceed(res); }), catchError(function () { return of(new EditProfileFailed()); }));\r\n        // .switchMap((data: EditProfile_ApiModel.Request) => {\r\n        // \treturn this.service\r\n        // \t\t.editProfile(data)\r\n        // \t\t.map((res) => new EditProfileSucceed(res))\r\n        // \t\t.catch(() => of(new EditProfileFailed()));\r\n        // });\r\n        this.goToView$ = this.actions$.ofType(EditProfileActionTypes.EDIT_PROFILE_SUCCEED).pipe(map(function () {\r\n            _this.router.navigate([\"/user/profile\"]);\r\n            return new GetProfile();\r\n        }));\r\n    }\r\n    EditProfileEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    EditProfileEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: Router },\r\n        { type: UserService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], EditProfileEffects.prototype, \"EditProfileRequest$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], EditProfileEffects.prototype, \"RequestEditProfileLink$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], EditProfileEffects.prototype, \"goToView$\", void 0);\r\n    return EditProfileEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ProfileViewEffects = /** @class */ (function () {\r\n    function ProfileViewEffects(actions$, userService) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.userService = userService;\r\n        this.ProfileRequest$ = this.actions$\r\n            .ofType(ProfileViewActionTypes.GET_PROFILE)\r\n            .pipe(map(function (action) { return action.payload; }), map(function (data) { return new GetProfileStart(); }));\r\n        this.getProfile$ = this.actions$\r\n            .ofType(ProfileViewActionTypes.GET_PROFILE_START)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (data) {\r\n            return _this.userService\r\n                .getAccountInfo()\r\n                .pipe(map(function (res) { return new GetProfileSucceed(res); }), catchError(function () { return of(new GetProfileFailed()); }));\r\n        }));\r\n        this.refreshUserInfo$ = this.actions$\r\n            .ofType(ProfileViewActionTypes.GET_PROFILE_SUCCEED)\r\n            .pipe(map(function (action) { return action.payload; }), map(function (data) { return new RefreshUserInfoAction(data); }));\r\n    }\r\n    ProfileViewEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    ProfileViewEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: UserService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], ProfileViewEffects.prototype, \"ProfileRequest$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], ProfileViewEffects.prototype, \"getProfile$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], ProfileViewEffects.prototype, \"refreshUserInfo$\", void 0);\r\n    return ProfileViewEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UserEffects = /** @class */ (function () {\r\n    function UserEffects(actions$, router, service) {\r\n        this.actions$ = actions$;\r\n        this.router = router;\r\n        this.service = service;\r\n        // @Effect()\r\n        // updateProfileInformation$ = this.actions$.ofType(SignInActionTypes.SIGNIN_SUCCEED).pipe(\r\n        // \tmap(action => action.payload),\r\n        // \tmap(user => {\r\n        // \t\treturn new GetProfileSucceed(user);\r\n        // \t})\r\n        // );\r\n        this.getAccountInfo$ = this.actions$.ofType(SignInActionTypes.SIGNIN_SUCCEED).pipe(map(function () {\r\n            return new GetProfile();\r\n        }));\r\n        this.signout$ = this.actions$\r\n            .ofType(SignInActionTypes.SIGNOUT)\r\n            .pipe(map(function () { return new RefreshUserInfoAction(/** @type {?} */ ({})); }));\r\n    }\r\n    UserEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    UserEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: Router },\r\n        { type: UserService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], UserEffects.prototype, \"getAccountInfo$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], UserEffects.prototype, \"signout$\", void 0);\r\n    return UserEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar ResetPasswordRequestActionTypes = {\r\n    GET_RESET_PASSWORD_LINK: \"[USER][PASSWORD] GET_RESET_PASSWORD_LINK\",\r\n    RESET_PASSWORD_LINK_REQUEST_START: \"[USER][PASSWORD] RESET_PASSWORD_LINK_REQUEST_START\",\r\n    RESET_PASSWORD_LINK_REQUEST_SUCCEED: \"[USER][PASSWORD] RESET_PASSWORD_LINK_REQUEST_SUCCEED\",\r\n    RESET_PASSWORD_LINK_REQUEST_FAILED: \"[USER][PASSWORD] RESET_PASSWORD_LINK_REQUEST_FAILED\",\r\n    DISABLE_GET_LINK: \"[USER][PASSWORD] DISABLE_GET_LINK\",\r\n    ENABLE_GET_LINK: \"[USER][PASSWORD] ENABLE_GET_LINK\",\r\n    MAXIMUM_TRY_HAPPEND: \"[USER][PASSWORD] MAXIMUM_TRY_HAPPEND\",\r\n    PASSWORD_CHANGED_SUCCEED: \"[USER][PASSWORD] PASSWORD_CHANGED_SUCCEED\",\r\n    PASSWORD_CHANGED_FAILED: \"[USER][PASSWORD] PASSWORD_CHANGED_FAILED\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar initialState$1 = {\r\n    numberOfRequested: 0,\r\n    lastRequestedTime: null,\r\n    disable: false\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction reducer(state, action) {\r\n    if (state === void 0) { state = initialState$1; }\r\n    switch (action.type) {\r\n        case ResetPasswordRequestActionTypes.GET_RESET_PASSWORD_LINK: {\r\n            return __assign({}, state);\r\n        }\r\n        case ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_START: {\r\n            return __assign({}, state, { numberOfRequested: state.numberOfRequested + 1, lastRequestedTime: Date.now().toString() });\r\n        }\r\n        case ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_SUCCEED: {\r\n            return __assign({}, state);\r\n        }\r\n        case ResetPasswordRequestActionTypes.DISABLE_GET_LINK: {\r\n            return __assign({}, state, { disable: true });\r\n        }\r\n        case ResetPasswordRequestActionTypes.ENABLE_GET_LINK: {\r\n            return __assign({}, state, { disable: false });\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n/** @type {?} */\r\nvar getNumberOfRequeseted = function (state) { return state.numberOfRequested; };\r\n/** @type {?} */\r\nvar getStatus = function (state) { return state.disable; };\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar ChangePasswordActionTypes = {\r\n    CHANGE_PASSWORD: \"[USER][PASSWORD] CHANGE_PASSWORD\",\r\n    PASSWORD_CHANGED_START: \"[USER][PASSWORD] PASSWORD_CHANGED_START\",\r\n    PASSWORD_CHANGED_SUCCEED: \"[USER][PASSWORD] PASSWORD_CHANGED_SUCCEED\",\r\n    PASSWORD_CHANGED_FAILED: \"[USER][PASSWORD] PASSWORD_CHANGED_FAILED\",\r\n};\r\nvar ChangePassword = /** @class */ (function () {\r\n    function ChangePassword(payload) {\r\n        this.payload = payload;\r\n        this.type = ChangePasswordActionTypes.CHANGE_PASSWORD;\r\n    }\r\n    return ChangePassword;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar initialState$2 = {\r\n    status: \"pristine\"\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction reducer$1(state, action) {\r\n    if (state === void 0) { state = initialState$2; }\r\n    switch (action.type) {\r\n        case ChangePasswordActionTypes.CHANGE_PASSWORD: {\r\n            return {\r\n                status: \"dirty\"\r\n            };\r\n        }\r\n        case ChangePasswordActionTypes.PASSWORD_CHANGED_START: {\r\n            return {\r\n                status: \"pending\"\r\n            };\r\n        }\r\n        case ChangePasswordActionTypes.PASSWORD_CHANGED_SUCCEED: {\r\n            return {\r\n                status: \"succeed\"\r\n            };\r\n        }\r\n        case ChangePasswordActionTypes.PASSWORD_CHANGED_FAILED: {\r\n            return {\r\n                status: \"failed\"\r\n            };\r\n        }\r\n        default: {\r\n            return initialState$2;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar initialState$3 = {\r\n    status: \"pristine\"\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction reducer$2(state, action) {\r\n    if (state === void 0) { state = initialState$3; }\r\n    switch (action.type) {\r\n        case EditProfileActionTypes.EDIT_PROFILE: {\r\n            return {\r\n                status: \"dirty\"\r\n            };\r\n        }\r\n        case EditProfileActionTypes.EDIT_PROFILE_START: {\r\n            return {\r\n                status: \"pending\"\r\n            };\r\n        }\r\n        case EditProfileActionTypes.EDIT_PROFILE_SUCCEED: {\r\n            return {\r\n                status: \"succeed\"\r\n            };\r\n        }\r\n        case EditProfileActionTypes.EDIT_PROFILE_FAILED: {\r\n            return {\r\n                status: \"failed\"\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar SearchActionTypes = {\r\n    SEARCH: \"[USER][SEARCH] SEARCH\",\r\n    SEARCH_START: \"[USER][SEARCH] SEARCH_START\",\r\n    SEARCH_SUCCEED: \"[USER][SEARCH] SEARCH_SUCCEED\",\r\n    SEARCH_FAILED: \"[USER][SEARCH] SEARCH_FAILED\",\r\n    CLEAR_SEARCHED_USER: \"[USER][SEARCH] CLEAR_SEARCHED_USER\",\r\n};\r\nvar Search = /** @class */ (function () {\r\n    function Search(payload) {\r\n        this.payload = payload;\r\n        this.type = SearchActionTypes.SEARCH;\r\n    }\r\n    return Search;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar initialState$4 = {\r\n    status: \"pristine\",\r\n    data: /** @type {?} */ ({})\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction reducer$3(state, action) {\r\n    if (state === void 0) { state = initialState$4; }\r\n    switch (action.type) {\r\n        case SearchActionTypes.SEARCH: {\r\n            return __assign({}, state, { status: \"dirty\", data: new ProfileViewModel.Response() });\r\n        }\r\n        case SearchActionTypes.SEARCH_START: {\r\n            return __assign({}, state, { status: \"pending\" });\r\n        }\r\n        case SearchActionTypes.SEARCH_SUCCEED: {\r\n            return __assign({}, state, { status: \"succeed\", data: action.payload });\r\n        }\r\n        case SearchActionTypes.SEARCH_FAILED: {\r\n            return __assign({}, state, { status: \"failed\" });\r\n        }\r\n        case SearchActionTypes.CLEAR_SEARCHED_USER: {\r\n            return initialState$4;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n/** @type {?} */\r\nvar getStatus$3 = function (state) { return state.status; };\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar UserReducers = {\r\n    user: userReducer,\r\n    resetPasswordRequest: reducer,\r\n    changePassword: reducer$1,\r\n    searchView: reducer$3,\r\n    editProfile: reducer$2\r\n};\r\n/** @type {?} */\r\nvar selectFeatureState = createFeatureSelector(\"user\");\r\n/** @type {?} */\r\nvar getUserInforamtionStatus = createSelector(selectFeatureState, function (state) { return state.user.loaded; });\r\n/** @type {?} */\r\nvar isSignedIn = createSelector(selectFeatureState, function (state) { return state.user.loaded; });\r\n/** @type {?} */\r\nvar selectResetPasswordRequestState = createSelector(selectFeatureState, function (state) { return state.resetPasswordRequest; });\r\n/** @type {?} */\r\nvar getNumberOfRequeseted$1 = createSelector(selectResetPasswordRequestState, getNumberOfRequeseted);\r\n/** @type {?} */\r\nvar getResetPasswordRequestStatus = createSelector(selectResetPasswordRequestState, getStatus);\r\n/** @type {?} */\r\nvar selectUserInformaionState = createSelector(selectFeatureState, function (state) { return state.user; });\r\n/** @type {?} */\r\nvar getAccountInfo$2 = createSelector(selectUserInformaionState, getAccountInfo);\r\n/** @type {?} */\r\nvar selectSearchState = createSelector(selectFeatureState, function (state) { return state.searchView; });\r\n/** @type {?} */\r\nvar getSearchStatus = createSelector(selectSearchState, getStatus$3);\r\n//#endregion\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar SearchComponent = /** @class */ (function () {\r\n    function SearchComponent(store) {\r\n        this.store = store;\r\n        this.formGroup = ProfileViewModel.Request.formGroup;\r\n        this.userDataLoaded$ = new BehaviorSubject$1(false);\r\n        this.userNotFound$ = new BehaviorSubject$1(false);\r\n        this.user = this.store.select(getAccountInfo$2);\r\n        this.userStatus$ = this.store.select(getSearchStatus);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SearchComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.userStatus$.subscribe(function (value) { return _this.userDataLoaded$.next(!\"pristine|dirty|pending\".includes(value)); });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    SearchComponent.prototype.search = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.formGroup.valid)\r\n            return;\r\n        this.store.dispatch(new Search(this.formGroup.value));\r\n    };\r\n    SearchComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"search\",\r\n                    template: \"<mat-card fxFlex=\\\"450px\\\" *ngIf=\\\"(userStatus$ | async) == 'succeed'\\\">\\n  <mat-card-header>\\n    <mat-card-title>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n        <div fxFlex=\\\"nogrow\\\">\\n          <!-- {{(user | async).LastName }}\\u060C {{(user | async).FirstName }} -->\\n        </div>\\n        <div fxFlex=\\\"nogrow\\\">\\n          <!-- {{(user | async).Email}} -->\\n        </div>\\n      </div>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <div>\\n      <div class='list-item' fxFlexLayout='row' fxLayoutAlign='center center'>\\n        <mat-icon fxFlex='nogrow'>local_grocery_store</mat-icon>\\n        <div fxFlex='15px'></div>\\n        <p fxFlex='40'>\\u0634\\u0646\\u0627\\u0633\\u0647</p>\\n        <!-- <p fxFlex='60' fxLayoutAlign=\\\"end\\\">{{(user | async)._id }}</p> -->\\n      </div>\\n      <div class='list-item' fxFlexLayout='row' fxLayoutAlign='center center'>\\n        <mat-icon fxFlex='nogrow'>email</mat-icon>\\n        <div fxFlex='15px'></div>\\n        <p fxFlex='40'>\\u067E\\u0633\\u062A \\u0627\\u0644\\u06A9\\u062A\\u0631\\u0648\\u0646\\u06CC\\u06A9\\u06CC</p>\\n        <!-- <p fxFlex='60' fxLayoutAlign=\\\"end\\\">{{(user | async).Email }}</p> -->\\n      </div>\\n    </div>\\n\\n  </mat-card-content>\\n</mat-card>\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    SearchComponent.ctorParameters = function () { return [\r\n        { type: Store }\r\n    ]; };\r\n    return SearchComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ChangePasswordComponent = /** @class */ (function () {\r\n    function ChangePasswordComponent() {\r\n        this.submited = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ChangePasswordComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ChangePasswordComponent.prototype.submit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ChangePasswordComponent.prototype.changePassword = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.formGroup.valid)\r\n            return;\r\n        this.submited.emit(this.formGroup.value);\r\n    };\r\n    ChangePasswordComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"user-change-password\",\r\n                    template: \"<div fxFlex=\\\"450px\\\">\\n  <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"changePassword()\\\" fxLayout=\\\"column\\\">\\n    <mat-card>\\n      <mat-card-content>\\n        <mat-form-field fxFlexFill>\\n          <input type=\\\"password\\\" matInput placeholder=\\\"\\u06A9\\u0644\\u0645\\u0647 \\u0639\\u0628\\u0648\\u0631\\\" formControlName=\\\"Password\\\">\\n        </mat-form-field>\\n        <mat-form-field fxFlexFill>\\n          <input type=\\\"password\\\" matInput placeholder=\\\"\\u062A\\u06A9\\u0631\\u0627\\u0631 \\u06A9\\u0644\\u0645\\u0647 \\u0639\\u0628\\u0648\\u0631\\\" formControlName=\\\"Confirm\\\">\\n        </mat-form-field>\\n      </mat-card-content>\\n      <mat-card-actions fxLayoutAlign=\\\"center center\\\">\\n        <button fxFlex=\\\"nogrow\\\" type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">\\u062A\\u063A\\u06CC\\u06CC\\u0631 \\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631</button>\\n        <button fxFlex=\\\"nogrow\\\" type=\\\"button\\\" routerLink=\\\"/user/panel\\\" mat-raised-button>\\u0628\\u0627\\u0632\\u06AF\\u0634\\u062A</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </form>\\n</div>\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ChangePasswordComponent.ctorParameters = function () { return []; };\r\n    ChangePasswordComponent.propDecorators = {\r\n        formGroup: [{ type: Input }],\r\n        submited: [{ type: Output }]\r\n    };\r\n    return ChangePasswordComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ProfileEditComponent = /** @class */ (function () {\r\n    function ProfileEditComponent(router) {\r\n        this.router = router;\r\n        this.submited = new EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ProfileEditComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    ProfileEditComponent.prototype.editProfile = /**\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    function (form) {\r\n        if (!form.valid)\r\n            return;\r\n        this.submited.emit(form.value);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ProfileEditComponent.prototype.goback = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.router.navigate([\"..\"]);\r\n    };\r\n    ProfileEditComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"profile-edit\",\r\n                    template: \"<div fxFlex=\\\"450px\\\">\\n\\n  \\n  <ngs-form-view #form [id]=\\\"formId\\\" [card]=\\\"true\\\" (accept)=\\\"editProfile(form.formGroup)\\\" (cancel)=\\\"goback()\\\" ></ngs-form-view>\\n  <!-- <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"editProfile()\\\" fxLayout=\\\"column\\\">\\n    <mat-card>\\n      <mat-card-content>\\n      </mat-card-content>\\n      <mat-card-actions align=\\\"end\\\">\\n        <button type=\\\"button\\\" routerLink=\\\"..\\\" mat-button color=\\\"primary\\\">\\u0628\\u0627\\u0632\\u06AF\\u0634\\u062A</button>\\n        <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">\\u0648\\u06CC\\u0631\\u0627\\u06CC\\u0634</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </form> -->\\n</div>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ProfileEditComponent.ctorParameters = function () { return [\r\n        { type: Router }\r\n    ]; };\r\n    ProfileEditComponent.propDecorators = {\r\n        submited: [{ type: Output }],\r\n        userInfo: [{ type: Input }],\r\n        formId: [{ type: Input }],\r\n        roles$: [{ type: Input, args: [\"roles\",] }],\r\n        groups: [{ type: Input }]\r\n    };\r\n    return ProfileEditComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DashboardLinksComponent = /** @class */ (function () {\r\n    function DashboardLinksComponent(userConfigurationService, store) {\r\n        this.userConfigurationService = userConfigurationService;\r\n        this.store = store;\r\n        this.links$ = this.userConfigurationService.config$.pipe(map(function (data) { return data.dashboardLinks; }));\r\n        this.links = [\r\n            {\r\n                title: \"مشاهده حساب کاربری\",\r\n                route: \"/user/panel/profile\",\r\n                // description: \"لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم\",\r\n                icon: \"person\"\r\n            }\r\n        ];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DashboardLinksComponent.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    DashboardLinksComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"user-dashboard-links\",\r\n                    template: \"<div fxLayout='row' fxLayoutWrap id=\\\"con\\\">\\n    <button fxFlex=\\\"31\\\" class='link' mat-raised-button [routerLink]='link.route' *ngFor='let link of links'>\\n        <div fxLayout='column' fxLayoutAlign='center center'>\\n            <mat-icon color='primary'>{{link.icon}}</mat-icon>\\n            <h3 class='title'>{{link.title}}</h3>\\n            <div class='description'>{{link.description}}</div>\\n        </div>\\n    </button>\\n    <button fxFlex=\\\"31\\\" class='link' mat-raised-button [routerLink]='link.route' *ngFor='let link of links$ | async'>\\n        <div fxLayout='column' fxLayoutAlign='center center'>\\n            <mat-icon color='primary'>{{link.icon}}</mat-icon>\\n            <h3 class='title'>{{link.title}}</h3>\\n            <div class='description'>{{link.description}}</div>\\n        </div>\\n    </button>\\n</div>\",\r\n                    styles: [\"#con [fxflex]{margin-right:25px}:host{width:100%;padding:25px 25px 0}button mat-icon{font-size:48px;width:48px;height:48px}button.link{padding:25px 15px;margin-bottom:25px}.title{margin-top:0;margin-bottom:5px}.description{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:90%}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DashboardLinksComponent.ctorParameters = function () { return [\r\n        { type: UserConfigurationService },\r\n        { type: Store }\r\n    ]; };\r\n    return DashboardLinksComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ResetPasswordRequestComponent = /** @class */ (function () {\r\n    function ResetPasswordRequestComponent(snackBar) {\r\n        this.snackBar = snackBar;\r\n        this.submitted = new EventEmitter();\r\n        this.maximumResendingHappend$ = new BehaviorSubject(false);\r\n        this.timer$ = Observable.timer(0, 100).pipe(map(function (i) { return i + 1; }), takeWhile(function (i) { return i * 100 <= 3000; }), map(function (i) { return 3000 - i * 100; }));\r\n    }\r\n    Object.defineProperty(ResetPasswordRequestComponent.prototype, \"pending\", {\r\n        set: /**\r\n         * @param {?} isPending\r\n         * @return {?}\r\n         */\r\n        function (isPending) {\r\n            if (isPending) {\r\n                this.formGroup.disable();\r\n            }\r\n            this.formGroup.enable();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ResetPasswordRequestComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.numberOfRequested.subscribe(function (data) {\r\n            if (data > 2) {\r\n                _this.maximumResendingHappend$.next(true);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ResetPasswordRequestComponent.prototype.submit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.formGroup.valid) {\r\n            this.submitted.emit(this.formGroup.value);\r\n            /** @type {?} */\r\n            var message = this.maximumResendingHappend$.getValue()\r\n                ? \"عدم امکان ...\"\r\n                : \"پیامک جدید برای شما ارسال گردید.\";\r\n            this.snackBar.open(message, \"\", {\r\n                duration: 3000\r\n            });\r\n        }\r\n    };\r\n    ResetPasswordRequestComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"user-reset-password-request\",\r\n                    template: \"<form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"submit()\\\" fxLayout=\\\"column\\\">\\n  <mat-card>\\n    <mat-card-header>\\n      <mat-card-title>\\n        <h3>\\u062F\\u0631\\u062E\\u0648\\u0627\\u0633\\u062A \\u0628\\u0627\\u0632\\u06CC\\u0627\\u0628\\u06CC \\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631</h3>\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <p>\\u0628\\u0631\\u0627\\u06CC \\u0628\\u0627\\u0632\\u06CC\\u0627\\u0628\\u06CC \\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631 \\u0634\\u0645\\u0627\\u0631\\u0647 \\u062A\\u0644\\u0641\\u0646 \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0648\\u0627\\u0631\\u062F \\u0646\\u0645\\u0627\\u06CC\\u06CC\\u062F</p>\\n      <mat-radio-group fxFlexFill formControlName=\\\"Type\\\">\\n        <mat-radio-button value=\\\"sms\\\">\\u067E\\u06CC\\u0627\\u0645\\u06A9</mat-radio-button>\\n        <mat-radio-button value=\\\"email\\\">\\u067E\\u0633\\u062A \\u0627\\u0644\\u06A9\\u062A\\u0631\\u0648\\u0646\\u06CC\\u06A9\\u06CC</mat-radio-button>\\n      </mat-radio-group>\\n      <mat-form-field fxFlexFill>\\n        <input matInput placeholder=\\\"\\u0634\\u0645\\u0627\\u0631\\u0647 \\u062A\\u0644\\u0641\\u0646 \\u0647\\u0645\\u0631\\u0627\\u0647\\\" formControlName=\\\"Username\\\">\\n      </mat-form-field>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <!--<button type=\\\"submit\\\" [disabled]='(canRequestPin | async) || (maximumResendingHappend$ | async)' (click)=\\\"submit()\\\" mat-raised-button color=\\\"primary\\\">-->\\n      <button type=\\\"submit\\\" [disabled]='(canRequestPin | async)' (click)=\\\"submit()\\\" mat-raised-button color=\\\"primary\\\">\\n        <span *ngIf='!(canRequestPin | async)'>\\n          \\u0628\\u0627\\u0632\\u06CC\\u0627\\u0628\\u06CC \\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631\\n        </span>\\n        <!--<div *ngIf='(canRequestPin | async) && !(maximumResendingHappend$ | async)'>\\n          {{timer$ | async}} \\u062B\\u0627\\u0646\\u06CC\\u0647 \\u062A\\u0627 \\u0627\\u0645\\u06A9\\u0627\\u0646 \\u062F\\u0631 \\u062E\\u0648\\u0627\\u0633\\u062A \\u062F\\u0648\\u0628\\u0627\\u0631\\u0647 \\u062F\\u0631\\u06CC\\u0627\\u0641\\u062A \\u067E\\u06CC\\u0627\\u0645\\u06A9.\\n        </div>\\n        <div *ngIf='(maximumResendingHappend$ | async)'>\\n          \\u0639\\u062F\\u0645 \\u0627\\u0645\\u06A9\\u0627\\u0646 \\u062F\\u0631\\u062E\\u0648\\u0627\\u0633\\u062A\\n        </div>-->\\n      </button>\\n      <a mat-button routerLink='/auth/signin'>\\u0627\\u0646\\u0635\\u0631\\u0627\\u0641</a>\\n    </mat-card-actions>\\n  </mat-card>\\n</form>\\n\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ResetPasswordRequestComponent.ctorParameters = function () { return [\r\n        { type: MatSnackBar }\r\n    ]; };\r\n    ResetPasswordRequestComponent.propDecorators = {\r\n        submitted: [{ type: Output }],\r\n        formGroup: [{ type: Input }],\r\n        numberOfRequested: [{ type: Input }],\r\n        canRequestPin: [{ type: Input }],\r\n        pending: [{ type: Input }]\r\n    };\r\n    return ResetPasswordRequestComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar FeatureContainerComponent = /** @class */ (function () {\r\n    function FeatureContainerComponent(route, store) {\r\n        var _this = this;\r\n        this.route = route;\r\n        this.store = store;\r\n        this.route.params.subscribe(function (params) {\r\n            /** @type {?} */\r\n            var model = new ProfileViewModel.Request(/** @type {?} */ ({ Email: params[\"Email\"] }));\r\n            _this.store.dispatch(new Search(model));\r\n        });\r\n    }\r\n    FeatureContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<router-outlet></router-outlet>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    FeatureContainerComponent.ctorParameters = function () { return [\r\n        { type: ActivatedRoute },\r\n        { type: Store }\r\n    ]; };\r\n    return FeatureContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ChangePasswordModel;\r\n(function (ChangePasswordModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = /** @type {?} */ ({}); }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {\r\n                Password: this.Password\r\n            };\r\n        };\r\n        Object.defineProperty(Request, \"formGroup\", {\r\n            get: /**\r\n             * @return {?}\r\n             */\r\n            function () {\r\n                return new FormGroup({\r\n                    Password: new FormControl(null, [Validators.required, Validators.minLength(7)]),\r\n                    Confirm: new FormControl(null, [Validators.required, MatchValidator(\"Password\")])\r\n                });\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Request;\r\n    }());\r\n    ChangePasswordModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    ChangePasswordModel.Response = Response;\r\n})(ChangePasswordModel || (ChangePasswordModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ChangePasswordContainerComponent = /** @class */ (function () {\r\n    function ChangePasswordContainerComponent(route, store) {\r\n        this.route = route;\r\n        this.store = store;\r\n        this.formGroup = ChangePasswordModel.Request.formGroup;\r\n        this.ChangePasswordModel = new ChangePasswordModel.Request();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ChangePasswordContainerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.store.select(getAccountInfo$2).subscribe(function (userInfo) {\r\n            if (!userInfo)\r\n                return;\r\n            // TODO:\r\n            // this.ChangePasswordModel.Username = userInfo.Username;\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ChangePasswordContainerComponent.prototype.changePassword = /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        this.ChangePasswordModel.Password = this.formGroup.get(\"Password\").value;\r\n        this.store.dispatch(new ChangePassword(this.ChangePasswordModel));\r\n    };\r\n    ChangePasswordContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<user-change-password\\n                (submited)='changePassword($event)'\\n                [formGroup]=\\\"formGroup\\\"\\n              ></user-change-password>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ChangePasswordContainerComponent.ctorParameters = function () { return [\r\n        { type: ActivatedRoute },\r\n        { type: Store }\r\n    ]; };\r\n    return ChangePasswordContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ProfileEditContainerComponent = /** @class */ (function () {\r\n    function ProfileEditContainerComponent(store, configService) {\r\n        this.store = store;\r\n        this.configService = configService;\r\n        this.userInforamation$ = this.store.select(getAccountInfo$2);\r\n        this.roles$ = this.store\r\n            .select(getAppConfig)\r\n            .pipe(filter(function (config) { return config != undefined; }), map(function (config) { return config.Config.Roles; }));\r\n        // TODO:\r\n        // this.groups = this.diagramService.getGroups();\r\n        this.groups = of([\"test1\", \"test2\"]);\r\n        this.config$ = this.configService.config$;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ProfileEditContainerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    ProfileEditContainerComponent.prototype.updateProfile = /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    function (data) {\r\n        this.store.dispatch(new EditProfile(data));\r\n    };\r\n    ProfileEditContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"profile-edit-contianer\",\r\n                    template: \"<profile-edit\\n                (submited)='updateProfile($event)'\\n                [userInfo]=\\\"userInforamation$ | async\\\"\\n                [roles]=\\\"roles$\\\"\\n\\t\\t\\t\\t[groups]=\\\"groups | async\\\"\\n\\t\\t\\t\\t[formId]=\\\"(config$|async)?.forms.profile_edit\\\"\\n              ></profile-edit>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ProfileEditContainerComponent.ctorParameters = function () { return [\r\n        { type: Store },\r\n        { type: UserConfigurationService }\r\n    ]; };\r\n    return ProfileEditContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DashboardContainerComponent = /** @class */ (function () {\r\n    // is_agent : Observable<boolean>;\r\n    function DashboardContainerComponent(store) {\r\n        this.store = store;\r\n        this.user$ = this.store.select(getAccountInfo);\r\n        // this.is_agent = signinService.is_agent();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DashboardContainerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    DashboardContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"user-dashboard-container\",\r\n                    template: \"<!-- <router-outlet name=\\\"links\\\"></router-outlet> -->\\n<div fxLayoutAlign=\\\"center\\\">\\n    <router-outlet></router-outlet>\\n</div>\",\r\n                    styles: [\"#box-left{background:#fff}#box-bottom{background:#2b0033}#box-right{background:#000833;padding-top:10px!important;padding-bottom:10px!important}#box-right div{background:#fff;opacity:.5}#banner:not(.active){height:100%;-webkit-filter:grayscale(100%) brightness(1.5) opacity(.2) blur(2px);filter:grayscale(100%) brightness(1.5) opacity(.2) blur(2px)}#s1{background:#aaa}#s2{background:#bbb}#s3{background:#ccc}.personal-info{background-color:rgba(255,255,255,.5);position:relative;right:10%;width:90%;height:469px}.personal-info h2{color:#00bcd4;font-weight:400;font-size:24px;font-family:iran-sans-light!important}.personal-info h6{font-weight:400;font-size:12px;float:right;width:50%;margin:0;color:#555;border-bottom:2px solid #ececec}.personal-info p{float:right;width:30%;margin:0;font-size:13px;padding-right:30px;border-bottom:2px solid #ececec}.personal-info div{width:100%;height:50px;position:relative;line-height:52px;right:17px}.quick-box{width:100%;height:50px;position:relative;line-height:52px;padding-top:79px}.quick-btn{background-color:#00bcd4;margin:12px 10px;height:100px;text-align:center;line-height:100px;font-size:17px;color:#fff}.banner-section{text-align:center}.info-section{padding:60px 25px 10px;background-color:#f7f7f7;background-image:url(https://www.toptal.com/designers/subtlepatterns/patterns/grey.png)!important;height:1040px;padding-bottom:120px!important}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DashboardContainerComponent.ctorParameters = function () { return [\r\n        { type: Store }\r\n    ]; };\r\n    return DashboardContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ProfileComponent = /** @class */ (function () {\r\n    function ProfileComponent() {\r\n        this.info = [];\r\n    }\r\n    Object.defineProperty(ProfileComponent.prototype, \"information\", {\r\n        set: /**\r\n         * @param {?} information\r\n         * @return {?}\r\n         */\r\n        function (information) {\r\n            var _this = this;\r\n            if (!information)\r\n                return;\r\n            Object.keys(information).forEach(function (k) { return _this.info.push([k, information[k]]); });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ProfileComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    ProfileComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"user-profile\",\r\n                    template: \"<div fxFlex=\\\"450px\\\">\\n  <router-outlet name=\\\"ngs-user-profile-view\\\"></router-outlet>\\n  <router-outlet></router-outlet>\\n  <!-- <mat-card>\\n    <mat-card-header>\\n      <mat-card-title>\\u0627\\u0637\\u0644\\u0627\\u0639\\u0627\\u062A \\u067E\\u0631\\u0648\\u0641\\u0627\\u06CC\\u0644</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content *ngIf='dataStatus$ | async'>\\n        <div class='list-item' fxFlexLayout='row' *ngFor=\\\"let item of info\\\">\\n            <p fxFlex='40'>{{item[0]}}</p>\\n            <p fxFlex='60'>{{item[1]}}</p>\\n        </div>\\n     \\n    </mat-card-content>\\n\\n    <mat-card-actions align=\\\"end\\\">\\n      <button mat-button color=\\\"primary\\\" routerLink='..'>\\u0628\\u0627\\u0632\\u06AF\\u0634\\u062A</button>\\n      <button mat-raised-button color=\\\"primary\\\" routerLink='edit'>\\u0648\\u06CC\\u0631\\u0627\\u06CC\\u0634</button>\\n    </mat-card-actions>\\n  </mat-card> -->\\n</div>\\n\\n\\n\\n<!-- <div class='list-item' fxFlexLayout='row'>\\n        <p fxFlex='40'>\\u0627\\u06CC\\u0645\\u06CC\\u0644</p>\\n        <p fxFlex='60'>{{(information | async).Email}}</p>\\n      </div>\\n      <div class='list-item' fxFlexLayout='row'>\\n        <p fxFlex='40'>roles</p>\\n        <p fxFlex='60'>{{(information | async).Roles | json}}</p>\\n      </div> -->\\n<!-- <div class='list-item' fxFlexLayout='row'>\\n        <p fxFlex='40'>\\u0646\\u0627\\u0645</p>\\n        <p fxFlex='60'>{{(userInformation | async).FirstName}}</p>\\n      </div>\\n      <div class='list-item' fxFlexLayout='row'>\\n        <p fxFlex='40'>\\u0646\\u0627\\u0645 \\u062E\\u0627\\u0646\\u0648\\u0627\\u062F\\u06AF\\u06CC</p>\\n        <p fxFlex='60'>{{(userInformation | async).LastName}}</p>\\n      </div>\\n      <div class='list-item' fxFlexLayout='row'>\\n        <p fxFlex='40'>\\u0646\\u0627\\u0645 \\u06A9\\u0627\\u0631\\u0628\\u0631\\u06CC</p>\\n        <p fxFlex='60'>{{(userInformation | async).Username}}</p>\\n      </div>\\n      <div class='list-item' fxFlexLayout='row'>\\n        <p fxFlex='40'>\\u062A\\u0644\\u0641\\u0646 \\u0647\\u0645\\u0631\\u0627\\u0647</p>\\n        <p fxFlex='60'>{{(userInformation | async).MobileNumber | persianNumber}}</p>\\n      </div>\\n      <div class='list-item' fxFlexLayout='row'>\\n        <p fxFlex='40'>\\u062C\\u0646\\u0633\\u06CC\\u062A</p>\\n        <p fxFlex='60'>{{sex$ | async}}</p>\\n      </div>\\n      <div class='list-item' fxFlexLayout='row'>\\n        <p fxFlex='40'>\\u062A\\u0627\\u0631\\u06CC\\u062E \\u062A\\u0648\\u0644\\u062F</p>\\n        <p fxFlex='60'>{{(userInformation | async).Birthdate | persianDate : false}}</p>\\n      </div>\\n      <div class='list-item' fxFlexLayout='row'>\\n        <p fxFlex='40'>\\u0627\\u06CC\\u0645\\u06CC\\u0644</p>\\n        <p fxFlex='60'>{{(userInformation | async).Email}}</p>\\n      </div>\\n      <div class='list-item' fxFlexLayout='row'>\\n        <p fxFlex='40'>{{(identifierType$ | async)}}</p>\\n        <p fxFlex='60'>{{(userInformation | async).IdentificationNo | persianNumber}}</p>\\n      </div>\\n      <div class='list-item' fxFlexLayout='row'>\\n        <p fxFlex='40'>\\u062A\\u0627\\u0631\\u06CC\\u062E \\u0639\\u0636\\u0648\\u06CC\\u062A</p>\\n        <p fxFlex='60'>{{(userInformation | async).RegisterDate | persianDate}}</p>\\n      </div> -->\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ProfileComponent.ctorParameters = function () { return []; };\r\n    ProfileComponent.propDecorators = {\r\n        information: [{ type: Input }],\r\n        dataStatus$: [{ type: Input }]\r\n    };\r\n    return ProfileComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ProfileContainerComponent = /** @class */ (function () {\r\n    function ProfileContainerComponent(store) {\r\n        this.store = store;\r\n        this.data$ = this.store.select(getAccountInfo$2);\r\n        this.dataStatus$ = this.store.select(getUserInforamtionStatus);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ProfileContainerComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () { };\r\n    ProfileContainerComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<user-profile\\n                [information]=\\\"data$ | async\\\"\\n                [dataStatus$]='dataStatus$'\\n            ></user-profile>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ProfileContainerComponent.ctorParameters = function () { return [\r\n        { type: Store }\r\n    ]; };\r\n    return ProfileContainerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NgsUserModule = /** @class */ (function () {\r\n    function NgsUserModule() {\r\n    }\r\n    /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    NgsUserModule.forRoot = /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        return {\r\n            ngModule: RootNgsUserModule,\r\n            providers: [{ provide: MODULE_CONFIG_TOKEN, useValue: config }]\r\n        };\r\n    };\r\n    NgsUserModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        HttpClientModule,\r\n                        FormsModule,\r\n                        RouterModule,\r\n                        CommonModule,\r\n                        MatExpansionModule,\r\n                        MatSnackBarModule,\r\n                        MatIconModule,\r\n                        MatButtonModule,\r\n                        MatCardModule,\r\n                        MatSelectModule,\r\n                        MatInputModule,\r\n                        MatFormFieldModule,\r\n                        MatTabsModule,\r\n                        FlexLayoutModule,\r\n                        MatRadioModule,\r\n                        ReactiveFormsModule,\r\n                        BrowserAnimationsModule,\r\n                        NgsFormModule\r\n                    ],\r\n                    declarations: [\r\n                        SearchComponent,\r\n                        ProfileComponent,\r\n                        ChangePasswordComponent,\r\n                        ProfileEditComponent,\r\n                        ProfileContainerComponent,\r\n                        DashboardLinksComponent,\r\n                        ResetPasswordRequestComponent,\r\n                        FeatureContainerComponent,\r\n                        DashboardContainerComponent,\r\n                        ChangePasswordContainerComponent,\r\n                        ProfileEditContainerComponent\r\n                    ],\r\n                    exports: []\r\n                },] },\r\n    ];\r\n    return NgsUserModule;\r\n}());\r\nvar RootNgsUserModule = /** @class */ (function () {\r\n    function RootNgsUserModule() {\r\n    }\r\n    RootNgsUserModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        NgsUserModule,\r\n                        StoreModule.forFeature(\"user\", UserReducers),\r\n                        EffectsModule.forFeature([\r\n                            EditProfileEffects,\r\n                            ProfileViewEffects,\r\n                            UserEffects\r\n                        ])\r\n                    ]\r\n                },] },\r\n    ];\r\n    return RootNgsUserModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar routes = [\r\n    {\r\n        path: \"user/panel\",\r\n        component: DashboardContainerComponent,\r\n        children: [\r\n            {\r\n                path: \"\",\r\n                component: DashboardLinksComponent\r\n            },\r\n            {\r\n                path: \"profile\",\r\n                component: ProfileContainerComponent\r\n            },\r\n            {\r\n                path: \"profile/edit\",\r\n                component: ProfileEditContainerComponent\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: \"admin/user\",\r\n        children: [\r\n            // { path: \"managment\", component: SearchComponent },\r\n            {\r\n                path: \":Email\",\r\n                component: FeatureContainerComponent,\r\n                children: [\r\n                    {\r\n                        path: \"profile-edit\",\r\n                        component: ProfileEditContainerComponent\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n];\r\n/** @type {?} */\r\nvar NgsUserRoutingModule = RouterModule.forChild(routes);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar NgsUserModuleOutlets = {\r\n    ngs_user_profile_view: \"ngs-user-profile-view\",\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UserFacadeService = /** @class */ (function () {\r\n    function UserFacadeService(store, configService) {\r\n        this.store = store;\r\n        this.configService = configService;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserFacadeService.prototype.getDisplayName = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.store.select(getAccountInfo$2).let(this.configService.config$.getValue().mapUserDisplayName);\r\n        // .pipe(filter(displayName => displayName !== undefined));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    UserFacadeService.prototype.getInfo = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.store.select(getAccountInfo$2);\r\n    };\r\n    UserFacadeService.decorators = [\r\n        { type: Injectable, args: [{\r\n                    providedIn: \"root\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    UserFacadeService.ctorParameters = function () { return [\r\n        { type: Store },\r\n        { type: UserConfigurationService }\r\n    ]; };\r\n    /** @nocollapse */ UserFacadeService.ngInjectableDef = defineInjectable({ factory: function UserFacadeService_Factory() { return new UserFacadeService(inject(Store), inject(UserConfigurationService)); }, token: UserFacadeService, providedIn: \"root\" });\r\n    return UserFacadeService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { UserModel, NgsUserModule, NgsUserRoutingModule, NgsUserModuleOutlets, UserService, UserFacadeService, getAccountInfo$2 as getAccountInfo, UserActionTypes, ChangePasswordContainerComponent as ɵr, reducer$1 as ɵw, ChangePasswordComponent as ɵj, getAccountInfo as ɵu, userReducer as ɵt, DashboardContainerComponent as ɵq, DashboardLinksComponent as ɵm, FeatureContainerComponent as ɵp, UserEffects as ɵbb, EditProfileEffects as ɵz, reducer$2 as ɵy, ProfileEditContainerComponent as ɵs, ProfileEditComponent as ɵk, ProfileContainerComponent as ɵl, ProfileViewEffects as ɵba, ProfileComponent as ɵi, reducer as ɵv, ResetPasswordRequestComponent as ɵo, reducer$3 as ɵx, SearchComponent as ɵh, UserConfigurationService as ɵn, MODULE_CONFIG_TOKEN as ɵa, RootNgsUserModule as ɵb, UserReducers as ɵd, selectFeatureState as ɵf, selectUserInformaionState as ɵg, routes as ɵc };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { __assign } from 'tslib';\nimport { Component, Input, NgModule } from '@angular/core';\nimport { FormControl, FormGroup, FormArray, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { UpsertWidgetStartAction, WidgetModel } from '@soushians/widget';\nimport { getFrontendAuthenticationState } from '@soushians/frontend-authentication';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatExpansionModule, MatSnackBarModule, MatIconModule, MatButtonModule, MatCardModule, MatSelectModule, MatInputModule, MatFormFieldModule, MatTabsModule, MatRadioModule, MatSlideToggleModule, MatDividerModule, MatCheckboxModule, MatTableModule, MatListModule } from '@angular/material';\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ArticleUpsertComponent = /** @class */ (function () {\r\n    function ArticleUpsertComponent(store) {\r\n        this.store = store;\r\n        this._createFormGroup();\r\n        this.widget = new WidgetModel({ type: \"article\" });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ArticleUpsertComponent.prototype.upsert = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var widget = __assign({}, this.widget, this.widgetFormGroup.value, { Config: this.configFormGroup.value });\r\n        this.store.dispatch(new UpsertWidgetStartAction(widget));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ArticleUpsertComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.widget != undefined) {\r\n            this.widgetFormGroup.patchValue(this.widget);\r\n            this.configFormGroup.patchValue(this.widget.Config);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ArticleUpsertComponent.prototype._createFormGroup = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.configFormGroup = new FormGroup({\r\n            content: new FormControl(\"\")\r\n        });\r\n        this.widgetFormGroup = new FormGroup({\r\n            name: new FormControl(\"\")\r\n        });\r\n    };\r\n    ArticleUpsertComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"widget-article-upsert\",\r\n                    template: \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\n      <mat-icon>gradient</mat-icon>\\n      <span>\\u0627\\u06CC\\u062C\\u0627\\u062F \\u0627\\u0641\\u0632\\u0648\\u0646\\u0647\\u200C</span>\\n    </mat-card-title>\\n    <!-- <mat-card-subtitle fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n      <span>\\n        \\u0627\\u0641\\u0632\\u0648\\u0646\\u0647\\u200C \\u0645\\u0648\\u0631\\u062F \\u0646\\u0638\\u0631 \\u0631\\u0627 \\u0628\\u0631\\u0627\\u0633\\u0627\\u0633 \\u0646\\u0648\\u0639 \\u0622\\u0646 \\u0627\\u06CC\\u062C\\u0627\\u062F \\u0646\\u0645\\u0627\\u06CC\\u06CC\\u062F ...\\n      </span>\\n    </mat-card-subtitle> -->\\n  </mat-card-header>\\n  <mat-card-content>\\n    <h3>\\u0646\\u0627\\u0645 \\u0627\\u0641\\u0632\\u0648\\u0646\\u0647</h3>\\n    <div [formGroup]=\\\"widgetFormGroup\\\">\\n      <mat-form-field>\\n        <input type=\\\"text\\\" matInput placeholder=\\\"\\u0646\\u0627\\u0645\\\" formControlName=\\\"name\\\">\\n      </mat-form-field>\\n    </div>\\n    <mat-divider></mat-divider>\\n    <h3>\\u0645\\u062A\\u0646 \\u0627\\u0641\\u0632\\u0648\\u0646\\u0647</h3>\\n    <div [formGroup]=\\\"configFormGroup\\\">\\n      <div [froalaEditor] formControlName=\\\"content\\\"></div>\\n    </div>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"upsert()\\\">Add</button>\\n  </mat-card-actions>\\n</mat-card>\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ArticleUpsertComponent.ctorParameters = function () { return [\r\n        { type: Store }\r\n    ]; };\r\n    ArticleUpsertComponent.propDecorators = {\r\n        widget: [{ type: Input }]\r\n    };\r\n    return ArticleUpsertComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ArticleViewComponent = /** @class */ (function () {\r\n    function ArticleViewComponent(store) {\r\n        this.store = store;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ArticleViewComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.havePermission$ = this.store.select(getFrontendAuthenticationState);\r\n    };\r\n    ArticleViewComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"widget-article-view\",\r\n                    template: \"<div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center start\\\">\\n  <button mat-mini-fab color=\\\"accent\\\" *ngIf=\\\"havePermission$ | async\\\" [routerLink]=\\\"['/widget/upsert/article', (widget)?._id]\\\">\\n    <mat-icon>edit</mat-icon>\\n  </button>\\n\\n  <div fxFlex=\\\"90\\\" [froalaView]=\\\"(widget)?.Config.content\\\" align=\\\"right\\\" class=\\\"article\\\"></div>\\n</div>\",\r\n                    styles: [\":host{position:relative;display:block}.mat-mini-fab{position:absolute;top:-20px;right:-20px}.article{direction:rtl;text-align:right;padding-top:25px}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ArticleViewComponent.ctorParameters = function () { return [\r\n        { type: Store }\r\n    ]; };\r\n    return ArticleViewComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar LinksUpsertComponent = /** @class */ (function () {\r\n    function LinksUpsertComponent(store) {\r\n        this.store = store;\r\n        this._createFormGroup();\r\n        this.widget = new WidgetModel({ type: \"links\" });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LinksUpsertComponent.prototype.upsert = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var widget = __assign({}, this.widget, this.widgetFormGroup.value, { Config: this.configFormGroup.value });\r\n        this.store.dispatch(new UpsertWidgetStartAction(widget));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LinksUpsertComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.widget != undefined) {\r\n            this.widgetFormGroup.patchValue(this.widget);\r\n            this.configFormGroup.patchValue(this.widget.Config);\r\n            debugger;\r\n            this._update_links(this.widget.Config.links);\r\n        }\r\n    };\r\n    /**\r\n     * view methods\r\n     */\r\n    /**\r\n     * view methods\r\n     * @return {?}\r\n     */\r\n    LinksUpsertComponent.prototype.addlink = /**\r\n     * view methods\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        (/** @type {?} */ (this.configFormGroup.get(\"links\"))).push(this._get_new_empty_link_item());\r\n    };\r\n    /**\r\n     * @param {?} link\r\n     * @return {?}\r\n     */\r\n    LinksUpsertComponent.prototype.removelink = /**\r\n     * @param {?} link\r\n     * @return {?}\r\n     */\r\n    function (link) {\r\n        debugger;\r\n        /** @type {?} */\r\n        var data = /** @type {?} */ (this.configFormGroup.get(\"links\"));\r\n        if (data.controls.length > -1) {\r\n            data.removeAt(link);\r\n        }\r\n        else {\r\n            return data;\r\n        }\r\n    };\r\n    /**\r\n     * private methods\r\n     */\r\n    /**\r\n     * private methods\r\n     * @return {?}\r\n     */\r\n    LinksUpsertComponent.prototype._createFormGroup = /**\r\n     * private methods\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.configFormGroup = new FormGroup({\r\n            links: new FormArray([])\r\n        });\r\n        this.widgetFormGroup = new FormGroup({\r\n            name: new FormControl(\"\")\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LinksUpsertComponent.prototype._get_new_empty_link_item = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new FormGroup({\r\n            url: new FormControl(\"/\"),\r\n            label: new FormControl(\"\")\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} links\r\n     * @return {?}\r\n     */\r\n    LinksUpsertComponent.prototype._update_links = /**\r\n     * @param {?} links\r\n     * @return {?}\r\n     */\r\n    function (links) {\r\n        var _this = this;\r\n        (/** @type {?} */ (this.configFormGroup.get(\"links\"))).reset();\r\n        links.forEach(function (link) {\r\n            /** @type {?} */\r\n            var _link = _this._get_new_empty_link_item();\r\n            _link.patchValue(link);\r\n            (/** @type {?} */ (_this.configFormGroup.get(\"links\"))).push(_link);\r\n        });\r\n    };\r\n    LinksUpsertComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"widget-links-upsert\",\r\n                    template: \"<mat-card fxFlex>\\n  <mat-card-header>\\n    <mat-card-title fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\n      <mat-icon>gradient</mat-icon>\\n      <span>\\u0627\\u06CC\\u062C\\u0627\\u062F \\u0627\\u0641\\u0632\\u0648\\u0646\\u0647\\u200C</span>\\n    </mat-card-title>\\n    <mat-card-subtitle fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n      <span>\\n        \\u0646\\u0627\\u0645 \\u0644\\u06CC\\u0646\\u06A9 \\u0645\\u0648\\u0631\\u062F\\u0646\\u0638\\u0631 \\u0631\\u0627 \\u0648\\u0627\\u0631\\u062F \\u06A9\\u0631\\u062F\\u0647 \\u0648 \\u0627\\u0637\\u0644\\u0627\\u0639\\u0627\\u062A \\u0631\\u0627 \\u06A9\\u0627\\u0645\\u0644 \\u0646\\u0645\\u0627\\u06CC\\u06CC\\u062F ...\\n      </span>\\n    </mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <h3>\\u0646\\u0627\\u0645 \\u0648\\u06CC\\u062C\\u062A</h3>\\n    <div [formGroup]=\\\"widgetFormGroup\\\">\\n      <mat-form-field>\\n        <input type=\\\"text\\\" matInput placeholder=\\\"\\u0646\\u0627\\u0645\\\" formControlName=\\\"name\\\">\\n      </mat-form-field>\\n    </div>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n      <h3>\\u062A\\u0646\\u0638\\u06CC\\u0645\\u0627\\u062A \\u0648\\u06CC\\u062C\\u062A</h3>\\n      <button color=\\\"primary\\\" mat-fab fxFlexAlign=\\\"end\\\" (click)=\\\"addlink()\\\">\\n        <mat-icon>add</mat-icon>\\n      </button>\\n    </div>\\n    <div [formGroup]=\\\"configFormGroup\\\">\\n      <div fxFlex=\\\"nogrow\\\" *ngFor=\\\"let ctrl of $any(configFormGroup.get('links')).controls; let idx = index\\\"\\n        [formGroup]=\\\"ctrl\\\">\\n        <div [formGroup]=\\\"ctrl\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"25px\\\">\\n          <button mat-icon-button fxFlex=\\\"nogrow\\\" (click)=\\\"removelink(idx)\\\">\\n            <mat-icon>delete</mat-icon>\\n          </button>\\n          <mat-form-field fxFlex>\\n            <input type=\\\"text\\\" matInput placeholder=\\\"\\u0622\\u062F\\u0631\\u0633\\\" formControlName=\\\"url\\\">\\n          </mat-form-field>\\n          <mat-form-field fxFlex>\\n            <input type=\\\"text\\\" matInput placeholder=\\\"\\u0646\\u0627\\u0645\\\" formControlName=\\\"label\\\">\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"upsert()\\\">\\u062B\\u0628\\u062A</button>\\n  </mat-card-actions>\\n</mat-card>\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    LinksUpsertComponent.ctorParameters = function () { return [\r\n        { type: Store }\r\n    ]; };\r\n    LinksUpsertComponent.propDecorators = {\r\n        widget: [{ type: Input }]\r\n    };\r\n    return LinksUpsertComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar LinksViewComponent = /** @class */ (function () {\r\n    function LinksViewComponent(store) {\r\n        this.store = store;\r\n    }\r\n    Object.defineProperty(LinksViewComponent.prototype, \"widget\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._widget;\r\n        },\r\n        set: /**\r\n         * @param {?} widget\r\n         * @return {?}\r\n         */\r\n        function (widget) {\r\n            debugger;\r\n            widget.Config.links.forEach(function (item) { return item.url = item.url.startsWith(\"www.\") ? item.url = \"http://\" + item.url : item.url; });\r\n            widget.Config.links.forEach(function (item) { return item.isExternal = item.url.startsWith(\"http\"); });\r\n            this._widget = widget;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    LinksViewComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.havePermission$ = this.store.select(getFrontendAuthenticationState);\r\n    };\r\n    LinksViewComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"widget-links-view\",\r\n                    template: \"<div fxLayout=\\\"column\\\">\\n  <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxFlex fxLayoutAlign=\\\"end\\\">\\n    <button fxFlex=\\\"nogrow\\\" mat-icon-button color=\\\"primary\\\" *ngIf=\\\"havePermission$ | async\\\" [routerLink]=\\\"['/widget/upsert/links', (widget)?._id]\\\">\\n      <mat-icon>edit</mat-icon>\\n    </button>\\n  </div>\\n  <div fxLayout=\\\"row\\\" fxFlex fxLayoutAlign=\\\"end\\\">\\n    <h3>\\n      {{widget.name}}\\n    </h3>\\n  </div>\\n  <mat-list fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n    <mat-list-item fxLayout=\\\"column\\\" *ngFor=\\\"let link of (widget)?.Config.links\\\" fxFlex=\\\"100\\\">\\n      <mat-icon mat-list-icon>link</mat-icon>\\n      <a fxLayout=\\\"row\\\" *ngIf=\\\"!link.isExternal\\\" fxFlex=\\\"grow\\\" [routerLink]=\\\"[link.url]\\\">\\n        {{link.label}}\\n      </a>\\n      <a fxLayout=\\\"row\\\" *ngIf=\\\"link.isExternal\\\" target=\\\"_blank\\\" fxFlex=\\\"grow\\\" [href]=\\\"link.url\\\">\\n        {{link.label}}\\n      </a>\\n    </mat-list-item>\\n  </mat-list>\\n</div>\",\r\n                    styles: [\":host{position:relative;height:100%;display:block}:host:hover .actions{opacity:1;visibility:visible}mat-list a{text-decoration:none}.actions{transition:opacity .4s ease-in-out;opacity:0;visibility:hidden}.actions mat-icon{color:#121212}h3{padding-right:20px}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    LinksViewComponent.ctorParameters = function () { return [\r\n        { type: Store }\r\n    ]; };\r\n    return LinksViewComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ListViewComponent = /** @class */ (function () {\r\n    function ListViewComponent(store) {\r\n        this.store = store;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ListViewComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.havePermission$ = this.store.select(getFrontendAuthenticationState);\r\n    };\r\n    ListViewComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"widget-list-view\",\r\n                    template: \"<div fxLayout=\\\"column\\\">\\n  <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxFlex fxLayoutAlign=\\\"end\\\">\\n    <button fxFlex=\\\"nogrow\\\" mat-icon-button color=\\\"primary\\\" *ngIf=\\\"havePermission$ | async\\\" [routerLink]=\\\"['/widget/upsert/links', (widget)?._id]\\\">\\n      <mat-icon>edit</mat-icon>\\n    </button>\\n  </div>\\n  <div fxLayout=\\\"row\\\" fxFlex fxLayoutAlign=\\\"end\\\">\\n    <h3>\\n      {{widget.name}}\\n    </h3>\\n  </div>\\n  <mat-list fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n    <mat-list-item fxLayout=\\\"column\\\" *ngFor=\\\"let item of (widget)?.Config.list\\\" fxFlex=\\\"100\\\">\\n      <mat-icon class=\\\"large-icon\\\" mat-list-icon>account_box</mat-icon>\\n      <h4 mat-line> {{item.title}}</h4>\\n      <p mat-line> {{item.subtitle}} </p>\\n      <p mat-line> {{item.description}} </p>\\n    </mat-list-item>\\n  </mat-list>\\n</div>\",\r\n                    styles: [\":host{position:relative;height:100%;display:block}:host:hover .actions{opacity:1;visibility:visible}mat-list a{text-decoration:none}.actions{transition:opacity .4s ease-in-out;opacity:0;visibility:hidden}.actions mat-icon{color:#121212}h3{padding-right:20px}.large-icon{font-size:50px!important;width:50px!important;height:50px!important;color:#999}mat-list{direction:rtl}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ListViewComponent.ctorParameters = function () { return [\r\n        { type: Store }\r\n    ]; };\r\n    return ListViewComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ListUpsertComponent = /** @class */ (function () {\r\n    function ListUpsertComponent(store) {\r\n        this.store = store;\r\n        this._createFormGroup();\r\n        this.widget = new WidgetModel({ type: \"list\" });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ListUpsertComponent.prototype.upsert = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        /** @type {?} */\r\n        var widget = __assign({}, this.widget, this.widgetFormGroup.value, { Config: this.configFormGroup.value });\r\n        this.store.dispatch(new UpsertWidgetStartAction(widget));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ListUpsertComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.widget != undefined) {\r\n            this.widgetFormGroup.patchValue(this.widget);\r\n            this.configFormGroup.patchValue(this.widget.Config);\r\n            this._update_list(this.widget.Config.list);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ListUpsertComponent.prototype.addItem = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        (/** @type {?} */ (this.configFormGroup.get(\"list\"))).push(this._get_new_empty_list_item());\r\n    };\r\n    /**\r\n     * @param {?} list\r\n     * @return {?}\r\n     */\r\n    ListUpsertComponent.prototype.removelist = /**\r\n     * @param {?} list\r\n     * @return {?}\r\n     */\r\n    function (list) {\r\n        debugger;\r\n        /** @type {?} */\r\n        var data = /** @type {?} */ (this.configFormGroup.get(\"list\"));\r\n        if (data.controls.length > -1) {\r\n            data.removeAt(list);\r\n        }\r\n        else {\r\n            return data;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ListUpsertComponent.prototype._createFormGroup = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.configFormGroup = new FormGroup({\r\n            list: new FormArray([])\r\n        });\r\n        this.widgetFormGroup = new FormGroup({\r\n            name: new FormControl(\"\")\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ListUpsertComponent.prototype._get_new_empty_list_item = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new FormGroup({\r\n            title: new FormControl(\"\"),\r\n            subtitle: new FormControl(\"\"),\r\n            description: new FormControl(\"\")\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} list\r\n     * @return {?}\r\n     */\r\n    ListUpsertComponent.prototype._update_list = /**\r\n     * @param {?} list\r\n     * @return {?}\r\n     */\r\n    function (list) {\r\n        var _this = this;\r\n        (/** @type {?} */ (this.configFormGroup.get(\"list\"))).reset();\r\n        list.forEach(function (item) {\r\n            /** @type {?} */\r\n            var _list = _this._get_new_empty_list_item();\r\n            _list.patchValue(item);\r\n            (/** @type {?} */ (_this.configFormGroup.get(\"list\"))).push(_list);\r\n        });\r\n    };\r\n    ListUpsertComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"widget-list-upsert\",\r\n                    template: \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\n      <mat-icon>gradient</mat-icon>\\n      <span>\\u0627\\u06CC\\u062C\\u0627\\u062F \\u0627\\u0641\\u0632\\u0648\\u0646\\u0647\\u200C</span>\\n    </mat-card-title>\\n    <!-- <mat-card-subtitle fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n      <span>\\n        \\u0627\\u0641\\u0632\\u0648\\u0646\\u0647\\u200C \\u0645\\u0648\\u0631\\u062F \\u0646\\u0638\\u0631 \\u0631\\u0627 \\u0628\\u0631\\u0627\\u0633\\u0627\\u0633 \\u0646\\u0648\\u0639 \\u0622\\u0646 \\u0627\\u06CC\\u062C\\u0627\\u062F \\u0646\\u0645\\u0627\\u06CC\\u06CC\\u062F ...\\n      </span>\\n    </mat-card-subtitle> -->\\n  </mat-card-header>\\n  <mat-card-content>\\n    <h3>\\u0646\\u0627\\u0645 \\u0627\\u0641\\u0632\\u0648\\u0646\\u0647</h3>\\n    <div [formGroup]=\\\"widgetFormGroup\\\">\\n      <mat-form-field>\\n        <input type=\\\"text\\\" matInput placeholder=\\\"\\u0646\\u0627\\u0645\\\" formControlName=\\\"name\\\">\\n      </mat-form-field>\\n    </div>\\n    <mat-divider></mat-divider>\\n    <h3>\\u0645\\u062A\\u0646 \\u0627\\u0641\\u0632\\u0648\\u0646\\u0647</h3>\\n    <button color=\\\"primary\\\" mat-fab fxFlexAlign=\\\"end\\\" (click)=\\\"addItem()\\\">\\n      <mat-icon>add</mat-icon>\\n    </button>\\n    <div [formGroup]=\\\"configFormGroup\\\">\\n      <div fxFlex=\\\"nogrow\\\" *ngFor=\\\"let ctrl of $any(configFormGroup.get('list')).controls; let idx = index\\\" [formGroup]=\\\"ctrl\\\">\\n        <button mat-icon-button fxFlex=\\\"nogrow\\\" (click)=\\\"removelist(idx)\\\">\\n          <mat-icon>delete</mat-icon>\\n        </button>\\n        <mat-form-field fxFlex>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"\\u0639\\u0646\\u0648\\u0627\\u0646\\\" formControlName=\\\"title\\\">\\n        </mat-form-field>\\n        <mat-form-field fxFlex>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"\\u0632\\u06CC\\u0631\\u0639\\u0646\\u0648\\u0627\\u0646\\\" formControlName=\\\"subtitle\\\">\\n        </mat-form-field>\\n        <mat-form-field fxFlex>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"\\u062A\\u0648\\u0636\\u06CC\\u062D\\u0627\\u062A\\\" formControlName=\\\"description\\\">\\n        </mat-form-field>\\n      </div>\\n    </div>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"upsert()\\\">\\u062B\\u0628\\u062A</button>\\n  </mat-card-actions>\\n</mat-card>\",\r\n                    styles: [\"\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    ListUpsertComponent.ctorParameters = function () { return [\r\n        { type: Store }\r\n    ]; };\r\n    ListUpsertComponent.propDecorators = {\r\n        widget: [{ type: Input }]\r\n    };\r\n    return ListUpsertComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NgsWidgetTypesModule = /** @class */ (function () {\r\n    function NgsWidgetTypesModule() {\r\n    }\r\n    NgsWidgetTypesModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        RouterModule,\r\n                        MatExpansionModule,\r\n                        MatSnackBarModule,\r\n                        MatIconModule,\r\n                        MatButtonModule,\r\n                        MatCardModule,\r\n                        MatSelectModule,\r\n                        MatInputModule,\r\n                        MatFormFieldModule,\r\n                        MatTabsModule,\r\n                        MatRadioModule,\r\n                        MatDividerModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule,\r\n                        MatSlideToggleModule,\r\n                        MatDividerModule,\r\n                        MatCheckboxModule,\r\n                        MatTableModule,\r\n                        MatListModule,\r\n                        FlexLayoutModule,\r\n                        FroalaEditorModule.forRoot(),\r\n                        FroalaViewModule.forRoot()\r\n                    ],\r\n                    declarations: [\r\n                        ArticleUpsertComponent,\r\n                        ArticleViewComponent,\r\n                        LinksUpsertComponent,\r\n                        LinksViewComponent,\r\n                        ListUpsertComponent,\r\n                        ListViewComponent\r\n                    ],\r\n                    entryComponents: [\r\n                        ArticleUpsertComponent,\r\n                        ArticleViewComponent,\r\n                        LinksUpsertComponent,\r\n                        LinksViewComponent,\r\n                        ListUpsertComponent,\r\n                        ListViewComponent\r\n                    ],\r\n                    exports: [ArticleViewComponent]\r\n                },] },\r\n    ];\r\n    return NgsWidgetTypesModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { ArticleUpsertComponent, ArticleViewComponent, LinksUpsertComponent, LinksViewComponent, ListViewComponent, ListUpsertComponent, NgsWidgetTypesModule };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { InjectionToken, Inject, Injectable, Component, ComponentFactoryResolver, ViewContainerRef, Input, Directive, NgModule } from '@angular/core';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { Store, StoreModule } from '@ngrx/store';\nimport { map, filter, tap, take, switchMap, startWith, catchError, pluck } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { stringTemplate } from '@soushians/shared';\nimport { Location, CommonModule } from '@angular/common';\nimport { RouterModule, ActivatedRoute } from '@angular/router';\nimport { __decorate, __metadata, __assign } from 'tslib';\nimport { Actions, Effect, EffectsModule } from '@ngrx/effects';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatExpansionModule, MatSnackBarModule, MatIconModule, MatButtonModule, MatCardModule, MatSelectModule, MatInputModule, MatFormFieldModule, MatTabsModule, MatRadioModule, MatSlideToggleModule, MatDividerModule, MatMenuModule, MatCheckboxModule, MatTableModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UpsertWidgetStartAction = /** @class */ (function () {\r\n    function UpsertWidgetStartAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[UPSERT_WIDGET][API][UpsertWidget] start\" /* START */;\r\n    }\r\n    return UpsertWidgetStartAction;\r\n}());\r\nvar UpsertWidgetSucceedAction = /** @class */ (function () {\r\n    function UpsertWidgetSucceedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[UPSERT_WIDGET][API][UpsertWidget] succeed\" /* SUCCEED */;\r\n    }\r\n    return UpsertWidgetSucceedAction;\r\n}());\r\nvar UpsertWidgetFailedAction = /** @class */ (function () {\r\n    function UpsertWidgetFailedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[UPSERT_WIDGET][API][UpsertWidget] failed\" /* FAILED */;\r\n    }\r\n    return UpsertWidgetFailedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar MODULE_DEFAULT_CONFIG = {\r\n    env: {\r\n        production: false,\r\n        frontend_server: \"frontend_server/did/not/set\"\r\n    },\r\n    endpoints: {\r\n        upsert: \"/api/uiwidget\",\r\n        find: \"/api/uiwidget\",\r\n        get: \"/api/uiwidget/${model._id}\",\r\n        deleteItem: \"/api/uiwidget/${model.widgetId}\"\r\n    },\r\n    types: {}\r\n};\r\n/** @type {?} */\r\nvar MODULE_CONFIG_TOKEN = new InjectionToken(\"WidgetModuleConfig\");\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar WidgetConfigurationService = /** @class */ (function () {\r\n    function WidgetConfigurationService(configFile, store) {\r\n        this.store = store;\r\n        this.config$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n        this._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n        this.config$.next(this._config);\r\n        // this.store.select(getWidgetModuleConfig).subscribe((widgetConfig) => {\r\n        // \tif (!widgetConfig) {\r\n        // \t\treturn;\r\n        // \t}\r\n        // \tthis._config = Object.assign({}, this._config, widgetConfig.Config);\r\n        // \tthis.config$.next(this._config);\r\n        // });\r\n    }\r\n    Object.defineProperty(WidgetConfigurationService.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._config;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WidgetConfigurationService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    WidgetConfigurationService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [MODULE_CONFIG_TOKEN,] }] },\r\n        { type: Store }\r\n    ]; };\r\n    return WidgetConfigurationService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetWidgetsApiModel;\r\n(function (GetWidgetsApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = {}; }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {};\r\n        };\r\n        return Request;\r\n    }());\r\n    GetWidgetsApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    GetWidgetsApiModel.Response = Response;\r\n})(GetWidgetsApiModel || (GetWidgetsApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetWidgetsStartAction = /** @class */ (function () {\r\n    function GetWidgetsStartAction() {\r\n        this.type = \"[GET_WIDGETS][API][GetWidgets] start\" /* START */;\r\n    }\r\n    return GetWidgetsStartAction;\r\n}());\r\nvar GetWidgetsSucceedAction = /** @class */ (function () {\r\n    function GetWidgetsSucceedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[GET_WIDGETS][API][GetWidgets] succeed\" /* SUCCEED */;\r\n    }\r\n    return GetWidgetsSucceedAction;\r\n}());\r\nvar GetWidgetsFailedAction = /** @class */ (function () {\r\n    function GetWidgetsFailedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[GET_WIDGETS][API][GetWidgets] failed\" /* FAILED */;\r\n    }\r\n    return GetWidgetsFailedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetWidgetApiModel;\r\n(function (GetWidgetApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(initValue) {\r\n            if (initValue === void 0) { initValue = {}; }\r\n            var _this = this;\r\n            Object.keys(initValue).forEach(function (key) { return (_this[key] = initValue[key]); });\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {};\r\n        };\r\n        return Request;\r\n    }());\r\n    GetWidgetApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    GetWidgetApiModel.Response = Response;\r\n})(GetWidgetApiModel || (GetWidgetApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetWidgetStartAction = /** @class */ (function () {\r\n    function GetWidgetStartAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[WIDGET][API][GetWidget] start\" /* START */;\r\n    }\r\n    return GetWidgetStartAction;\r\n}());\r\nvar GetWidgetSucceedAction = /** @class */ (function () {\r\n    function GetWidgetSucceedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[WIDGET][API][GetWidget] succeed\" /* SUCCEED */;\r\n    }\r\n    return GetWidgetSucceedAction;\r\n}());\r\nvar GetWidgetFailedAction = /** @class */ (function () {\r\n    function GetWidgetFailedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[WIDGET][API][GetWidget] failed\" /* FAILED */;\r\n    }\r\n    return GetWidgetFailedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @template T\r\n */\r\nvar  /**\r\n * @template T\r\n */\r\nWidgetModel = /** @class */ (function () {\r\n    function WidgetModel(_a) {\r\n        var _b = _a === void 0 ? {} : _a, _id = _b._id, name = _b.name, type = _b.type, Config = _b.Config;\r\n        this._id = _id;\r\n        this.name = name || \"\";\r\n        this.type = type;\r\n        this.Config = Config || (/** @type {?} */ ({}));\r\n    }\r\n    return WidgetModel;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UpsertWidgetApiModel;\r\n(function (UpsertWidgetApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(widget) {\r\n            if (widget === void 0) { widget = {}; }\r\n            debugger;\r\n            this.widget = new WidgetModel(widget);\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.widget;\r\n        };\r\n        return Request;\r\n    }());\r\n    UpsertWidgetApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    UpsertWidgetApiModel.Response = Response;\r\n})(UpsertWidgetApiModel || (UpsertWidgetApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DeleteWidgetApiModel;\r\n(function (DeleteWidgetApiModel) {\r\n    var Request = /** @class */ (function () {\r\n        function Request(widget) {\r\n            if (widget === void 0) { widget = {}; }\r\n            debugger;\r\n            this.widget = new WidgetModel(widget);\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        Request.prototype.getRequestBody = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.widget;\r\n        };\r\n        return Request;\r\n    }());\r\n    DeleteWidgetApiModel.Request = Request;\r\n    var Response = /** @class */ (function () {\r\n        function Response() {\r\n        }\r\n        return Response;\r\n    }());\r\n    DeleteWidgetApiModel.Response = Response;\r\n})(DeleteWidgetApiModel || (DeleteWidgetApiModel = {}));\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DeleteWidgetStartAction = /** @class */ (function () {\r\n    function DeleteWidgetStartAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[DELETE_WIDGET][API][DeleteWidget] start\" /* START */;\r\n    }\r\n    return DeleteWidgetStartAction;\r\n}());\r\nvar DeleteWidgetSucceedAction = /** @class */ (function () {\r\n    function DeleteWidgetSucceedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[DELETE_WIDGET][API][DeleteWidget] succeed\" /* SUCCEED */;\r\n    }\r\n    return DeleteWidgetSucceedAction;\r\n}());\r\nvar DeleteWidgetFailedAction = /** @class */ (function () {\r\n    function DeleteWidgetFailedAction(payload) {\r\n        this.payload = payload;\r\n        this.type = \"[DELETE_WIDGET][API][DeleteWidget] failed\" /* FAILED */;\r\n    }\r\n    return DeleteWidgetFailedAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar WidgetService = /** @class */ (function () {\r\n    function WidgetService(http, store, configurationService, _location) {\r\n        this.http = http;\r\n        this.store = store;\r\n        this.configurationService = configurationService;\r\n        this._location = _location;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    WidgetService.prototype.get = /**\r\n     * @template T\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    function (_id) {\r\n        var _this = this;\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.get !== \"\"; }), take(1), switchMap(function (config) {\r\n            return _this.http.get(stringTemplate(config.env.frontend_server + config.endpoints.get, { _id: _id }));\r\n        }), map(function (response) { return response.Result; }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WidgetService.prototype.getWidgets = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.find != \"\"; }), switchMap(function (config) { return _this.http.get(config.env.frontend_server + config.endpoints.find); }), map(function (response) { return response.Result; }));\r\n    };\r\n    /**\r\n     * @template T\r\n     * @param {?} widget\r\n     * @return {?}\r\n     */\r\n    WidgetService.prototype.upsert = /**\r\n     * @template T\r\n     * @param {?} widget\r\n     * @return {?}\r\n     */\r\n    function (widget) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var model = new UpsertWidgetApiModel.Request(widget);\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.upsert != \"\"; }), take(1), switchMap(function (config) {\r\n            return _this.http.post(config.env.frontend_server + config.endpoints.upsert, model.getRequestBody());\r\n        }), map(function (response) { return response.Result; }), tap(function () { return _this._location.back(); }));\r\n    };\r\n    /**\r\n     * @param {?} widget\r\n     * @return {?}\r\n     */\r\n    WidgetService.prototype.delete = /**\r\n     * @param {?} widget\r\n     * @return {?}\r\n     */\r\n    function (widget) {\r\n        var _this = this;\r\n        debugger;\r\n        /** @type {?} */\r\n        var widgetId = widget._id;\r\n        return this.configurationService.config$.pipe(filter(function (config) { return config.endpoints.deleteItem != \"\"; }), switchMap(function (config) { return _this.http.delete(stringTemplate(config.env.frontend_server + config.endpoints.deleteItem, { widgetId: widgetId })).pipe(map(function (response) { return response.Result; })); }));\r\n    };\r\n    /**\r\n     * @template T\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    WidgetService.prototype.selectById = /**\r\n     * @template T\r\n     * @param {?} _id\r\n     * @return {?}\r\n     */\r\n    function (_id) {\r\n        var _this = this;\r\n        /** @type {?} */\r\n        var subject = new BehaviorSubject(undefined);\r\n        this.store\r\n            .select(function (state) { return state.widgets.db.data; })\r\n            .pipe(filter(function (widgets) { return widgets != null; }), map(function (widgets) { return widgets.find(function (widget) { return widget._id == _id; }); }), tap(function (widget) {\r\n            if (widget == null) {\r\n                _this.store.dispatch(new GetWidgetStartAction(_id));\r\n            }\r\n        }))\r\n            .subscribe(function (widget) { return subject.next(widget); });\r\n        return subject.asObservable();\r\n    };\r\n    WidgetService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    WidgetService.ctorParameters = function () { return [\r\n        { type: HttpClient },\r\n        { type: Store },\r\n        { type: WidgetConfigurationService },\r\n        { type: Location }\r\n    ]; };\r\n    return WidgetService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DynamicWidgetViewComponent = /** @class */ (function () {\r\n    function DynamicWidgetViewComponent(store, service, configurationService, resolver, container) {\r\n        this.store = store;\r\n        this.service = service;\r\n        this.configurationService = configurationService;\r\n        this.resolver = resolver;\r\n        this.container = container;\r\n        this._fill_component_map();\r\n    }\r\n    Object.defineProperty(DynamicWidgetViewComponent.prototype, \"oid\", {\r\n        set: /**\r\n         * @param {?} id\r\n         * @return {?}\r\n         */\r\n        function (id) {\r\n            this._selectWidget(id);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DynamicWidgetViewComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.widget$.pipe(filter(function (widget) { return widget != undefined; })).subscribe(function (widget) {\r\n            _this._resolve_correct_component_base_on_widget_type(widget);\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DynamicWidgetViewComponent.prototype._fill_component_map = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.configurationService.config$.pipe(map(function (config) { return config.types; }), startWith({})).subscribe(function (types) {\r\n            debugger;\r\n            _this.mapTypeToComponent = types;\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    DynamicWidgetViewComponent.prototype._selectWidget = /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (id) {\r\n        this.widget$ = this.service.selectById(id);\r\n    };\r\n    /**\r\n     * @param {?} widget\r\n     * @return {?}\r\n     */\r\n    DynamicWidgetViewComponent.prototype._resolve_correct_component_base_on_widget_type = /**\r\n     * @param {?} widget\r\n     * @return {?}\r\n     */\r\n    function (widget) {\r\n        var _this = this;\r\n        if (!this.mapTypeToComponent[widget.type]) {\r\n            debugger;\r\n            /** @type {?} */\r\n            var supportedTypes = Object.keys(this.mapTypeToComponent).join(\", \");\r\n            throw new Error(\"Trying to use an unsupported type (\" + widget.type + \").\\n\\t\\t  \\t\\t Supported types: \" + supportedTypes);\r\n        }\r\n        /** @type {?} */\r\n        var component = this.resolver.resolveComponentFactory(this.mapTypeToComponent[widget.type].view);\r\n        this.component = this.container.createComponent(component);\r\n        this.widget$.subscribe(function (w) { return (_this.component.instance.widget = w); });\r\n    };\r\n    DynamicWidgetViewComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"widget\",\r\n                    template: \"\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DynamicWidgetViewComponent.ctorParameters = function () { return [\r\n        { type: Store },\r\n        { type: WidgetService },\r\n        { type: WidgetConfigurationService },\r\n        { type: ComponentFactoryResolver },\r\n        { type: ViewContainerRef }\r\n    ]; };\r\n    DynamicWidgetViewComponent.propDecorators = {\r\n        oid: [{ type: Input }]\r\n    };\r\n    return DynamicWidgetViewComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar WidgetSelectorComponent = /** @class */ (function () {\r\n    function WidgetSelectorComponent(store) {\r\n        this.store = store;\r\n        this.widgets$ = this.store.select(function (state) { return state.widgets.db.data; });\r\n    }\r\n    Object.defineProperty(WidgetSelectorComponent.prototype, \"valid\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.config.oid != undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WidgetSelectorComponent.prototype, \"config\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {\r\n                oid: this.selectedWidgetId\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WidgetSelectorComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.store.dispatch(new GetWidgetsStartAction());\r\n    };\r\n    WidgetSelectorComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<div fxLayout=\\\"column wrap\\\" fxLayoutGap=\\\"15px\\\">\\n  <h4>\\u0644\\u06CC\\u0633\\u062A \\u0648\\u06CC\\u062C\\u062A\\u200C\\u0647\\u0627</h4>\\n        <mat-form-field fxFlex=\\\"100\\\">\\n<mat-select placeholder=\\\"\\u0646\\u0648\\u0639 \\u0648\\u06CC\\u062C\\u062A\\\" [(ngModel)]=\\\"selectedWidgetId\\\" name=\\\"selectedWidgetId\\\">\\n  <mat-option *ngFor=\\\"let item of (widgets$ | async)\\\" [value]=\\\"item._id\\\">\\n    {{item.type}} : <b>{{item.name}}</b>\\n  </mat-option>\\n</mat-select> \\n</mat-form-field>\\n</div>\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    WidgetSelectorComponent.ctorParameters = function () { return [\r\n        { type: Store }\r\n    ]; };\r\n    return WidgetSelectorComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar RootComponent = /** @class */ (function () {\r\n    function RootComponent() {\r\n    }\r\n    RootComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: \"widget-root\",\r\n                    template: \"<router-outlet></router-outlet>\"\r\n                },] },\r\n    ];\r\n    return RootComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar WidgetsManagementComponent = /** @class */ (function () {\r\n    function WidgetsManagementComponent(store) {\r\n        this.store = store;\r\n        this.widgets$ = this.store.select(function (state) { return state.widgets.db.data; });\r\n        this._fill_anghazi();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WidgetsManagementComponent.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.store.dispatch(new GetWidgetsStartAction());\r\n    };\r\n    /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    WidgetsManagementComponent.prototype.remove = /**\r\n     * @param {?} item\r\n     * @return {?}\r\n     */\r\n    function (item) {\r\n        debugger;\r\n        this.store.dispatch(new DeleteWidgetStartAction(item));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    WidgetsManagementComponent.prototype._fill_anghazi = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.anghazi = {\r\n            article: {\r\n                color: \"green\",\r\n                icon: \"description\"\r\n            },\r\n            links: {\r\n                color: \"orange\",\r\n                icon: \"link\"\r\n            },\r\n            list: {\r\n                color: \"blue\",\r\n                icon: \"list\"\r\n            }\r\n        };\r\n    };\r\n    WidgetsManagementComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"25px\\\" class=\\\"main-container\\\">\\n\\n  <div class=\\\"content-action\\\">\\n    <mat-card class=\\\"with-sticky-action\\\">\\n      <mat-card-header>\\n        <mat-card-title fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\">\\n          <mat-icon>widgets</mat-icon>\\n          <span>\\u0645\\u062F\\u06CC\\u0631\\u06CC\\u062A \\u0627\\u0641\\u0632\\u0648\\u0646\\u0647\\u200C\\u0647\\u0627</span>\\n        </mat-card-title>\\n        <mat-card-subtitle fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n          <span>\\n            \\u0627\\u0641\\u0632\\u0648\\u0646\\u0647\\u200C \\u0645\\u0648\\u0631\\u062F \\u0646\\u0638\\u0631 \\u0631\\u0627 \\u0628\\u0631\\u0627\\u0633\\u0627\\u0633 \\u0646\\u0648\\u0639 \\u0622\\u0646 \\u0627\\u06CC\\u062C\\u0627\\u062F \\u0646\\u0645\\u0627\\u06CC\\u06CC\\u062F ...\\n          </span>\\n        </mat-card-subtitle>\\n      </mat-card-header>\\n\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start\\\">\\n\\n        <button mat-raised-button fxFlex.gt-lg=\\\"19\\\" fxFlex.lg=\\\"24\\\" fxFlex.md=\\\"31.7\\\" fxFlex.sm=\\\"49\\\" fxFlex.xs=\\\"100\\\"\\n          class='link' *ngFor=\\\"let item of (widgets$ | async)\\\">\\n          <button mat-icon-button (click)=\\\"remove(item)\\\" class=\\\"remove-item\\\">\\n            <mat-icon>delete</mat-icon>\\n          </button>\\n          <div class=\\\"link-button\\\" [routerLink]=\\\"['../upsert' ,  item.type,  item._id]\\\" fxLayout='column' fxLayoutAlign='space-between center'>\\n            <mat-icon color='primary' [style.color]=\\\"anghazi[item.type].color\\\">{{anghazi[item.type].icon}}</mat-icon>\\n            <div fxFlex=\\\"nogrow\\\" fxFlexAlign=\\\"stretch\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"widget-type\\\">\\n              {{item.type}}\\n            </div>\\n            <h4 class=\\\"title\\\">{{item.name}}</h4>\\n          </div>\\n        </button>\\n      </div>\\n\\n    </mat-card>\\n\\n    <div fxLayout=\\\"column\\\" class=\\\"sticky-action\\\">\\n      <a mat-mini-fab routerLink=\\\"../upsert/article\\\" [style.backgroundColor]=\\\"'#ffffff'\\\">\\n        <mat-icon [style.color]=\\\"anghazi.article.color\\\">{{anghazi.article.icon}}</mat-icon>\\n      </a>\\n      <a mat-mini-fab routerLink=\\\"../upsert/links\\\" [style.backgroundColor]=\\\"'#ffffff'\\\">\\n        <mat-icon [style.color]=\\\"anghazi.links.color\\\">{{anghazi.links.icon}}</mat-icon>\\n      </a>\\n      <a mat-mini-fab routerLink=\\\"../upsert/list\\\" [style.backgroundColor]=\\\"'#ffffff'\\\">\\n        <mat-icon [style.color]=\\\"anghazi.list.color\\\">{{anghazi.list.icon}}</mat-icon>\\n      </a>\\n    </div>\\n\\n  </div>\\n</div>\",\r\n                    styles: [\".link{margin:.5%;box-sizing:border-box;position:relative;padding:0}button.link mat-icon{font-size:34px;width:34px;height:34px}.link h4{margin:0}.remove-item{position:absolute;top:0;left:0;z-index:100}.link-button{padding:25px 15px}button.link .remove-item mat-icon{font-size:initial;width:initial;height:initial;visibility:hidden;opacity:0;transition:opacity .3s ease-in-out}button.link:hover .remove-item mat-icon{visibility:visible;opacity:1}\"]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    WidgetsManagementComponent.ctorParameters = function () { return [\r\n        { type: Store }\r\n    ]; };\r\n    return WidgetsManagementComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UpsertComponent = /** @class */ (function () {\r\n    function UpsertComponent() {\r\n    }\r\n    UpsertComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    template: \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"main-container\\\">\\n    <div fxFlex=\\\"50\\\">\\n        <ng-container ngsDynamicWidgetConfig></ng-container>\\n    </div>\\n</div>\"\r\n                },] },\r\n    ];\r\n    return UpsertComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar routes = [\r\n    {\r\n        path: \"widget\",\r\n        component: RootComponent,\r\n        children: [\r\n            {\r\n                path: \"management\",\r\n                component: WidgetsManagementComponent\r\n            },\r\n            {\r\n                path: \"upsert/:type\",\r\n                component: UpsertComponent\r\n            },\r\n            {\r\n                path: \"upsert/:type/:_id\",\r\n                component: UpsertComponent\r\n            }\r\n        ]\r\n    }\r\n];\r\n/** @type {?} */\r\nvar WidgetRoutingModule = RouterModule.forChild(routes);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetWidgetApiEffects = /** @class */ (function () {\r\n    function GetWidgetApiEffects(actions$, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.service = service;\r\n        this.start$ = this.actions$\r\n            .ofType(\"[WIDGET][API][GetWidget] start\" /* START */)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (payload) { return _this.service.get(payload); }), map(function (res) { return new GetWidgetSucceedAction(res); }), catchError(function (err) { return of(new GetWidgetFailedAction(err)); }));\r\n    }\r\n    GetWidgetApiEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    GetWidgetApiEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: WidgetService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], GetWidgetApiEffects.prototype, \"start$\", void 0);\r\n    return GetWidgetApiEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar UpsertWidgetApiEffects = /** @class */ (function () {\r\n    function UpsertWidgetApiEffects(actions$, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.service = service;\r\n        this.start$ = this.actions$\r\n            .ofType(\"[UPSERT_WIDGET][API][UpsertWidget] start\" /* START */)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (payload) { return _this.service.upsert(payload); }), map(function (res) { return new UpsertWidgetSucceedAction(res); }), catchError(function (err) { return of(new UpsertWidgetFailedAction(err)); }));\r\n    }\r\n    UpsertWidgetApiEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    UpsertWidgetApiEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: WidgetService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], UpsertWidgetApiEffects.prototype, \"start$\", void 0);\r\n    return UpsertWidgetApiEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar GetWidgetsApiEffects = /** @class */ (function () {\r\n    function GetWidgetsApiEffects(actions$, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.service = service;\r\n        this.start$ = this.actions$\r\n            .ofType(\"[GET_WIDGETS][API][GetWidgets] start\" /* START */)\r\n            .pipe(switchMap(function () {\r\n            return _this.service\r\n                .getWidgets()\r\n                .pipe(map(function (res) { return new GetWidgetsSucceedAction(res); }), catchError(function (err) { return of(new GetWidgetsFailedAction(err)); }));\r\n        }));\r\n    }\r\n    GetWidgetsApiEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    GetWidgetsApiEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: WidgetService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], GetWidgetsApiEffects.prototype, \"start$\", void 0);\r\n    return GetWidgetsApiEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DeleteWidgetApiEffects = /** @class */ (function () {\r\n    function DeleteWidgetApiEffects(actions$, service) {\r\n        var _this = this;\r\n        this.actions$ = actions$;\r\n        this.service = service;\r\n        this.start$ = this.actions$\r\n            .ofType(\"[DELETE_WIDGET][API][DeleteWidget] start\" /* START */)\r\n            .pipe(map(function (action) { return action.payload; }), switchMap(function (payload) {\r\n            return _this.service\r\n                .delete(payload)\r\n                .pipe(map(function (res) { return new DeleteWidgetSucceedAction(res); }), catchError(function (err) { return of(new DeleteWidgetFailedAction(err)); }));\r\n        }));\r\n    }\r\n    DeleteWidgetApiEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    DeleteWidgetApiEffects.ctorParameters = function () { return [\r\n        { type: Actions },\r\n        { type: WidgetService }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], DeleteWidgetApiEffects.prototype, \"start$\", void 0);\r\n    return DeleteWidgetApiEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @enum {string} */\r\nvar WidgetsActionTypes = {\r\n    UPSERT: \"[WIDGET][DB] UPSERT\",\r\n    DELETE: \"[WIDGET][DB] DELETE\",\r\n};\r\nvar UpsertWidgetAction = /** @class */ (function () {\r\n    function UpsertWidgetAction(payload) {\r\n        this.payload = payload;\r\n        this.type = WidgetsActionTypes.UPSERT;\r\n    }\r\n    return UpsertWidgetAction;\r\n}());\r\nvar DeleteWidgetAction = /** @class */ (function () {\r\n    function DeleteWidgetAction(payload) {\r\n        this.payload = payload;\r\n        this.type = WidgetsActionTypes.DELETE;\r\n    }\r\n    return DeleteWidgetAction;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar ɵ0 = [];\r\n/** @type {?} */\r\nvar initialState = {\r\n    data: ɵ0\r\n};\r\n/**\r\n * @param {?=} state\r\n * @param {?=} action\r\n * @return {?}\r\n */\r\nfunction Reducer(state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    /** @type {?} */\r\n    var _data;\r\n    switch (action.type) {\r\n        case WidgetsActionTypes.UPSERT:\r\n            _data = state.data.concat();\r\n            /** @type {?} */\r\n            var newWidgets = action.payload;\r\n            if (!(newWidgets instanceof Array)) {\r\n                newWidgets = [newWidgets];\r\n                console.error(\"'WidgetsActionTypes.UPSERT' does not get array payload\");\r\n            }\r\n            newWidgets.forEach(function (newWidget) {\r\n                /** @type {?} */\r\n                var existedWidgetIndex = _data.findIndex(function (w) { return w._id == newWidget._id; });\r\n                if (existedWidgetIndex > -1) {\r\n                    _data.splice(existedWidgetIndex, 1, newWidget);\r\n                }\r\n                else {\r\n                    _data.push(newWidget);\r\n                }\r\n            });\r\n            return __assign({}, state, { data: _data });\r\n        case WidgetsActionTypes.DELETE:\r\n            debugger;\r\n            _data = state.data.concat();\r\n            /** @type {?} */\r\n            var widgetIndex = state.data.findIndex(function (w) { return w._id == action.payload._id; });\r\n            if (widgetIndex > -1) {\r\n                _data.splice(widgetIndex, 1);\r\n            }\r\n            return __assign({}, state, { data: _data });\r\n        default:\r\n            return state;\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nvar WidgetReducer = {\r\n    db: Reducer\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar WidgetDbEffects = /** @class */ (function () {\r\n    function WidgetDbEffects(actions$) {\r\n        this.actions$ = actions$;\r\n        this.Upsert$ = this.actions$\r\n            .ofType(\"[WIDGET][API][GetWidget] succeed\" /* SUCCEED */)\r\n            .pipe(pluck(\"payload\"), map(function (widget) { return new UpsertWidgetAction([widget]); }));\r\n        this.UpsertMany$ = this.actions$\r\n            .ofType(\"[GET_WIDGETS][API][GetWidgets] succeed\" /* SUCCEED */)\r\n            .pipe(pluck(\"payload\"), map(function (widgets) { return new UpsertWidgetAction(widgets); }));\r\n        this.Delete$ = this.actions$\r\n            .ofType(\"[DELETE_WIDGET][API][DeleteWidget] succeed\" /* SUCCEED */)\r\n            .pipe(pluck(\"payload\"), map(function (widget) { return new DeleteWidgetAction(widget); }));\r\n    }\r\n    WidgetDbEffects.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    WidgetDbEffects.ctorParameters = function () { return [\r\n        { type: Actions }\r\n    ]; };\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], WidgetDbEffects.prototype, \"Upsert$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], WidgetDbEffects.prototype, \"UpsertMany$\", void 0);\r\n    __decorate([\r\n        Effect(),\r\n        __metadata(\"design:type\", Object)\r\n    ], WidgetDbEffects.prototype, \"Delete$\", void 0);\r\n    return WidgetDbEffects;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DynamicWidgetConfigDirective = /** @class */ (function () {\r\n    function DynamicWidgetConfigDirective(store, route, service, configurationService, resolver, container) {\r\n        this.store = store;\r\n        this.route = route;\r\n        this.service = service;\r\n        this.configurationService = configurationService;\r\n        this.resolver = resolver;\r\n        this.container = container;\r\n        this._fill_component_map();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DynamicWidgetConfigDirective.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._react_base_on_params();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DynamicWidgetConfigDirective.prototype._fill_component_map = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.configurationService.config$.pipe(map(function (config) { return config.types; }), startWith({})).subscribe(function (types) {\r\n            debugger;\r\n            _this.mapTypeToComponent = types;\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DynamicWidgetConfigDirective.prototype._react_base_on_params = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.route.params.subscribe(function (_a) {\r\n            var type = _a.type, _id = _a._id;\r\n            if (_id) {\r\n                _this.service.selectById(_id).subscribe(function (widget) {\r\n                    _this._resolve_correct_component_base_on_widget_type(type, widget);\r\n                });\r\n            }\r\n            else {\r\n                _this._resolve_correct_component_base_on_widget_type(type);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} type\r\n     * @param {?=} widget\r\n     * @return {?}\r\n     */\r\n    DynamicWidgetConfigDirective.prototype._resolve_correct_component_base_on_widget_type = /**\r\n     * @param {?} type\r\n     * @param {?=} widget\r\n     * @return {?}\r\n     */\r\n    function (type, widget) {\r\n        if (this.component) {\r\n            this.component.destroy();\r\n        }\r\n        if (!this.mapTypeToComponent[type]) {\r\n            /** @type {?} */\r\n            var supportedTypes = Object.keys(this.mapTypeToComponent).join(\", \");\r\n            throw new Error(\"Trying to use an unsupported type (\" + type + \").\\n\\t\\t  \\t\\t Supported types: \" + supportedTypes);\r\n        }\r\n        /** @type {?} */\r\n        var component = this.resolver.resolveComponentFactory(this.mapTypeToComponent[type].upsert);\r\n        this.component = this.container.createComponent(component);\r\n        // this.widget$.subscribe((w) => (this.component.instance.widget = w));\r\n        if (widget)\r\n            this.component.instance.widget = widget;\r\n    };\r\n    DynamicWidgetConfigDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: \"[ngsDynamicWidgetConfig]\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DynamicWidgetConfigDirective.ctorParameters = function () { return [\r\n        { type: Store },\r\n        { type: ActivatedRoute },\r\n        { type: WidgetService },\r\n        { type: WidgetConfigurationService },\r\n        { type: ComponentFactoryResolver },\r\n        { type: ViewContainerRef }\r\n    ]; };\r\n    return DynamicWidgetConfigDirective;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar DynamicWidgetViewDirective = /** @class */ (function () {\r\n    function DynamicWidgetViewDirective(store, route, service, configurationService, resolver, container) {\r\n        this.store = store;\r\n        this.route = route;\r\n        this.service = service;\r\n        this.configurationService = configurationService;\r\n        this.resolver = resolver;\r\n        this.container = container;\r\n        this._fill_component_map();\r\n    }\r\n    Object.defineProperty(DynamicWidgetViewDirective.prototype, \"oid\", {\r\n        set: /**\r\n         * @param {?} id\r\n         * @return {?}\r\n         */\r\n        function (id) {\r\n            this._selectWidget(id);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DynamicWidgetViewDirective.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.widget$.pipe(filter(function (widget) { return widget != undefined; })).subscribe(function (widget) {\r\n            _this._resolve_correct_component_base_on_widget_type(widget);\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    DynamicWidgetViewDirective.prototype._fill_component_map = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this.configurationService.config$.pipe(map(function (config) { return config.types; }), startWith({})).subscribe(function (types) {\r\n            debugger;\r\n            _this.mapTypeToComponent = types;\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    DynamicWidgetViewDirective.prototype._selectWidget = /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    function (id) {\r\n        this.widget$ = this.service.selectById(id);\r\n    };\r\n    /**\r\n     * @param {?} widget\r\n     * @return {?}\r\n     */\r\n    DynamicWidgetViewDirective.prototype._resolve_correct_component_base_on_widget_type = /**\r\n     * @param {?} widget\r\n     * @return {?}\r\n     */\r\n    function (widget) {\r\n        var _this = this;\r\n        if (!this.mapTypeToComponent[widget.type]) {\r\n            /** @type {?} */\r\n            var supportedTypes = Object.keys(this.mapTypeToComponent).join(\", \");\r\n            throw new Error(\"Trying to use an unsupported type (\" + widget.type + \").\\n\\t\\t  \\t\\t Supported types: \" + supportedTypes);\r\n        }\r\n        /** @type {?} */\r\n        var component = this.resolver.resolveComponentFactory(this.mapTypeToComponent[widget.type].view);\r\n        this.component = this.container.createComponent(component);\r\n        this.widget$.subscribe(function (w) { return (_this.component.instance.widget = w); });\r\n    };\r\n    DynamicWidgetViewDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: \"[ngsDynamicWidgetView]\"\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    DynamicWidgetViewDirective.ctorParameters = function () { return [\r\n        { type: Store },\r\n        { type: ActivatedRoute },\r\n        { type: WidgetService },\r\n        { type: WidgetConfigurationService },\r\n        { type: ComponentFactoryResolver },\r\n        { type: ViewContainerRef }\r\n    ]; };\r\n    DynamicWidgetViewDirective.propDecorators = {\r\n        oid: [{ type: Input }]\r\n    };\r\n    return DynamicWidgetViewDirective;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\nvar NgsWidgetModule = /** @class */ (function () {\r\n    function NgsWidgetModule() {\r\n    }\r\n    /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    NgsWidgetModule.forRoot = /**\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    function (config) {\r\n        return {\r\n            ngModule: NgsWidgetRootModule,\r\n            providers: [{ provide: MODULE_CONFIG_TOKEN, useValue: config }, WidgetConfigurationService, WidgetService]\r\n        };\r\n    };\r\n    NgsWidgetModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        RouterModule,\r\n                        MatExpansionModule,\r\n                        MatSnackBarModule,\r\n                        MatIconModule,\r\n                        MatButtonModule,\r\n                        MatCardModule,\r\n                        MatSelectModule,\r\n                        MatInputModule,\r\n                        MatFormFieldModule,\r\n                        MatTabsModule,\r\n                        MatRadioModule,\r\n                        FlexLayoutModule,\r\n                        FormsModule,\r\n                        ReactiveFormsModule,\r\n                        MatSlideToggleModule,\r\n                        MatDividerModule,\r\n                        MatCheckboxModule,\r\n                        MatTableModule,\r\n                        MatMenuModule\r\n                    ],\r\n                    declarations: [\r\n                        RootComponent,\r\n                        WidgetsManagementComponent,\r\n                        UpsertComponent,\r\n                        DynamicWidgetConfigDirective,\r\n                        DynamicWidgetViewDirective,\r\n                        WidgetSelectorComponent,\r\n                        DynamicWidgetViewComponent\r\n                    ],\r\n                    entryComponents: [WidgetSelectorComponent, DynamicWidgetViewComponent],\r\n                    exports: [DynamicWidgetViewDirective, WidgetSelectorComponent, DynamicWidgetViewComponent]\r\n                },] },\r\n    ];\r\n    return NgsWidgetModule;\r\n}());\r\nvar NgsWidgetRootModule = /** @class */ (function () {\r\n    function NgsWidgetRootModule() {\r\n    }\r\n    NgsWidgetRootModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [\r\n                        NgsWidgetModule,\r\n                        WidgetRoutingModule,\r\n                        StoreModule.forFeature(\"widgets\", WidgetReducer),\r\n                        EffectsModule.forFeature([WidgetDbEffects, GetWidgetApiEffects, GetWidgetsApiEffects, UpsertWidgetApiEffects, DeleteWidgetApiEffects])\r\n                    ],\r\n                    exports: [NgsWidgetModule]\r\n                },] },\r\n    ];\r\n    return NgsWidgetRootModule;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @template T\r\n */\r\nvar  /**\r\n * @template T\r\n */\r\nIWidgetView = /** @class */ (function () {\r\n    function IWidgetView() {\r\n    }\r\n    return IWidgetView;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @template T\r\n */\r\nvar  /**\r\n * @template T\r\n */\r\nIWidgetUpsert = /** @class */ (function () {\r\n    function IWidgetUpsert() {\r\n    }\r\n    return IWidgetUpsert;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nexport { UpsertWidgetStartAction, DynamicWidgetViewComponent, WidgetSelectorComponent, NgsWidgetModule, WidgetModel, IWidgetView, IWidgetUpsert, WidgetsManagementComponent as ɵi, RootComponent as ɵh, WidgetDbEffects as ɵo, Reducer as ɵn, DeleteWidgetApiEffects as ɵu, GetWidgetApiEffects as ɵp, GetWidgetsApiEffects as ɵr, UpsertWidgetApiEffects as ɵt, WidgetConfigurationService as ɵg, WidgetService as ɵf, DynamicWidgetConfigDirective as ɵk, UpsertComponent as ɵj, DynamicWidgetViewDirective as ɵl, WidgetRoutingModule as ɵm, MODULE_CONFIG_TOKEN as ɵc, NgsWidgetRootModule as ɵb, WidgetReducer as ɵd };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { environment } from \"src/environments/environment\";\r\n\r\n// tslint:disable-next-line:class-name\r\nexport class env {\r\n\tstatic production = environment.production;\r\n\tstatic frontend_server = environment.frontend_server;\r\n\tstatic server = environment.server;\r\n}\r\n","import { env } from \"./env\";\r\n\r\nexport const NgsAuthenticationModuleConfig = {\r\n\tserver: \"frontend_server\",\r\n\tafterSignoutRedirectTo: \"/auth/signin\",\r\n\tenv\r\n};\r\n","import { env } from \"./env\";\r\n\r\nexport const NgsConfigModuleConfig = {\r\n\tenv\r\n};\r\n","import { env } from \"./env\";\r\n\r\nimport { DiagramModuleConfig } from \"@soushians/diagram\";\r\n\r\nexport class NgsDiagramModuleConfig implements DiagramModuleConfig {\r\n\tstatic env = env;\r\n}\r\n","import { env } from \"./env\";\r\n\r\nexport const NgsFormModuleConfig = {\r\n\tenv\r\n};\r\n","import { env } from \"./env\";\r\n\r\nexport const NgsFrontendAuthenticationModuleConfig = {\r\n\tenv,\r\n\tafterSignoutRedirectTo: \"/login.aspx\",\r\n\tendpoints: {\r\n\t\tsignIn: \"/api/user/signin\",\r\n\t\tsignOut: \"/api/user/signout\",\r\n\t\twhoAmI: \"/api/user/account/profile\"\r\n\t},\r\n\tforms: {\r\n\t\tsignIn: \"5a951cfbfd791632a09b3bc6\"\r\n\t}\r\n};\r\n","import { env } from \"./env\";\r\n\r\nimport { DiagramSelectorComponent, diagramViewComponent } from \"@soushians/diagram\";\r\nimport { DynamicWidgetViewComponent } from \"@soushians/widget\";\r\nimport { WidgetSelectorComponent } from \"@soushians/widget\";\r\n\r\nexport const NgsGridModuleConfig = {\r\n\ttypes: {\r\n\t\twidget: { configComponent: WidgetSelectorComponent, viewComponent: DynamicWidgetViewComponent },\r\n\t\tdiagram: { configComponent: DiagramSelectorComponent, viewComponent: diagramViewComponent }\r\n\t},\r\n\tenv\r\n};\r\n","import { LayoutModuleConfigModel } from \"@soushians/layout\";\r\n\r\nexport class NgsLayoutModuleConfig implements LayoutModuleConfigModel {\r\n\tstatic showMainSidenav = false;\r\n}\r\n// export class ngsLayoutModuleConfig implements LayoutModuleConfigModel {}\r\n","import { env } from \"./env\";\r\n\r\nimport { PageModuleConfig } from \"@soushians/page\";\r\n\r\nexport class NgsPageModuleConfig implements PageModuleConfig {\r\n\tstatic env = env;\r\n}\r\n","import { env } from \"./env\";\r\n\r\nimport { RuleModuleConfig } from \"@soushians/rule\";\r\nimport { IfUserIsAuthenticatedGwtGivenStep, IfUserHaveRoleGwtGivenStep, GwtThenAuthorizeStep } from \"@soushians/gwt-steps\";\r\n\r\nexport class NgsRuleModuleConfig implements RuleModuleConfig {\r\n\tstatic stepClasses = [GwtThenAuthorizeStep, IfUserHaveRoleGwtGivenStep, IfUserIsAuthenticatedGwtGivenStep];\r\n\tstatic env = env;\r\n}\r\n","import { env } from \"./env\";\r\n\r\nexport const NgsSocketModuleConfig = {\r\n\tenv\r\n};\r\n","import { env } from \"./env\";\r\n\r\nimport { UserModuleConfig } from \"@soushians/user\";\r\n\r\nexport class NgsUserModuleConfig implements UserModuleConfig {\r\n\tstatic env = env;\r\n}\r\n","import { env } from \"./env\";\r\n\r\nimport { WidgetModuleConfig } from \"@soushians/widget\";\r\n\r\nimport {\r\n\tArticleViewComponent,\r\n\tArticleUpsertComponent,\r\n\tLinksViewComponent,\r\n\tLinksUpsertComponent,\r\n\tListViewComponent,\r\n\tListUpsertComponent\r\n} from \"@soushians/widget-types\";\r\n\r\nexport class NgsWidgetModuleConfig implements WidgetModuleConfig {\r\n\tstatic env = env;\r\n\tstatic types = {\r\n\t\tarticle: {\r\n\t\t\tview: ArticleViewComponent,\r\n\t\t\tupsert: ArticleUpsertComponent\r\n\t\t},\r\n\t\tlinks: {\r\n\t\t\tview: LinksViewComponent,\r\n\t\t\tupsert: LinksUpsertComponent\r\n\t\t},\r\n\t\tlist: {\r\n\t\t\tview: ListViewComponent,\r\n\t\t\tupsert: ListUpsertComponent\r\n\t\t}\r\n\t};\r\n}\r\n","/*\r\n * Public API Surface of configs\r\n */\r\n\r\nexport * from \"./lib/lib-configs/env\";\r\nexport * from \"./lib/lib-configs/ngs-authentication.module-config\";\r\nexport * from \"./lib/lib-configs/ngs-config.module-config\";\r\nexport * from \"./lib/lib-configs/ngs-diagram.module-config\";\r\nexport * from \"./lib/lib-configs/ngs-form.module-config\";\r\nexport * from \"./lib/lib-configs/ngs-frontend-authentication.module-config\";\r\nexport * from \"./lib/lib-configs/ngs-grid.module-config\";\r\nexport * from \"./lib/lib-configs/ngs-layout.module-config\";\r\nexport * from \"./lib/lib-configs/ngs-rule.module-config\";\r\nexport * from \"./lib/lib-configs/ngs-socket.module-config\";\r\nexport * from \"./lib/lib-configs/ngs-user.module-config\";\r\nexport * from \"./lib/lib-configs/ngs-widget.module-config\";\r\nexport * from \"./lib/lib-configs/ngs-page.module-config\";\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes, PreloadAllModules } from \"@angular/router\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"\",\r\n\t\tredirectTo: \"/dashboard\",\r\n\t\tpathMatch: \"full\"\r\n\t}\r\n];\r\n\r\nexport const AppRoutingModule: ModuleWithProviders = RouterModule.forRoot(routes, {\r\n\tenableTracing: false,\r\n\tpreloadingStrategy: PreloadAllModules\r\n});\r\n","module.exports = \"<layout-main [app-config]=\\\"app_config | async\\\"></layout-main>\\r\\n<span i18n=\\\"@@test\\\">rwea</span>\\r\\n\\r\\n<!-- <gwt-mode-button></gwt-mode-button> -->\"","module.exports = \"#purchase-fab-button {\\n  position: fixed;\\n  bottom: 23px;\\n  left: 31px; }\\n\\nmd-progress-bar {\\n  position: absolute !important; }\\n\\n.with-margin #app-main-container {\\n  margin-top: 25px;\\n  padding-right: 25px;\\n  padding-left: 25px; }\\n\\n.second_sidebar {\\n  width: 380px; }\\n\\n.more-detail {\\n  margin: 8px;\\n  box-sizing: border-box;\\n  padding: 10px;\\n  text-align: center;\\n  width: 96%;\\n  border: 1px solid #dedede;\\n  outline: 0;\\n  cursor: pointer;\\n  transition: all .3s ease; }\\n\\n.more-detail:hover {\\n    background: #eee; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvRTpcXEBuZzItc3RhcnRlclxcc3RhcnRlclxcY2xpZW50L3NyY1xcYXBwXFxhcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBZTtFQUNmLGFBQVk7RUFDWixXQUFVLEVBQ2I7O0FBRUQ7RUFDSSw4QkFBNkIsRUFDaEM7O0FBQ0Q7RUFDSSxpQkFBZTtFQUNmLG9CQUFrQjtFQUNsQixtQkFBaUIsRUFDcEI7O0FBRUQ7RUFDRSxhQUFZLEVBQ2I7O0FBRUQ7RUFDRSxZQUFXO0VBQ1gsdUJBQXNCO0VBQ3RCLGNBQWE7RUFDYixtQkFBa0I7RUFDbEIsV0FBUztFQUNULDBCQUF5QjtFQUN6QixXQUFVO0VBQ1YsZ0JBQWU7RUFDZix5QkFBd0IsRUFJekI7O0FBYkQ7SUFXSSxpQkFBZ0IsRUFDakIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjcHVyY2hhc2UtZmFiLWJ1dHRvbiB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBib3R0b206IDIzcHg7XHJcbiAgICBsZWZ0OiAzMXB4O1xyXG59XHJcblxyXG5tZC1wcm9ncmVzcy1iYXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XHJcbn1cclxuLndpdGgtbWFyZ2luICNhcHAtbWFpbi1jb250YWluZXJ7XHJcbiAgICBtYXJnaW4tdG9wOjI1cHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OjI1cHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6MjVweDtcclxufVxyXG5cclxuLnNlY29uZF9zaWRlYmFyIHtcclxuICB3aWR0aDogMzgwcHg7XHJcbn1cclxuXHJcbi5tb3JlLWRldGFpbCB7XHJcbiAgbWFyZ2luOiA4cHg7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3aWR0aDo5NiU7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RlZGVkZTtcclxuICBvdXRsaW5lOiAwO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB0cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2U7XHJcbiAgJjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZWVlO1xyXG4gIH1cclxufVxyXG5cclxuXHJcbiJdfQ== */\"","import { Observable } from \"rxjs/Observable\";\r\nimport { Component } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { ConfigModel, getAppConfig } from \"@soushians/config\";\r\nimport { ChangeToolbatToComfortableModeAction } from \"@soushians/layout\";\r\n\r\nimport { AppState } from \"./app.reducers\";\r\nimport { SocketService } from \"@soushians/socket\";\r\n\r\n@Component({\r\n\tselector: \"app-root\",\r\n\ttemplateUrl: \"./app.component.html\",\r\n\tstyleUrls: [ \"./app.component.scss\" ]\r\n})\r\nexport class AppComponent {\r\n\tapp_config: Observable<ConfigModel<any>>;\r\n\r\n\tconstructor(private store: Store<AppState>, private socketService: SocketService) {\r\n\t\tthis.app_config = this.store.select(getAppConfig);\r\n\t\t// debugger;\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.store.dispatch(new ChangeToolbatToComfortableModeAction());\r\n\t\t}, 3000);\r\n\t}\r\n}\r\n","import { NgModule, LOCALE_ID } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n// import { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n// import { ServiceWorkerModule } from \"@angular/service-worker\";\r\nimport { StoreModule, Store } from \"@ngrx/store\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\nimport { TranslateModule, TranslateService } from \"@ngx-translate/core\";\r\n\r\n/**\r\n *  ngs module\r\n * */\r\nimport { NgsFrontendAuthenticationModule } from \"@soushians/frontend-authentication\";\r\nimport { NgsAuthenticationModule } from \"@soushians/authentication\";\r\nimport { NgsUserModule, NgsUserRoutingModule } from \"@soushians/user\";\r\nimport { NgsWidgetTypesModule } from \"@soushians/widget-types\";\r\nimport { NgsDiagramModule } from \"@soushians/diagram\";\r\nimport { NgsSocketModule } from \"@soushians/socket\";\r\nimport { NgsLayoutModule } from \"@soushians/layout\";\r\nimport { NgsConfigModule } from \"@soushians/config\";\r\nimport { NgsWidgetModule } from \"@soushians/widget\";\r\nimport { SharedModule } from \"@soushians/shared\";\r\nimport { SourceModule } from \"@soushians/source\";\r\nimport { NgsPageModule } from \"@soushians/page\";\r\nimport { NgsFormModule } from \"@soushians/form\";\r\nimport { NgsGridModule } from \"@soushians/grid\";\r\nimport { RuleModule } from \"@soushians/rule\";\r\nimport { GwtStepsModule } from \"@soushians/gwt-steps\";\r\n\r\n/**\r\n *  module configs\r\n * */\r\nimport {\r\n\tNgsFrontendAuthenticationModuleConfig,\r\n\tNgsAuthenticationModuleConfig,\r\n\tNgsDiagramModuleConfig,\r\n\tNgsLayoutModuleConfig,\r\n\tNgsConfigModuleConfig,\r\n\tNgsWidgetModuleConfig,\r\n\tNgsSocketModuleConfig,\r\n\tNgsGridModuleConfig,\r\n\tNgsRuleModuleConfig,\r\n\tNgsUserModuleConfig,\r\n\tNgsFormModuleConfig,\r\n\tNgsPageModuleConfig\r\n} from \"configs\";\r\n\r\nimport { AppComponent } from \"./app.component\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { reducers } from \"./app.reducers\";\r\n\r\nimport { DashboardModule } from \"./dashboard/dashboard.module\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tStoreModule.forRoot(reducers),\r\n\t\tStoreDevtoolsModule.instrument({\r\n\t\t\tmaxAge: 25\r\n\t\t}),\r\n\t\tEffectsModule.forRoot([]),\r\n\t\tTranslateModule.forRoot(),\r\n\r\n\t\tSharedModule,\r\n\t\tSourceModule,\r\n\t\t// NgsFrontendAuthenticationModule.forRoot(NgsFrontendAuthenticationModuleConfig),\r\n\t\tNgsAuthenticationModule.forRoot(NgsAuthenticationModuleConfig),\r\n\t\tNgsDiagramModule.forRoot(NgsDiagramModuleConfig),\r\n\t\tNgsLayoutModule.forRoot(NgsLayoutModuleConfig),\r\n\t\tNgsConfigModule.forRoot(NgsConfigModuleConfig),\r\n\t\tNgsSocketModule.forRoot(NgsSocketModuleConfig),\r\n\t\tNgsWidgetModule.forRoot(NgsWidgetModuleConfig),\r\n\t\tNgsUserModule.forRoot(NgsUserModuleConfig),\r\n\t\tNgsGridModule.forRoot(NgsGridModuleConfig),\r\n\t\tNgsFormModule.forRoot(NgsFormModuleConfig),\r\n\t\tRuleModule.forRoot(NgsRuleModuleConfig),\r\n\t\tNgsPageModule.forRoot(NgsPageModuleConfig),\r\n\t\tNgsUserRoutingModule,\r\n\t\tGwtStepsModule,\r\n\r\n\t\tNgsWidgetTypesModule,\r\n\r\n\t\tDashboardModule,\r\n\t\tAppRoutingModule\r\n\t],\r\n\tdeclarations: [ AppComponent ],\r\n\tproviders: [\r\n\t\t// { provide: LOCALE_ID, useValue: 'fa-IR' },\r\n\t],\r\n\tbootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule {\r\n\tconstructor(private translateService: TranslateService) {\r\n\t\tthis.translateService.setDefaultLang(\"fa\");\r\n\t}\r\n}\r\n","import { ActionReducerMap, createSelector, createFeatureSelector, ActionReducer } from \"@ngrx/store\";\r\n\r\nexport interface AppState {}\r\n\r\nexport const reducers: ActionReducerMap<AppState> = {};\r\n","﻿import { ModuleWithProviders } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './smart-components/dashboard/dashboard.component';\r\n\r\nconst routes: Routes = [\r\n        {\r\n                path: 'dashboard',\r\n                component: DashboardComponent\r\n        }\r\n];\r\n//{ path: '**', component: PageNotFoundComponent }\r\n\r\n\r\nexport const DashboardRoutingModule: ModuleWithProviders = RouterModule.forChild(routes);","﻿import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { SharedModule } from \"@soushians/shared\";\r\nimport { NgsWidgetModule } from \"@soushians/widget\";\r\n\r\nimport { DashboardRoutingModule } from \"./dashboard-routing.module\";\r\nimport { DashboardComponent } from \"./smart-components/dashboard/dashboard.component\";\r\nimport { NgsGridModule } from \"@soushians/grid\";\r\n\r\n@NgModule({\r\n\timports: [ CommonModule, SharedModule, DashboardRoutingModule, NgsWidgetModule, NgsGridModule ],\r\n\tdeclarations: [ DashboardComponent ],\r\n\tproviders: []\r\n})\r\nexport class DashboardModule {}\r\n","module.exports = \"#box-left {\\r\\n    background: #2B0033;\\r\\n    background: #fff;\\r\\n    /*height:1200px;*/\\r\\n}\\r\\n\\r\\n#box-bottom {\\r\\n    background: #2B0033;\\r\\n    /*height:1200px;*/\\r\\n}\\r\\n\\r\\n#box-right {\\r\\n    background: #000833;\\r\\n    /*height:1200px;*/\\r\\n    padding-top: 10px !important;\\r\\n    padding-bottom: 10px !important;\\r\\n}\\r\\n\\r\\n#box-right div {\\r\\n    background: #fff;\\r\\n    opacity: 0.5;\\r\\n}\\r\\n\\r\\n#banner:not(.active) {\\r\\n    height: 100%;\\r\\n    -webkit-filter:grayscale(100%) brightness(1.5) opacity(0.2) blur(2px);\\r\\n            filter:grayscale(100%) brightness(1.5) opacity(0.2) blur(2px);\\r\\n}\\r\\n\\r\\n#s1 {\\r\\n    background: #aaa;\\r\\n}\\r\\n\\r\\n#s2 {\\r\\n    background: #bbb;\\r\\n}\\r\\n\\r\\n#s3 {\\r\\n    background: #ccc;\\r\\n}\\r\\n\\r\\n.personal-info {\\r\\n    background-color: rgba(255, 255, 255, 0.5);\\r\\n    position: relative;\\r\\n    right: 10%;\\r\\n    width: 90%;\\r\\n    height: 469px;\\r\\n}\\r\\n\\r\\n.personal-info h2 {\\r\\n    color: #00bcd4;\\r\\n    font-weight: normal;\\r\\n    font-size: 24px;\\r\\n    font-family: 'iran-sans-light' !important;\\r\\n}\\r\\n\\r\\n.personal-info h6 {\\r\\n    font-weight: normal;\\r\\n    font-size: 12px;\\r\\n    float: right;\\r\\n    width: 50%;\\r\\n    margin: 0;\\r\\n    color: #555;\\r\\n    border-bottom: 2px solid #ececec;\\r\\n}\\r\\n\\r\\n.personal-info p {\\r\\n    float: right;\\r\\n    width: 30%;\\r\\n    margin: 0;\\r\\n    font-size: 13px;\\r\\n    padding-right: 30px;\\r\\n    border-bottom: 2px solid #ececec;\\r\\n}\\r\\n\\r\\n.personal-info div {\\r\\n    width: 100%;\\r\\n    height: 50px;\\r\\n    position: relative;\\r\\n    line-height: 52px;\\r\\n    right: 17px;\\r\\n}\\r\\n\\r\\n.personal-info-inner {}\\r\\n\\r\\n.quick-box {\\r\\n    width: 100%;\\r\\n    height: 50px;\\r\\n    position: relative;\\r\\n    line-height: 52px;\\r\\n    padding-top: 79px;\\r\\n}\\r\\n\\r\\n.quick-btn {\\r\\n    background-color: #00bcd4;\\r\\n    margin: 12px 10px;\\r\\n    height: 100px;\\r\\n    text-align: center;\\r\\n    line-height: 100px;\\r\\n    font-size: 17px;\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\n.banner-section {\\r\\n    text-align: center;\\r\\n    /*background-color: #f6882f;*/\\r\\n    /*filter:grayscale(100%);*/\\r\\n}\\r\\n\\r\\n.info-section {\\r\\n    padding: 10px 25px;\\r\\n    padding-top: 60px;\\r\\n    background-color: #f7f7f7;\\r\\n    background-image: url('https://www.toptal.com/designers/subtlepatterns/patterns/grey.png') !important;\\r\\n    height: 1040px;\\r\\n    padding-bottom: 120px !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL3NtYXJ0LWNvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksb0JBQW9CO0lBQ3BCLGlCQUFpQjtJQUNqQixrQkFBa0I7Q0FDckI7O0FBRUQ7SUFDSSxvQkFBb0I7SUFDcEIsa0JBQWtCO0NBQ3JCOztBQUVEO0lBQ0ksb0JBQW9CO0lBQ3BCLGtCQUFrQjtJQUNsQiw2QkFBNkI7SUFDN0IsZ0NBQWdDO0NBQ25DOztBQUVEO0lBQ0ksaUJBQWlCO0lBQ2pCLGFBQWE7Q0FDaEI7O0FBRUQ7SUFDSSxhQUFhO0lBQ2Isc0VBQThEO1lBQTlELDhEQUE4RDtDQUNqRTs7QUFFRDtJQUNJLGlCQUFpQjtDQUNwQjs7QUFFRDtJQUNJLGlCQUFpQjtDQUNwQjs7QUFFRDtJQUNJLGlCQUFpQjtDQUNwQjs7QUFFRDtJQUNJLDJDQUEyQztJQUMzQyxtQkFBbUI7SUFDbkIsV0FBVztJQUNYLFdBQVc7SUFDWCxjQUFjO0NBQ2pCOztBQUVEO0lBQ0ksZUFBZTtJQUNmLG9CQUFvQjtJQUNwQixnQkFBZ0I7SUFDaEIsMENBQTBDO0NBQzdDOztBQUVEO0lBQ0ksb0JBQW9CO0lBQ3BCLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsV0FBVztJQUNYLFVBQVU7SUFDVixZQUFZO0lBQ1osaUNBQWlDO0NBQ3BDOztBQUVEO0lBQ0ksYUFBYTtJQUNiLFdBQVc7SUFDWCxVQUFVO0lBQ1YsZ0JBQWdCO0lBQ2hCLG9CQUFvQjtJQUNwQixpQ0FBaUM7Q0FDcEM7O0FBRUQ7SUFDSSxZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsWUFBWTtDQUNmOztBQUVELHVCQUF1Qjs7QUFFdkI7SUFDSSxZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsa0JBQWtCO0NBQ3JCOztBQUVEO0lBQ0ksMEJBQTBCO0lBQzFCLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsWUFBWTtDQUNmOztBQUVEO0lBQ0ksbUJBQW1CO0lBQ25CLDhCQUE4QjtJQUM5QiwyQkFBMkI7Q0FDOUI7O0FBRUQ7SUFDSSxtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLDBCQUEwQjtJQUMxQixzR0FBc0c7SUFDdEcsZUFBZTtJQUNmLGlDQUFpQztDQUNwQyIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9zbWFydC1jb21wb25lbnRzL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNib3gtbGVmdCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMkIwMDMzO1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgIC8qaGVpZ2h0OjEyMDBweDsqL1xyXG59XHJcblxyXG4jYm94LWJvdHRvbSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMkIwMDMzO1xyXG4gICAgLypoZWlnaHQ6MTIwMHB4OyovXHJcbn1cclxuXHJcbiNib3gtcmlnaHQge1xyXG4gICAgYmFja2dyb3VuZDogIzAwMDgzMztcclxuICAgIC8qaGVpZ2h0OjEyMDBweDsqL1xyXG4gICAgcGFkZGluZy10b3A6IDEwcHggIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbiNib3gtcmlnaHQgZGl2IHtcclxuICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgICBvcGFjaXR5OiAwLjU7XHJcbn1cclxuXHJcbiNiYW5uZXI6bm90KC5hY3RpdmUpIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGZpbHRlcjpncmF5c2NhbGUoMTAwJSkgYnJpZ2h0bmVzcygxLjUpIG9wYWNpdHkoMC4yKSBibHVyKDJweCk7XHJcbn1cclxuXHJcbiNzMSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjYWFhO1xyXG59XHJcblxyXG4jczIge1xyXG4gICAgYmFja2dyb3VuZDogI2JiYjtcclxufVxyXG5cclxuI3MzIHtcclxuICAgIGJhY2tncm91bmQ6ICNjY2M7XHJcbn1cclxuXHJcbi5wZXJzb25hbC1pbmZvIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHJpZ2h0OiAxMCU7XHJcbiAgICB3aWR0aDogOTAlO1xyXG4gICAgaGVpZ2h0OiA0NjlweDtcclxufVxyXG5cclxuLnBlcnNvbmFsLWluZm8gaDIge1xyXG4gICAgY29sb3I6ICMwMGJjZDQ7XHJcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgZm9udC1mYW1pbHk6ICdpcmFuLXNhbnMtbGlnaHQnICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5wZXJzb25hbC1pbmZvIGg2IHtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgY29sb3I6ICM1NTU7XHJcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2VjZWNlYztcclxufVxyXG5cclxuLnBlcnNvbmFsLWluZm8gcCB7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICB3aWR0aDogMzAlO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgZm9udC1zaXplOiAxM3B4O1xyXG4gICAgcGFkZGluZy1yaWdodDogMzBweDtcclxuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZWNlY2VjO1xyXG59XHJcblxyXG4ucGVyc29uYWwtaW5mbyBkaXYge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBsaW5lLWhlaWdodDogNTJweDtcclxuICAgIHJpZ2h0OiAxN3B4O1xyXG59XHJcblxyXG4ucGVyc29uYWwtaW5mby1pbm5lciB7fVxyXG5cclxuLnF1aWNrLWJveCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGxpbmUtaGVpZ2h0OiA1MnB4O1xyXG4gICAgcGFkZGluZy10b3A6IDc5cHg7XHJcbn1cclxuXHJcbi5xdWljay1idG4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYmNkNDtcclxuICAgIG1hcmdpbjogMTJweCAxMHB4O1xyXG4gICAgaGVpZ2h0OiAxMDBweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGxpbmUtaGVpZ2h0OiAxMDBweDtcclxuICAgIGZvbnQtc2l6ZTogMTdweDtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG4uYmFubmVyLXNlY3Rpb24ge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgLypiYWNrZ3JvdW5kLWNvbG9yOiAjZjY4ODJmOyovXHJcbiAgICAvKmZpbHRlcjpncmF5c2NhbGUoMTAwJSk7Ki9cclxufVxyXG5cclxuLmluZm8tc2VjdGlvbiB7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDI1cHg7XHJcbiAgICBwYWRkaW5nLXRvcDogNjBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmN2Y3Zjc7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vd3d3LnRvcHRhbC5jb20vZGVzaWduZXJzL3N1YnRsZXBhdHRlcm5zL3BhdHRlcm5zL2dyZXkucG5nJykgIWltcG9ydGFudDtcclxuICAgIGhlaWdodDogMTA0MHB4O1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEyMHB4ICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\"","module.exports = \"<ngs-grid oid=\\\"5b391bb4e35b4954802739db\\\"></ngs-grid>\"","﻿import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n\tselector: \"app-dashboard\",\r\n\ttemplateUrl: \"./dashboard.component.html\",\r\n\tstyleUrls: [ \"./dashboard.component.css\" ]\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\tconstructor() {}\r\n\r\n\tngOnInit() {\r\n\t\t// this.socketService.initSocket();\r\n\t\t// this.socketService.send(\"add-message\");\r\n\t\t// this.socketService.onMessage().subscribe(msg=>{\r\n\t\t//         debugger\r\n\t\t// });\r\n\t}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\nexport const environment = {\r\n\tproduction: false,\r\n\tfrontend_server: \"http://localhost:3000\",\r\n\tserver: \"http://localhost:3000\"\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\n\r\nimport { AppModule } from \"./app/app.module\";\r\nimport { environment } from \"./environments/environment\";\r\n\r\nif (environment.production) {\r\n\tenableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule).catch(err => console.log(err));\r\n"],"sourceRoot":""}