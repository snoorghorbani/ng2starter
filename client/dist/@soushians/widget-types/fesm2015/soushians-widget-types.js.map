{"version":3,"file":"soushians-widget-types.js.map","sources":["ng://@soushians/widget-types/lib/article/article-upsert/article-upsert.component.ts","ng://@soushians/widget-types/lib/article/article-view/article-view.component.ts","ng://@soushians/widget-types/lib/links/links-upsert/links-upsert.component.ts","ng://@soushians/widget-types/lib/links/links-view/links-view.component.ts","ng://@soushians/widget-types/lib/list/list-view/list-view.component.ts","ng://@soushians/widget-types/lib/list/list-upsert/list-upsert.component.ts","ng://@soushians/widget-types/lib/widget-types.module.ts"],"sourcesContent":["import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormControl, FormGroup } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { UpsertWidgetStartAction, WidgetModel, IWidgetUpsert } from \"@soushians/widget\";\r\n\r\nimport { ArticleWidgetConfigModel } from \"../article-widget-config.model\";\r\n\r\n@Component({\r\n\tselector: \"widget-article-upsert\",\r\n\ttemplate: `<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title fxLayout=\"row\" fxLayoutGap=\"5px\">\r\n      <mat-icon>gradient</mat-icon>\r\n      <span>Ø§ÛØ¬Ø§Ø¯ Ø§ÙØ²ÙÙÙâ</span>\r\n    </mat-card-title>\r\n    <!-- <mat-card-subtitle fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <span>\r\n        Ø§ÙØ²ÙÙÙâ ÙÙØ±Ø¯ ÙØ¸Ø± Ø±Ø§ Ø¨Ø±Ø§Ø³Ø§Ø³ ÙÙØ¹ Ø¢Ù Ø§ÛØ¬Ø§Ø¯ ÙÙØ§ÛÛØ¯ ...\r\n      </span>\r\n    </mat-card-subtitle> -->\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <h3>ÙØ§Ù Ø§ÙØ²ÙÙÙ</h3>\r\n    <div [formGroup]=\"widgetFormGroup\">\r\n      <mat-form-field>\r\n        <input type=\"text\" matInput placeholder=\"ÙØ§Ù\" formControlName=\"name\">\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n    <h3>ÙØªÙ Ø§ÙØ²ÙÙÙ</h3>\r\n    <div [formGroup]=\"configFormGroup\">\r\n      <div [froalaEditor] formControlName=\"content\"></div>\r\n    </div>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button mat-button color=\"primary\" (click)=\"upsert()\">Add</button>\r\n  </mat-card-actions>\r\n</mat-card>`,\r\n\tstyles: [``]\r\n})\r\nexport class ArticleUpsertComponent implements OnInit, IWidgetUpsert<ArticleWidgetConfigModel> {\r\n\t@Input() widget: WidgetModel<ArticleWidgetConfigModel>;\r\n\twidgetFormGroup: FormGroup;\r\n\tconfigFormGroup: FormGroup;\r\n\tconstructor(private store: Store<any>) {\r\n\t\tthis._createFormGroup();\r\n\t\tthis.widget = new WidgetModel<ArticleWidgetConfigModel>({ type: \"article\" });\r\n\t}\r\n\r\n\tupsert() {\r\n\t\tconst widget = {\r\n\t\t\t...this.widget,\r\n\t\t\t...this.widgetFormGroup.value,\r\n\t\t\tConfig: this.configFormGroup.value\r\n\t\t};\r\n\t\tthis.store.dispatch(new UpsertWidgetStartAction(widget));\r\n\t}\r\n\tngOnInit() {\r\n\t\tif (this.widget != undefined) {\r\n\t\t\tthis.widgetFormGroup.patchValue(this.widget);\r\n\t\t\tthis.configFormGroup.patchValue(this.widget.Config);\r\n\t\t}\r\n\t}\r\n\r\n\t_createFormGroup() {\r\n\t\tthis.configFormGroup = new FormGroup({\r\n\t\t\tcontent: new FormControl(\"\")\r\n\t\t});\r\n\t\tthis.widgetFormGroup = new FormGroup({\r\n\t\t\tname: new FormControl(\"\")\r\n\t\t});\r\n\t}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { WidgetModel, IWidgetView } from \"@soushians/widget\";\r\nimport { getFrontendAuthenticationState } from \"@soushians/frontend-authentication\";\r\n\r\nimport { ArticleWidgetConfigModel } from \"../article-widget-config.model\";\r\n\r\n@Component({\r\n\tselector: \"widget-article-view\",\r\n\ttemplate: `<div fxLayout=\"row\" fxFlex=\"100\" fxLayoutAlign=\"center start\">\r\n  <button mat-mini-fab color=\"accent\" *ngIf=\"havePermission$ | async\" [routerLink]=\"['/widget/upsert/article', (widget)?._id]\">\r\n    <mat-icon>edit</mat-icon>\r\n  </button>\r\n\r\n  <div fxFlex=\"90\" [froalaView]=\"(widget)?.Config.content\" align=\"right\" class=\"article\"></div>\r\n</div>`,\r\n\tstyles: [`:host{position:relative;display:block}.mat-mini-fab{position:absolute;top:-20px;right:-20px}.article{direction:rtl;text-align:right;padding-top:25px}`]\r\n})\r\nexport class ArticleViewComponent implements OnInit, IWidgetView<ArticleWidgetConfigModel> {\r\n\t// tslint:disable-next-line:no-input-rename\r\n\twidget: WidgetModel<ArticleWidgetConfigModel>;\r\n\thavePermission$: Observable<boolean>;\r\n\tconstructor(private store: Store<any>) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.havePermission$ = this.store.select(getFrontendAuthenticationState);\r\n\t}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormControl, FormGroup, FormArray } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { UpsertWidgetStartAction, WidgetModel, IWidgetUpsert } from \"@soushians/widget\";\r\n\r\nimport { LinksWidgetConfigModel, LinkItem } from \"../links-widget-config.model\";\r\n\r\n@Component({\r\n\tselector: \"widget-links-upsert\",\r\n\ttemplate: `<mat-card fxFlex>\r\n  <mat-card-header>\r\n    <mat-card-title fxLayout=\"row\" fxLayoutGap=\"5px\">\r\n      <mat-icon>gradient</mat-icon>\r\n      <span>Ø§ÛØ¬Ø§Ø¯ Ø§ÙØ²ÙÙÙâ</span>\r\n    </mat-card-title>\r\n    <mat-card-subtitle fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <span>\r\n        ÙØ§Ù ÙÛÙÚ© ÙÙØ±Ø¯ÙØ¸Ø± Ø±Ø§ ÙØ§Ø±Ø¯ Ú©Ø±Ø¯Ù Ù Ø§Ø·ÙØ§Ø¹Ø§Øª Ø±Ø§ Ú©Ø§ÙÙ ÙÙØ§ÛÛØ¯ ...\r\n      </span>\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <h3>ÙØ§Ù ÙÛØ¬Øª</h3>\r\n    <div [formGroup]=\"widgetFormGroup\">\r\n      <mat-form-field>\r\n        <input type=\"text\" matInput placeholder=\"ÙØ§Ù\" formControlName=\"name\">\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n    <br>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <h3>ØªÙØ¸ÛÙØ§Øª ÙÛØ¬Øª</h3>\r\n      <button color=\"primary\" mat-fab fxFlexAlign=\"end\" (click)=\"addlink()\">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div [formGroup]=\"configFormGroup\">\r\n      <div fxFlex=\"nogrow\" *ngFor=\"let ctrl of $any(configFormGroup.get('links')).controls; let idx = index\"\r\n        [formGroup]=\"ctrl\">\r\n        <div [formGroup]=\"ctrl\" fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n          <button mat-icon-button fxFlex=\"nogrow\" (click)=\"removelink(idx)\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n          <mat-form-field fxFlex>\r\n            <input type=\"text\" matInput placeholder=\"Ø¢Ø¯Ø±Ø³\" formControlName=\"url\">\r\n          </mat-form-field>\r\n          <mat-form-field fxFlex>\r\n            <input type=\"text\" matInput placeholder=\"ÙØ§Ù\" formControlName=\"label\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button mat-button color=\"primary\" (click)=\"upsert()\">Ø«Ø¨Øª</button>\r\n  </mat-card-actions>\r\n</mat-card>`,\r\n\tstyles: [``]\r\n})\r\nexport class LinksUpsertComponent implements OnInit, IWidgetUpsert<LinksWidgetConfigModel> {\r\n\t@Input() widget: WidgetModel<LinksWidgetConfigModel>;\r\n\twidgetFormGroup: FormGroup;\r\n\tconfigFormGroup: FormGroup;\r\n\tconstructor(private store: Store<any>) {\r\n\t\tthis._createFormGroup();\r\n\t\tthis.widget = new WidgetModel<LinksWidgetConfigModel>({ type: \"links\" });\r\n\t}\r\n\r\n\tupsert() {\r\n\t\tconst widget = {\r\n\t\t\t...this.widget,\r\n\t\t\t...this.widgetFormGroup.value,\r\n\t\t\tConfig: this.configFormGroup.value\r\n\t\t};\r\n\t\tthis.store.dispatch(new UpsertWidgetStartAction(widget));\r\n\t}\r\n\tngOnInit() {\r\n\t\tif (this.widget != undefined) {\r\n\t\t\tthis.widgetFormGroup.patchValue(this.widget);\r\n\t\t\tthis.configFormGroup.patchValue(this.widget.Config);\r\n\t\t\tdebugger;\r\n\t\t\tthis._update_links(this.widget.Config.links);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * view methods\r\n\t */\r\n\taddlink() {\r\n\t\t(this.configFormGroup.get(\"links\") as FormArray).push(this._get_new_empty_link_item());\r\n\t}\r\n\tremovelink(link) {\r\n\t\tdebugger;\r\n\t\tconst data = this.configFormGroup.get(\"links\") as FormArray;\r\n\t\tif (data.controls.length > -1) {\r\n\t\t\tdata.removeAt(link);\r\n\t\t} else {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * private methods\r\n\t */\r\n\r\n\t_createFormGroup() {\r\n\t\tthis.configFormGroup = new FormGroup({\r\n\t\t\tlinks: new FormArray([])\r\n\t\t});\r\n\t\tthis.widgetFormGroup = new FormGroup({\r\n\t\t\tname: new FormControl(\"\")\r\n\t\t});\r\n\t}\r\n\t_get_new_empty_link_item() {\r\n\t\treturn new FormGroup({\r\n\t\t\turl: new FormControl(\"/\"),\r\n\t\t\tlabel: new FormControl(\"\")\r\n\t\t});\r\n\t}\r\n\t_update_links(links: LinkItem[]) {\r\n\t\t(this.configFormGroup.get(\"links\") as FormArray).reset();\r\n\t\tlinks.forEach((link) => {\r\n\t\t\tconst _link = this._get_new_empty_link_item();\r\n\t\t\t_link.patchValue(link);\r\n\t\t\t(this.configFormGroup.get(\"links\") as FormArray).push(_link);\r\n\t\t});\r\n\t}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { WidgetModel, IWidgetView } from \"@soushians/widget\";\r\nimport { getFrontendAuthenticationState } from \"@soushians/frontend-authentication\";\r\n\r\nimport { LinksWidgetConfigModel } from \"../links-widget-config.model\";\r\n\r\n@Component({\r\n\tselector: \"widget-links-view\",\r\n\ttemplate: `<div fxLayout=\"column\">\r\n  <div class=\"actions\" fxLayout=\"row\" fxFlex fxLayoutAlign=\"end\">\r\n    <button fxFlex=\"nogrow\" mat-icon-button color=\"primary\" *ngIf=\"havePermission$ | async\" [routerLink]=\"['/widget/upsert/links', (widget)?._id]\">\r\n      <mat-icon>edit</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div fxLayout=\"row\" fxFlex fxLayoutAlign=\"end\">\r\n    <h3>\r\n      {{widget.name}}\r\n    </h3>\r\n  </div>\r\n  <mat-list fxLayout=\"column\" fxFlex=\"100\">\r\n    <mat-list-item fxLayout=\"column\" *ngFor=\"let link of (widget)?.Config.links\" fxFlex=\"100\">\r\n      <mat-icon mat-list-icon>link</mat-icon>\r\n      <a fxLayout=\"row\" *ngIf=\"!link.isExternal\" fxFlex=\"grow\" [routerLink]=\"[link.url]\">\r\n        {{link.label}}\r\n      </a>\r\n      <a fxLayout=\"row\" *ngIf=\"link.isExternal\" target=\"_blank\" fxFlex=\"grow\" [href]=\"link.url\">\r\n        {{link.label}}\r\n      </a>\r\n    </mat-list-item>\r\n  </mat-list>\r\n</div>`,\r\n\tstyles: [`:host{position:relative;height:100%;display:block}:host:hover .actions{opacity:1;visibility:visible}mat-list a{text-decoration:none}.actions{transition:opacity .4s ease-in-out;opacity:0;visibility:hidden}.actions mat-icon{color:#121212}h3{padding-right:20px}`]\r\n})\r\nexport class LinksViewComponent implements OnInit, IWidgetView<LinksWidgetConfigModel> {\r\n\t// tslint:disable-next-line:no-input-rename\r\n\t_widget: WidgetModel<LinksWidgetConfigModel>;\r\n\tset widget(widget: WidgetModel<LinksWidgetConfigModel>) {\r\n\t\tdebugger;\r\n\t\twidget.Config.links.forEach(item => item.url = item.url.startsWith(\"www.\") ? item.url = \"http://\" + item.url : item.url);\r\n\t\twidget.Config.links.forEach(item => item.isExternal = item.url.startsWith(\"http\"));\r\n\t\tthis._widget = widget;\r\n\t}\r\n\tget widget() {\r\n\t\treturn this._widget;\r\n\t}\r\n\thavePermission$: Observable<boolean>;\r\n\tconstructor(private store: Store<any>) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.havePermission$ = this.store.select(getFrontendAuthenticationState);\r\n\t}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { WidgetModel, IWidgetView } from \"@soushians/widget\";\r\nimport { getFrontendAuthenticationState } from \"@soushians/frontend-authentication\";\r\n\r\nimport { ListWidgetConfigModel } from \"../list-widget-config.model\";\r\n\r\n@Component({\r\n\tselector: \"widget-list-view\",\r\n\ttemplate: `<div fxLayout=\"column\">\r\n  <div class=\"actions\" fxLayout=\"row\" fxFlex fxLayoutAlign=\"end\">\r\n    <button fxFlex=\"nogrow\" mat-icon-button color=\"primary\" *ngIf=\"havePermission$ | async\" [routerLink]=\"['/widget/upsert/links', (widget)?._id]\">\r\n      <mat-icon>edit</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div fxLayout=\"row\" fxFlex fxLayoutAlign=\"end\">\r\n    <h3>\r\n      {{widget.name}}\r\n    </h3>\r\n  </div>\r\n  <mat-list fxLayout=\"column\" fxFlex=\"100\">\r\n    <mat-list-item fxLayout=\"column\" *ngFor=\"let item of (widget)?.Config.list\" fxFlex=\"100\">\r\n      <mat-icon class=\"large-icon\" mat-list-icon>account_box</mat-icon>\r\n      <h4 mat-line> {{item.title}}</h4>\r\n      <p mat-line> {{item.subtitle}} </p>\r\n      <p mat-line> {{item.description}} </p>\r\n    </mat-list-item>\r\n  </mat-list>\r\n</div>`,\r\n\tstyles: [`:host{position:relative;height:100%;display:block}:host:hover .actions{opacity:1;visibility:visible}mat-list a{text-decoration:none}.actions{transition:opacity .4s ease-in-out;opacity:0;visibility:hidden}.actions mat-icon{color:#121212}h3{padding-right:20px}.large-icon{font-size:50px!important;width:50px!important;height:50px!important;color:#999}mat-list{direction:rtl}`]\r\n})\r\nexport class ListViewComponent implements OnInit, IWidgetView<ListWidgetConfigModel> {\r\n\twidget: WidgetModel<ListWidgetConfigModel>;\r\n\thavePermission$: Observable<boolean>;\r\n\tconstructor(private store: Store<any>) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.havePermission$ = this.store.select(getFrontendAuthenticationState);\r\n\t}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormControl, FormGroup, FormArray } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { UpsertWidgetStartAction, WidgetModel, IWidgetUpsert } from \"@soushians/widget\";\r\n\r\nimport { ListWidgetConfigModel } from \"../list-widget-config.model\";\r\nimport { ListItem } from \"../list-widget-config.model\";\r\n\r\n@Component({\r\n\tselector: \"widget-list-upsert\",\r\n\ttemplate: `<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title fxLayout=\"row\" fxLayoutGap=\"5px\">\r\n      <mat-icon>gradient</mat-icon>\r\n      <span>Ø§ÛØ¬Ø§Ø¯ Ø§ÙØ²ÙÙÙâ</span>\r\n    </mat-card-title>\r\n    <!-- <mat-card-subtitle fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <span>\r\n        Ø§ÙØ²ÙÙÙâ ÙÙØ±Ø¯ ÙØ¸Ø± Ø±Ø§ Ø¨Ø±Ø§Ø³Ø§Ø³ ÙÙØ¹ Ø¢Ù Ø§ÛØ¬Ø§Ø¯ ÙÙØ§ÛÛØ¯ ...\r\n      </span>\r\n    </mat-card-subtitle> -->\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <h3>ÙØ§Ù Ø§ÙØ²ÙÙÙ</h3>\r\n    <div [formGroup]=\"widgetFormGroup\">\r\n      <mat-form-field>\r\n        <input type=\"text\" matInput placeholder=\"ÙØ§Ù\" formControlName=\"name\">\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n    <h3>ÙØªÙ Ø§ÙØ²ÙÙÙ</h3>\r\n    <button color=\"primary\" mat-fab fxFlexAlign=\"end\" (click)=\"addItem()\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n    <div [formGroup]=\"configFormGroup\">\r\n      <div fxFlex=\"nogrow\" *ngFor=\"let ctrl of $any(configFormGroup.get('list')).controls; let idx = index\" [formGroup]=\"ctrl\">\r\n        <button mat-icon-button fxFlex=\"nogrow\" (click)=\"removelist(idx)\">\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n        <mat-form-field fxFlex>\r\n          <input type=\"text\" matInput placeholder=\"Ø¹ÙÙØ§Ù\" formControlName=\"title\">\r\n        </mat-form-field>\r\n        <mat-form-field fxFlex>\r\n          <input type=\"text\" matInput placeholder=\"Ø²ÛØ±Ø¹ÙÙØ§Ù\" formControlName=\"subtitle\">\r\n        </mat-form-field>\r\n        <mat-form-field fxFlex>\r\n          <input type=\"text\" matInput placeholder=\"ØªÙØ¶ÛØ­Ø§Øª\" formControlName=\"description\">\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button mat-button color=\"primary\" (click)=\"upsert()\">Ø«Ø¨Øª</button>\r\n  </mat-card-actions>\r\n</mat-card>`,\r\n\tstyles: [``]\r\n})\r\nexport class ListUpsertComponent implements OnInit, IWidgetUpsert<ListWidgetConfigModel> {\r\n\t@Input() widget: WidgetModel<ListWidgetConfigModel>;\r\n\twidgetFormGroup: FormGroup;\r\n\tconfigFormGroup: FormGroup;\r\n\tconstructor(private store: Store<any>) {\r\n\t\tthis._createFormGroup();\r\n\t\tthis.widget = new WidgetModel<ListWidgetConfigModel>({ type: \"list\" });\r\n\t}\r\n\r\n\tupsert() {\r\n\t\tconst widget = {\r\n\t\t\t...this.widget,\r\n\t\t\t...this.widgetFormGroup.value,\r\n\t\t\tConfig: this.configFormGroup.value\r\n\t\t};\r\n\t\tthis.store.dispatch(new UpsertWidgetStartAction(widget));\r\n\t}\r\n\tngOnInit() {\r\n\t\tif (this.widget != undefined) {\r\n\t\t\tthis.widgetFormGroup.patchValue(this.widget);\r\n\t\t\tthis.configFormGroup.patchValue(this.widget.Config);\r\n\t\t\tthis._update_list(this.widget.Config.list);\r\n\t\t}\r\n\t}\r\n\r\n\taddItem() {\r\n\t\t(this.configFormGroup.get(\"list\") as FormArray).push(this._get_new_empty_list_item());\r\n\t}\r\n\tremovelist(list) {\r\n\t\tdebugger;\r\n\t\tconst data = this.configFormGroup.get(\"list\") as FormArray;\r\n\t\tif (data.controls.length > -1) {\r\n\t\t\tdata.removeAt(list);\r\n\t\t} else {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t}\r\n\t_createFormGroup() {\r\n\t\tthis.configFormGroup = new FormGroup({\r\n\t\t\tlist: new FormArray([])\r\n\t\t});\r\n\t\tthis.widgetFormGroup = new FormGroup({\r\n\t\t\tname: new FormControl(\"\")\r\n\t\t});\r\n\t}\r\n\r\n\t_get_new_empty_list_item() {\r\n\t\treturn new FormGroup({\r\n\t\t\ttitle: new FormControl(\"\"),\r\n\t\t\tsubtitle: new FormControl(\"\"),\r\n\t\t\tdescription: new FormControl(\"\")\r\n\t\t});\r\n\t}\r\n\r\n\t_update_list(list: ListItem[]) {\r\n\t\t(this.configFormGroup.get(\"list\") as FormArray).reset();\r\n\t\tlist.forEach((item) => {\r\n\t\t\tconst _list = this._get_new_empty_list_item();\r\n\t\t\t_list.patchValue(item);\r\n\t\t\t(this.configFormGroup.get(\"list\") as FormArray).push(_list);\r\n\t\t});\r\n\t}\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule,\r\n\tMatSlideToggleModule,\r\n\tMatDividerModule,\r\n\tMatCheckboxModule,\r\n\tMatTableModule,\r\n\tMatListModule\r\n} from \"@angular/material\";\r\nimport { FroalaEditorModule, FroalaViewModule } from \"angular-froala-wysiwyg\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\n\r\n/**\r\n * article\r\n */\r\nimport { ArticleUpsertComponent } from \"./article/article-upsert/article-upsert.component\";\r\nimport { ArticleViewComponent } from \"./article/article-view/article-view.component\";\r\n/**\r\n * links\r\n */\r\nimport { LinksUpsertComponent } from \"./links/links-upsert/links-upsert.component\";\r\nimport { LinksViewComponent } from \"./links/links-view/links-view.component\";\r\n/**\r\n * lists\r\n */\r\nimport { ListUpsertComponent } from \"./list/list-upsert/list-upsert.component\";\r\nimport { ListViewComponent } from \"./list/list-view/list-view.component\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tRouterModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSelectModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tMatRadioModule,\r\n\t\tMatDividerModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tMatDividerModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatTableModule,\r\n\t\tMatListModule,\r\n\t\tFlexLayoutModule,\r\n\t\tFroalaEditorModule.forRoot(),\r\n\t\tFroalaViewModule.forRoot()\r\n\t],\r\n\tdeclarations: [\r\n\t\tArticleUpsertComponent,\r\n\t\tArticleViewComponent,\r\n\t\tLinksUpsertComponent,\r\n\t\tLinksViewComponent,\r\n\t\tListUpsertComponent,\r\n\t\tListViewComponent\r\n\t],\r\n\tentryComponents: [\r\n\t\tArticleUpsertComponent,\r\n\t\tArticleViewComponent,\r\n\t\tLinksUpsertComponent,\r\n\t\tLinksViewComponent,\r\n\t\tListUpsertComponent,\r\n\t\tListViewComponent\r\n\t],\r\n\texports: [ArticleViewComponent]\r\n})\r\nexport class NgsWidgetTypesModule { }\r\n"],"names":[],"mappings":"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"}
