!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@angular/forms"),require("@ngrx/store"),require("@soushians/widget"),require("@soushians/frontend-authentication"),require("@angular/common"),require("@angular/router"),require("@angular/material"),require("angular-froala-wysiwyg"),require("@angular/flex-layout")):"function"==typeof define&&define.amd?define("@soushians/widget-types",["exports","@angular/core","@angular/forms","@ngrx/store","@soushians/widget","@soushians/frontend-authentication","@angular/common","@angular/router","@angular/material","angular-froala-wysiwyg","@angular/flex-layout"],o):o((t.soushians=t.soushians||{},t.soushians["widget-types"]={}),t.ng.core,t.ng.forms,null,null,null,t.ng.common,t.ng.router,t.ng.material,null,t.ng["flex-layout"])}(this,function(t,o,e,n,r,i,a,u,l,s,c){"use strict";var d=Object.assign||function(t){for(var o,e=1,n=arguments.length;e<n;e++)for(var r in o=arguments[e])Object.prototype.hasOwnProperty.call(o,r)&&(t[r]=o[r]);return t},m=function(){function t(t){this.store=t,this._createFormGroup(),this.widget=new r.WidgetModel({type:"article"})}return t.prototype.upsert=function(){var t=d({},this.widget,this.widgetFormGroup.value,{Config:this.configFormGroup.value});this.store.dispatch(new r.UpsertWidgetStartAction(t))},t.prototype.ngOnInit=function(){this.widget!=undefined&&(this.widgetFormGroup.patchValue(this.widget),this.configFormGroup.patchValue(this.widget.Config))},t.prototype._createFormGroup=function(){this.configFormGroup=new e.FormGroup({content:new e.FormControl("")}),this.widgetFormGroup=new e.FormGroup({name:new e.FormControl("")})},t.decorators=[{type:o.Component,args:[{selector:"widget-article-upsert",template:'<mat-card>\n  <mat-card-content>\n      <h3>مشخصات ویجت</h3>\n    <div [formGroup]="widgetFormGroup">\n      <mat-form-field>\n        <input type="text" matInput placeholder="نام"  formControlName="name">\n      </mat-form-field>\n  </div>\n  <mat-divider></mat-divider>\n  <h3>تنظیمات ویجت</h3>\n    <div [formGroup]="configFormGroup">\n        <div [froalaEditor] formControlName="content"></div>\n    </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button color="primary" (click)="upsert()">Add</button>\n    </mat-card-actions>\n  </mat-card>',styles:[""]}]}],t.ctorParameters=function(){return[{type:n.Store}]},t.propDecorators={widget:[{type:o.Input}]},t}(),p=function(){function t(t){this.store=t}return t.prototype.ngOnInit=function(){this.havePermission$=this.store.select(i.getFrontendAuthenticationState)},t.decorators=[{type:o.Component,args:[{selector:"widget-article-view",template:'<button mat-mini-fab color="accent" *ngIf="havePermission$ | async" [routerLink]="[\'/widget/upsert/article\', (widget)?._id]">\n  <mat-icon>edit</mat-icon>\n</button>\n\n<div [froalaView]="(widget)?.Config.content"></div>\n',styles:[":host{position:relative;display:block}.mat-mini-fab{position:absolute;top:-20px;right:-20px}"]}]}],t.ctorParameters=function(){return[{type:n.Store}]},t}(),f=function(){function t(t){this.store=t,this._createFormGroup(),this.widget=new r.WidgetModel({type:"links"})}return t.prototype.upsert=function(){var t=d({},this.widget,this.widgetFormGroup.value,{Config:this.configFormGroup.value});this.store.dispatch(new r.UpsertWidgetStartAction(t))},t.prototype.ngOnInit=function(){this.widget!=undefined&&(this.widgetFormGroup.patchValue(this.widget),this.configFormGroup.patchValue(this.widget.Config),this._update_links(this.widget.Config.links))},t.prototype.addlink=function(){this.configFormGroup.get("links").push(this._get_new_empty_link_item())},t.prototype.removelink=function(t){this.configFormGroup.controls.links.removeAt(t)},t.prototype._createFormGroup=function(){this.configFormGroup=new e.FormGroup({links:new e.FormArray([])}),this.widgetFormGroup=new e.FormGroup({name:new e.FormControl("")})},t.prototype._get_new_empty_link_item=function(){return new e.FormGroup({url:new e.FormControl("/"),label:new e.FormControl("")})},t.prototype._update_links=function(t){var e=this;this.configFormGroup.get("links").reset(),t.forEach(function(t){var o=e._get_new_empty_link_item();o.patchValue(t),e.configFormGroup.get("links").push(o)})},t.decorators=[{type:o.Component,args:[{selector:"widget-links-upsert",template:'<mat-card fxFlex fxLayout="column">\n  <mat-card-content>\n      <h3>مشخصات ویجت</h3>\n    <div [formGroup]="widgetFormGroup">\n      <mat-form-field>\n        <input type="text" matInput placeholder="نام"  formControlName="name">\n      </mat-form-field>\n  </div>\n  <mat-divider></mat-divider>\n  <h3>تنظیمات ویجت</h3>\n    <div [formGroup]="configFormGroup">\n      <button color="primary" mat-raised-button (click)="addlink()">\n        اضافه کردن لینک\n      </button>\n      <div fxFlex="nogrow" *ngFor="let ctrl of $any(configFormGroup.get(\'links\')).controls" [formGroup]="ctrl">\n        <div [formGroup]="ctrl" fxLayout="row" fxLayoutGap="25px">\n          <button mat-icon-button fxFlex="nogrow" (click)="removelink(ctrl)">\n              <mat-icon>delete</mat-icon>\n          </button>\n        <mat-form-field fxFlex>\n          <input type="text" matInput placeholder="آدرس"  formControlName="url">\n        </mat-form-field>          \n        <mat-form-field fxFlex >\n          <input type="text" matInput placeholder="نام"  formControlName="label">\n        </mat-form-field>          \n    </div>\n    </div>\n    </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button color="primary" (click)="upsert()">ثبت</button>\n    </mat-card-actions>\n  </mat-card>',styles:[""]}]}],t.ctorParameters=function(){return[{type:n.Store}]},t.propDecorators={widget:[{type:o.Input}]},t}(),g=function(){function t(t){this.store=t}return t.prototype.ngOnInit=function(){this.havePermission$=this.store.select(i.getFrontendAuthenticationState)},t.decorators=[{type:o.Component,args:[{selector:"widget-links-view",template:'<div fxLayout="column">\n    <div class="actions" fxLayout="row" fxFlex fxLayoutAlign="end">\n      <button fxFlex="nogrow" mat-icon-button color="primary" *ngIf="havePermission$ | async" [routerLink]="[\'/widget/upsert/links\', (widget)?._id]">\n        <mat-icon>edit</mat-icon>\n      </button>\n    </div>\n    <div fxLayout="row" fxFlex fxLayoutAlign="end">\n    <h3>\n        {{widget.name}}\n    </h3>\n    </div>\n    <mat-list fxLayout="column" fxFlex="100" >\n        <mat-list-item fxLayout="column" *ngFor="let link of (widget)?.Config.links" fxFlex="100">\n          <mat-icon mat-list-icon>link</mat-icon>\n          <a fxLayout="row" fxFlex="grow" [routerLink]="[link.url]">\n            {{link.label}}\n          </a>\n        </mat-list-item>\n    </mat-list>\n</div>',styles:[":host{position:relative;height:100%;display:block}:host:hover .actions{opacity:1;visibility:visible}mat-list a{text-decoration:none}.actions{transition:opacity .4s ease-in-out;opacity:0;visibility:hidden}.actions mat-icon{color:#121212}h3{padding-right:20px}"]}]}],t.ctorParameters=function(){return[{type:n.Store}]},t}(),h=function(){function t(){}return t.decorators=[{type:o.NgModule,args:[{imports:[a.CommonModule,u.RouterModule,l.MatExpansionModule,l.MatSnackBarModule,l.MatIconModule,l.MatButtonModule,l.MatCardModule,l.MatSelectModule,l.MatInputModule,l.MatFormFieldModule,l.MatTabsModule,l.MatRadioModule,l.MatDividerModule,e.FormsModule,e.ReactiveFormsModule,l.MatSlideToggleModule,l.MatDividerModule,l.MatCheckboxModule,l.MatTableModule,l.MatListModule,c.FlexLayoutModule,s.FroalaEditorModule.forRoot(),s.FroalaViewModule.forRoot()],declarations:[m,p,f,g],entryComponents:[m,p,f,g],exports:[p]}]}],t}();t.ArticleUpsertComponent=m,t.ArticleViewComponent=p,t.LinksUpsertComponent=f,t.LinksViewComponent=g,t.NgsWidgetTypesModule=h,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=soushians-widget-types.umd.min.js.map