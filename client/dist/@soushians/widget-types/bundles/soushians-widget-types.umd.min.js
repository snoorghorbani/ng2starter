!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@soushians/frontend-authentication"),require("@ngrx/store"),require("@soushians/widget"),require("@angular/core"),require("@angular/common"),require("@angular/router"),require("@angular/forms"),require("@angular/material"),require("angular-froala-wysiwyg"),require("@angular/flex-layout")):"function"==typeof define&&define.amd?define("@soushians/widget-types",["exports","@soushians/frontend-authentication","@ngrx/store","@soushians/widget","@angular/core","@angular/common","@angular/router","@angular/forms","@angular/material","angular-froala-wysiwyg","@angular/flex-layout"],r):r((t.soushians=t.soushians||{},t.soushians["widget-types"]={}),t.frontendAuthentication,t.store,t.widget,t.ng.core,t.ng.common,t.ng.router,t.ng.forms,t.ng.material,t.angularFroalaWysiwyg,t.ng["flex-layout"])}(this,function(t,r,n,o,e,i,a,l,s,u,c){"use strict";var m=function(){return(m=Object.assign||function(t){for(var r,n=1,o=arguments.length;n<o;n++)for(var e in r=arguments[n])Object.prototype.hasOwnProperty.call(r,e)&&(t[e]=r[e]);return t}).apply(this,arguments)},d=function(){function t(t){this.store=t,this._createFormGroup(),this.widget=new o.WidgetModel({type:"article"})}return t.prototype.upsert=function(){var t=m({},this.widget,this.widgetFormGroup.value,{Config:this.configFormGroup.value});this.store.dispatch(new o.UpsertWidgetStartAction(t))},t.prototype.ngOnInit=function(){this.widget!=undefined&&(this.widgetFormGroup.patchValue(this.widget),this.configFormGroup.patchValue(this.widget.Config))},t.prototype._createFormGroup=function(){this.configFormGroup=new l.FormGroup({content:new l.FormControl("")}),this.widgetFormGroup=new l.FormGroup({name:new l.FormControl("")})},t.decorators=[{type:e.Component,args:[{selector:"widget-article-upsert",template:'<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title fxLayout="row" fxLayoutGap="5px">\r\n      <mat-icon>gradient</mat-icon>\r\n      <span>ایجاد افزونه‌</span>\r\n    </mat-card-title>\r\n    \x3c!-- <mat-card-subtitle fxLayout="row" fxLayoutAlign="space-between center">\r\n      <span>\r\n        افزونه‌ مورد نظر را براساس نوع آن ایجاد نمایید ...\r\n      </span>\r\n    </mat-card-subtitle> --\x3e\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <h3>نام افزونه</h3>\r\n    <div [formGroup]="widgetFormGroup">\r\n      <mat-form-field>\r\n        <input type="text" matInput placeholder="نام" formControlName="name">\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n    <h3>متن افزونه</h3>\r\n    <div [formGroup]="configFormGroup">\r\n      <div [froalaEditor] formControlName="content"></div>\r\n    </div>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button mat-button color="primary" (click)="upsert()">Add</button>\r\n  </mat-card-actions>\r\n</mat-card>',styles:[""]}]}],t.ctorParameters=function(){return[{type:n.Store}]},t.propDecorators={widget:[{type:e.Input}]},t}(),p=function(){function t(t){this.store=t}return t.prototype.ngOnInit=function(){this.havePermission$=this.store.select(r.getFrontendAuthenticationState)},t.decorators=[{type:e.Component,args:[{selector:"widget-article-view",template:'<div fxLayout="row" fxFlex="100" fxLayoutAlign="center start">\r\n  <button mat-mini-fab color="accent" *ngIf="havePermission$ | async" [routerLink]="[\'/widget/upsert/article\', (widget)?._id]">\r\n    <mat-icon>edit</mat-icon>\r\n  </button>\r\n\r\n  <div fxFlex="90" [froalaView]="(widget)?.Config.content" align="right" class="article"></div>\r\n</div>',styles:[":host{position:relative;display:block}.mat-mini-fab{position:absolute;top:-20px;right:-20px}.article{direction:rtl;text-align:right;padding-top:25px}"]}]}],t.ctorParameters=function(){return[{type:n.Store}]},t}(),f=function(){function t(t){this.store=t,this._createFormGroup(),this.widget=new o.WidgetModel({type:"links"})}return t.prototype.upsert=function(){var t=m({},this.widget,this.widgetFormGroup.value,{Config:this.configFormGroup.value});this.store.dispatch(new o.UpsertWidgetStartAction(t))},t.prototype.ngOnInit=function(){this.widget!=undefined&&(this.widgetFormGroup.patchValue(this.widget),this.configFormGroup.patchValue(this.widget.Config),this._update_links(this.widget.Config.links))},t.prototype.addlink=function(){this.configFormGroup.get("links").push(this._get_new_empty_link_item())},t.prototype.removelink=function(t){var r=this.configFormGroup.get("links");if(!(-1<r.controls.length))return r;r.removeAt(t)},t.prototype._createFormGroup=function(){this.configFormGroup=new l.FormGroup({links:new l.FormArray([])}),this.widgetFormGroup=new l.FormGroup({name:new l.FormControl("")})},t.prototype._get_new_empty_link_item=function(){return new l.FormGroup({url:new l.FormControl("/"),label:new l.FormControl("")})},t.prototype._update_links=function(t){var n=this;this.configFormGroup.get("links").reset(),t.forEach(function(t){var r=n._get_new_empty_link_item();r.patchValue(t),n.configFormGroup.get("links").push(r)})},t.decorators=[{type:e.Component,args:[{selector:"widget-links-upsert",template:'<mat-card fxFlex>\r\n  <mat-card-header>\r\n    <mat-card-title fxLayout="row" fxLayoutGap="5px">\r\n      <mat-icon>gradient</mat-icon>\r\n      <span>ایجاد افزونه‌</span>\r\n    </mat-card-title>\r\n    <mat-card-subtitle fxLayout="row" fxLayoutAlign="space-between center">\r\n      <span>\r\n        نام لینک موردنظر را وارد کرده و اطلاعات را کامل نمایید ...\r\n      </span>\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <h3>نام ویجت</h3>\r\n    <div [formGroup]="widgetFormGroup">\r\n      <mat-form-field>\r\n        <input type="text" matInput placeholder="نام" formControlName="name">\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n    <br>\r\n    <div fxLayout="row" fxLayoutAlign="space-between center">\r\n      <h3>تنظیمات ویجت</h3>\r\n      <button color="primary" mat-fab fxFlexAlign="end" (click)="addlink()">\r\n        <mat-icon>add</mat-icon>\r\n      </button>\r\n    </div>\r\n    <div [formGroup]="configFormGroup">\r\n      <div fxFlex="nogrow" *ngFor="let ctrl of $any(configFormGroup.get(\'links\')).controls; let idx = index"\r\n        [formGroup]="ctrl">\r\n        <div [formGroup]="ctrl" fxLayout="row" fxLayoutGap="25px">\r\n          <button mat-icon-button fxFlex="nogrow" (click)="removelink(idx)">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n          <mat-form-field fxFlex>\r\n            <input type="text" matInput placeholder="آدرس" formControlName="url">\r\n          </mat-form-field>\r\n          <mat-form-field fxFlex>\r\n            <input type="text" matInput placeholder="نام" formControlName="label">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button mat-button color="primary" (click)="upsert()">ثبت</button>\r\n  </mat-card-actions>\r\n</mat-card>',styles:[""]}]}],t.ctorParameters=function(){return[{type:n.Store}]},t.propDecorators={widget:[{type:e.Input}]},t}(),g=function(){function t(t){this.store=t}return Object.defineProperty(t.prototype,"widget",{get:function(){return this._widget},set:function(t){t.Config.links.forEach(function(t){return t.url=t.url.startsWith("www.")?t.url="http://"+t.url:t.url}),t.Config.links.forEach(function(t){return t.isExternal=t.url.startsWith("http")}),this._widget=t},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.havePermission$=this.store.select(r.getFrontendAuthenticationState)},t.decorators=[{type:e.Component,args:[{selector:"widget-links-view",template:'<div fxLayout="column">\r\n  <div class="actions" fxLayout="row" fxFlex fxLayoutAlign="end">\r\n    <button fxFlex="nogrow" mat-icon-button color="primary" *ngIf="havePermission$ | async" [routerLink]="[\'/widget/upsert/links\', (widget)?._id]">\r\n      <mat-icon>edit</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div fxLayout="row" fxFlex fxLayoutAlign="end">\r\n    <h3>\r\n      {{widget.name}}\r\n    </h3>\r\n  </div>\r\n  <mat-list fxLayout="column" fxFlex="100">\r\n    <mat-list-item fxLayout="column" *ngFor="let link of (widget)?.Config.links" fxFlex="100">\r\n      <mat-icon mat-list-icon>link</mat-icon>\r\n      <a fxLayout="row" *ngIf="!link.isExternal" fxFlex="grow" [routerLink]="[link.url]">\r\n        {{link.label}}\r\n      </a>\r\n      <a fxLayout="row" *ngIf="link.isExternal" target="_blank" fxFlex="grow" [href]="link.url">\r\n        {{link.label}}\r\n      </a>\r\n    </mat-list-item>\r\n  </mat-list>\r\n</div>',styles:[":host{position:relative;height:100%;display:block}:host:hover .actions{opacity:1;visibility:visible}mat-list a{text-decoration:none}.actions{transition:opacity .4s ease-in-out;opacity:0;visibility:hidden}.actions mat-icon{color:#121212}h3{padding-right:20px}"]}]}],t.ctorParameters=function(){return[{type:n.Store}]},t}(),h=function(){function t(t){this.store=t}return t.prototype.ngOnInit=function(){this.havePermission$=this.store.select(r.getFrontendAuthenticationState)},t.decorators=[{type:e.Component,args:[{selector:"widget-list-view",template:'<div fxLayout="column">\r\n  <div class="actions" fxLayout="row" fxFlex fxLayoutAlign="end">\r\n    <button fxFlex="nogrow" mat-icon-button color="primary" *ngIf="havePermission$ | async" [routerLink]="[\'/widget/upsert/links\', (widget)?._id]">\r\n      <mat-icon>edit</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div fxLayout="row" fxFlex fxLayoutAlign="end">\r\n    <h3>\r\n      {{widget.name}}\r\n    </h3>\r\n  </div>\r\n  <mat-list fxLayout="column" fxFlex="100">\r\n    <mat-list-item fxLayout="column" *ngFor="let item of (widget)?.Config.list" fxFlex="100">\r\n      <mat-icon class="large-icon" mat-list-icon>account_box</mat-icon>\r\n      <h4 mat-line> {{item.title}}</h4>\r\n      <p mat-line> {{item.subtitle}} </p>\r\n      <p mat-line> {{item.description}} </p>\r\n    </mat-list-item>\r\n  </mat-list>\r\n</div>',styles:[":host{position:relative;height:100%;display:block}:host:hover .actions{opacity:1;visibility:visible}mat-list a{text-decoration:none}.actions{transition:opacity .4s ease-in-out;opacity:0;visibility:hidden}.actions mat-icon{color:#121212}h3{padding-right:20px}.large-icon{font-size:50px!important;width:50px!important;height:50px!important;color:#999}mat-list{direction:rtl}"]}]}],t.ctorParameters=function(){return[{type:n.Store}]},t}(),y=function(){function t(t){this.store=t,this._createFormGroup(),this.widget=new o.WidgetModel({type:"list"})}return t.prototype.upsert=function(){var t=m({},this.widget,this.widgetFormGroup.value,{Config:this.configFormGroup.value});this.store.dispatch(new o.UpsertWidgetStartAction(t))},t.prototype.ngOnInit=function(){this.widget!=undefined&&(this.widgetFormGroup.patchValue(this.widget),this.configFormGroup.patchValue(this.widget.Config),this._update_list(this.widget.Config.list))},t.prototype.addItem=function(){this.configFormGroup.get("list").push(this._get_new_empty_list_item())},t.prototype.removelist=function(t){var r=this.configFormGroup.get("list");if(!(-1<r.controls.length))return r;r.removeAt(t)},t.prototype._createFormGroup=function(){this.configFormGroup=new l.FormGroup({list:new l.FormArray([])}),this.widgetFormGroup=new l.FormGroup({name:new l.FormControl("")})},t.prototype._get_new_empty_list_item=function(){return new l.FormGroup({title:new l.FormControl(""),subtitle:new l.FormControl(""),description:new l.FormControl("")})},t.prototype._update_list=function(t){var n=this;this.configFormGroup.get("list").reset(),t.forEach(function(t){var r=n._get_new_empty_list_item();r.patchValue(t),n.configFormGroup.get("list").push(r)})},t.decorators=[{type:e.Component,args:[{selector:"widget-list-upsert",template:'<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title fxLayout="row" fxLayoutGap="5px">\r\n      <mat-icon>gradient</mat-icon>\r\n      <span>ایجاد افزونه‌</span>\r\n    </mat-card-title>\r\n    \x3c!-- <mat-card-subtitle fxLayout="row" fxLayoutAlign="space-between center">\r\n      <span>\r\n        افزونه‌ مورد نظر را براساس نوع آن ایجاد نمایید ...\r\n      </span>\r\n    </mat-card-subtitle> --\x3e\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <h3>نام افزونه</h3>\r\n    <div [formGroup]="widgetFormGroup">\r\n      <mat-form-field>\r\n        <input type="text" matInput placeholder="نام" formControlName="name">\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n    <h3>متن افزونه</h3>\r\n    <button color="primary" mat-fab fxFlexAlign="end" (click)="addItem()">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n    <div [formGroup]="configFormGroup">\r\n      <div fxFlex="nogrow" *ngFor="let ctrl of $any(configFormGroup.get(\'list\')).controls; let idx = index" [formGroup]="ctrl">\r\n        <button mat-icon-button fxFlex="nogrow" (click)="removelist(idx)">\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n        <mat-form-field fxFlex>\r\n          <input type="text" matInput placeholder="عنوان" formControlName="title">\r\n        </mat-form-field>\r\n        <mat-form-field fxFlex>\r\n          <input type="text" matInput placeholder="زیرعنوان" formControlName="subtitle">\r\n        </mat-form-field>\r\n        <mat-form-field fxFlex>\r\n          <input type="text" matInput placeholder="توضیحات" formControlName="description">\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button mat-button color="primary" (click)="upsert()">ثبت</button>\r\n  </mat-card-actions>\r\n</mat-card>',styles:[""]}]}],t.ctorParameters=function(){return[{type:n.Store}]},t.propDecorators={widget:[{type:e.Input}]},t}(),x=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[i.CommonModule,a.RouterModule,s.MatExpansionModule,s.MatSnackBarModule,s.MatIconModule,s.MatButtonModule,s.MatCardModule,s.MatSelectModule,s.MatInputModule,s.MatFormFieldModule,s.MatTabsModule,s.MatRadioModule,s.MatDividerModule,l.FormsModule,l.ReactiveFormsModule,s.MatSlideToggleModule,s.MatDividerModule,s.MatCheckboxModule,s.MatTableModule,s.MatListModule,c.FlexLayoutModule,u.FroalaEditorModule.forRoot(),u.FroalaViewModule.forRoot()],declarations:[d,p,f,g,y,h],entryComponents:[d,p,f,g,y,h],exports:[p]}]}],t}();t.ArticleUpsertComponent=d,t.ArticleViewComponent=p,t.LinksUpsertComponent=f,t.LinksViewComponent=g,t.ListViewComponent=h,t.ListUpsertComponent=y,t.NgsWidgetTypesModule=x,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=soushians-widget-types.umd.min.js.map