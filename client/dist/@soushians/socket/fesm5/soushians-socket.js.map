{
  "version": 3,
  "file": "soushians-socket.js",
  "sources": [
    "ng://@soushians/socket/projects/soushians/socket/src/lib/socket.module.ts",
    "ng://@soushians/socket/projects/soushians/socket/src/lib/socket.reducer.ts",
    "ng://@soushians/socket/projects/soushians/socket/src/lib/services/socket.service.ts",
    "ng://@soushians/socket/projects/soushians/socket/src/lib/socket.actions.ts",
    "ng://@soushians/socket/projects/soushians/socket/src/lib/services/socket-configuration.service.ts",
    "ng://@soushians/socket/projects/soushians/socket/src/lib/socket.config.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\n\r\nimport { SocketService, SocketConfigurationService } from \"./services\";\r\nimport { SocketReducer } from \"./socket.reducer\";\r\nimport { SocketModuleConfig, MODULE_CONFIG_TOKEN } from \"./socket.config\";\r\n\r\n@NgModule({\r\n\timports: [ CommonModule ]\r\n})\r\nexport class NgsSocketModule {\r\n\tstatic forRoot(config?: SocketModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: NgsSocketRootModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config }, SocketConfigurationService, SocketService ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [ NgsSocketModule, StoreModule.forFeature(\"socket\", SocketReducer) ]\r\n})\r\nexport class NgsSocketRootModule {}\r\n",
    "import { Action } from \"@ngrx/store\";\r\n\r\nexport interface State {\r\n\tnumber: number;\r\n}\r\nexport const initialState: State = {\r\n\tnumber: 0\r\n};\r\n\r\nexport function Reducer(state = initialState, action: Action): State {\r\n\tswitch (action.type) {\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport interface SocketState {\r\n\tchange: State;\r\n}\r\n\r\nexport const SocketReducer = {\r\n\tchange: Reducer\r\n};\r\n\r\nexport interface AppState {\r\n\tsocket: SocketState;\r\n}\r\n",
    "import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\n// import * as socketIo from \"socket.io-client\";\r\n// const socketIo = require(\"socket.io-client\");\r\n// tslint:disable-next-line:no-debugger\r\ndebugger;\r\nimport * as _io from \"socket.io-client\";\r\nconst io = _io;\r\nimport { AppState } from \"../socket.reducer\";\r\n\r\nimport { getSocketModuleConfig } from \"@soushians/config\";\r\n\r\nimport { SocketConfigurationService } from \"./socket-configuration.service\";\r\nimport { SocketRunSuccessfullyAction } from \"../socket.actions\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class SocketService {\r\n\tsocket: any;\r\n\turi: string;\r\n\tconstructor(private configService: SocketConfigurationService, private store: Store<AppState>) {\r\n\t\tthis.configService.config$\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(config => (config.env.production ? config.production_uri : config.development_uri)),\r\n\t\t\t\tmap(uri => {\r\n\t\t\t\t\tthis.socket = io(uri);\r\n\t\t\t\t\treturn this.store.dispatch(new SocketRunSuccessfullyAction());\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe(() => {\r\n\t\t\t\tthis.socket.on(\"DISPATCH_ACTION\", data => {\r\n\t\t\t\t\tthis.store.dispatch({\r\n\t\t\t\t\t\ttype: data.type,\r\n\t\t\t\t\t\tpayload: data.payload\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\t/**\r\n\t * @example\r\n\t * this.socketService.on<number>(\"chnage-number\").subscribe(data=>{})\r\n\t * @returns\r\n\t * Observable<T>\r\n\t */\r\n\ton<T>(message): Observable<T> {\r\n\t\tconst observer$ = new Observable<T>(observer => {\r\n\t\t\tthis.socket.on(message, (data: T) => {\r\n\t\t\t\tobserver.next(data);\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn observer$;\r\n\t}\r\n\t/**\r\n\t * @example\r\n\t * this.socketService.emit(\"chnage-number\",{number:2})\r\n\t * @returns\r\n\t * void\r\n\t */\r\n\temit(message: string, payload: any): void {\r\n\t\tthis.socket.emit(message, payload);\r\n\t}\r\n}\r\n",
    "import { Action } from \"@ngrx/store\";\r\n\r\nexport enum SocketActionTypes {\r\n\tSOCKET_RUN_SUCCESSFULLY = \"[SOCKET] SOCKET_RUN_SUCCESSFULLY\",\r\n\tSOCKET_INITIALAZATION_FAILD = \"[SOCKET] SOCKET_INITIALAZATION_FAILD\"\r\n}\r\n\r\nexport class SocketRunSuccessfullyAction implements Action {\r\n\treadonly type = SocketActionTypes.SOCKET_RUN_SUCCESSFULLY;\r\n}\r\nexport class SocketInitialazationFailedAction implements Action {\r\n\treadonly type = SocketActionTypes.SOCKET_INITIALAZATION_FAILD;\r\n}\r\n\r\nexport type SocketActions = SocketRunSuccessfullyAction | SocketInitialazationFailedAction;\r\n",
    "import { BehaviorSubject } from \"rxjs\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { getSocketModuleConfig } from \"@soushians/config\";\r\n\r\nimport { SocketModuleConfig, MODULE_DEFAULT_CONFIG, MODULE_CONFIG_TOKEN } from \"../socket.config\";\r\nimport { AppState } from \"../socket.reducer\";\r\n\r\n@Injectable()\r\nexport class SocketConfigurationService {\r\n\tprivate _config: SocketModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<AppState>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\tthis.store.select(getSocketModuleConfig).subscribe((userConfig) => {\r\n\t\t\tif (!userConfig) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._config = Object.assign({}, this._config, userConfig.Config);\r\n\t\t\tthis.config$.next(this._config);\r\n\t\t});\r\n\t}\r\n}\r\n",
    "import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface SocketModuleConfig {\r\n\tdevelopment_uri: string;\r\n\tproduction_uri: string;\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t};\r\n}\r\nexport const MODULE_DEFAULT_CONFIG: SocketModuleConfig = {\r\n\tdevelopment_uri: \"http://localhost:3000\",\r\n\tproduction_uri: \"\",\r\n\tenv: {\r\n\t\tproduction: false\r\n\t}\r\n};\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<SocketModuleConfig>(\"SocketModuleConfig\");\r\n"
  ],
  "names": [],
  "mappings": "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"
}
