{
  "version": 3,
  "file": "soushians-socket.umd.js",
  "sources": [
    "ng://@soushians/socket/projects/soushians/socket/src/lib/socket.module.ts",
    "ng://@soushians/socket/projects/soushians/socket/src/lib/socket.reducer.ts",
    "ng://@soushians/socket/projects/soushians/socket/src/lib/services/socket.service.ts",
    "ng://@soushians/socket/projects/soushians/socket/src/lib/socket.actions.ts",
    "ng://@soushians/socket/projects/soushians/socket/src/lib/services/socket-configuration.service.ts",
    "ng://@soushians/socket/projects/soushians/socket/src/lib/socket.config.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\n\r\nimport { SocketService, SocketConfigurationService } from \"./services\";\r\nimport { SocketReducer } from \"./socket.reducer\";\r\nimport { SocketModuleConfig, MODULE_CONFIG_TOKEN } from \"./socket.config\";\r\n\r\n@NgModule({\r\n\timports: [ CommonModule ]\r\n})\r\nexport class NgsSocketModule {\r\n\tstatic forRoot(config?: SocketModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: NgsSocketRootModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config }, SocketConfigurationService, SocketService ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [ NgsSocketModule, StoreModule.forFeature(\"socket\", SocketReducer) ]\r\n})\r\nexport class NgsSocketRootModule {}\r\n",
    "import { Action } from \"@ngrx/store\";\r\n\r\nexport interface State {\r\n\tnumber: number;\r\n}\r\nexport const initialState: State = {\r\n\tnumber: 0\r\n};\r\n\r\nexport function Reducer(state = initialState, action: Action): State {\r\n\tswitch (action.type) {\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport interface SocketState {\r\n\tchange: State;\r\n}\r\n\r\nexport const SocketReducer = {\r\n\tchange: Reducer\r\n};\r\n\r\nexport interface AppState {\r\n\tsocket: SocketState;\r\n}\r\n",
    "import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\n// import * as socketIo from \"socket.io-client\";\r\n// const socketIo = require(\"socket.io-client\");\r\n// tslint:disable-next-line:no-debugger\r\ndebugger;\r\nimport * as _io from \"socket.io-client\";\r\nconst io = _io;\r\nimport { AppState } from \"../socket.reducer\";\r\n\r\nimport { getSocketModuleConfig } from \"@soushians/config\";\r\n\r\nimport { SocketConfigurationService } from \"./socket-configuration.service\";\r\nimport { SocketRunSuccessfullyAction } from \"../socket.actions\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class SocketService {\r\n\tsocket: any;\r\n\turi: string;\r\n\tconstructor(private configService: SocketConfigurationService, private store: Store<AppState>) {\r\n\t\tthis.configService.config$\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(config => (config.env.production ? config.production_uri : config.development_uri)),\r\n\t\t\t\tmap(uri => {\r\n\t\t\t\t\tthis.socket = io(uri);\r\n\t\t\t\t\treturn this.store.dispatch(new SocketRunSuccessfullyAction());\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe(() => {\r\n\t\t\t\tthis.socket.on(\"DISPATCH_ACTION\", data => {\r\n\t\t\t\t\tthis.store.dispatch({\r\n\t\t\t\t\t\ttype: data.type,\r\n\t\t\t\t\t\tpayload: data.payload\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\t/**\r\n\t * @example\r\n\t * this.socketService.on<number>(\"chnage-number\").subscribe(data=>{})\r\n\t * @returns\r\n\t * Observable<T>\r\n\t */\r\n\ton<T>(message): Observable<T> {\r\n\t\tconst observer$ = new Observable<T>(observer => {\r\n\t\t\tthis.socket.on(message, (data: T) => {\r\n\t\t\t\tobserver.next(data);\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn observer$;\r\n\t}\r\n\t/**\r\n\t * @example\r\n\t * this.socketService.emit(\"chnage-number\",{number:2})\r\n\t * @returns\r\n\t * void\r\n\t */\r\n\temit(message: string, payload: any): void {\r\n\t\tthis.socket.emit(message, payload);\r\n\t}\r\n}\r\n",
    "import { Action } from \"@ngrx/store\";\r\n\r\nexport enum SocketActionTypes {\r\n\tSOCKET_RUN_SUCCESSFULLY = \"[SOCKET] SOCKET_RUN_SUCCESSFULLY\",\r\n\tSOCKET_INITIALAZATION_FAILD = \"[SOCKET] SOCKET_INITIALAZATION_FAILD\"\r\n}\r\n\r\nexport class SocketRunSuccessfullyAction implements Action {\r\n\treadonly type = SocketActionTypes.SOCKET_RUN_SUCCESSFULLY;\r\n}\r\nexport class SocketInitialazationFailedAction implements Action {\r\n\treadonly type = SocketActionTypes.SOCKET_INITIALAZATION_FAILD;\r\n}\r\n\r\nexport type SocketActions = SocketRunSuccessfullyAction | SocketInitialazationFailedAction;\r\n",
    "import { BehaviorSubject } from \"rxjs\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { getSocketModuleConfig } from \"@soushians/config\";\r\n\r\nimport { SocketModuleConfig, MODULE_DEFAULT_CONFIG, MODULE_CONFIG_TOKEN } from \"../socket.config\";\r\nimport { AppState } from \"../socket.reducer\";\r\n\r\n@Injectable()\r\nexport class SocketConfigurationService {\r\n\tprivate _config: SocketModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<AppState>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\tthis.store.select(getSocketModuleConfig).subscribe((userConfig) => {\r\n\t\t\tif (!userConfig) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._config = Object.assign({}, this._config, userConfig.Config);\r\n\t\t\tthis.config$.next(this._config);\r\n\t\t});\r\n\t}\r\n}\r\n",
    "import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface SocketModuleConfig {\r\n\tdevelopment_uri: string;\r\n\tproduction_uri: string;\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t};\r\n}\r\nexport const MODULE_DEFAULT_CONFIG: SocketModuleConfig = {\r\n\tdevelopment_uri: \"http://localhost:3000\",\r\n\tproduction_uri: \"\",\r\n\tenv: {\r\n\t\tproduction: false\r\n\t}\r\n};\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<SocketModuleConfig>(\"SocketModuleConfig\");\r\n"
  ],
  "names": [
    "NgModule",
    "config",
    "Observable",
    "map",
    "store",
    "getSocketModuleConfig",
    "BehaviorSubject",
    "InjectionToken"
  ],
  "mappings": "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"
}
