{
  "version": 3,
  "file": "soushians-socket.umd.min.js",
  "sources": [
    "ng://@soushians/socket/projects/soushians/socket/src/lib/socket.config.ts",
    "ng://@soushians/socket/projects/soushians/socket/src/lib/services/socket-configuration.service.ts",
    "ng://@soushians/socket/projects/soushians/socket/src/lib/socket.actions.ts",
    "ng://@soushians/socket/projects/soushians/socket/src/lib/services/socket.service.ts",
    "ng://@soushians/socket/projects/soushians/socket/src/lib/socket.reducer.ts",
    "ng://@soushians/socket/projects/soushians/socket/src/lib/socket.module.ts"
  ],
  "sourcesContent": [
    "import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface SocketModuleConfig {\r\n\tdevelopment_uri: string;\r\n\tproduction_uri: string;\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t};\r\n}\r\nexport const MODULE_DEFAULT_CONFIG: SocketModuleConfig = {\r\n\tdevelopment_uri: \"http://localhost:3000\",\r\n\tproduction_uri: \"\",\r\n\tenv: {\r\n\t\tproduction: false\r\n\t}\r\n};\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<SocketModuleConfig>(\"SocketModuleConfig\");\r\n",
    "import { BehaviorSubject } from \"rxjs\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { getSocketModuleConfig } from \"@soushians/config\";\r\n\r\nimport { SocketModuleConfig, MODULE_DEFAULT_CONFIG, MODULE_CONFIG_TOKEN } from \"../socket.config\";\r\nimport { AppState } from \"../socket.reducer\";\r\n\r\n@Injectable()\r\nexport class SocketConfigurationService {\r\n\tprivate _config: SocketModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<AppState>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\tthis.store.select(getSocketModuleConfig).subscribe((userConfig) => {\r\n\t\t\tif (!userConfig) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._config = Object.assign({}, this._config, userConfig.Config);\r\n\t\t\tthis.config$.next(this._config);\r\n\t\t});\r\n\t}\r\n}\r\n",
    "import { Action } from \"@ngrx/store\";\r\n\r\nexport enum SocketActionTypes {\r\n\tSOCKET_RUN_SUCCESSFULLY = \"[SOCKET] SOCKET_RUN_SUCCESSFULLY\",\r\n\tSOCKET_INITIALAZATION_FAILD = \"[SOCKET] SOCKET_INITIALAZATION_FAILD\"\r\n}\r\n\r\nexport class SocketRunSuccessfullyAction implements Action {\r\n\treadonly type = SocketActionTypes.SOCKET_RUN_SUCCESSFULLY;\r\n}\r\nexport class SocketInitialazationFailedAction implements Action {\r\n\treadonly type = SocketActionTypes.SOCKET_INITIALAZATION_FAILD;\r\n}\r\n\r\nexport type SocketActions = SocketRunSuccessfullyAction | SocketInitialazationFailedAction;\r\n",
    "import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\n// import * as socketIo from \"socket.io-client\";\r\n// const socketIo = require(\"socket.io-client\");\r\n// tslint:disable-next-line:no-debugger\r\ndebugger;\r\nimport * as _io from \"socket.io-client\";\r\nconst io = _io;\r\nimport { AppState } from \"../socket.reducer\";\r\n\r\nimport { getSocketModuleConfig } from \"@soushians/config\";\r\n\r\nimport { SocketConfigurationService } from \"./socket-configuration.service\";\r\nimport { SocketRunSuccessfullyAction } from \"../socket.actions\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class SocketService {\r\n\tsocket: any;\r\n\turi: string;\r\n\tconstructor(private configService: SocketConfigurationService, private store: Store<AppState>) {\r\n\t\tthis.configService.config$\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(config => (config.env.production ? config.production_uri : config.development_uri)),\r\n\t\t\t\tmap(uri => {\r\n\t\t\t\t\tthis.socket = io(uri);\r\n\t\t\t\t\treturn this.store.dispatch(new SocketRunSuccessfullyAction());\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe(() => {\r\n\t\t\t\tthis.socket.on(\"DISPATCH_ACTION\", data => {\r\n\t\t\t\t\tthis.store.dispatch({\r\n\t\t\t\t\t\ttype: data.type,\r\n\t\t\t\t\t\tpayload: data.payload\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\t/**\r\n\t * @example\r\n\t * this.socketService.on<number>(\"chnage-number\").subscribe(data=>{})\r\n\t * @returns\r\n\t * Observable<T>\r\n\t */\r\n\ton<T>(message): Observable<T> {\r\n\t\tconst observer$ = new Observable<T>(observer => {\r\n\t\t\tthis.socket.on(message, (data: T) => {\r\n\t\t\t\tobserver.next(data);\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn observer$;\r\n\t}\r\n\t/**\r\n\t * @example\r\n\t * this.socketService.emit(\"chnage-number\",{number:2})\r\n\t * @returns\r\n\t * void\r\n\t */\r\n\temit(message: string, payload: any): void {\r\n\t\tthis.socket.emit(message, payload);\r\n\t}\r\n}\r\n",
    "import { Action } from \"@ngrx/store\";\r\n\r\nexport interface State {\r\n\tnumber: number;\r\n}\r\nexport const initialState: State = {\r\n\tnumber: 0\r\n};\r\n\r\nexport function Reducer(state = initialState, action: Action): State {\r\n\tswitch (action.type) {\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport interface SocketState {\r\n\tchange: State;\r\n}\r\n\r\nexport const SocketReducer = {\r\n\tchange: Reducer\r\n};\r\n\r\nexport interface AppState {\r\n\tsocket: SocketState;\r\n}\r\n",
    "import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\n\r\nimport { SocketService, SocketConfigurationService } from \"./services\";\r\nimport { SocketReducer } from \"./socket.reducer\";\r\nimport { SocketModuleConfig, MODULE_CONFIG_TOKEN } from \"./socket.config\";\r\n\r\n@NgModule({\r\n\timports: [ CommonModule ]\r\n})\r\nexport class NgsSocketModule {\r\n\tstatic forRoot(config?: SocketModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: NgsSocketRootModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config }, SocketConfigurationService, SocketService ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [ NgsSocketModule, StoreModule.forFeature(\"socket\", SocketReducer) ]\r\n})\r\nexport class NgsSocketRootModule {}\r\n"
  ],
  "names": [
    "MODULE_DEFAULT_CONFIG",
    "development_uri",
    "production_uri",
    "env",
    "production",
    "MODULE_CONFIG_TOKEN",
    "InjectionToken",
    "SocketConfigurationService",
    "configFile",
    "store",
    "_this",
    "this",
    "config$",
    "BehaviorSubject",
    "_config",
    "Object",
    "assign",
    "next",
    "select",
    "getSocketModuleConfig",
    "subscribe",
    "userConfig",
    "Config",
    "get",
    "enumerable",
    "SOCKET_RUN_SUCCESSFULLY",
    "SOCKET_INITIALAZATION_FAILD",
    "SocketRunSuccessfullyAction",
    "type",
    "SocketActionTypes",
    "SocketInitialazationFailedAction",
    "io",
    "_io",
    "SocketService",
    "configService",
    "pipe",
    "map",
    "config",
    "uri",
    "socket",
    "dispatch",
    "on",
    "data",
    "payload",
    "prototype",
    "message",
    "Observable",
    "observer",
    "emit",
    "initialState",
    "number",
    "SocketReducer",
    "change",
    "state",
    "action",
    "NgsSocketModule",
    "forRoot",
    "ngModule",
    "NgsSocketRootModule",
    "providers",
    "provide",
    "useValue",
    "NgModule",
    "args"
  ],
  "mappings": "omBAAA,IASAA,EAAA,CACCC,gBAAiB,wBACjBC,eAAgB,GAChBC,IAAK,CACJC,YAAY,IAGdC,EAAA,IAAAC,EAAAA,eAAA,sBCPAC,EAAA,WAOC,SAAAA,EAADC,EAAAC,GAA8D,IAA9DC,EAAAC,KAFAA,KAAAF,MAAAA,EAGEE,KAAKC,QAAU,IAAjBC,EAAAA,gBAAAb,GACEW,KAAKG,QAAPC,OAAwBC,OAAxB,GAAAhB,EAAAQ,GACEG,KAAKC,QAAPK,KAAoBN,KAApBG,SACAH,KAAAF,MAAAS,OAAAC,EAAAA,uBAAAC,UAAA,SAAAC,GACAA,IAGGX,EAAHI,QAAAC,OAA0BC,OAAO,GAAjCN,EAAAI,QAAAO,EAAAC,QACAZ,EAAAE,QAAAK,KAAAP,EAAAI,+DAZAS,IAAA,gCALAC,YAAA,sBACA,GAPAjB,qJCCAkB,wBAA2B,mCAC3BC,4BAA+B,wCAG/BC,aACAhB,KAAAiB,KAAiBC,EAAkBJ,yBAGnCK,aACAnB,KAAAiB,KAAAC,EAAAH,6BCHAK,EAAAC,EAWAC,EAAA,WAGC,SAAAA,EAADC,EAAAzB,GAAqB,IAArBC,EAAAC,KAAwEA,KAAxEuB,cAAAA,EACEvB,KAAKF,MAAPA,EACAE,KAAIuB,cAAJtB,QAGAuB,KAAAC,EAAAA,IAAA,SAAyBC,GAAzB,OAAAA,EAAAlC,IAAAC,WAAAiC,EAAAnC,eAAAmC,EAAApC,kBAAAmC,EAAAA,IAAA,SAAAE,GAEA,OADK5B,EAAM6B,OAAXR,EAAuBO,GACvB5B,EAAAD,MAAA+B,SAAA,IAAAb,MAGAP,UAAe,WACfV,EAAA6B,OAAAE,GAAA,kBAAA,SAAAC,GACAhC,EAAAD,MAAA+B,SAAA,CACMZ,KAANc,EAAAd,KACAe,QAAAD,EAAAC,cApBA,OA+BAV,EAAAW,UAAAH,GAAA,SAAoBI,GACpB,IAAGnC,EAAHC,YACA,IAAAmC,EAAAA,WAAA,SAAAC,GACArC,EAAA6B,OAAAE,GAAAI,EAAA,SAAAH,GACAK,EAAA9B,KAAAyB,QAWAT,EAAAW,UAAAI,KAAA,SAAAH,EAAAF,0BA9CAV,EAGA,GADAA,iQCdAgB,EAAA,CACCC,OAAQ,OAgBTC,EAAA,CACAC,OAdA,SAAwBC,EAAxBC,GAIA,YAHe,IAAfD,IAAAA,EAAAJ,GACAK,EAAA1B,KAEAyB,ICFAE,EAAA,yBAHA,OAMAA,EAAWC,QAAX,SAAAnB,GACA,MAAA,CACAoB,SAAAC,EACAC,UAAA,CAAA,CAAAC,QAAAvD,EAAAwD,SAAAxB,GAAA9B,EAAA0B,KATAsB,EAGA,GADAA,cAaA,CAAM3B,KAANkC,EAAAA,SAAAC,KAAA,CAAA,8BAFA,IAAAL,EACA"
}
