{"version":3,"sources":["ng://@soushians/gwt-steps/lib/given-user-is-authenticated/step-component/given-user-is-authenticated-step.component.ts","ng://@soushians/gwt-steps/lib/given-user-is-authenticated/user-is-authenticated.gwt-given-step.ts","ng://@soushians/gwt-steps/lib/if-user-have-role/step-component/operation-gwt-step.component.ts","ng://@soushians/gwt-steps/lib/if-user-have-role/user-have-role.gwt-given-step.ts","ng://@soushians/gwt-steps/lib/then-authorize/step-component/gwt-then-authorize-step.component.ts","ng://@soushians/gwt-steps/lib/then-authorize/authorize.gwt-then-step.ts","ng://@soushians/gwt-steps/lib/gwt-steps.module.ts"],"names":["GivenUserIsAuthenticatedStepComponent","FormGroup","role","FormControl","Object","defineProperty","prototype","this","formGroup","value","patchValue","Component","args","template","styles","IfUserIsAuthenticatedGwtGivenStep","injector","id","name","description","type","GwtStepTypes","Given","store","get","Store","userFacadeService","UserFacadeService","interperator","params","elementRef","getDisplayName","pipe","map","userDispalyName","IfUserHaveRoleGwtGivenStepComponent","IfUserHaveRoleGwtGivenStep","select","getAccountInfo","filter","user","Roles","length","item","toLowerCase","includes","GwtThenAuthorizeStepComponent","_this","BehaviorSubject","_create_formGroup","params$","subscribe","assign","next","verb","GwtThenAuthorizeStep","Then","display","nativeElement","style","of","GwtStepsModule","NgModule","imports","HttpClientModule","FormsModule","RouterModule","CommonModule","MatExpansionModule","MatSnackBarModule","MatIconModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatTableModule","MatSelectModule","MatAutocompleteModule","MatInputModule","MatFormFieldModule","MatTabsModule","MatDividerModule","FlexLayoutModule","MatRadioModule","MatSlideToggleModule","ReactiveFormsModule","BrowserAnimationsModule","declarations","entryComponents","exports"],"mappings":"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","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl } from \"@angular/forms\";\r\n\r\nimport { GwtGivenStepUi } from \"@soushians/rule\";\r\nimport { UserIsAuthenticatedGwtGivenStepParams } from \"../user-is-authenticated.gwt-given-step-params\";\r\n\r\n@Component({\r\n\ttemplate: `<mat-card class=\"step\" fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"center end\">\r\n  <div class=\"step-text\" fxFlex=\"nogrow\">\r\n    <span class=\"given\">\r\n        ÙÙÚ¯Ø§ÙÛ Ú©Ù\r\n    </span>\r\n    Ú©Ø§Ø±Ø¨Ø± Ø§Ø­Ø±Ø§Ø² ÙÙÛØª Ú©Ø±Ø¯Ù Ø§Ø³Øª\r\n    </div>\r\n</mat-card>`,\r\n\tstyles: [`:host{width:100%}`]\r\n})\r\nexport class GivenUserIsAuthenticatedStepComponent implements GwtGivenStepUi<UserIsAuthenticatedGwtGivenStepParams> {\r\n\tformGroup: FormGroup = new FormGroup({\r\n\t\trole: new FormControl(\"\")\r\n\t});\r\n\tset params(value) {\r\n\t\tthis.formGroup.patchValue(value);\r\n\t}\r\n\tget params(): UserIsAuthenticatedGwtGivenStepParams {\r\n\t\treturn this.formGroup.value;\r\n\t}\r\n\tconstructor() {}\r\n}\r\n","import { Injector, ElementRef } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { getAccountInfo, UserFacadeService } from \"@soushians/user\";\r\nimport { GwtStep, GwtStepTypes } from \"@soushians/rule\";\r\n\r\nimport { UserIsAuthenticatedGwtGivenStepParams } from \"./user-is-authenticated.gwt-given-step-params\";\r\nimport { GivenUserIsAuthenticatedStepComponent } from \"./step-component/given-user-is-authenticated-step.component\";\r\n\r\nexport class IfUserIsAuthenticatedGwtGivenStep implements GwtStep<UserIsAuthenticatedGwtGivenStepParams> {\r\n\tid: string;\r\n\tname: string;\r\n\topposite: boolean;\r\n\tdescription: string;\r\n\ttype: GwtStepTypes;\r\n\tparams: { role: \"\" };\r\n\tstepComponent = GivenUserIsAuthenticatedStepComponent;\r\n\tstore: Store<any>;\r\n\tuserFacadeService: UserFacadeService;\r\n\tconstructor(public injector: Injector) {\r\n\t\tdebugger;\r\n\t\tthis.id = \"if_user_is_authenticated\";\r\n\t\tthis.name = \"if user is authenticated\";\r\n\t\tthis.description = \"ÙÙÚ¯Ø§ÙÛ Ú©Ù Ú©Ø§Ø±Ø¨Ø± Ø§Ø­Ø±Ø§Ø² ÙÙÛØª Ú©Ø±Ø¯Ù Ø§Ø³Øª\";\r\n\t\tthis.type = GwtStepTypes.Given;\r\n\t\tthis.store = this.injector.get(Store);\r\n\t\tthis.userFacadeService = this.injector.get(UserFacadeService);\r\n\t}\r\n\tinterperator(params: UserIsAuthenticatedGwtGivenStepParams, elementRef: ElementRef) {\r\n\t\treturn this.userFacadeService.getDisplayName().pipe(\r\n\t\t\tmap(userDispalyName => {\r\n\t\t\t\tdebugger;\r\n\t\t\t\treturn !!userDispalyName;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl } from \"@angular/forms\";\r\nimport { GwtGivenStepUi } from \"@soushians/rule\";\r\nimport { IfUserHaveRoleGwtGivenStepParams } from \"../user-have-role.gwt-given-step\";\r\n\r\n@Component({\r\n\ttemplate: `<mat-card class=\"step\" fxLayout=\"row\" fxLayoutGap=\"25px\" fxLayoutAlign=\"center end\">\r\n  <div class=\"step-text\" fxFlex=\"nogrow\">\r\n    <span class=\"given\">\r\n        ÙÙÚ¯Ø§ÙÛ Ú©Ù\r\n    </span>\r\n    Ú©Ø§Ø±Ø¨Ø± ÙÙØ´\r\n    </div>\r\n  <div fxFlex [formGroup]=\"formGroup\">\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Ø¯Ø³ØªØ±Ø³Û\" formControlName=\"role\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"step-text\" fxFlex=\"nogrow\">Ø¯Ø§Ø±Ø¯</div>\r\n</mat-card>`,\r\n\tstyles: [`:host{width:100%}`]\r\n})\r\nexport class IfUserHaveRoleGwtGivenStepComponent implements GwtGivenStepUi<IfUserHaveRoleGwtGivenStepParams> {\r\n\tformGroup: FormGroup = new FormGroup({\r\n\t\trole: new FormControl(\"\")\r\n\t});\r\n\tset params(value) {\r\n\t\tthis.formGroup.patchValue(value);\r\n\t}\r\n\tget params(): IfUserHaveRoleGwtGivenStepParams {\r\n\t\treturn this.formGroup.value;\r\n\t}\r\n\tconstructor() {}\r\n}\r\n","import { Injector, ElementRef } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map, debounceTime, filter } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { getAccountInfo } from \"@soushians/user\";\r\nimport { GwtStep, GwtStepTypes } from \"@soushians/rule\";\r\n\r\nimport { IfUserHaveRoleGwtGivenStepComponent } from \"./step-component/operation-gwt-step.component\";\r\n\r\nexport interface IfUserHaveRoleGwtGivenStepParams {\r\n\trole: string;\r\n}\r\n\r\nexport class IfUserHaveRoleGwtGivenStep implements GwtStep<IfUserHaveRoleGwtGivenStepParams> {\r\n\tid: string;\r\n\tname: string;\r\n\topposite: boolean;\r\n\tdescription: string;\r\n\ttype: GwtStepTypes;\r\n\tparams: { role: \"\" };\r\n\tstepComponent = IfUserHaveRoleGwtGivenStepComponent;\r\n\tstore: Store<any>;\r\n\tconstructor(public injector: Injector) {\r\n\t\tthis.id = \"if_user_have_role_given_step\";\r\n\t\tthis.name = \"if user have role given step\";\r\n\t\tthis.description = \"ÙÙÚ¯Ø§ÙÛ Ú©Ù Ú©Ø§Ø±Ø¨Ø± ÙÙØ´ .. Ø±Ø§ ÙØ¯Ø§Ø±Ø¯\";\r\n\t\tthis.type = GwtStepTypes.Given;\r\n\t\tthis.store = this.injector.get(Store);\r\n\t}\r\n\tinterperator(params: IfUserHaveRoleGwtGivenStepParams, elementRef: ElementRef) {\r\n\t\tconst user$ = this.store\r\n\t\t\t.select(getAccountInfo)\r\n\t\t\t.pipe(filter(user => !!user.Roles), filter(user => user.Roles.length > 0));\r\n\t\treturn user$.pipe(\r\n\t\t\tmap(user => {\r\n\t\t\t\tdebugger;\r\n\t\t\t\treturn !(user as any).Roles.map(item => item.toLowerCase()).includes(params.role.toLowerCase());\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { GwtThenStepUi } from \"@soushians/rule\";\r\nimport { FormGroup, FormControl } from \"@angular/forms\";\r\nimport { ThenShowBlockGwtStepParams } from \"../authorize.gwt-then-step\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\n\r\n@Component({\r\n\ttemplate: `<mat-card class=\"step\" fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"start end\" [formGroup]=\"formGroup\">\r\n  <div fxFlex=\"0 0 auto\" class=\"step-text then\">\r\n    Ø¢ÙÚ¯Ø§Ù\r\n  </div>\r\n  <div fxFlex=\"0 0 auto\" class=\"step-text\">\r\n    Ø§ÛÙ Ø¨Ø®Ø´ ÙØ§Ø¨Ù ÙÙØ§ÛØ´\r\n  </div>\r\n  <div fxFlex=\"nogrow\">\r\n    <mat-form-field fxFlex=\"nogrow\">\r\n      <mat-select formControlName=\"verb\">\r\n        <mat-option value=\"visible\">Ø¨Ø§Ø´Ø¯</mat-option>\r\n        <mat-option value=\"hidden\">ÙØ¨Ø§Ø´Ø¯</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n</mat-card>`,\r\n\tstyles: [`:host{width:100%}`]\r\n})\r\nexport class GwtThenAuthorizeStepComponent implements GwtThenStepUi<any> {\r\n\tformGroup: FormGroup;\r\n\tparams$ = new BehaviorSubject<ThenShowBlockGwtStepParams>({} as ThenShowBlockGwtStepParams);\r\n\tset params(params) {\r\n\t\tif (this.formGroup) {\r\n\t\t\tthis.formGroup.patchValue(params);\r\n\t\t}\r\n\t\tthis.params$.next(params);\r\n\t}\r\n\tget params(): ThenShowBlockGwtStepParams {\r\n\t\treturn Object.assign({}, this.formGroup.value);\r\n\t}\r\n\tconstructor() {\r\n\t\tthis.formGroup = this._create_formGroup();\r\n\t\tthis.params$.subscribe(params => this.formGroup.patchValue(params));\r\n\t}\r\n\r\n\t/**\r\n\t * private methods\r\n\t */\r\n\t_create_formGroup() {\r\n\t\treturn new FormGroup({\r\n\t\t\tverb: new FormControl(\"hidden\")\r\n\t\t});\r\n\t}\r\n}\r\n","import { Injector, ElementRef } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable, of } from \"rxjs\";\r\n\r\nimport { GwtStep, GwtStepTypes } from \"@soushians/rule\";\r\n\r\nimport { GwtThenAuthorizeStepComponent } from \"./step-component/gwt-then-authorize-step.component\";\r\n\r\nexport interface ThenShowBlockGwtStepParams {\r\n\tverb: \"visible\" | \"hidden\";\r\n}\r\n\r\nexport class GwtThenAuthorizeStep implements GwtStep<ThenShowBlockGwtStepParams> {\r\n\tid: string;\r\n\tname: string;\r\n\topposite: boolean;\r\n\tdescription: string;\r\n\ttype: GwtStepTypes;\r\n\tparams: ThenShowBlockGwtStepParams;\r\n\tstepComponent = GwtThenAuthorizeStepComponent;\r\n\tstore: Store<any>;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.id = \"authorize_and_show_block\";\r\n\t\tthis.name = \"authorize and show block\";\r\n\t\tthis.description = \"Ø¢ÙÚ¯Ø§Ù Ø§ÛÙ Ø¨Ø®Ø´ ÙØ§Ø¨Ù ÙÙØ§ÛØ´ Ø§Ø³Øª\";\r\n\t\tthis.type = GwtStepTypes.Then;\r\n\t\tthis.store = this.injector.get(Store);\r\n\t}\r\n\tinterperator(params: ThenShowBlockGwtStepParams, elementRef: ElementRef) {\r\n\t\tdebugger;\r\n\t\tconst display = (params.verb === \"visible\") ? \"initial\" : \"none\";\r\n\t\telementRef.nativeElement.style.display = display;\r\n\t\treturn of(true);\r\n\t}\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule,\r\n\tMatSlideToggleModule,\r\n\tMatDividerModule,\r\n\tMatCheckboxModule,\r\n\tMatTableModule,\r\n\tMatAutocompleteModule\r\n} from \"@angular/material\";\r\n\r\nimport { GwtThenAuthorizeStepComponent } from \"./then-authorize/step-component/gwt-then-authorize-step.component\";\r\nimport { IfUserHaveRoleGwtGivenStepComponent } from \"./if-user-have-role/step-component/operation-gwt-step.component\";\r\nimport {\r\n\tGivenUserIsAuthenticatedStepComponent\r\n} from \"./given-user-is-authenticated/step-component/given-user-is-authenticated-step.component\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tRouterModule,\r\n\t\tCommonModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatTableModule,\r\n\t\tMatSelectModule,\r\n\t\tMatAutocompleteModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tMatDividerModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatRadioModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tReactiveFormsModule,\r\n\t\tBrowserAnimationsModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tGwtThenAuthorizeStepComponent,\r\n\t\tIfUserHaveRoleGwtGivenStepComponent,\r\n\t\tGivenUserIsAuthenticatedStepComponent\r\n\t],\r\n\tentryComponents: [\r\n\t\tGwtThenAuthorizeStepComponent,\r\n\t\tIfUserHaveRoleGwtGivenStepComponent,\r\n\t\tGivenUserIsAuthenticatedStepComponent\r\n\t],\r\n\texports: []\r\n})\r\nexport class GwtStepsModule { }\r\n"]}