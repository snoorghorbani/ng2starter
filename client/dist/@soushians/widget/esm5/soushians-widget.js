/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */
export { UpsertWidgetStartAction, DynamicWidgetViewComponent, WidgetSelectorComponent, NgsWidgetModule, WidgetModel, IWidgetView, IWidgetUpsert } from './public_api';
export { WidgetsManagementComponent as ɵh } from './lib/mangement/widget-management.component';
export { RootComponent as ɵg } from './lib/root/root.component';
export { WidgetDbEffects as ɵn } from './lib/root/widgets.effects';
export { Reducer as ɵm } from './lib/root/widgets.reducers';
export { GetWidgetApiEffects as ɵo } from './lib/services/api/get-widget/get-widget.effects';
export { GetWidgetsApiEffects as ɵq } from './lib/services/api/get-widgets/get-widgets.effects';
export { UpsertWidgetApiEffects as ɵs } from './lib/services/api/upsert-widget/upsert-widget.effects';
export { WidgetConfigurationService as ɵf } from './lib/services/widget-configuration.service';
export { WidgetService as ɵe } from './lib/services/widget.service';
export { DynamicWidgetConfigDirective as ɵj } from './lib/upsert/dynamic-widget-config.directive';
export { UpsertComponent as ɵi } from './lib/upsert/upsert.component';
export { DynamicWidgetViewDirective as ɵk } from './lib/view/dynamic-widget-view.directive';
export { WidgetRoutingModule as ɵl } from './lib/widget-routing.module';
export { MODULE_CONFIG_TOKEN as ɵb } from './lib/widget.config';
export { NgsWidgetRootModule as ɵa } from './lib/widget.module';
export { WidgetReducer as ɵc } from './lib/widget.reducer';

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic291c2hpYW5zLXdpZGdldC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bzb3VzaGlhbnMvd2lkZ2V0LyIsInNvdXJjZXMiOlsic291c2hpYW5zLXdpZGdldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSUEsdUpBQWMsY0FBYyxDQUFDO0FBRTdCLE9BQU8sRUFBQywwQkFBMEIsSUFBSSxFQUFFLEVBQUMsTUFBTSw2Q0FBNkMsQ0FBQztBQUM3RixPQUFPLEVBQUMsYUFBYSxJQUFJLEVBQUUsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQzlELE9BQU8sRUFBQyxlQUFlLElBQUksRUFBRSxFQUFDLE1BQU0sNEJBQTRCLENBQUM7QUFDakUsT0FBTyxFQUFDLE9BQU8sSUFBSSxFQUFFLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUUxRCxPQUFPLEVBQUMsbUJBQW1CLElBQUksRUFBRSxFQUFDLE1BQU0sa0RBQWtELENBQUM7QUFFM0YsT0FBTyxFQUFDLG9CQUFvQixJQUFJLEVBQUUsRUFBQyxNQUFNLG9EQUFvRCxDQUFDO0FBRTlGLE9BQU8sRUFBQyxzQkFBc0IsSUFBSSxFQUFFLEVBQUMsTUFBTSx3REFBd0QsQ0FBQztBQUNwRyxPQUFPLEVBQUMsMEJBQTBCLElBQUksRUFBRSxFQUFDLE1BQU0sNkNBQTZDLENBQUM7QUFDN0YsT0FBTyxFQUFDLGFBQWEsSUFBSSxFQUFFLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQztBQUNsRSxPQUFPLEVBQUMsNEJBQTRCLElBQUksRUFBRSxFQUFDLE1BQU0sOENBQThDLENBQUM7QUFDaEcsT0FBTyxFQUFDLGVBQWUsSUFBSSxFQUFFLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQztBQUNwRSxPQUFPLEVBQUMsMEJBQTBCLElBQUksRUFBRSxFQUFDLE1BQU0sMENBQTBDLENBQUM7QUFDMUYsT0FBTyxFQUFDLG1CQUFtQixJQUFJLEVBQUUsRUFBQyxNQUFNLDZCQUE2QixDQUFDO0FBQ3RFLE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxFQUFFLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUM5RCxPQUFPLEVBQUMsbUJBQW1CLElBQUksRUFBRSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDOUQsT0FBTyxFQUFnQixhQUFhLElBQUksRUFBRSxFQUFDLE1BQU0sc0JBQXNCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vcHVibGljX2FwaSc7XG5cbmV4cG9ydCB7V2lkZ2V0c01hbmFnZW1lbnRDb21wb25lbnQgYXMgybVofSBmcm9tICcuL2xpYi9tYW5nZW1lbnQvd2lkZ2V0LW1hbmFnZW1lbnQuY29tcG9uZW50JztcbmV4cG9ydCB7Um9vdENvbXBvbmVudCBhcyDJtWd9IGZyb20gJy4vbGliL3Jvb3Qvcm9vdC5jb21wb25lbnQnO1xuZXhwb3J0IHtXaWRnZXREYkVmZmVjdHMgYXMgybVufSBmcm9tICcuL2xpYi9yb290L3dpZGdldHMuZWZmZWN0cyc7XG5leHBvcnQge1JlZHVjZXIgYXMgybVtfSBmcm9tICcuL2xpYi9yb290L3dpZGdldHMucmVkdWNlcnMnO1xuZXhwb3J0IHtHZXRXaWRnZXRBY3Rpb25zIGFzIMm1cH0gZnJvbSAnLi9saWIvc2VydmljZXMvYXBpL2dldC13aWRnZXQvZ2V0LXdpZGdldC5hY3Rpb25zJztcbmV4cG9ydCB7R2V0V2lkZ2V0QXBpRWZmZWN0cyBhcyDJtW99IGZyb20gJy4vbGliL3NlcnZpY2VzL2FwaS9nZXQtd2lkZ2V0L2dldC13aWRnZXQuZWZmZWN0cyc7XG5leHBvcnQge0dldFdpZGdldHNBY3Rpb25zIGFzIMm1cn0gZnJvbSAnLi9saWIvc2VydmljZXMvYXBpL2dldC13aWRnZXRzL2dldC13aWRnZXRzLmFjdGlvbnMnO1xuZXhwb3J0IHtHZXRXaWRnZXRzQXBpRWZmZWN0cyBhcyDJtXF9IGZyb20gJy4vbGliL3NlcnZpY2VzL2FwaS9nZXQtd2lkZ2V0cy9nZXQtd2lkZ2V0cy5lZmZlY3RzJztcbmV4cG9ydCB7VXBzZXJ0V2lkZ2V0QWN0aW9ucyBhcyDJtXR9IGZyb20gJy4vbGliL3NlcnZpY2VzL2FwaS91cHNlcnQtd2lkZ2V0L3Vwc2VydC13aWRnZXQuYWN0aW9ucyc7XG5leHBvcnQge1Vwc2VydFdpZGdldEFwaUVmZmVjdHMgYXMgybVzfSBmcm9tICcuL2xpYi9zZXJ2aWNlcy9hcGkvdXBzZXJ0LXdpZGdldC91cHNlcnQtd2lkZ2V0LmVmZmVjdHMnO1xuZXhwb3J0IHtXaWRnZXRDb25maWd1cmF0aW9uU2VydmljZSBhcyDJtWZ9IGZyb20gJy4vbGliL3NlcnZpY2VzL3dpZGdldC1jb25maWd1cmF0aW9uLnNlcnZpY2UnO1xuZXhwb3J0IHtXaWRnZXRTZXJ2aWNlIGFzIMm1ZX0gZnJvbSAnLi9saWIvc2VydmljZXMvd2lkZ2V0LnNlcnZpY2UnO1xuZXhwb3J0IHtEeW5hbWljV2lkZ2V0Q29uZmlnRGlyZWN0aXZlIGFzIMm1an0gZnJvbSAnLi9saWIvdXBzZXJ0L2R5bmFtaWMtd2lkZ2V0LWNvbmZpZy5kaXJlY3RpdmUnO1xuZXhwb3J0IHtVcHNlcnRDb21wb25lbnQgYXMgybVpfSBmcm9tICcuL2xpYi91cHNlcnQvdXBzZXJ0LmNvbXBvbmVudCc7XG5leHBvcnQge0R5bmFtaWNXaWRnZXRWaWV3RGlyZWN0aXZlIGFzIMm1a30gZnJvbSAnLi9saWIvdmlldy9keW5hbWljLXdpZGdldC12aWV3LmRpcmVjdGl2ZSc7XG5leHBvcnQge1dpZGdldFJvdXRpbmdNb2R1bGUgYXMgybVsfSBmcm9tICcuL2xpYi93aWRnZXQtcm91dGluZy5tb2R1bGUnO1xuZXhwb3J0IHtNT0RVTEVfQ09ORklHX1RPS0VOIGFzIMm1Yn0gZnJvbSAnLi9saWIvd2lkZ2V0LmNvbmZpZyc7XG5leHBvcnQge05nc1dpZGdldFJvb3RNb2R1bGUgYXMgybVhfSBmcm9tICcuL2xpYi93aWRnZXQubW9kdWxlJztcbmV4cG9ydCB7QXBwU3RhdGUgYXMgybVkLFdpZGdldFJlZHVjZXIgYXMgybVjfSBmcm9tICcuL2xpYi93aWRnZXQucmVkdWNlcic7Il19