/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */
export { UpsertWidgetStartAction, DynamicWidgetViewComponent, WidgetSelectorComponent, NgsWidgetModule, WidgetModel, IWidgetView, IWidgetUpsert } from './public_api';
export { WidgetsManagementComponent as ɵi } from './lib/mangement/widget-management.component';
export { RootComponent as ɵh } from './lib/root/root.component';
export { WidgetDbEffects as ɵo } from './lib/root/widgets.effects';
export { Reducer as ɵn } from './lib/root/widgets.reducers';
export { DeleteWidgetApiEffects as ɵu } from './lib/services/api/delete-widget/delete-widget.effects';
export { GetWidgetApiEffects as ɵp } from './lib/services/api/get-widget/get-widget.effects';
export { GetWidgetsApiEffects as ɵr } from './lib/services/api/get-widgets/get-widgets.effects';
export { UpsertWidgetApiEffects as ɵt } from './lib/services/api/upsert-widget/upsert-widget.effects';
export { WidgetConfigurationService as ɵg } from './lib/services/widget-configuration.service';
export { WidgetService as ɵf } from './lib/services/widget.service';
export { DynamicWidgetConfigDirective as ɵk } from './lib/upsert/dynamic-widget-config.directive';
export { UpsertComponent as ɵj } from './lib/upsert/upsert.component';
export { DynamicWidgetViewDirective as ɵl } from './lib/view/dynamic-widget-view.directive';
export { WidgetRoutingModule as ɵm } from './lib/widget-routing.module';
export { MODULE_CONFIG_TOKEN as ɵc } from './lib/widget.config';
export { NgsWidgetRootModule as ɵb } from './lib/widget.module';
export { WidgetReducer as ɵd } from './lib/widget.reducer';

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic291c2hpYW5zLXdpZGdldC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bzb3VzaGlhbnMvd2lkZ2V0LyIsInNvdXJjZXMiOlsic291c2hpYW5zLXdpZGdldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSUEsdUpBQWMsY0FBYyxDQUFDO0FBRTdCLE9BQU8sRUFBQywwQkFBMEIsSUFBSSxFQUFFLEVBQUMsTUFBTSw2Q0FBNkMsQ0FBQztBQUM3RixPQUFPLEVBQUMsYUFBYSxJQUFJLEVBQUUsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQzlELE9BQU8sRUFBQyxlQUFlLElBQUksRUFBRSxFQUFDLE1BQU0sNEJBQTRCLENBQUM7QUFDakUsT0FBTyxFQUFDLE9BQU8sSUFBSSxFQUFFLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUUxRCxPQUFPLEVBQUMsc0JBQXNCLElBQUksRUFBRSxFQUFDLE1BQU0sd0RBQXdELENBQUM7QUFFcEcsT0FBTyxFQUFDLG1CQUFtQixJQUFJLEVBQUUsRUFBQyxNQUFNLGtEQUFrRCxDQUFDO0FBRTNGLE9BQU8sRUFBQyxvQkFBb0IsSUFBSSxFQUFFLEVBQUMsTUFBTSxvREFBb0QsQ0FBQztBQUU5RixPQUFPLEVBQUMsc0JBQXNCLElBQUksRUFBRSxFQUFDLE1BQU0sd0RBQXdELENBQUM7QUFDcEcsT0FBTyxFQUFDLDBCQUEwQixJQUFJLEVBQUUsRUFBQyxNQUFNLDZDQUE2QyxDQUFDO0FBQzdGLE9BQU8sRUFBQyxhQUFhLElBQUksRUFBRSxFQUFDLE1BQU0sK0JBQStCLENBQUM7QUFDbEUsT0FBTyxFQUFDLDRCQUE0QixJQUFJLEVBQUUsRUFBQyxNQUFNLDhDQUE4QyxDQUFDO0FBQ2hHLE9BQU8sRUFBQyxlQUFlLElBQUksRUFBRSxFQUFDLE1BQU0sK0JBQStCLENBQUM7QUFDcEUsT0FBTyxFQUFDLDBCQUEwQixJQUFJLEVBQUUsRUFBQyxNQUFNLDBDQUEwQyxDQUFDO0FBQzFGLE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxFQUFFLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQztBQUN0RSxPQUFPLEVBQUMsbUJBQW1CLElBQUksRUFBRSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDOUQsT0FBTyxFQUFDLG1CQUFtQixJQUFJLEVBQUUsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQzlELE9BQU8sRUFBZ0IsYUFBYSxJQUFJLEVBQUUsRUFBQyxNQUFNLHNCQUFzQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZW5lcmF0ZWQgYnVuZGxlIGluZGV4LiBEbyBub3QgZWRpdC5cbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL3B1YmxpY19hcGknO1xuXG5leHBvcnQge1dpZGdldHNNYW5hZ2VtZW50Q29tcG9uZW50IGFzIMm1aX0gZnJvbSAnLi9saWIvbWFuZ2VtZW50L3dpZGdldC1tYW5hZ2VtZW50LmNvbXBvbmVudCc7XG5leHBvcnQge1Jvb3RDb21wb25lbnQgYXMgybVofSBmcm9tICcuL2xpYi9yb290L3Jvb3QuY29tcG9uZW50JztcbmV4cG9ydCB7V2lkZ2V0RGJFZmZlY3RzIGFzIMm1b30gZnJvbSAnLi9saWIvcm9vdC93aWRnZXRzLmVmZmVjdHMnO1xuZXhwb3J0IHtSZWR1Y2VyIGFzIMm1bn0gZnJvbSAnLi9saWIvcm9vdC93aWRnZXRzLnJlZHVjZXJzJztcbmV4cG9ydCB7RGVsZXRlV2lkZ2V0QWN0aW9ucyBhcyDJtXZ9IGZyb20gJy4vbGliL3NlcnZpY2VzL2FwaS9kZWxldGUtd2lkZ2V0L2RlbGV0ZS13aWRnZXQuYWN0aW9ucyc7XG5leHBvcnQge0RlbGV0ZVdpZGdldEFwaUVmZmVjdHMgYXMgybV1fSBmcm9tICcuL2xpYi9zZXJ2aWNlcy9hcGkvZGVsZXRlLXdpZGdldC9kZWxldGUtd2lkZ2V0LmVmZmVjdHMnO1xuZXhwb3J0IHtHZXRXaWRnZXRBY3Rpb25zIGFzIMm1cX0gZnJvbSAnLi9saWIvc2VydmljZXMvYXBpL2dldC13aWRnZXQvZ2V0LXdpZGdldC5hY3Rpb25zJztcbmV4cG9ydCB7R2V0V2lkZ2V0QXBpRWZmZWN0cyBhcyDJtXB9IGZyb20gJy4vbGliL3NlcnZpY2VzL2FwaS9nZXQtd2lkZ2V0L2dldC13aWRnZXQuZWZmZWN0cyc7XG5leHBvcnQge0dldFdpZGdldHNBY3Rpb25zIGFzIMm1c30gZnJvbSAnLi9saWIvc2VydmljZXMvYXBpL2dldC13aWRnZXRzL2dldC13aWRnZXRzLmFjdGlvbnMnO1xuZXhwb3J0IHtHZXRXaWRnZXRzQXBpRWZmZWN0cyBhcyDJtXJ9IGZyb20gJy4vbGliL3NlcnZpY2VzL2FwaS9nZXQtd2lkZ2V0cy9nZXQtd2lkZ2V0cy5lZmZlY3RzJztcbmV4cG9ydCB7VXBzZXJ0V2lkZ2V0QWN0aW9ucyBhcyDJtWF9IGZyb20gJy4vbGliL3NlcnZpY2VzL2FwaS91cHNlcnQtd2lkZ2V0L3Vwc2VydC13aWRnZXQuYWN0aW9ucyc7XG5leHBvcnQge1Vwc2VydFdpZGdldEFwaUVmZmVjdHMgYXMgybV0fSBmcm9tICcuL2xpYi9zZXJ2aWNlcy9hcGkvdXBzZXJ0LXdpZGdldC91cHNlcnQtd2lkZ2V0LmVmZmVjdHMnO1xuZXhwb3J0IHtXaWRnZXRDb25maWd1cmF0aW9uU2VydmljZSBhcyDJtWd9IGZyb20gJy4vbGliL3NlcnZpY2VzL3dpZGdldC1jb25maWd1cmF0aW9uLnNlcnZpY2UnO1xuZXhwb3J0IHtXaWRnZXRTZXJ2aWNlIGFzIMm1Zn0gZnJvbSAnLi9saWIvc2VydmljZXMvd2lkZ2V0LnNlcnZpY2UnO1xuZXhwb3J0IHtEeW5hbWljV2lkZ2V0Q29uZmlnRGlyZWN0aXZlIGFzIMm1a30gZnJvbSAnLi9saWIvdXBzZXJ0L2R5bmFtaWMtd2lkZ2V0LWNvbmZpZy5kaXJlY3RpdmUnO1xuZXhwb3J0IHtVcHNlcnRDb21wb25lbnQgYXMgybVqfSBmcm9tICcuL2xpYi91cHNlcnQvdXBzZXJ0LmNvbXBvbmVudCc7XG5leHBvcnQge0R5bmFtaWNXaWRnZXRWaWV3RGlyZWN0aXZlIGFzIMm1bH0gZnJvbSAnLi9saWIvdmlldy9keW5hbWljLXdpZGdldC12aWV3LmRpcmVjdGl2ZSc7XG5leHBvcnQge1dpZGdldFJvdXRpbmdNb2R1bGUgYXMgybVtfSBmcm9tICcuL2xpYi93aWRnZXQtcm91dGluZy5tb2R1bGUnO1xuZXhwb3J0IHtNT0RVTEVfQ09ORklHX1RPS0VOIGFzIMm1Y30gZnJvbSAnLi9saWIvd2lkZ2V0LmNvbmZpZyc7XG5leHBvcnQge05nc1dpZGdldFJvb3RNb2R1bGUgYXMgybVifSBmcm9tICcuL2xpYi93aWRnZXQubW9kdWxlJztcbmV4cG9ydCB7QXBwU3RhdGUgYXMgybVlLFdpZGdldFJlZHVjZXIgYXMgybVkfSBmcm9tICcuL2xpYi93aWRnZXQucmVkdWNlcic7Il19