{"version":3,"sources":["ng://@soushians/widget/lib/widget.config.ts","ng://@soushians/widget/lib/services/api/get-widgets/get-widgets.model.ts","ng://@soushians/widget/lib/services/widget-configuration.service.ts","ng://@soushians/widget/lib/services/api/get-widgets/get-widgets.actions.ts","ng://@soushians/widget/lib/services/api/get-widget/get-widget.model.ts","ng://@soushians/widget/lib/services/api/get-widget/get-widget.actions.ts","ng://@soushians/widget/lib/models/upsert-widget.api-model.ts","ng://@soushians/widget/lib/models/widget.model.ts","ng://@soushians/widget/lib/services/api/upsert-widget/upsert-widget.model.ts","ng://@soushians/widget/lib/services/api/upsert-widget/upsert-widget.actions.ts","ng://@soushians/widget/lib/services/widget.service.ts","ng://@soushians/widget/lib/view/dynamic-widget-view.component.ts","ng://@soushians/widget/lib/widget-selector/widget-selector.component.ts","ng://@soushians/widget/lib/root/root.component.ts","null","ng://@soushians/widget/lib/root/widget.actions.ts","ng://@soushians/widget/lib/root/widgets.reducers.ts","ng://@soushians/widget/lib/mangement/widget-management.component.ts","ng://@soushians/widget/lib/upsert/upsert.component.ts","ng://@soushians/widget/lib/widget-routing.module.ts","ng://@soushians/widget/lib/services/api/get-widget/get-widget.effects.ts","ng://@soushians/widget/lib/services/api/upsert-widget/upsert-widget.effects.ts","ng://@soushians/widget/lib/services/api/get-widgets/get-widgets.effects.ts","ng://@soushians/widget/lib/widget.reducer.ts","ng://@soushians/widget/lib/root/widgets.effects.ts","ng://@soushians/widget/lib/upsert/dynamic-widget-config.directive.ts","ng://@soushians/widget/lib/view/dynamic-widget-view.directive.ts","ng://@soushians/widget/lib/widget.module.ts","ng://@soushians/widget/lib/models/widget-view.interface.ts","ng://@soushians/widget/lib/models/widget-upsert.interface.ts"],"names":["GetWidgetsApiModel","MODULE_DEFAULT_CONFIG","development_uri","production_uri","env","production","endpoints","upsert","find","get","types","MODULE_CONFIG_TOKEN","InjectionToken","WidgetConfigurationService","configFile","store","this","BehaviorSubject","_config","Object","assign","config$","next","defineProperty","prototype","Injectable","Inject","args","Store","Request","initValue","_this","keys","forEach","key","getRequestBody","Response","GetWidgetApiModel","GetWidgetsStartAction","GetWidgetsSucceedAction","payload","GetWidgetsFailedAction","UpsertWidgetApiModel","GetWidgetStartAction","GetWidgetSucceedAction","GetWidgetFailedAction","widget","WidgetModel","_a","_b","_id","name","type","Config","UpsertWidgetStartAction","UpsertWidgetSucceedAction","UpsertWidgetFailedAction","WidgetService","http","configurationService","pipe","filter","config","take","switchMap","stringTemplate","map","response","Result","getWidgets","model","post","selectById","subject","undefined","select","state","widgets","db","data","tap","dispatch","subscribe","FormSchemaModel","asObservable","providedIn","HttpClient","DynamicWidgetViewComponent","route","service","resolver","container","_fill_component_map","id","_selectWidget","ngOnInit","widget$","_resolve_correct_component_base_on_widget_type","startWith","mapTypeToComponent","supportedTypes","join","Error","component","resolveComponentFactory","view","createComponent","w","instance","Component","template","ActivatedRoute","ComponentFactoryResolver","ViewContainerRef","Input","WidgetSelectorComponent","widgets$","oid","selectedWidgetId","RootComponent","selector","__assign","t","s","i","n","arguments","length","p","hasOwnProperty","call","__decorate","decorators","target","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","__metadata","metadataKey","metadataValue","metadata","UpsertWidgetAction","WidgetsActionTypes","initialState","WidgetsManagementComponent","UpsertComponent","routes","path","children","WidgetRoutingModule","RouterModule","forChild","GetWidgetApiEffects","actions$","ofType","action","res","catchError","err","of","Actions","Effect","UpsertWidgetApiEffects","GetWidgetsApiEffects","WidgetReducer","_data","concat","newWidget","existedWidgetIndex","findIndex","splice","push","widgetIndex","WidgetDbEffects","pluck","DynamicWidgetConfigDirective","params","Directive","DynamicWidgetViewDirective","NgsWidgetModule","forRoot","ngModule","NgsWidgetRootModule","providers","provide","useValue","NgModule","imports","CommonModule","MatExpansionModule","MatSnackBarModule","MatIconModule","MatButtonModule","MatCardModule","MatSelectModule","MatInputModule","MatFormFieldModule","MatTabsModule","MatRadioModule","FlexLayoutModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","MatDividerModule","MatCheckboxModule","MatTableModule","declarations","entryComponents","exports","StoreModule","forFeature","EffectsModule","IWidgetView","IWidgetUpsert"],"mappings":"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","sourcesContent":["import { InjectionToken } from \"@angular/core\";\r\nimport { IModuleConfigMapTypes } from \"./models/module-config-map-types.interfce\";\r\n\r\nexport interface WidgetModuleConfig {\r\n\tdevelopment_uri?: string;\r\n\tproduction_uri?: string;\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t};\r\n\tendpoints?: {\r\n\t\tget: string;\r\n\t\tfind: string;\r\n\t\tupsert: string;\r\n\t};\r\n\ttypes?: IModuleConfigMapTypes;\r\n}\r\nexport const MODULE_DEFAULT_CONFIG: WidgetModuleConfig = {\r\n\tdevelopment_uri: \"http://localhost:3000\",\r\n\tproduction_uri: \"\",\r\n\tenv: {\r\n\t\tproduction: false\r\n\t},\r\n\tendpoints: {\r\n\t\tupsert: \"http://localhost:3000/api/uiwidget\",\r\n\t\tfind: \"http://localhost:3000/api/uiwidget\",\r\n\t\tget: \"http://localhost:3000/api/uiwidget/${model._id}\"\r\n\t},\r\n\ttypes: {}\r\n};\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<WidgetModuleConfig>(\"WidgetModuleConfig\");\r\n","import { WidgetModel } from \"../../../models\";\r\n\r\nexport namespace GetWidgetsApiModel {\r\n\texport class Request {\r\n\t\tconstructor(initValue = {}) {\r\n\t\t\tObject.keys(initValue).forEach((key) => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: WidgetModel<any>[];\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { BehaviorSubject } from \"rxjs\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { WidgetModuleConfig, MODULE_DEFAULT_CONFIG, MODULE_CONFIG_TOKEN } from \"../widget.config\";\r\nimport { AppState } from \"../widget.reducer\";\r\n\r\n@Injectable()\r\nexport class WidgetConfigurationService {\r\n\tprivate _config: WidgetModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<AppState>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\t// this.store.select(getWidgetModuleConfig).subscribe((widgetConfig) => {\r\n\t\t// \tif (!widgetConfig) {\r\n\t\t// \t\treturn;\r\n\t\t// \t}\r\n\t\t// \tthis._config = Object.assign({}, this._config, widgetConfig.Config);\r\n\t\t// \tthis.config$.next(this._config);\r\n\t\t// });\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetWidgetsApiModel } from \"./get-widgets.model\";\r\nimport { WidgetModel } from \"../../../models/widget.model\";\r\n\r\nexport const enum GET_WIDGETS_ACTION_TYPES {\r\n\tSTART = \"[GET_WIDGETS][API][GetWidgets] start\",\r\n\tSUCCEED = \"[GET_WIDGETS][API][GetWidgets] succeed\",\r\n\tFAILED = \"[GET_WIDGETS][API][GetWidgets] failed\"\r\n}\r\n\r\nexport class GetWidgetsStartAction implements Action {\r\n\treadonly type = GET_WIDGETS_ACTION_TYPES.START;\r\n}\r\nexport class GetWidgetsSucceedAction implements Action {\r\n\treadonly type = GET_WIDGETS_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: WidgetModel<any>[]) {}\r\n}\r\nexport class GetWidgetsFailedAction implements Action {\r\n\treadonly type = GET_WIDGETS_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type GetWidgetsActions = GetWidgetsStartAction | GetWidgetsSucceedAction | GetWidgetsFailedAction;\r\n","import { WidgetModel } from \"../../../models\";\r\n\r\nexport namespace GetWidgetApiModel {\r\n\texport class Request {\r\n\t\t_id: string;\r\n\t\tconstructor(initValue = {}) {\r\n\t\t\tObject.keys(initValue).forEach((key) => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: WidgetModel<any>;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetWidgetApiModel } from \"./get-widget.model\";\r\nimport { WidgetModel } from \"../../../models/widget.model\";\r\n\r\nexport const enum GET_WIDGET_ACTION_TYPES {\r\n\tSTART = \"[WIDGET][API][GetWidget] start\",\r\n\tSUCCEED = \"[WIDGET][API][GetWidget] succeed\",\r\n\tFAILED = \"[WIDGET][API][GetWidget] failed\"\r\n}\r\n\r\nexport class GetWidgetStartAction implements Action {\r\n\treadonly type = GET_WIDGET_ACTION_TYPES.START;\r\n\tconstructor(public payload: string) {}\r\n}\r\nexport class GetWidgetSucceedAction implements Action {\r\n\treadonly type = GET_WIDGET_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: WidgetModel<any>) {}\r\n}\r\nexport class GetWidgetFailedAction implements Action {\r\n\treadonly type = GET_WIDGET_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type GetWidgetActions = GetWidgetStartAction | GetWidgetSucceedAction | GetWidgetFailedAction;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { WidgetModel } from \".\";\r\n\r\nexport namespace UpsertWidgetApiModel {\r\n\texport class Request<T> {\r\n\t\twidget: WidgetModel<T>;\r\n\t\tconstructor(initValue: Partial<UpsertWidgetApiModel.Request<T>> = {}) {\r\n\t\t\tObject.keys(initValue).forEach((key) => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn this.widget;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response<T> {\r\n\t\tResult: WidgetModel<T>;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","export class WidgetModel<T> {\r\n\t_id: string;\r\n\tname: string;\r\n\ttype: string;\r\n\tConfig: T;\r\n\tconstructor({ _id, name, type, Config }: { _id?: string; name?: string; type?: string; Config?: T } = {}) {\r\n\t\tthis._id = _id;\r\n\t\tthis.name = name;\r\n\t\tthis.type = type;\r\n\t\tthis.Config = Config;\r\n\t}\r\n}\r\n","import { WidgetModel } from \"../../../models\";\r\n\r\nexport namespace UpsertWidgetApiModel {\r\n\texport class Request {\r\n\t\twidget: WidgetModel<any>;\r\n\t\tconstructor(widget = {}) {\r\n\t\t\tdebugger;\r\n\t\t\tthis.widget = new WidgetModel(widget);\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn this.widget;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: WidgetModel<any>;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { UpsertWidgetApiModel } from \"./upsert-widget.model\";\r\nimport { WidgetModel } from \"../../../models/widget.model\";\r\n\r\nexport const enum UPSERT_WIDGET_ACTION_TYPES {\r\n\tSTART = \"[UPSERT_WIDGET][API][UpsertWidget] start\",\r\n\tSUCCEED = \"[UPSERT_WIDGET][API][UpsertWidget] succeed\",\r\n\tFAILED = \"[UPSERT_WIDGET][API][UpsertWidget] failed\"\r\n}\r\n\r\nexport class UpsertWidgetStartAction implements Action {\r\n\treadonly type = UPSERT_WIDGET_ACTION_TYPES.START;\r\n\tconstructor(public payload: WidgetModel<any>) {}\r\n}\r\nexport class UpsertWidgetSucceedAction implements Action {\r\n\treadonly type = UPSERT_WIDGET_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: WidgetModel<any>) {}\r\n}\r\nexport class UpsertWidgetFailedAction implements Action {\r\n\treadonly type = UPSERT_WIDGET_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type UpsertWidgetActions = UpsertWidgetStartAction | UpsertWidgetSucceedAction | UpsertWidgetFailedAction;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { map, filter, tap, take, switchMap } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { AppState } from \"../widget.reducer\";\r\nimport { WidgetConfigurationService } from \"./widget-configuration.service\";\r\nimport { WidgetModel } from \"../models\";\r\nimport { stringTemplate } from \"@soushians/shared\";\r\nimport { GetWidgetsApiModel, GetWidgetStartAction, UpsertWidgetApiModel } from \"./api\";\r\n\r\n// import { getWidgetModuleConfig } from \"@soushians/config\";\r\n\r\n// import { WidgetConfigurationService } from \"./widget-configuration.service\";\r\n// import { WidgetRunSuccessfullyAction } from \"../widget.actions\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class WidgetService {\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate configurationService: WidgetConfigurationService\r\n\t) {}\r\n\r\n\tget<T>(_id: string): Observable<WidgetModel<T>> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.get !== \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tswitchMap((config) => this.http.get(stringTemplate(config.endpoints.get, { _id }))),\r\n\t\t\tmap((response: UpsertWidgetApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\r\n\tgetWidgets(): Observable<WidgetModel<any>[]> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.find != \"\"),\r\n\t\t\tswitchMap((config) => this.http.get(config.endpoints.find)),\r\n\t\t\tmap((response: GetWidgetsApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\tupsert<T>(widget: UpsertWidgetApiModel.Request): Observable<WidgetModel<T>> {\r\n\t\tconst model = new UpsertWidgetApiModel.Request(widget);\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.upsert != \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tswitchMap((config) => this.http.post(config.endpoints.upsert, model.getRequestBody())),\r\n\t\t\tmap((response: UpsertWidgetApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\t// delete(_id: string) {\r\n\t// \treturn this.configurationService.config$\r\n\t// \t\t.filter((config) => config.endpoints.deleteForm != \"\")\r\n\t// \t\t.switchMap((config) => this.http.get(config.endpoints.deleteForm));\r\n\t// }\r\n\tselectById<T>(_id: string): Observable<WidgetModel<T>> {\r\n\t\tconst subject = new BehaviorSubject<WidgetModel<T>>(undefined);\r\n\t\tthis.store\r\n\t\t\t.select((state) => state.widgets.db.data)\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter((widgets) => widgets != null),\r\n\t\t\t\tmap((widgets) => widgets.find((widget) => widget._id == _id)),\r\n\t\t\t\ttap((widget) => {\r\n\t\t\t\t\tif (widget == null) {\r\n\t\t\t\t\t\tthis.store.dispatch(new GetWidgetStartAction(_id));\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe((FormSchemaModel) => subject.next(FormSchemaModel));\r\n\t\treturn subject.asObservable();\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tComponentRef,\r\n\tComponentFactoryResolver,\r\n\tViewContainerRef,\r\n\tDirective,\r\n\tInput\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { WidgetModel } from \"../models\";\r\nimport { AppState } from \"../widget.reducer\";\r\nimport { pluck, filter, switchMap, map, startWith } from \"rxjs/operators\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { WidgetService, WidgetConfigurationService } from \"../services\";\r\nimport { IModuleConfigMapTypes } from \"../models/module-config-map-types.interfce\";\r\n\r\n@Component({\r\n\ttemplate: \"\"\r\n})\r\nexport class DynamicWidgetViewComponent implements OnInit {\r\n\t@Input()\r\n\tset oid(id: string) {\r\n\t\tthis._selectWidget(id);\r\n\t}\r\n\twidget$: Observable<WidgetModel<any>>;\r\n\tcomponent: ComponentRef<any>;\r\n\tmapTypeToComponent: IModuleConfigMapTypes;\r\n\tconstructor(\r\n\t\tpublic store: Store<AppState>,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate service: WidgetService,\r\n\t\tprivate configurationService: WidgetConfigurationService,\r\n\t\tprivate resolver: ComponentFactoryResolver,\r\n\t\tprivate container: ViewContainerRef\r\n\t) {\r\n\t\tthis._fill_component_map();\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.widget$.pipe(filter((widget) => widget != undefined)).subscribe((widget) => {\r\n\t\t\tthis._resolve_correct_component_base_on_widget_type(widget);\r\n\t\t});\r\n\t}\r\n\t_fill_component_map() {\r\n\t\tthis.configurationService.config$.pipe(map((config) => config.types), startWith({})).subscribe((types) => {\r\n\t\t\tdebugger;\r\n\t\t\tthis.mapTypeToComponent = types;\r\n\t\t});\r\n\t}\r\n\t_selectWidget(id: string) {\r\n\t\tthis.widget$ = this.service.selectById<any>(id);\r\n\t}\r\n\t_resolve_correct_component_base_on_widget_type(widget) {\r\n\t\tif (!this.mapTypeToComponent[widget.type]) {\r\n\t\t\tconst supportedTypes = Object.keys(this.mapTypeToComponent).join(\", \");\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Trying to use an unsupported type (${widget.type}).\r\n\t\t  \t\t Supported types: ${supportedTypes}`\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst component = this.resolver.resolveComponentFactory<any>(this.mapTypeToComponent[widget.type].view);\r\n\t\tthis.component = this.container.createComponent(component);\r\n\t\tthis.widget$.subscribe((w) => (this.component.instance.widget = w));\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { IGridItemComponent } from \"@soushians/grid\";\r\n\r\nimport { WidgetModel, IWidgetViewInputInterface } from \"../models\";\r\nimport { AppState } from \"../widget.reducer\";\r\nimport { GetWidgetsStartAction } from \"../services/api\";\r\n\r\n@Component({\r\n\ttemplate: `<mat-select placeholder=\"Grid Type\" [(ngModel)]=\"selectedWidgetId\" name=\"selectedWidgetId\">\r\n  <mat-option *ngFor=\"let item of (widgets$ | async)\" [value]=\"item._id\">\r\n    {{item.type}} : <b>{{item.name}}</b>\r\n  </mat-option>\r\n</mat-select>`\r\n})\r\nexport class WidgetSelectorComponent implements OnInit, IGridItemComponent<IWidgetViewInputInterface> {\r\n\twidgets$: Observable<WidgetModel<any>[]>;\r\n\tselectedWidgetId: string;\r\n\tget valid() {\r\n\t\treturn this.config.oid != undefined;\r\n\t}\r\n\tget config() {\r\n\t\treturn {\r\n\t\t\toid: this.selectedWidgetId\r\n\t\t};\r\n\t}\r\n\tconstructor(public store: Store<AppState>) {\r\n\t\tthis.widgets$ = this.store.select((state) => state.widgets.db.data);\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.store.dispatch(new GetWidgetsStartAction());\r\n\t}\r\n}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n\tselector: \"widget-root\",\r\n\ttemplate: \"<router-outlet></router-outlet>\"\r\n})\r\nexport class RootComponent {}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { WidgetModel } from \"../models\";\r\n\r\nexport enum WidgetsActionTypes {\r\n\tUPSERT = \"[WIDGET][DB] UPSERT\",\r\n\tDELETE = \"[WIDGET][DB] DELETE\"\r\n}\r\n\r\nexport class UpsertWidgetAction implements Action {\r\n\treadonly type = WidgetsActionTypes.UPSERT;\r\n\tconstructor(public payload: WidgetModel<any>[]) {}\r\n}\r\nexport class DeleteWidgetAction implements Action {\r\n\treadonly type = WidgetsActionTypes.DELETE;\r\n\tconstructor(public payload: WidgetModel<any>) {}\r\n}\r\n\r\nexport type WidgetsActions = UpsertWidgetAction | DeleteWidgetAction;\r\n","import { WidgetModel } from \"../models\";\r\nimport { WidgetsActions, WidgetsActionTypes } from \"./widget.actions\";\r\n\r\nexport interface State {\r\n\tdata: WidgetModel<any>[];\r\n}\r\n\r\nconst initialState: State = {\r\n\tdata: []\r\n};\r\n\r\nexport function Reducer(state = initialState, action: WidgetsActions): State {\r\n\tlet _data: WidgetModel<any>[];\r\n\tswitch (action.type) {\r\n\t\tcase WidgetsActionTypes.UPSERT:\r\n\t\t\t_data = state.data.concat();\r\n\t\t\tconst newWidgets = action.payload;\r\n\r\n\t\t\tnewWidgets.forEach((newWidget) => {\r\n\t\t\t\tconst existedWidgetIndex = _data.findIndex((w) => w._id == newWidget._id);\r\n\t\t\t\tif (existedWidgetIndex > -1) {\r\n\t\t\t\t\t_data.splice(existedWidgetIndex, 1, newWidget);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_data.push(newWidget);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: _data\r\n\t\t\t};\r\n\r\n\t\tcase WidgetsActionTypes.DELETE:\r\n\t\t\t_data = Object.assign({}, state.data);\r\n\r\n\t\t\tconst widgetIndex = state.data.findIndex((w) => w._id == action.payload._id);\r\n\t\t\t_data.splice(widgetIndex, 1);\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: _data\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const getWidgets = (state: State) => state.data;\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { WidgetModel } from \"../models\";\r\nimport { AppState } from \"../widget.reducer\";\r\nimport { GetWidgetsStartAction } from \"../services/api\";\r\n\r\n@Component({\r\n\ttemplate: `<div fxLayout=\"row wrap\" fxLayoutAlign=\"center center\" >\r\n    <mat-card class=\"cards-item\" *ngFor=\"let item of (widgets$ | async)\" fxFlex=\"51\">\r\n      <h3>\r\n        <a [routerLink]=\"['../upsert' ,  item.type,  item._id]\">\r\n          <mat-icon aria-label=\"edit widget\">edit</mat-icon>\r\n        </a>\r\n        {{item.name}}\r\n      </h3>\r\n  </mat-card>\r\n</div>`\r\n})\r\nexport class WidgetsManagementComponent implements OnInit {\r\n\twidgets$: Observable<WidgetModel<any>[]>;\r\n\tconstructor(public store: Store<AppState>) {\r\n\t\tthis.widgets$ = this.store.select((state) => state.widgets.db.data);\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.store.dispatch(new GetWidgetsStartAction());\r\n\t}\r\n}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n\ttemplate: `<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <div fxFlex=\"50\">\r\n        <ng-container ngsDynamicWidgetConfig></ng-container>\r\n    </div>\r\n</div>`\r\n})\r\nexport class UpsertComponent {}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { RootComponent } from \"./root\";\r\nimport { WidgetsManagementComponent } from \"./mangement\";\r\nimport { UpsertComponent } from \"./upsert/upsert.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"widget\",\r\n\t\tcomponent: RootComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"management\",\r\n\t\t\t\tcomponent: WidgetsManagementComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"upsert/:type\",\r\n\t\t\t\tcomponent: UpsertComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"upsert/:type/:_id\",\r\n\t\t\t\tcomponent: UpsertComponent\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const WidgetRoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { WidgetService } from \"../../widget.service\";\r\nimport {\r\n\tGET_WIDGET_ACTION_TYPES,\r\n\tGetWidgetActions,\r\n\tGetWidgetSucceedAction,\r\n\tGetWidgetFailedAction\r\n} from \"./get-widget.actions\";\r\n\r\n@Injectable()\r\nexport class GetWidgetApiEffects {\r\n\tconstructor(private actions$: Actions<GetWidgetActions>, private service: WidgetService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$\r\n\t\t.ofType(GET_WIDGET_ACTION_TYPES.START)\r\n\t\t.pipe(\r\n\t\t\tmap((action) => action.payload),\r\n\t\t\tswitchMap((payload) => this.service.get(payload)),\r\n\t\t\tmap((res) => new GetWidgetSucceedAction(res)),\r\n\t\t\tcatchError((err) => of(new GetWidgetFailedAction(err)))\r\n\t\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { WidgetService } from \"../../widget.service\";\r\nimport {\r\n\tUPSERT_WIDGET_ACTION_TYPES,\r\n\tUpsertWidgetActions,\r\n\tUpsertWidgetSucceedAction,\r\n\tUpsertWidgetFailedAction\r\n} from \"./upsert-widget.actions\";\r\n\r\n@Injectable()\r\nexport class UpsertWidgetApiEffects {\r\n\tconstructor(private actions$: Actions<UpsertWidgetActions>, private service: WidgetService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$\r\n\t\t.ofType(UPSERT_WIDGET_ACTION_TYPES.START)\r\n\t\t.pipe(\r\n\t\t\tmap((action) => action.payload),\r\n\t\t\tswitchMap((payload) => this.service.upsert(payload)),\r\n\t\t\tmap((res) => new UpsertWidgetSucceedAction(res)),\r\n\t\t\tcatchError((err) => of(new UpsertWidgetFailedAction(err)))\r\n\t\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { WidgetService } from \"../../widget.service\";\r\nimport {\r\n\tGET_WIDGETS_ACTION_TYPES,\r\n\tGetWidgetsActions,\r\n\tGetWidgetsSucceedAction,\r\n\tGetWidgetsFailedAction\r\n} from \"./get-widgets.actions\";\r\n\r\n@Injectable()\r\nexport class GetWidgetsApiEffects {\r\n\tconstructor(private actions$: Actions<GetWidgetsActions>, private service: WidgetService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$\r\n\t\t.ofType(GET_WIDGETS_ACTION_TYPES.START)\r\n\t\t.pipe(\r\n\t\t\tswitchMap(() =>\r\n\t\t\t\tthis.service\r\n\t\t\t\t\t.getWidgets()\r\n\t\t\t\t\t.pipe(\r\n\t\t\t\t\t\tmap((res) => new GetWidgetsSucceedAction(res)),\r\n\t\t\t\t\t\tcatchError((err) => of(new GetWidgetsFailedAction(err)))\r\n\t\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n}\r\n","import * as fromRoot from \"./root/widgets.reducers\";\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface WidgetState {\r\n\tdb: fromRoot.State;\r\n}\r\n\r\nexport const WidgetReducer = {\r\n\tdb: fromRoot.Reducer\r\n};\r\n\r\nexport interface AppState {\r\n\twidgets: WidgetState;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map, pluck } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { GET_WIDGET_ACTION_TYPES, GET_WIDGETS_ACTION_TYPES } from \"../services/api\";\r\nimport { WidgetModel } from \"../models\";\r\nimport { UpsertWidgetAction } from \"./widget.actions\";\r\n\r\n@Injectable()\r\nexport class WidgetDbEffects {\r\n\tconstructor(private actions$: Actions<any>) {}\r\n\r\n\t@Effect()\r\n\tUpsert$ = this.actions$\r\n\t\t.ofType(GET_WIDGET_ACTION_TYPES.SUCCEED)\r\n\t\t.pipe(pluck(\"payload\"), map((widget: WidgetModel<any>) => new UpsertWidgetAction([ widget ])));\r\n\r\n\t@Effect()\r\n\tUpsertMany$ = this.actions$\r\n\t\t.ofType(GET_WIDGETS_ACTION_TYPES.SUCCEED)\r\n\t\t.pipe(pluck(\"payload\"), map((widgets: WidgetModel<any>[]) => new UpsertWidgetAction(widgets)));\r\n}\r\n","import { Component, OnInit, ComponentRef, ComponentFactoryResolver, ViewContainerRef, Directive } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { WidgetModel } from \"../models\";\r\nimport { AppState } from \"../widget.reducer\";\r\nimport { pluck, filter, switchMap, map, startWith } from \"rxjs/operators\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { WidgetService, WidgetConfigurationService } from \"../services\";\r\nimport { IModuleConfigMapTypes } from \"../models/module-config-map-types.interfce\";\r\n\r\n@Directive({\r\n\tselector: \"[ngsDynamicWidgetConfig]\"\r\n})\r\nexport class DynamicWidgetConfigDirective implements OnInit {\r\n\twidget$: Observable<WidgetModel<any>>;\r\n\tcomponent: ComponentRef<any>;\r\n\tmapTypeToComponent: IModuleConfigMapTypes;\r\n\tconstructor(\r\n\t\tpublic store: Store<AppState>,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate service: WidgetService,\r\n\t\tprivate configurationService: WidgetConfigurationService,\r\n\t\tprivate resolver: ComponentFactoryResolver,\r\n\t\tprivate container: ViewContainerRef\r\n\t) {\r\n\t\tthis._fill_component_map();\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis._selectWidget();\r\n\t\tthis.widget$.pipe(filter((widget) => widget != undefined)).subscribe((widget) => {\r\n\t\t\tthis._resolve_correct_component_base_on_widget_type(widget);\r\n\t\t});\r\n\t}\r\n\t_fill_component_map() {\r\n\t\tthis.configurationService.config$.pipe(map((config) => config.types), startWith({})).subscribe((types) => {\r\n\t\t\tdebugger;\r\n\t\t\tthis.mapTypeToComponent = types;\r\n\t\t});\r\n\t}\r\n\t_selectWidget() {\r\n\t\tthis.widget$ = this.route.params.pipe(\r\n\t\t\tpluck(\"_id\"),\r\n\t\t\tfilter((id: string) => id != null),\r\n\t\t\tswitchMap((id) => this.service.selectById<any>(id))\r\n\t\t);\r\n\t}\r\n\t_resolve_correct_component_base_on_widget_type(widget) {\r\n\t\tif (!this.mapTypeToComponent[widget.type]) {\r\n\t\t\tconst supportedTypes = Object.keys(this.mapTypeToComponent).join(\", \");\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Trying to use an unsupported type (${widget.type}).\r\n\t\t  \t\t Supported types: ${supportedTypes}`\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst component = this.resolver.resolveComponentFactory<any>(this.mapTypeToComponent[widget.type].upsert);\r\n\t\tthis.component = this.container.createComponent(component);\r\n\t\tthis.widget$.subscribe((w) => (this.component.instance.widget = w));\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tComponentRef,\r\n\tComponentFactoryResolver,\r\n\tViewContainerRef,\r\n\tDirective,\r\n\tInput\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { WidgetModel } from \"../models\";\r\nimport { AppState } from \"../widget.reducer\";\r\nimport { pluck, filter, switchMap, map, startWith } from \"rxjs/operators\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { WidgetService, WidgetConfigurationService } from \"../services\";\r\nimport { IModuleConfigMapTypes } from \"../models/module-config-map-types.interfce\";\r\n\r\n@Directive({\r\n\tselector: \"[ngsDynamicWidgetView]\"\r\n})\r\nexport class DynamicWidgetViewDirective implements OnInit {\r\n\t@Input()\r\n\tset oid(id: string) {\r\n\t\tthis._selectWidget(id);\r\n\t}\r\n\twidget$: Observable<WidgetModel<any>>;\r\n\tcomponent: ComponentRef<any>;\r\n\tmapTypeToComponent: IModuleConfigMapTypes;\r\n\tconstructor(\r\n\t\tpublic store: Store<AppState>,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate service: WidgetService,\r\n\t\tprivate configurationService: WidgetConfigurationService,\r\n\t\tprivate resolver: ComponentFactoryResolver,\r\n\t\tprivate container: ViewContainerRef\r\n\t) {\r\n\t\tthis._fill_component_map();\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.widget$.pipe(filter((widget) => widget != undefined)).subscribe((widget) => {\r\n\t\t\tthis._resolve_correct_component_base_on_widget_type(widget);\r\n\t\t});\r\n\t}\r\n\t_fill_component_map() {\r\n\t\tthis.configurationService.config$.pipe(map((config) => config.types), startWith({})).subscribe((types) => {\r\n\t\t\tdebugger;\r\n\t\t\tthis.mapTypeToComponent = types;\r\n\t\t});\r\n\t}\r\n\t_selectWidget(id: string) {\r\n\t\tthis.widget$ = this.service.selectById<any>(id);\r\n\t}\r\n\t_resolve_correct_component_base_on_widget_type(widget) {\r\n\t\tif (!this.mapTypeToComponent[widget.type]) {\r\n\t\t\tconst supportedTypes = Object.keys(this.mapTypeToComponent).join(\", \");\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Trying to use an unsupported type (${widget.type}).\r\n\t\t  \t\t Supported types: ${supportedTypes}`\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst component = this.resolver.resolveComponentFactory<any>(this.mapTypeToComponent[widget.type].view);\r\n\t\tthis.component = this.container.createComponent(component);\r\n\t\tthis.widget$.subscribe((w) => (this.component.instance.widget = w));\r\n\t}\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule,\r\n\tMatSlideToggleModule,\r\n\tMatDividerModule,\r\n\tMatCheckbox,\r\n\tMatCheckboxModule,\r\n\tMatTableModule\r\n} from \"@angular/material\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\n\r\nimport { WidgetService, WidgetConfigurationService } from \"./services\";\r\n// import { WidgetReducer } from \"./widget.reducer\";\r\nimport { WidgetModuleConfig, MODULE_CONFIG_TOKEN } from \"./widget.config\";\r\nimport { WidgetRoutingModule } from \"./widget-routing.module\";\r\nimport { RootComponent } from \"./root\";\r\nimport { GetWidgetApiEffects } from \"./services/api/get-widget/get-widget.effects\";\r\nimport { UpsertWidgetApiEffects } from \"./services/api/upsert-widget/upsert-widget.effects\";\r\nimport { GetWidgetsApiEffects } from \"./services/api/get-widgets/get-widgets.effects\";\r\nimport { WidgetReducer } from \"./widget.reducer\";\r\nimport { WidgetDbEffects } from \"./root/widgets.effects\";\r\nimport { WidgetsManagementComponent } from \"./mangement\";\r\nimport { UpsertComponent } from \"./upsert/upsert.component\";\r\nimport { DynamicWidgetConfigDirective } from \"./upsert/dynamic-widget-config.directive\";\r\nimport { DynamicWidgetViewDirective } from \"./view/dynamic-widget-view.directive\";\r\nimport { WidgetSelectorComponent } from \"./widget-selector/widget-selector.component\";\r\nimport { DynamicWidgetViewComponent } from \"./view/dynamic-widget-view.component\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tRouterModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSelectModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tMatRadioModule,\r\n\t\tFlexLayoutModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tMatDividerModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatTableModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tRootComponent,\r\n\t\tWidgetsManagementComponent,\r\n\t\tUpsertComponent,\r\n\t\tDynamicWidgetConfigDirective,\r\n\t\tDynamicWidgetViewDirective,\r\n\t\tWidgetSelectorComponent,\r\n\t\tDynamicWidgetViewComponent\r\n\t],\r\n\tentryComponents: [ WidgetSelectorComponent, DynamicWidgetViewComponent ],\r\n\texports: [ DynamicWidgetViewDirective, WidgetSelectorComponent, DynamicWidgetViewComponent ]\r\n})\r\nexport class NgsWidgetModule {\r\n\tstatic forRoot(config?: WidgetModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: NgsWidgetRootModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config }, WidgetConfigurationService, WidgetService ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsWidgetModule,\r\n\t\tWidgetRoutingModule,\r\n\t\tStoreModule.forFeature(\"widgets\", WidgetReducer),\r\n\t\tEffectsModule.forFeature([ WidgetDbEffects, GetWidgetApiEffects, GetWidgetsApiEffects, UpsertWidgetApiEffects ])\r\n\t],\r\n\texports: [ NgsWidgetModule ]\r\n})\r\nexport class NgsWidgetRootModule {}\r\n","import { WidgetModel } from \"./widget.model\";\r\n\r\nexport class IWidgetView<T> {\r\n\twidget: WidgetModel<T>;\r\n}\r\n","import { WidgetModel } from \"./widget.model\";\r\n\r\nexport class IWidgetUpsert<T> {\r\n\twidget: WidgetModel<T>;\r\n}\r\n"]}