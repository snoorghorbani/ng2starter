{"version":3,"sources":["ng://@soushians/widget/lib/services/api/get-widgets/get-widgets.model.ts","ng://@soushians/widget/lib/services/api/upsert-widget/upsert-widget.actions.ts","ng://@soushians/widget/lib/widget.config.ts","ng://@soushians/widget/lib/services/widget-configuration.service.ts","ng://@soushians/widget/lib/services/api/get-widgets/get-widgets.actions.ts","ng://@soushians/widget/lib/services/api/get-widget/get-widget.model.ts","ng://@soushians/widget/lib/services/api/get-widget/get-widget.actions.ts","ng://@soushians/widget/lib/services/api/upsert-widget/upsert-widget.model.ts","ng://@soushians/widget/lib/services/api/delete-widget/delete-widget.model.ts","ng://@soushians/widget/lib/models/widget.model.ts","ng://@soushians/widget/lib/services/api/delete-widget/delete-widget.actions.ts","ng://@soushians/widget/lib/services/widget.service.ts","ng://@soushians/widget/lib/view/dynamic-widget-view.component.ts","ng://@soushians/widget/lib/widget-selector/widget-selector.component.ts","ng://@soushians/widget/lib/root/root.component.ts","ng://@soushians/widget/lib/mangement/widget-management.component.ts","ng://@soushians/widget/lib/upsert/upsert.component.ts","ng://@soushians/widget/lib/widget-routing.module.ts","dist/@soushians/widget/node_modules/tslib/tslib.es6.js","ng://@soushians/widget/lib/services/api/get-widget/get-widget.effects.ts","ng://@soushians/widget/lib/services/api/upsert-widget/upsert-widget.effects.ts","ng://@soushians/widget/lib/services/api/get-widgets/get-widgets.effects.ts","ng://@soushians/widget/lib/services/api/delete-widget/delete-widget.effects.ts","ng://@soushians/widget/lib/root/widget.actions.ts","ng://@soushians/widget/lib/root/widgets.reducers.ts","ng://@soushians/widget/lib/widget.reducer.ts","ng://@soushians/widget/lib/root/widgets.effects.ts","ng://@soushians/widget/lib/upsert/dynamic-widget-config.directive.ts","ng://@soushians/widget/lib/view/dynamic-widget-view.directive.ts","ng://@soushians/widget/lib/widget.module.ts","ng://@soushians/widget/lib/models/widget-view.interface.ts","ng://@soushians/widget/lib/models/widget-upsert.interface.ts"],"names":["GetWidgetsApiModel","UpsertWidgetStartAction","payload","this","type","UpsertWidgetSucceedAction","UpsertWidgetFailedAction","MODULE_DEFAULT_CONFIG","env","production","frontend_server","endpoints","upsert","find","get","deleteItem","types","MODULE_CONFIG_TOKEN","InjectionToken","WidgetConfigurationService","configFile","store","config$","BehaviorSubject","_config","Object","assign","next","defineProperty","prototype","Injectable","Inject","args","Store","Request","initValue","_this","keys","forEach","key","getRequestBody","Response","GetWidgetApiModel","GetWidgetsStartAction","GetWidgetsSucceedAction","GetWidgetsFailedAction","UpsertWidgetApiModel","DeleteWidgetApiModel","GetWidgetStartAction","GetWidgetSucceedAction","GetWidgetFailedAction","WidgetModel","_a","_b","_id","name","Config","widget","DeleteWidgetStartAction","DeleteWidgetSucceedAction","DeleteWidgetFailedAction","WidgetService","http","configurationService","_location","pipe","filter","config","take","switchMap","stringTemplate","map","response","Result","getWidgets","model","post","tap","back","delete","widgetId","selectById","subject","undefined","select","state","widgets","db","data","dispatch","subscribe","asObservable","HttpClient","Location","DynamicWidgetViewComponent","service","resolver","container","_fill_component_map","id","_selectWidget","ngOnInit","widget$","_resolve_correct_component_base_on_widget_type","startWith","mapTypeToComponent","supportedTypes","join","Error","component","resolveComponentFactory","view","createComponent","w","instance","Component","selector","template","ComponentFactoryResolver","ViewContainerRef","Input","WidgetSelectorComponent","widgets$","oid","selectedWidgetId","RootComponent","WidgetsManagementComponent","_fill_anghazi","remove","item","anghazi","article","color","icon","links","list","UpsertComponent","routes","path","children","WidgetRoutingModule","RouterModule","forChild","__assign","t","s","i","n","arguments","length","p","hasOwnProperty","call","apply","__decorate","decorators","target","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","__metadata","metadataKey","metadataValue","metadata","GetWidgetApiEffects","actions$","start$","ofType","pluck","res","catchError","err","of","Actions","tslib_1.__decorate","Effect","UpsertWidgetApiEffects","GetWidgetsApiEffects","DeleteWidgetApiEffects","UpsertWidgetAction","WidgetsActionTypes","DeleteWidgetAction","initialState","Reducer","action","_data","concat","newWidgets","Array","console","error","newWidget","existedWidgetIndex","findIndex","splice","push","widgetIndex","WidgetReducer","fromRoot.Reducer","WidgetDbEffects","Upsert$","UpsertMany$","Delete$","DynamicWidgetConfigDirective","route","_react_base_on_params","params","destroy","Directive","ActivatedRoute","DynamicWidgetViewDirective","NgsWidgetModule","forRoot","ngModule","NgsWidgetRootModule","providers","provide","useValue","NgModule","imports","CommonModule","MatExpansionModule","MatSnackBarModule","MatIconModule","MatButtonModule","MatCardModule","MatSelectModule","MatInputModule","MatFormFieldModule","MatTabsModule","MatRadioModule","FlexLayoutModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","MatDividerModule","MatCheckboxModule","MatTableModule","MatMenuModule","declarations","entryComponents","exports","StoreModule","forFeature","EffectsModule","IWidgetView","IWidgetUpsert"],"mappings":"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","sourcesContent":["import { WidgetModel } from \"../../../models/widget.model\";\r\n\r\nexport namespace GetWidgetsApiModel {\r\n\texport class Request {\r\n\t\tconstructor(initValue = {}) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: WidgetModel<any>[];\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { UpsertWidgetApiModel } from \"./upsert-widget.model\";\r\nimport { WidgetModel } from \"../../../models/widget.model\";\r\n\r\nexport const enum UPSERT_WIDGET_ACTION_TYPES {\r\n\tSTART = \"[UPSERT_WIDGET][API][UpsertWidget] start\",\r\n\tSUCCEED = \"[UPSERT_WIDGET][API][UpsertWidget] succeed\",\r\n\tFAILED = \"[UPSERT_WIDGET][API][UpsertWidget] failed\"\r\n}\r\n\r\nexport class UpsertWidgetStartAction implements Action {\r\n\treadonly type = UPSERT_WIDGET_ACTION_TYPES.START;\r\n\tconstructor(public payload: WidgetModel<any>) {}\r\n}\r\nexport class UpsertWidgetSucceedAction implements Action {\r\n\treadonly type = UPSERT_WIDGET_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: WidgetModel<any>) {}\r\n}\r\nexport class UpsertWidgetFailedAction implements Action {\r\n\treadonly type = UPSERT_WIDGET_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type UpsertWidgetActions = UpsertWidgetStartAction | UpsertWidgetSucceedAction | UpsertWidgetFailedAction;\r\n","import { InjectionToken } from \"@angular/core\";\r\n\r\nimport { IModuleConfigMapTypes } from \"./models/module-config-map-types.interfce\";\r\n\r\nexport interface WidgetModuleConfig {\r\n\tdevelopment_uri?: string;\r\n\tproduction_uri?: string;\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t};\r\n\tendpoints?: {\r\n\t\tget: string;\r\n\t\tfind: string;\r\n\t\tupsert: string;\r\n\t\tdeleteItem: string;\r\n\t};\r\n\ttypes?: IModuleConfigMapTypes;\r\n}\r\nexport const MODULE_DEFAULT_CONFIG: WidgetModuleConfig = {\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"frontend_server/did/not/set\"\r\n\t},\r\n\tendpoints: {\r\n\t\tupsert: \"/api/uiwidget\",\r\n\t\tfind: \"/api/uiwidget\",\r\n\t\tget: \"/api/uiwidget/${model._id}\",\r\n\t\tdeleteItem: \"/api/uiwidget/${model.widgetId}\"\r\n\t},\r\n\ttypes: {}\r\n};\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<WidgetModuleConfig>(\"WidgetModuleConfig\");\r\n","import { BehaviorSubject } from \"rxjs\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { WidgetModuleConfig, MODULE_DEFAULT_CONFIG, MODULE_CONFIG_TOKEN } from \"../widget.config\";\r\nimport { AppState } from \"../widget.reducer\";\r\n\r\n@Injectable()\r\nexport class WidgetConfigurationService {\r\n\tprivate _config: WidgetModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<AppState>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\t// this.store.select(getWidgetModuleConfig).subscribe((widgetConfig) => {\r\n\t\t// \tif (!widgetConfig) {\r\n\t\t// \t\treturn;\r\n\t\t// \t}\r\n\t\t// \tthis._config = Object.assign({}, this._config, widgetConfig.Config);\r\n\t\t// \tthis.config$.next(this._config);\r\n\t\t// });\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetWidgetsApiModel } from \"./get-widgets.model\";\r\nimport { WidgetModel } from \"../../../models/widget.model\";\r\n\r\nexport const enum GET_WIDGETS_ACTION_TYPES {\r\n\tSTART = \"[GET_WIDGETS][API][GetWidgets] start\",\r\n\tSUCCEED = \"[GET_WIDGETS][API][GetWidgets] succeed\",\r\n\tFAILED = \"[GET_WIDGETS][API][GetWidgets] failed\"\r\n}\r\n\r\nexport class GetWidgetsStartAction implements Action {\r\n\treadonly type = GET_WIDGETS_ACTION_TYPES.START;\r\n}\r\nexport class GetWidgetsSucceedAction implements Action {\r\n\treadonly type = GET_WIDGETS_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: WidgetModel<any>[]) {}\r\n}\r\nexport class GetWidgetsFailedAction implements Action {\r\n\treadonly type = GET_WIDGETS_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type GetWidgetsActions = GetWidgetsStartAction | GetWidgetsSucceedAction | GetWidgetsFailedAction;\r\n","import { WidgetModel } from \"../../../models/widget.model\";\r\n\r\nexport namespace GetWidgetApiModel {\r\n\texport class Request {\r\n\t\t_id: string;\r\n\t\tconstructor(initValue = {}) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: WidgetModel<any>;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetWidgetApiModel } from \"./get-widget.model\";\r\nimport { WidgetModel } from \"../../../models/widget.model\";\r\n\r\nexport const enum GET_WIDGET_ACTION_TYPES {\r\n\tSTART = \"[WIDGET][API][GetWidget] start\",\r\n\tSUCCEED = \"[WIDGET][API][GetWidget] succeed\",\r\n\tFAILED = \"[WIDGET][API][GetWidget] failed\"\r\n}\r\n\r\nexport class GetWidgetStartAction implements Action {\r\n\treadonly type = GET_WIDGET_ACTION_TYPES.START;\r\n\tconstructor(public payload: string) {}\r\n}\r\nexport class GetWidgetSucceedAction implements Action {\r\n\treadonly type = GET_WIDGET_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: WidgetModel<any>) {}\r\n}\r\nexport class GetWidgetFailedAction implements Action {\r\n\treadonly type = GET_WIDGET_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type GetWidgetActions = GetWidgetStartAction | GetWidgetSucceedAction | GetWidgetFailedAction;\r\n","import { WidgetModel } from \"../../../models/widget.model\";\r\n\r\nexport namespace UpsertWidgetApiModel {\r\n\texport class Request {\r\n\t\twidget: WidgetModel<any>;\r\n\t\tconstructor(widget = {}) {\r\n\t\t\tdebugger;\r\n\t\t\tthis.widget = new WidgetModel(widget);\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn this.widget;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: WidgetModel<any>;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { WidgetModel } from \"../../../models/widget.model\";\r\n\r\nexport namespace DeleteWidgetApiModel {\r\n\texport class Request {\r\n\t\twidget: WidgetModel<any>;\r\n\t\tconstructor(widget = {}) {\r\n\t\t\tdebugger;\r\n\t\t\tthis.widget = new WidgetModel(widget);\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn this.widget;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: WidgetModel<any>;\r\n\t\tconstructor() { }\r\n\t}\r\n}\r\n","export class WidgetModel<T> {\r\n\t_id: string;\r\n\tname: string;\r\n\ttype: string;\r\n\tConfig: T;\r\n\tconstructor({ _id, name, type, Config }: { _id?: string; name?: string; type?: string; Config?: T } = {}) {\r\n\t\tthis._id = _id;\r\n\t\tthis.name = name || \"\";\r\n\t\tthis.type = type;\r\n\t\tthis.Config = Config || ({} as T);\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { WidgetModel } from \"../../../models/widget.model\";\r\n\r\nexport const enum DELETE_WIDGET_ACTION_TYPES {\r\n\tSTART = \"[DELETE_WIDGET][API][DeleteWidget] start\",\r\n\tSUCCEED = \"[DELETE_WIDGET][API][DeleteWidget] succeed\",\r\n\tFAILED = \"[DELETE_WIDGET][API][DeleteWidget] failed\"\r\n}\r\n\r\nexport class DeleteWidgetStartAction implements Action {\r\n\treadonly type = DELETE_WIDGET_ACTION_TYPES.START;\r\n\tconstructor(public payload: WidgetModel<any>) { }\r\n}\r\nexport class DeleteWidgetSucceedAction implements Action {\r\n\treadonly type = DELETE_WIDGET_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: WidgetModel<any>) { }\r\n}\r\nexport class DeleteWidgetFailedAction implements Action {\r\n\treadonly type = DELETE_WIDGET_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: WidgetModel<any>) { }\r\n}\r\n\r\nexport type DeleteWidgetActions = DeleteWidgetStartAction | DeleteWidgetSucceedAction | DeleteWidgetFailedAction;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { map, filter, tap, take, switchMap } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { AppState } from \"../widget.reducer\";\r\nimport { WidgetConfigurationService } from \"./widget-configuration.service\";\r\nimport { WidgetModel } from \"../models/widget.model\";\r\nimport { stringTemplate } from \"@soushians/shared\";\r\nimport { GetWidgetsApiModel, GetWidgetStartAction, UpsertWidgetApiModel, DeleteWidgetApiModel } from \"./api\";\r\nimport { Location } from \"@angular/common\";\r\n\r\n@Injectable()\r\nexport class WidgetService {\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate configurationService: WidgetConfigurationService,\r\n\t\tprivate _location: Location\r\n\t) { }\r\n\r\n\tget<T>(_id: string): Observable<WidgetModel<T>> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.get !== \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tswitchMap((config) =>\r\n\t\t\t\tthis.http.get(stringTemplate(config.env.frontend_server + config.endpoints.get, { _id }))\r\n\t\t\t),\r\n\t\t\tmap((response: UpsertWidgetApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\r\n\tgetWidgets(): Observable<WidgetModel<any>[]> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.find != \"\"),\r\n\t\t\tswitchMap((config) => this.http.get(config.env.frontend_server + config.endpoints.find)),\r\n\t\t\tmap((response: GetWidgetsApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\tupsert<T>(widget: UpsertWidgetApiModel.Request): Observable<WidgetModel<T>> {\r\n\t\tconst model = new UpsertWidgetApiModel.Request(widget);\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.upsert != \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tswitchMap((config) =>\r\n\t\t\t\tthis.http.post(config.env.frontend_server + config.endpoints.upsert, model.getRequestBody())\r\n\t\t\t),\r\n\t\t\tmap((response: UpsertWidgetApiModel.Response) => response.Result),\r\n\t\t\ttap(() => this._location.back())\r\n\t\t);\r\n\t}\r\n\tdelete(widget: WidgetModel<any>) {\r\n\t\tdebugger;\r\n\t\tconst widgetId = widget._id;\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.deleteItem != \"\"),\r\n\t\t\tswitchMap((config) => this.http.delete<DeleteWidgetApiModel.Response>(\r\n\t\t\t\tstringTemplate(config.env.frontend_server + config.endpoints.deleteItem, { widgetId })).pipe(\r\n\t\t\t\t\tmap((response) => response.Result)\r\n\t\t\t\t)),\r\n\t\t);\r\n\t}\r\n\tselectById<T>(_id: string): Observable<WidgetModel<T>> {\r\n\t\tconst subject = new BehaviorSubject<WidgetModel<T>>(undefined);\r\n\t\tthis.store\r\n\t\t\t.select((state) => state.widgets.db.data)\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter((widgets) => widgets != null),\r\n\t\t\t\tmap((widgets) => widgets.find((widget) => widget._id == _id)),\r\n\t\t\t\ttap((widget) => {\r\n\t\t\t\t\tif (widget == null) {\r\n\t\t\t\t\t\tthis.store.dispatch(new GetWidgetStartAction(_id));\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe((widget) => subject.next(widget));\r\n\t\treturn subject.asObservable();\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tComponentRef,\r\n\tComponentFactoryResolver,\r\n\tViewContainerRef,\r\n\tDirective,\r\n\tInput\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { pluck, filter, switchMap, map, startWith } from \"rxjs/operators\";\r\n\r\nimport { WidgetModel } from \"../models/widget.model\";\r\nimport { AppState } from \"../widget.reducer\";\r\nimport { IModuleConfigMapTypes } from \"../models/module-config-map-types.interfce\";\r\nimport { WidgetService } from \"../services/widget.service\";\r\nimport { WidgetConfigurationService } from \"../services/widget-configuration.service\";\r\n\r\n@Component({\r\n\tselector: \"widget\",\r\n\ttemplate: \"\"\r\n})\r\nexport class DynamicWidgetViewComponent implements OnInit {\r\n\t@Input()\r\n\tset oid(id: string) {\r\n\t\tthis._selectWidget(id);\r\n\t}\r\n\twidget$: Observable<WidgetModel<any>>;\r\n\tcomponent: ComponentRef<any>;\r\n\tmapTypeToComponent: IModuleConfigMapTypes;\r\n\tconstructor(\r\n\t\tpublic store: Store<AppState>,\r\n\t\tprivate service: WidgetService,\r\n\t\tprivate configurationService: WidgetConfigurationService,\r\n\t\tprivate resolver: ComponentFactoryResolver,\r\n\t\tprivate container: ViewContainerRef\r\n\t) {\r\n\t\tthis._fill_component_map();\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.widget$.pipe(filter(widget => widget != undefined)).subscribe(widget => {\r\n\t\t\tthis._resolve_correct_component_base_on_widget_type(widget);\r\n\t\t});\r\n\t}\r\n\t_fill_component_map() {\r\n\t\tthis.configurationService.config$.pipe(map(config => config.types), startWith({})).subscribe(types => {\r\n\t\t\tdebugger;\r\n\t\t\tthis.mapTypeToComponent = types;\r\n\t\t});\r\n\t}\r\n\t_selectWidget(id: string) {\r\n\t\tthis.widget$ = this.service.selectById<any>(id);\r\n\t}\r\n\t_resolve_correct_component_base_on_widget_type(widget) {\r\n\t\tif (!this.mapTypeToComponent[widget.type]) {\r\n\t\t\tdebugger;\r\n\t\t\tconst supportedTypes = Object.keys(this.mapTypeToComponent).join(\", \");\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Trying to use an unsupported type (${widget.type}).\r\n\t\t  \t\t Supported types: ${supportedTypes}`\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst component = this.resolver.resolveComponentFactory<any>(this.mapTypeToComponent[widget.type].view);\r\n\t\tthis.component = this.container.createComponent(component);\r\n\t\tthis.widget$.subscribe(w => (this.component.instance.widget = w));\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { WidgetModel } from \"../models/widget.model\";\r\nimport { IWidgetViewInputInterface } from \"../models/widget-view-input.interface\";\r\nimport { AppState } from \"../widget.reducer\";\r\nimport { GetWidgetsStartAction } from \"../services/api\";\r\n\r\n@Component({\r\n\ttemplateUrl: \"widget-selector.component.html\"\r\n})\r\nexport class WidgetSelectorComponent implements OnInit {\r\n\twidgets$: Observable<WidgetModel<any>[]>;\r\n\tselectedWidgetId: string;\r\n\tget valid() {\r\n\t\treturn this.config.oid != undefined;\r\n\t}\r\n\tget config() {\r\n\t\treturn {\r\n\t\t\toid: this.selectedWidgetId\r\n\t\t};\r\n\t}\r\n\tconstructor(public store: Store<AppState>) {\r\n\t\tthis.widgets$ = this.store.select(state => state.widgets.db.data);\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.store.dispatch(new GetWidgetsStartAction());\r\n\t}\r\n}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n\tselector: \"widget-root\",\r\n\ttemplate: \"<router-outlet></router-outlet>\"\r\n})\r\nexport class RootComponent {}\r\n","import { Component, OnInit, Directive } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { WidgetModel } from \"../models/widget.model\";\r\nimport { AppState } from \"../widget.reducer\";\r\nimport { GetWidgetsStartAction } from \"../services/api/get-widgets/get-widgets.actions\";\r\nimport { DeleteWidgetStartAction } from \"../services/api/delete-widget\";\r\n\r\n@Component({\r\n\ttemplateUrl: \"widget-management.component.html\",\r\n\tstyleUrls: [\"widget-management.component.scss\"]\r\n})\r\nexport class WidgetsManagementComponent implements OnInit {\r\n\tanghazi: { [type: string]: { color: string; icon: string } };\r\n\twidgets$: Observable<WidgetModel<any>[]>;\r\n\tconstructor(public store: Store<AppState>) {\r\n\t\tthis.widgets$ = this.store.select((state) => state.widgets.db.data);\r\n\t\tthis._fill_anghazi();\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.store.dispatch(new GetWidgetsStartAction());\r\n\t}\r\n\tremove(item) {\r\n\t\tdebugger;\r\n\t\tthis.store.dispatch(new DeleteWidgetStartAction(item));\r\n\t}\r\n\t_fill_anghazi() {\r\n\t\tthis.anghazi = {\r\n\t\t\tarticle: {\r\n\t\t\t\tcolor: \"green\",\r\n\t\t\t\ticon: \"description\"\r\n\t\t\t},\r\n\t\t\tlinks: {\r\n\t\t\t\tcolor: \"orange\",\r\n\t\t\t\ticon: \"link\"\r\n\t\t\t},\r\n\t\t\tlist: {\r\n\t\t\t\tcolor: \"blue\",\r\n\t\t\t\ticon: \"list\"\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\n\r\n\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n\ttemplateUrl: \"./upsert.component.html\"\r\n})\r\nexport class UpsertComponent {}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { RootComponent } from \"./root/root.component\";\r\nimport { WidgetsManagementComponent } from \"./mangement/widget-management.component\";\r\nimport { UpsertComponent } from \"./upsert/upsert.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"widget\",\r\n\t\tcomponent: RootComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"management\",\r\n\t\t\t\tcomponent: WidgetsManagementComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"upsert/:type\",\r\n\t\t\t\tcomponent: UpsertComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"upsert/:type/:_id\",\r\n\t\t\t\tcomponent: UpsertComponent\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const WidgetRoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError, pluck } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { WidgetService } from \"../../widget.service\";\r\nimport {\r\n\tGET_WIDGET_ACTION_TYPES,\r\n\tGetWidgetActions,\r\n\tGetWidgetSucceedAction,\r\n\tGetWidgetFailedAction\r\n} from \"./get-widget.actions\";\r\n\r\n@Injectable()\r\nexport class GetWidgetApiEffects {\r\n\tconstructor(private actions$: Actions<GetWidgetActions>, private service: WidgetService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$.pipe(\r\n\t\tofType(GET_WIDGET_ACTION_TYPES.START),\r\n\t\tpluck<any, any>(\"payload\"),\r\n\t\tswitchMap(payload => this.service.get(payload)),\r\n\t\tmap(res => new GetWidgetSucceedAction(res)),\r\n\t\tcatchError(err => of(new GetWidgetFailedAction(err)))\r\n\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError, pluck } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { WidgetService } from \"../../widget.service\";\r\nimport {\r\n\tUPSERT_WIDGET_ACTION_TYPES,\r\n\tUpsertWidgetActions,\r\n\tUpsertWidgetSucceedAction,\r\n\tUpsertWidgetFailedAction\r\n} from \"./upsert-widget.actions\";\r\n\r\n@Injectable()\r\nexport class UpsertWidgetApiEffects {\r\n\tconstructor(private actions$: Actions<UpsertWidgetActions>, private service: WidgetService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$.pipe(\r\n\t\tofType(UPSERT_WIDGET_ACTION_TYPES.START),\r\n\t\tpluck<any, any>(\"payload\"),\r\n\t\tswitchMap(payload => this.service.upsert(payload)),\r\n\t\tmap(res => new UpsertWidgetSucceedAction(res)),\r\n\t\tcatchError(err => of(new UpsertWidgetFailedAction(err)))\r\n\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { WidgetService } from \"../../widget.service\";\r\nimport {\r\n\tGET_WIDGETS_ACTION_TYPES,\r\n\tGetWidgetsActions,\r\n\tGetWidgetsSucceedAction,\r\n\tGetWidgetsFailedAction\r\n} from \"./get-widgets.actions\";\r\n\r\n@Injectable()\r\nexport class GetWidgetsApiEffects {\r\n\tconstructor(private actions$: Actions<GetWidgetsActions>, private service: WidgetService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$.pipe(\r\n\t\tofType(GET_WIDGETS_ACTION_TYPES.START),\r\n\t\tswitchMap(() =>\r\n\t\t\tthis.service\r\n\t\t\t\t.getWidgets()\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap(res => new GetWidgetsSucceedAction(res)),\r\n\t\t\t\t\tcatchError(err => of(new GetWidgetsFailedAction(err)))\r\n\t\t\t\t)\r\n\t\t)\r\n\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError, pluck } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { WidgetService } from \"../../widget.service\";\r\nimport {\r\n\tDELETE_WIDGET_ACTION_TYPES,\r\n\tDeleteWidgetActions,\r\n\tDeleteWidgetSucceedAction,\r\n\tDeleteWidgetFailedAction\r\n} from \"./delete-widget.actions\";\r\nimport { WidgetModel } from \"../../../models/widget.model\";\r\n\r\n@Injectable()\r\nexport class DeleteWidgetApiEffects {\r\n\tconstructor(private actions$: Actions<DeleteWidgetActions>, private service: WidgetService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$.pipe(\r\n\t\tofType(DELETE_WIDGET_ACTION_TYPES.START),\r\n\t\tpluck(\"payload\"),\r\n\t\tswitchMap((payload: any) =>\r\n\t\t\tthis.service\r\n\t\t\t\t.delete(payload)\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tmap(res => new DeleteWidgetSucceedAction(res)),\r\n\t\t\t\t\tcatchError(err => of(new DeleteWidgetFailedAction(err)))\r\n\t\t\t\t)\r\n\t\t)\r\n\t);\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { WidgetModel } from \"../models/widget.model\";\r\n\r\nexport enum WidgetsActionTypes {\r\n\tUPSERT = \"[WIDGET][DB] UPSERT\",\r\n\tDELETE = \"[WIDGET][DB] DELETE\"\r\n}\r\n\r\nexport class UpsertWidgetAction implements Action {\r\n\treadonly type = WidgetsActionTypes.UPSERT;\r\n\tconstructor(public payload: WidgetModel<any>[]) {}\r\n}\r\nexport class DeleteWidgetAction implements Action {\r\n\treadonly type = WidgetsActionTypes.DELETE;\r\n\tconstructor(public payload: WidgetModel<any>) {}\r\n}\r\n\r\nexport type WidgetsActions = UpsertWidgetAction | DeleteWidgetAction;\r\n","import { WidgetModel } from \"../models/widget.model\";\r\nimport { WidgetsActions, WidgetsActionTypes } from \"./widget.actions\";\r\n\r\nexport interface State {\r\n\tdata: WidgetModel<any>[];\r\n}\r\n\r\nconst initialState: State = {\r\n\tdata: []\r\n};\r\n\r\nexport function Reducer(state = initialState, action: WidgetsActions): State {\r\n\tlet _data: WidgetModel<any>[];\r\n\tswitch (action.type) {\r\n\t\tcase WidgetsActionTypes.UPSERT:\r\n\t\t\t_data = state.data.concat();\r\n\t\t\tlet newWidgets = action.payload;\r\n\t\t\tif (!(newWidgets instanceof Array)) {\r\n\t\t\t\tnewWidgets = [newWidgets];\r\n\t\t\t\tconsole.error(\"'WidgetsActionTypes.UPSERT' does not get array payload\");\r\n\t\t\t}\r\n\r\n\t\t\tnewWidgets.forEach((newWidget) => {\r\n\t\t\t\tconst existedWidgetIndex = _data.findIndex((w) => w._id == newWidget._id);\r\n\t\t\t\tif (existedWidgetIndex > -1) {\r\n\t\t\t\t\t_data.splice(existedWidgetIndex, 1, newWidget);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_data.push(newWidget);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: _data\r\n\t\t\t};\r\n\r\n\t\tcase WidgetsActionTypes.DELETE:\r\n\t\t\tdebugger;\r\n\t\t\t_data = state.data.concat();\r\n\r\n\t\t\tconst widgetIndex = state.data.findIndex((w) => w._id == action.payload._id);\r\n\t\t\tif (widgetIndex > -1) {\r\n\t\t\t\t_data.splice(widgetIndex, 1);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: _data\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const getWidgets = (state: State) => state.data;\r\n","import * as fromRoot from \"./root/widgets.reducers\";\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface WidgetState {\r\n\tdb: fromRoot.State;\r\n}\r\n\r\nexport const WidgetReducer = {\r\n\tdb: fromRoot.Reducer\r\n};\r\n\r\nexport interface AppState {\r\n\twidgets: WidgetState;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, pluck, switchMap } from \"rxjs/operators\";\r\n\r\nimport { GET_WIDGET_ACTION_TYPES, GET_WIDGETS_ACTION_TYPES } from \"../services/api\";\r\nimport { WidgetModel } from \"../models/widget.model\";\r\nimport { UpsertWidgetAction, WidgetsActionTypes, DeleteWidgetAction } from \"./widget.actions\";\r\nimport { DELETE_WIDGET_ACTION_TYPES } from \"../services/api/delete-widget\";\r\n\r\n@Injectable()\r\nexport class WidgetDbEffects {\r\n\tconstructor(private actions$: Actions<any>) {}\r\n\r\n\t@Effect()\r\n\tUpsert$ = this.actions$.pipe(\r\n\t\tofType(GET_WIDGET_ACTION_TYPES.SUCCEED),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap((widget: WidgetModel<any>) => new UpsertWidgetAction([ widget ]))\r\n\t);\r\n\r\n\t@Effect()\r\n\tUpsertMany$ = this.actions$.pipe(\r\n\t\tofType(GET_WIDGETS_ACTION_TYPES.SUCCEED),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap((widgets: WidgetModel<any>[]) => new UpsertWidgetAction(widgets))\r\n\t);\r\n\r\n\t@Effect()\r\n\tDelete$ = this.actions$.pipe(\r\n\t\tofType(DELETE_WIDGET_ACTION_TYPES.SUCCEED),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap((widget: WidgetModel<any>) => new DeleteWidgetAction(widget))\r\n\t);\r\n}\r\n","import { Component, OnInit, ComponentRef, ComponentFactoryResolver, ViewContainerRef, Directive } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { pluck, filter, switchMap, map, startWith, tap } from \"rxjs/operators\";\r\n\r\nimport { WidgetModel } from \"../models/widget.model\";\r\nimport { AppState } from \"../widget.reducer\";\r\nimport { WidgetService } from \"../services/widget.service\";\r\nimport { WidgetConfigurationService } from \"../services/widget-configuration.service\";\r\nimport { IModuleConfigMapTypes } from \"../models/module-config-map-types.interfce\";\r\n\r\n@Directive({\r\n\tselector: \"[ngsDynamicWidgetConfig]\"\r\n})\r\nexport class DynamicWidgetConfigDirective implements OnInit {\r\n\tcomponent: ComponentRef<any>;\r\n\tmapTypeToComponent: IModuleConfigMapTypes;\r\n\tconstructor(\r\n\t\tpublic store: Store<AppState>,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate service: WidgetService,\r\n\t\tprivate configurationService: WidgetConfigurationService,\r\n\t\tprivate resolver: ComponentFactoryResolver,\r\n\t\tprivate container: ViewContainerRef\r\n\t) {\r\n\t\tthis._fill_component_map();\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis._react_base_on_params();\r\n\t}\r\n\t_fill_component_map() {\r\n\t\tthis.configurationService.config$.pipe(map((config) => config.types), startWith({})).subscribe((types) => {\r\n\t\t\tdebugger;\r\n\t\t\tthis.mapTypeToComponent = types;\r\n\t\t});\r\n\t}\r\n\t_react_base_on_params() {\r\n\t\tthis.route.params.subscribe(({ type, _id }) => {\r\n\t\t\tif (_id) {\r\n\t\t\t\tthis.service.selectById<any>(_id).subscribe((widget) => {\r\n\t\t\t\t\tthis._resolve_correct_component_base_on_widget_type(type, widget);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis._resolve_correct_component_base_on_widget_type(type);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t_resolve_correct_component_base_on_widget_type(type: string, widget?: WidgetModel<any>) {\r\n\t\tif (this.component) {\r\n\t\t\tthis.component.destroy();\r\n\t\t}\r\n\r\n\t\tif (!this.mapTypeToComponent[type]) {\r\n\t\t\tconst supportedTypes = Object.keys(this.mapTypeToComponent).join(\", \");\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Trying to use an unsupported type (${type}).\r\n\t\t  \t\t Supported types: ${supportedTypes}`\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst component = this.resolver.resolveComponentFactory<any>(this.mapTypeToComponent[type].upsert);\r\n\t\tthis.component = this.container.createComponent(component);\r\n\t\t// this.widget$.subscribe((w) => (this.component.instance.widget = w));\r\n\t\tif (widget) this.component.instance.widget = widget;\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tComponentRef,\r\n\tComponentFactoryResolver,\r\n\tViewContainerRef,\r\n\tDirective,\r\n\tInput\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { pluck, filter, switchMap, map, startWith } from \"rxjs/operators\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { WidgetModel } from \"../models/widget.model\";\r\nimport { AppState } from \"../widget.reducer\";\r\nimport { WidgetService } from \"../services/widget.service\";\r\nimport { WidgetConfigurationService } from \"../services/widget-configuration.service\";\r\nimport { IModuleConfigMapTypes } from \"../models/module-config-map-types.interfce\";\r\n\r\n@Directive({\r\n\tselector: \"[ngsDynamicWidgetView]\"\r\n})\r\nexport class DynamicWidgetViewDirective implements OnInit {\r\n\t@Input()\r\n\tset oid(id: string) {\r\n\t\tthis._selectWidget(id);\r\n\t}\r\n\twidget$: Observable<WidgetModel<any>>;\r\n\tcomponent: ComponentRef<any>;\r\n\tmapTypeToComponent: IModuleConfigMapTypes;\r\n\tconstructor(\r\n\t\tpublic store: Store<AppState>,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate service: WidgetService,\r\n\t\tprivate configurationService: WidgetConfigurationService,\r\n\t\tprivate resolver: ComponentFactoryResolver,\r\n\t\tprivate container: ViewContainerRef\r\n\t) {\r\n\t\tthis._fill_component_map();\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.widget$.pipe(filter(widget => widget != undefined)).subscribe(widget => {\r\n\t\t\tthis._resolve_correct_component_base_on_widget_type(widget);\r\n\t\t});\r\n\t}\r\n\t_fill_component_map() {\r\n\t\tthis.configurationService.config$.pipe(map(config => config.types), startWith({})).subscribe(types => {\r\n\t\t\tdebugger;\r\n\t\t\tthis.mapTypeToComponent = types;\r\n\t\t});\r\n\t}\r\n\t_selectWidget(id: string) {\r\n\t\tthis.widget$ = this.service.selectById<any>(id);\r\n\t}\r\n\t_resolve_correct_component_base_on_widget_type(widget) {\r\n\t\tif (!this.mapTypeToComponent[widget.type]) {\r\n\t\t\tconst supportedTypes = Object.keys(this.mapTypeToComponent).join(\", \");\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Trying to use an unsupported type (${widget.type}).\r\n\t\t  \t\t Supported types: ${supportedTypes}`\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst component = this.resolver.resolveComponentFactory<any>(this.mapTypeToComponent[widget.type].view);\r\n\t\tthis.component = this.container.createComponent(component);\r\n\t\tthis.widget$.subscribe(w => (this.component.instance.widget = w));\r\n\t}\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule,\r\n\tMatSlideToggleModule,\r\n\tMatDividerModule,\r\n\tMatMenuModule,\r\n\tMatCheckboxModule,\r\n\tMatTableModule\r\n} from \"@angular/material\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\n\r\nimport { WidgetConfigurationService } from \"./services/widget-configuration.service\";\r\nimport { WidgetService } from \"./services/widget.service\";\r\n// import { WidgetReducer } from \"./widget.reducer\";\r\nimport { WidgetModuleConfig, MODULE_CONFIG_TOKEN } from \"./widget.config\";\r\nimport { WidgetRoutingModule } from \"./widget-routing.module\";\r\nimport { RootComponent } from \"./root/root.component\";\r\nimport { GetWidgetApiEffects } from \"./services/api/get-widget/get-widget.effects\";\r\nimport { UpsertWidgetApiEffects } from \"./services/api/upsert-widget/upsert-widget.effects\";\r\nimport { GetWidgetsApiEffects } from \"./services/api/get-widgets/get-widgets.effects\";\r\nimport { DeleteWidgetApiEffects } from \"./services/api/delete-widget/delete-widget.effects\";\r\nimport { WidgetReducer } from \"./widget.reducer\";\r\nimport { WidgetDbEffects } from \"./root/widgets.effects\";\r\nimport { WidgetsManagementComponent } from \"./mangement/widget-management.component\";\r\nimport { UpsertComponent } from \"./upsert/upsert.component\";\r\nimport { DynamicWidgetConfigDirective } from \"./upsert/dynamic-widget-config.directive\";\r\nimport { DynamicWidgetViewDirective } from \"./view/dynamic-widget-view.directive\";\r\nimport { WidgetSelectorComponent } from \"./widget-selector/widget-selector.component\";\r\nimport { DynamicWidgetViewComponent } from \"./view/dynamic-widget-view.component\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tRouterModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSelectModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tMatRadioModule,\r\n\t\tFlexLayoutModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tMatDividerModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatTableModule,\r\n\t\tMatMenuModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tRootComponent,\r\n\t\tWidgetsManagementComponent,\r\n\t\tUpsertComponent,\r\n\t\tDynamicWidgetConfigDirective,\r\n\t\tDynamicWidgetViewDirective,\r\n\t\tWidgetSelectorComponent,\r\n\t\tDynamicWidgetViewComponent\r\n\t],\r\n\tentryComponents: [WidgetSelectorComponent, DynamicWidgetViewComponent],\r\n\texports: [DynamicWidgetViewDirective, WidgetSelectorComponent, DynamicWidgetViewComponent]\r\n})\r\nexport class NgsWidgetModule {\r\n\tstatic forRoot(config?: WidgetModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: NgsWidgetRootModule,\r\n\t\t\tproviders: [{ provide: MODULE_CONFIG_TOKEN, useValue: config }, WidgetConfigurationService, WidgetService]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsWidgetModule,\r\n\t\tWidgetRoutingModule,\r\n\t\tStoreModule.forFeature(\"widgets\", WidgetReducer),\r\n\t\tEffectsModule.forFeature([WidgetDbEffects, GetWidgetApiEffects, GetWidgetsApiEffects, UpsertWidgetApiEffects, DeleteWidgetApiEffects])\r\n\t],\r\n\texports: [NgsWidgetModule]\r\n})\r\nexport class NgsWidgetRootModule { }\r\n","import { WidgetModel } from \"./widget.model\";\r\n\r\nexport class IWidgetView<T> {\r\n\twidget: WidgetModel<T>;\r\n\tgoToEdit?: any;\r\n}\r\n","import { WidgetModel } from \"./widget.model\";\r\n\r\nexport class IWidgetUpsert<T> {\r\n\twidget: WidgetModel<T>;\r\n}\r\n"]}