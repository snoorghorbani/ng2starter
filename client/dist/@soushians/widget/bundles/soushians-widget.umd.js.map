{"version":3,"file":"soushians-widget.umd.js.map","sources":["ng://@soushians/widget/lib/widget.config.ts","ng://@soushians/widget/lib/services/widget-configuration.service.ts","ng://@soushians/widget/lib/widget.module.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\r\n\r\nimport { IModuleConfigMapTypes } from \"./models/module-config-map-types.interfce\";\r\n\r\nexport interface WidgetModuleConfig {\r\n\tdevelopment_uri?: string;\r\n\tproduction_uri?: string;\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t};\r\n\tendpoints?: {\r\n\t\tget: string;\r\n\t\tfind: string;\r\n\t\tupsert: string;\r\n\t};\r\n\ttypes?: IModuleConfigMapTypes;\r\n}\r\nexport const MODULE_DEFAULT_CONFIG: WidgetModuleConfig = {\r\n\tdevelopment_uri: \"http://localhost:3000\",\r\n\tproduction_uri: \"\",\r\n\tenv: {\r\n\t\tproduction: false\r\n\t},\r\n\tendpoints: {\r\n\t\tupsert: \"http://localhost:3000/api/uiwidget\",\r\n\t\tfind: \"http://localhost:3000/api/uiwidget\",\r\n\t\tget: \"http://localhost:3000/api/uiwidget/${model._id}\"\r\n\t},\r\n\ttypes: {}\r\n};\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<WidgetModuleConfig>(\"WidgetModuleConfig\");\r\n","import { BehaviorSubject } from \"rxjs\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { WidgetModuleConfig, MODULE_DEFAULT_CONFIG, MODULE_CONFIG_TOKEN } from \"../widget.config\";\r\nimport { AppState } from \"../widget.reducer\";\r\n\r\n@Injectable()\r\nexport class WidgetConfigurationService {\r\n\tprivate _config: WidgetModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<AppState>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\t// this.store.select(getWidgetModuleConfig).subscribe((widgetConfig) => {\r\n\t\t// \tif (!widgetConfig) {\r\n\t\t// \t\treturn;\r\n\t\t// \t}\r\n\t\t// \tthis._config = Object.assign({}, this._config, widgetConfig.Config);\r\n\t\t// \tthis.config$.next(this._config);\r\n\t\t// });\r\n\t}\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule,\r\n\tMatSlideToggleModule,\r\n\tMatDividerModule,\r\n\tMatCheckbox,\r\n\tMatCheckboxModule,\r\n\tMatTableModule\r\n} from \"@angular/material\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\n\r\n// import { WidgetReducer } from \"./widget.reducer\";\r\nimport { WidgetModuleConfig, MODULE_CONFIG_TOKEN } from \"./widget.config\";\r\n// import { WidgetRoutingModule } from \"./widget-routing.module\";\r\n// import { RootComponent } from \"./root\";\r\n// import { GetWidgetApiEffects } from \"./services/api/get-widget/get-widget.effects\";\r\n// import { UpsertWidgetApiEffects } from \"./services/api/upsert-widget/upsert-widget.effects\";\r\n// import { GetWidgetsApiEffects } from \"./services/api/get-widgets/get-widgets.effects\";\r\n// import { WidgetReducer } from \"./widget.reducer\";\r\n// import { WidgetDbEffects } from \"./root/widgets.effects\";\r\n// import { WidgetsManagementComponent } from \"./mangement/widget-management.component\";\r\n// import { UpsertComponent } from \"./upsert/upsert.component\";\r\n// import { DynamicWidgetConfigDirective } from \"./upsert/dynamic-widget-config.directive\";\r\n// import { DynamicWidgetViewDirective } from \"./view/dynamic-widget-view.directive\";\r\n// import { WidgetSelectorComponent } from \"./widget-selector/widget-selector.component\";\r\n// import { DynamicWidgetViewComponent } from \"./view/dynamic-widget-view.component\";\r\nimport { WidgetConfigurationService } from \"./services/widget-configuration.service\";\r\n// import { WidgetService } from \"./services/widget.service\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tRouterModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSelectModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tMatRadioModule,\r\n\t\tFlexLayoutModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tMatDividerModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatTableModule\r\n\t]\r\n\t// declarations: [\r\n\t// \tRootComponent,\r\n\t// \tWidgetsManagementComponent,\r\n\t// \tUpsertComponent,\r\n\t// \tDynamicWidgetConfigDirective,\r\n\t// \tDynamicWidgetViewDirective,\r\n\t// \tWidgetSelectorComponent,\r\n\t// \tDynamicWidgetViewComponent\r\n\t// ],\r\n\t// entryComponents: [ WidgetSelectorComponent, DynamicWidgetViewComponent ],\r\n\t// exports: [ DynamicWidgetViewDirective, WidgetSelectorComponent, DynamicWidgetViewComponent ]\r\n})\r\nexport class NgsWidgetModule {\r\n\tstatic forRoot(config?: WidgetModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: NgsWidgetRootModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config }, WidgetConfigurationService ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsWidgetModule\r\n\t\t// WidgetRoutingModule,\r\n\t\t// StoreModule.forFeature(\"widgets\", WidgetReducer),\r\n\t\t// EffectsModule.forFeature([ WidgetDbEffects, GetWidgetApiEffects, GetWidgetsApiEffects, UpsertWidgetApiEffects ])\r\n\t],\r\n\texports: [ NgsWidgetModule ]\r\n})\r\nexport class NgsWidgetRootModule {}\r\n"],"names":["InjectionToken","store","BehaviorSubject","Injectable","Inject","Store","NgModule","CommonModule","RouterModule","MatExpansionModule","MatSnackBarModule","MatIconModule","MatButtonModule","MatCardModule","MatSelectModule","MatInputModule","MatFormFieldModule","MatTabsModule","MatRadioModule","FlexLayoutModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","MatDividerModule","MatCheckboxModule","MatTableModule"],"mappings":";;;;;;;;;;AAAA,IAiBO,qBAAM,qBAAqB,GAAuB;QACxD,eAAe,EAAE,uBAAuB;QACxC,cAAc,EAAE,EAAE;QAClB,GAAG,EAAE;YACJ,UAAU,EAAE,KAAK;SACjB;QACD,SAAS,EAAE;YACV,MAAM,EAAE,oCAAoC;YAC5C,IAAI,EAAE,oCAAoC;YAC1C,GAAG,EAAE,iDAAiD;SACtD;QACD,KAAK,EAAE,EAAE;KACT,CAAC;AACF,yBAAa,mBAAmB,GAAG,IAAIA,mBAAc,CAAqB,oBAAoB,CAAC;;;;;;AC9B/F;QAcC,oCAAyC,UAAU,EAAUC,QAAsB;YAAtB,UAAK,GAALA,QAAK,CAAiB;2BADzE,IAAIC,oBAAe,CAAC,qBAAqB,CAAC;YAEnD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,qBAAqB,EAAE,UAAU,CAAC,CAAC;YACpE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;;;;;;;SAQhC;QAdD,sBAAI,8CAAM;;;gBAAV;gBACC,OAAO,IAAI,CAAC,OAAO,CAAC;aACpB;;;WAAA;;oBALDC,eAAU;;;;;wDAOGC,WAAM,SAAC,mBAAmB;wBAZ/BC,WAAK;;;yCAFd;;;;;;;ACAA;;;;;;;QA+EQ,uBAAO;;;;YAAd,UAAe,MAA2B;gBACzC,OAAO;oBACN,QAAQ,EAAE,mBAAmB;oBAC7B,SAAS,EAAE,CAAE,EAAE,OAAO,EAAE,mBAAmB,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,0BAA0B,CAAE;iBAC7F,CAAC;aACF;;oBAxCDC,aAAQ,SAAC;wBACT,OAAO,EAAE;4BACRC,mBAAY;4BACZC,mBAAY;4BACZC,2BAAkB;4BAClBC,0BAAiB;4BACjBC,sBAAa;4BACbC,wBAAe;4BACfC,sBAAa;4BACbC,wBAAe;4BACfC,uBAAc;4BACdC,2BAAkB;4BAClBC,sBAAa;4BACbC,uBAAc;4BACdC,2BAAgB;4BAChBC,iBAAW;4BACXC,yBAAmB;4BACnBC,6BAAoB;4BACpBC,yBAAgB;4BAChBC,0BAAiB;4BACjBC,uBAAc;yBACd;qBAYD;;8BA7ED;;;;;;oBAuFCnB,aAAQ,SAAC;wBACT,OAAO,EAAE;4BACR,eAAe;yBAIf;wBACD,OAAO,EAAE,CAAE,eAAe,CAAE;qBAC5B;;kCA/FD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
