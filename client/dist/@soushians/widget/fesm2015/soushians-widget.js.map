{"version":3,"file":"soushians-widget.js.map","sources":["ng://@soushians/widget/lib/services/widget.service.ts","ng://@soushians/widget/lib/services/widget-configuration.service.ts","ng://@soushians/widget/lib/widget.config.ts","ng://@soushians/widget/lib/widget.module.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\n// import { AppState } from \"../widget.reducer\";\r\n\r\n// import { getWidgetModuleConfig } from \"@soushians/config\";\r\n\r\nimport { WidgetConfigurationService } from \"./widget-configuration.service\";\r\n// import { WidgetRunSuccessfullyAction } from \"../widget.actions\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class WidgetService {\r\n\tconstructor() {}\r\n}\r\n","import { BehaviorSubject } from \"rxjs\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\n// import { getWidgetModuleConfig } from \"@soushians/config\";\r\n\r\nimport { WidgetModuleConfig, MODULE_DEFAULT_CONFIG, MODULE_CONFIG_TOKEN } from \"../widget.config\";\r\n// import { AppState } from \"../widget.reducer\";\r\n\r\n@Injectable()\r\nexport class WidgetConfigurationService {\r\n\t// private _config: WidgetModuleConfig;\r\n\t// get config() {\r\n\t// \treturn this._config;\r\n\t// }\r\n\t// config$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n\t// constructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<AppState>) {\r\n\t// \tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t// \tthis.config$.next(this._config);\r\n\t// \tthis.store.select(getWidgetModuleConfig).subscribe(userConfig => {\r\n\t// \t\tif (!userConfig) {\r\n\t// \t\t\treturn;\r\n\t// \t\t}\r\n\t// \t\tthis._config = Object.assign({}, this._config, userConfig.Config);\r\n\t// \t\tthis.config$.next(this._config);\r\n\t// \t});\r\n\t// }\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface WidgetModuleConfig {\r\n\tdevelopment_uri: string;\r\n\tproduction_uri: string;\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t};\r\n}\r\nexport const MODULE_DEFAULT_CONFIG: WidgetModuleConfig = {\r\n\tdevelopment_uri: \"http://localhost:3000\",\r\n\tproduction_uri: \"\",\r\n\tenv: {\r\n\t\tproduction: false\r\n\t}\r\n};\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<WidgetModuleConfig>(\"WidgetModuleConfig\");\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { CKEditorModule } from \"ng2-ckeditor\";\r\n\r\nimport { WidgetService, WidgetConfigurationService } from \"./services\";\r\n// import { WidgetReducer } from \"./widget.reducer\";\r\nimport { WidgetModuleConfig, MODULE_CONFIG_TOKEN } from \"./widget.config\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\n\r\n@NgModule({\r\n\timports: [ CommonModule ]\r\n})\r\nexport class NgsWidgetModule {\r\n\tstatic forRoot(config?: WidgetModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: NgsWidgetRootModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config }, WidgetConfigurationService, WidgetService ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [ NgsWidgetModule, StoreModule, CKEditorModule ]\r\n})\r\nexport class NgsWidgetRootModule {}\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;IAeC,iBAAgB;;;YAJhB,UAAU,SAAC;gBACX,UAAU,EAAE,MAAM;aAClB;;;;;;;;;;ACZD;;;YAOC,UAAU;;;;;;;;;;;;ACRX,uBASa,qBAAqB,GAAuB;IACxD,eAAe,EAAE,uBAAuB;IACxC,cAAc,EAAE,EAAE;IAClB,GAAG,EAAE;QACJ,UAAU,EAAE,KAAK;KACjB;CACD,CAAC;AACF,uBAAa,mBAAmB,GAAG,IAAI,cAAc,CAAqB,oBAAoB,CAAC;;;;;;AChB/F;;;;;IAcC,OAAO,OAAO,CAAC,MAA2B;QACzC,OAAO;YACN,QAAQ,EAAE,mBAAmB;YAC7B,SAAS,EAAE,CAAE,EAAE,OAAO,EAAE,mBAAmB,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,0BAA0B,EAAE,aAAa,CAAE;SAC5G,CAAC;KACF;;;YATD,QAAQ,SAAC;gBACT,OAAO,EAAE,CAAE,YAAY,CAAE;aACzB;;AAaD;;;YAHC,QAAQ,SAAC;gBACT,OAAO,EAAE,CAAE,eAAe,EAAE,WAAW,EAAE,cAAc,CAAE;aACzD;;;;;;;;;;;;;;;;;;;;"}
