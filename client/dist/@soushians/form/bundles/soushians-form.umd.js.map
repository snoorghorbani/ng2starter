{"version":3,"file":"soushians-form.umd.js.map","sources":["ng://@soushians/form/lib/models/add-form.api-model.ts","ng://@soushians/form/lib/models/edit-form.api-model.ts","ng://@soushians/form/lib/models/form-list.api-model.ts","ng://@soushians/form/lib/models/form-field-validator.model.ts","ng://@soushians/form/lib/models/field-config.model.ts","ng://@soushians/form/lib/models/form-schema.model.ts","ng://@soushians/form/lib/form.config.ts","ng://@soushians/form/lib/services/form-configuration.service.ts","ng://@soushians/form/lib/services/form.service.ts","ng://@soushians/form/lib/view/form-controls/select/select.component.ts","ng://@soushians/form/lib/view/form-controls/checkbox/checkbox.component.ts","ng://@soushians/form/lib/view/form-controls/email/email.component.ts","ng://@soushians/form/lib/view/form-controls/color/color.component.ts","ng://@soushians/form/lib/view/form-controls/table/table.component.ts","ng://@soushians/form/lib/view/form-controls/number/number.component.ts","ng://@soushians/form/lib/view/form-controls/text/text.component.ts","ng://@soushians/form/lib/list/list.actions.ts","ng://@soushians/form/lib/view/form-controls/date/date.component.ts","ng://@soushians/form/lib/view/form-controls/file/file.component.ts","ng://@soushians/form/lib/services/form-captcha.service.ts","ng://@soushians/form/lib/models/captcha.model.ts","ng://@soushians/form/lib/view/form-controls/form-captcha/form-captcha.component.ts","ng://@soushians/form/lib/view/form-view/form-view.component.ts","dist/@soushians/form/node_modules/tslib/tslib.es6.js","ng://@soushians/form/lib/list/list.reducers.ts","ng://@soushians/form/lib/main-container/main-container.reducers.ts","ng://@soushians/form/lib/add/form-group/form-group.component.ts","ng://@soushians/form/lib/add/form-array/form-array.component.ts","ng://@soushians/form/lib/add/form-control/form-control.component.ts","ng://@soushians/form/lib/edit/edit-form.actions.ts","ng://@soushians/form/lib/add/add-form.actions.ts","ng://@soushians/form/lib/add/add-form-container/add-form-container.component.ts","ng://@soushians/form/lib/edit/edit-form-container/edit-form-container.component.ts","ng://@soushians/form/lib/add/add-form/add-form.component.ts","ng://@soushians/form/lib/edit/edit-form/edit-form.component.ts","ng://@soushians/form/lib/list/form-list-container/form-list.container.component.ts","ng://@soushians/form/lib/list/form-list/form-list.component.ts","ng://@soushians/form/lib/main-container/main-container.component/main-container.component.ts","ng://@soushians/form/lib/add/add-form.effects.ts","ng://@soushians/form/lib/list/list.effects.ts","ng://@soushians/form/lib/edit/edit-form.effects.ts","ng://@soushians/form/lib/form-routing.module.ts","ng://@soushians/form/lib/add/captcha.actions.ts","ng://@soushians/form/lib/add/captcha.effects.ts","ng://@soushians/form/lib/form.module.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { FormSchemaModel } from \"../models\";\r\n\r\nexport namespace AddFormApiModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\t_id: string;\r\n\t\tname: string;\r\n\t\tform: any[];\r\n\t\tevents: any[];\r\n\t\tconstructor(initValue = {} as AddFormApiModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {\r\n\t\t\t\tname: this.name,\r\n\t\t\t\tform: this.form,\r\n\t\t\t\tevents: this.events\r\n\t\t\t};\r\n\t\t}\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\t_id: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tname: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\ttitle: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tform: new FormControl({}),\r\n\t\t\t\tevents: new FormGroup({\r\n\t\t\t\t\taccept: new FormGroup({\r\n\t\t\t\t\t\tshow: new FormControl(false),\r\n\t\t\t\t\t\ttext: new FormControl(\"Ø«Ø¨Øª\")\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tcancel: new FormGroup({\r\n\t\t\t\t\t\tshow: new FormControl(false),\r\n\t\t\t\t\t\ttext: new FormControl(\"Ø§ÙØµØ±Ø§Ù\")\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: FormSchemaModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { FormSchemaModel } from \"../models\";\r\n\r\nexport namespace EditFormApiModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\t_id: string;\r\n\t\tname: string;\r\n\t\tform: any[];\r\n\t\tevents: any[];\r\n\t\tconstructor(initValue = {} as EditFormApiModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {\r\n\t\t\t\t_id: this._id,\r\n\t\t\t\tname: this.name,\r\n\t\t\t\tform: this.form,\r\n\t\t\t\tevents: this.events\r\n\t\t\t};\r\n\t\t}\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\t_id: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tname: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tform: new FormControl({}),\r\n\t\t\t\tevents: new FormGroup({\r\n\t\t\t\t\taccept: new FormGroup({\r\n\t\t\t\t\t\tshow: new FormControl(false),\r\n\t\t\t\t\t\ttext: new FormControl(\"Ø«Ø¨Øª\")\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tcancel: new FormGroup({\r\n\t\t\t\t\t\tshow: new FormControl(false),\r\n\t\t\t\t\t\ttext: new FormControl(\"Ø§ÙØµØ±Ø§Ù\")\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: FormSchemaModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { FormSchemaModel } from \"../models\";\r\n\r\nexport namespace FormListApiModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tName: string;\r\n\t\tControls: object[];\r\n\t\tconstructor(initValue = {} as FormListApiModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach((key) => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {\r\n\t\t\t\tName: this.Name,\r\n\t\t\t\tControls: this.Controls\r\n\t\t\t};\r\n\t\t}\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tName: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tControls: new FormGroup({})\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: FormSchemaModel[];\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","export interface validation {\r\n\tactive: boolean;\r\n\tmessage: string;\r\n\tvalue?: any;\r\n}\r\nexport class Validator {\r\n\trequired: validation;\r\n\tminlength: validation;\r\n\temail: validation;\r\n\r\n\tconstructor() {\r\n\t\tthis.required = {\r\n\t\t\tactive: false,\r\n\t\t\tmessage: \"Ø§ÛÙ ÙÛÙØ¯ Ø§ÙØ²Ø§ÙÛ Ø§Ø³Øª\"\r\n\t\t};\r\n\t\tthis.minlength = {\r\n\t\t\tactive: false,\r\n\t\t\tmessage: \"Ø­Ø¯Ø§ÙÙ ØªØ¹Ø¯Ø§Ø¯ Ú©Ø§Ø±Ú©ØªØ±ÙØ§\",\r\n\t\t\tvalue: 5\r\n\t\t};\r\n\t\tthis.email = {\r\n\t\t\tactive: false,\r\n\t\t\tmessage: \"ÙØ·ÙØ§ Ø§ÛÙÛÙ ØµØ­ÛØ­ ÙØ§Ø±Ø¯ ÙÙØ§ÛÛØ¯\"\r\n\t\t};\r\n\t}\r\n}\r\n","import { Validator } from \"./form-field-validator.model\";\r\n\r\nexport class FieldConfig {\r\n\tid: number;\r\n\ttype: \"group\" | \"array\" | \"control\";\r\n\tname: string;\r\n\tsubtype: string;\r\n\tdisabled?: boolean;\r\n\ttitle: string;\r\n\tparentType?: \"array\" | \"group\";\r\n\tformGroupPath?: string;\r\n\tpath?: string;\r\n\tinputType: \"select\" | \"text\" | \"number\" | \"email\" | \"color\" | \"checkbox\" | \"table\";\r\n\tvalue?: any;\r\n\torder?: number;\r\n\twidth?: number;\r\n\toptions: {\r\n\t\t[key: string]: string | number | boolean;\r\n\t}[];\r\n\tdataEndpoint?: string;\r\n\toptionsEndpoint: string;\r\n\tfields?: FieldConfig[];\r\n\tvalidator: Validator;\r\n\tconstructor(type: \"group\" | \"array\" | \"control\") {\r\n\t\tthis.type = type;\r\n\t\tif (type != \"control\") this.fields = [];\r\n\t\tthis.width = 3;\r\n\t\tthis.validator = new Validator();\r\n\t}\r\n}\r\n","import { FieldConfig } from \"./field-config.model\";\r\n\r\nexport class FormSchemaModel {\r\n\t_id: string;\r\n\tname: string;\r\n\tdescription: string;\r\n\tform: FieldConfig;\r\n\tevents = {\r\n\t\taccept: {\r\n\t\t\tshow: false,\r\n\t\t\ttext: \"Ø«Ø¨Øª\"\r\n\t\t},\r\n\t\tcancel: {\r\n\t\t\tshow: false,\r\n\t\t\ttext: \"Ø§ÙØµØ±Ø§Ù\"\r\n\t\t}\r\n\t};\r\n\r\n\tconstructor() {\r\n\t\tthis.form = new FieldConfig(\"group\");\r\n\t}\r\n\tinit() {\r\n\t\tthis._id = (Math.random() * 10).toString();\r\n\t}\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface FormModuleConfig {\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t\tserver: string;\r\n\t};\r\n\tendpoints?: {\r\n\t\taddForm: string;\r\n\t\teditForm: string;\r\n\t\tgetForm: string;\r\n\t\tgetList: string;\r\n\t\tdeleteForm: string;\r\n\t\tcaptchaUrl: string;\r\n\t};\r\n}\r\nexport const MODULE_DEFAULT_CONFIG: FormModuleConfig = {\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"frontend/server/did/not/set\",\r\n\t\tserver: \"server/did/not/set\"\r\n\t},\r\n\tendpoints: {\r\n\t\taddForm: \"\",\r\n\t\teditForm: \"\",\r\n\t\tgetForm: \"\",\r\n\t\tgetList: \"\",\r\n\t\tdeleteForm: \"\",\r\n\t\tcaptchaUrl: \"\"\r\n\r\n\t},\r\n};\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<FormModuleConfig>(\"FormModuleConfig\");\r\n","import { BehaviorSubject } from \"rxjs\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { getFormModuleConfig } from \"@soushians/config\";\r\n\r\nimport { FormModuleConfig } from \"../form.config\";\r\nimport { MODULE_CONFIG_TOKEN, MODULE_DEFAULT_CONFIG } from \"../form.config\";\r\nimport { MainContainerState } from \"../main-container\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class FormConfigurationService {\r\n\tprivate _config: FormModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<MainContainerState>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\tthis.store.select(getFormModuleConfig).subscribe(userConfig => {\r\n\t\t\tif (!userConfig) return;\r\n\t\t\tthis._config = Object.assign({}, this._config, userConfig.Config);\r\n\t\t\tthis.config$.next(this._config);\r\n\t\t});\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { filter, map } from \"rxjs/operators\";\r\n\r\nimport { stringTemplate } from \"@soushians/shared\";\r\n\r\nimport { FormSchemaModel, AddFormApiModel, EditFormApiModel, FormListApiModel } from \"../models\";\r\nimport { FormConfigurationService } from \"./form-configuration.service\";\r\n\r\nimport { MainContainerState } from \"../main-container/main-container.reducers\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class FormService {\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<MainContainerState>,\r\n\t\tprivate configurationService: FormConfigurationService\r\n\t) {}\r\n\r\n\tadd(data: AddFormApiModel.Request): Observable<FormSchemaModel> {\r\n\t\tconst model = new AddFormApiModel.Request(data);\r\n\t\treturn this.configurationService.config$\r\n\t\t\t.filter((config) => config.endpoints.addForm != \"\")\r\n\t\t\t.take(1)\r\n\t\t\t.switchMap((config) =>\r\n\t\t\t\tthis.http.post(config.env.frontend_server + config.endpoints.addForm, model.getRequestBody())\r\n\t\t\t)\r\n\t\t\t.map((response: AddFormApiModel.Response) => response.Result);\r\n\t}\r\n\tget(_id: string): Observable<FormSchemaModel> {\r\n\t\treturn this.configurationService.config$\r\n\t\t\t.filter((config) => config.endpoints.getForm != \"\")\r\n\t\t\t.take(1)\r\n\t\t\t.switchMap((config) =>\r\n\t\t\t\tthis.http.get(stringTemplate(config.env.frontend_server + config.endpoints.getForm, { _id }))\r\n\t\t\t)\r\n\t\t\t.map((response: EditFormApiModel.Response) => response.Result);\r\n\t}\r\n\tgetList(): Observable<FormSchemaModel[]> {\r\n\t\treturn this.configurationService.config$\r\n\t\t\t.filter((config) => config.endpoints.getList != \"\")\r\n\t\t\t.switchMap((config) => this.http.get(config.env.frontend_server + config.endpoints.getList))\r\n\t\t\t.map((response: FormListApiModel.Response) => response.Result);\r\n\t}\r\n\tupdate(data: EditFormApiModel.Request): Observable<FormSchemaModel> {\r\n\t\tconst model = new EditFormApiModel.Request(data);\r\n\t\treturn this.configurationService.config$\r\n\t\t\t.filter((config) => config.endpoints.editForm != \"\")\r\n\t\t\t.take(1)\r\n\t\t\t.switchMap((config) =>\r\n\t\t\t\tthis.http.put(config.env.frontend_server + config.endpoints.editForm, model.getRequestBody())\r\n\t\t\t)\r\n\t\t\t.map((response: EditFormApiModel.Response) => response.Result);\r\n\t}\r\n\tdelete(_id: string) {\r\n\t\treturn this.configurationService.config$\r\n\t\t\t.filter((config) => config.endpoints.deleteForm != \"\")\r\n\t\t\t.switchMap((config) => this.http.get(config.env.frontend_server + config.endpoints.deleteForm));\r\n\t}\r\n\tselectFormById(_id: string): Observable<FormSchemaModel> {\r\n\t\tconst subject = new BehaviorSubject<FormSchemaModel>(undefined);\r\n\t\tthis.store\r\n\t\t\t.select((state) => state.form.list.data)\r\n\t\t\t.pipe(filter((forms) => forms != null), map((forms) => forms.find((form) => form._id == _id)))\r\n\t\t\t.subscribe((formSchemaModel) => subject.next(formSchemaModel));\r\n\t\treturn subject.asObservable();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FieldConfig, Field } from \"../../../models\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\n@Component({\r\n\tselector: \"ngs-form-control-select\",\r\n\ttemplateUrl: \"./select.component.html\",\r\n\tstyleUrls: [ \"./select.component.scss\" ]\r\n})\r\nexport class SelectComponent implements Field {\r\n\tconfig: FieldConfig;\r\n\tgroup: FormGroup;\r\n\tconstructor() {}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { Field, FieldConfig } from \"../../../models\";\r\n\r\n@Component({\r\n\tselector: \"ngs-form-control-checkbox\",\r\n\ttemplateUrl: \"./checkbox.component.html\",\r\n\tstyleUrls: [ \"./checkbox.component.scss\" ]\r\n})\r\nexport class CheckboxComponent implements Field {\r\n\tconfig: FieldConfig;\r\n\tgroup: FormGroup;\r\n\r\n\tconstructor() {}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { FieldConfig, Field } from \"../../../models\";\r\n\r\n@Component({\r\n\tselector: \"ngs-form-control-email\",\r\n\ttemplateUrl: \"./email.component.html\",\r\n\tstyleUrls: [ \"./email.component.scss\" ]\r\n})\r\nexport class EmailComponent implements Field {\r\n\tconfig: FieldConfig;\r\n\tgroup: FormGroup;\r\n\r\n\tconstructor() {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { FieldConfig, Field } from \"../../../models\";\r\n\r\n@Component({\r\n\tselector: \"ngs-form-control-color\",\r\n\ttemplateUrl: \"./color.component.html\",\r\n\tstyleUrls: [ \"./color.component.scss\" ]\r\n})\r\nexport class ColorComponent implements Field {\r\n\tconfig: FieldConfig;\r\n\tgroup: FormGroup;\r\n\r\n\t@Input() form: FormGroup;\r\n\t@Input() schema: FieldConfig;\r\n\tconstructor() {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { FieldConfig, Field } from \"../../../models\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MatTableDataSource } from \"@angular/material\";\r\nimport { SelectionModel } from \"@angular/cdk/collections\";\r\n\r\n@Component({\r\n\tselector: \"ngs-form-control-table\",\r\n\ttemplateUrl: \"./table.component.html\",\r\n\tstyleUrls: [ \"./table.component.scss\" ]\r\n})\r\nexport class TableComponent implements OnInit, Field {\r\n\tconfig: FieldConfig;\r\n\tgroup: FormGroup;\r\n\t@Input() form: FormGroup;\r\n\t@Input() schema: FieldConfig;\r\n\tready: boolean;\r\n\tdisplayedColumns: string[];\r\n\tfiledDisplayedColumns: string[];\r\n\tdataSource: MatTableDataSource<any>;\r\n\r\n\tselection = new SelectionModel<any>(true, []);\r\n\tconstructor(private http: HttpClient) {\r\n\t\tthis.ready = false;\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.http.get(this.schema.dataEndpoint).subscribe((data: any) => {\r\n\t\t\tthis.ready = true;\r\n\t\t\tthis.displayedColumns = data.displayedColumns;\r\n\t\t\tthis.filedDisplayedColumns = data.filedDisplayedColumns;\r\n\t\t\tthis.dataSource = new MatTableDataSource<any>(data.dataSource);\r\n\t\t});\r\n\t}\r\n\r\n\t/** Whether the number of selected elements matches the total number of rows. */\r\n\tisAllSelected() {\r\n\t\tconst numSelected = this.selection.selected.length;\r\n\t\tthis.form.patchValue({\r\n\t\t\t[this.schema.name]: this.selection.selected\r\n\t\t});\r\n\t\tconst numRows = this.dataSource.data.length;\r\n\t\treturn numSelected === numRows;\r\n\t}\r\n\r\n\t/** Selects all rows if they are not all selected; otherwise clear selection. */\r\n\tmasterToggle() {\r\n\t\tthis.isAllSelected() ? this.selection.clear() : this.dataSource.data.forEach(row => this.selection.select(row));\r\n\t}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { FieldConfig } from \"../../../models\";\r\n\r\n@Component({\r\n\tselector: \"ngs-form-control-number\",\r\n\ttemplateUrl: \"./number.component.html\",\r\n\tstyleUrls: [ \"./number.component.scss\" ]\r\n})\r\nexport class NumberComponent implements OnInit {\r\n\t@Input() form: FormGroup;\r\n\t@Input() schema: FieldConfig;\r\n\tconstructor() {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { FieldConfig, Field } from \"../../../models\";\r\n\r\n@Component({\r\n\tselector: \"ngs-form-control-text\",\r\n\ttemplateUrl: \"./text.component.html\",\r\n\tstyleUrls: [ \"./text.component.scss\" ]\r\n})\r\nexport class TextComponent implements Field {\r\n\tconfig: FieldConfig;\r\n\tgroup: FormGroup;\r\n\r\n\tconstructor() {}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { FormSchemaModel } from \"../models\";\r\n\r\nexport enum FormsListActionTypes {\r\n\tFORMS_LIST = \"[FORM][LIST] FORMS_LIST\",\r\n\tFORMS_LIST_START = \"[FORM][LIST] FORMS_LIST_START\",\r\n\tFORMS_LIST_SUCCEED = \"[FORM][LIST] FORMS_LIST_SUCCEED\",\r\n\tFORMS_LIST_FAILED = \"[FORM][LIST] FORMS_LIST_FAILED\",\r\n\tADD_FORM_SCHEMA = \"[FORM][LIST] ADD_FORM_SCHEMA\",\r\n\tFORM_SCHEMA_UPDATE = \"[FORM][LIST] FORM_SCHEMA_UPDATE\",\r\n\tGET_FORM_SCHEMA = \"[FORM][LIST] GET_FORM_SCHEMA\",\r\n\tFORM_SCHEMA_FETCHED = \"[FORM][LIST] FORM_SCHEMA_FETCHED\"\r\n}\r\n\r\nexport class FormsListAction implements Action {\r\n\treadonly type = FormsListActionTypes.FORMS_LIST;\r\n}\r\nexport class FormsListStartAction implements Action {\r\n\treadonly type = FormsListActionTypes.FORMS_LIST_START;\r\n}\r\nexport class FormsListSucceedAction implements Action {\r\n\treadonly type = FormsListActionTypes.FORMS_LIST_SUCCEED;\r\n\tconstructor(public payload: FormSchemaModel[]) {}\r\n}\r\nexport class FormsListFailedAction implements Action {\r\n\treadonly type = FormsListActionTypes.FORMS_LIST_FAILED;\r\n}\r\nexport class UpdateFormSchemaAction implements Action {\r\n\treadonly type = FormsListActionTypes.FORM_SCHEMA_UPDATE;\r\n\tconstructor(public payload: FormSchemaModel) {}\r\n}\r\nexport class AddFormSchemaAction implements Action {\r\n\treadonly type = FormsListActionTypes.ADD_FORM_SCHEMA;\r\n\tconstructor(public payload: FormSchemaModel) {}\r\n}\r\nexport class GetFormSchemaAction implements Action {\r\n\treadonly type = FormsListActionTypes.GET_FORM_SCHEMA;\r\n\tconstructor(public payload: string) {}\r\n}\r\nexport class FormSchemaFechedAction implements Action {\r\n\treadonly type = FormsListActionTypes.FORM_SCHEMA_FETCHED;\r\n\tconstructor(public payload: FormSchemaModel) {}\r\n}\r\n\r\nexport type FormsListActions =\r\n\t| FormsListAction\r\n\t| FormsListStartAction\r\n\t| FormsListSucceedAction\r\n\t| FormsListFailedAction\r\n\t| UpdateFormSchemaAction\r\n\t| AddFormSchemaAction\r\n\t| GetFormSchemaAction\r\n\t| FormSchemaFechedAction;\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { FieldConfig, Field } from \"../../../models\";\r\n\r\n@Component({\r\n\tselector: \"ngs-form-control-date\",\r\n\ttemplateUrl: \"./date.component.html\",\r\n\tstyleUrls: [ \"./date.component.scss\" ]\r\n})\r\nexport class DateFormInputControlComponent implements Field {\r\n\tconfig: FieldConfig;\r\n\tgroup: FormGroup;\r\n\r\n\tconstructor() {}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { FieldConfig, Field } from \"../../../models\";\r\n\r\n@Component({\r\n\tselector: \"ngs-form-control-file\",\r\n\ttemplateUrl: \"./file.component.html\",\r\n\tstyleUrls: [ \"./file.component.scss\" ]\r\n})\r\nexport class FileFormInputControlComponent implements Field {\r\n\tconfig: FieldConfig;\r\n\tgroup: FormGroup;\r\n\r\n\tconstructor() {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { filter, map, take, switchMap } from \"rxjs/operators\";\r\n\r\nimport { stringTemplate } from \"@soushians/shared\";\r\n\r\nimport { FormSchemaModel, AddFormApiModel, EditFormApiModel, FormListApiModel } from \"../models\";\r\nimport { FormConfigurationService } from \"./form-configuration.service\";\r\n\r\nimport { MainContainerState } from \"../main-container/main-container.reducers\";\r\nimport { UpsertCaptchaApiModel } from \"../models/captcha.model\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class FormCaptchaService {\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<MainContainerState>,\r\n\t\tprivate configurationService: FormConfigurationService\r\n\t) { }\r\n\r\n\tgetCaptcha(): Observable<any> {\r\n\t\tdebugger;\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((captcha) => captcha.endpoints.captchaUrl != \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tswitchMap((captcha) =>\r\n\t\t\t\tthis.http.get(captcha.env.server + captcha.endpoints.captchaUrl)\r\n\t\t\t),\r\n\t\t\tmap((response: any) => response.Result),\r\n\t\t);\r\n\t}\r\n\tsendCaptcha(): Observable<FormSchemaModel[]> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.getList != \"\"),\r\n\t\t\tswitchMap((config) => this.http.get(config.env.server + config.endpoints.getList)),\r\n\t\t\tmap((response: FormListApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n}\r\n","\r\nexport class CaptchaModel {\r\n\tcaptchaImg: string;\r\n\tcaptchaCode: string;\r\n\tconstructor({ captchaImg, captchaCode }: { captchaImg?: string; captchaCode?: string; } = {}) {\r\n\t\tthis.captchaImg = `${captchaImg}?${Math.random()}`;\r\n\t\tthis.captchaCode = captchaCode || \"\";\r\n\t}\r\n}\r\n\r\nexport namespace UpsertCaptchaApiModel {\r\n\texport class Request {\r\n\t\tCaptcha: CaptchaModel;\r\n\t\tconstructor(initValue: Partial<UpsertCaptchaApiModel.Request> = {}) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\t\tgetRequestBody() {\r\n\t\t\treturn this.Captcha.captchaCode;\r\n\t\t}\r\n\t}\r\n\texport class Response {\r\n\t\tResult: CaptchaModel;\r\n\t\tconstructor() { }\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormGroup, FormControl, FormArray, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { Field, FieldConfig } from \"../../../models\";\r\nimport { FormCaptchaService } from \"../../../services/form-captcha.service\";\r\nimport { CaptchaModel } from \"../../../models/captcha.model\";\r\nimport { MainContainerState } from \"../../../main-container\";\r\nimport { FormConfigurationService } from \"../../../services/form-configuration.service\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { generate } from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: \"lib-form-captcha\",\r\n\ttemplateUrl: \"./form-captcha.component.html\",\r\n\tstyleUrls: [\"./form-captcha.component.scss\"]\r\n})\r\nexport class FormCaptchaComponent implements OnInit, Field {\r\n\tconfig: FieldConfig;\r\n\tgroup: FormGroup;\r\n\r\n\tcaptcha: CaptchaModel;\r\n\tcaptchaSrc: string;\r\n\tconstructor(\r\n\t\tprivate service: FormCaptchaService,\r\n\t\tprivate store: Store<MainContainerState>,\r\n\t\tprivate configurationService: FormConfigurationService\r\n\t) {\r\n\t\t// this.captcha = new CaptchaModel({\r\n\t\t// \tcaptchaImg: \"http://172.22.34.28:8001/api/authentication/captcha\"\r\n\t\t// });\r\n\r\n\t\tthis._captcha_generate();\r\n\t}\r\n\tngOnInit() {\r\n\t\tdebugger;\r\n\t}\r\n\trefresh() {\r\n\t\tthis.captcha.captchaImg = this._captcha_generate() + `?${Math.random()}`;\r\n\t}\r\n\t_captcha_generate() {\r\n\t\tthis.configurationService.config$.pipe(\r\n\t\t\tmap(config => config.env.server + config.endpoints.captchaUrl)).subscribe(captcha => {\r\n\t\t\t\tthis.captcha = new CaptchaModel({\r\n\t\t\t\t\tcaptchaImg: captcha\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tViewChild,\r\n\tViewContainerRef,\r\n\tComponentFactoryResolver,\r\n\tCompiler,\r\n\tReflectiveInjector,\r\n\tNgModule,\r\n\tInput,\r\n\tOutput,\r\n\tEventEmitter,\r\n\tOnChanges,\r\n\tDirective,\r\n\tType,\r\n\tOnDestroy\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { FormControl, FormGroup, FormArray, AbstractControl, Validators } from \"@angular/forms\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subject } from \"rxjs\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { ComponentRef } from \"@angular/core/src/linker/component_factory\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport {\r\n\tSelectComponent,\r\n\tEmailComponent,\r\n\tColorComponent,\r\n\tCheckboxComponent,\r\n\tTextComponent,\r\n\tTableComponent\r\n} from \"../form-controls\";\r\nimport { FormService } from \"../../services/form.service\";\r\nimport { MainContainerState } from \"../../main-container/main-container.reducers\";\r\nimport { GetFormSchemaAction } from \"../../list/list.actions\";\r\nimport { Field, FieldConfig, FormSchemaModel } from \"../../models\";\r\nimport { DateFormInputControlComponent } from \"../form-controls/date/date.component\";\r\nimport { FileFormInputControlComponent } from \"../form-controls/file/file.component\";\r\nimport { FormCaptchaComponent } from \"../form-controls/form-captcha\";\r\n\r\n@Component({\r\n\tselector: \"ngs-form-view\",\r\n\ttemplateUrl: \"./form-view.component.html\",\r\n\tstyleUrls: [\"./form-view.component.css\"]\r\n})\r\nexport class FormViewComponent implements OnDestroy {\r\n\tunsubscribe = new Subject<void>();\r\n\t@Output() accept = new EventEmitter<FormGroup>();\r\n\t@Output() cancel = new EventEmitter<FormGroup>();\r\n\t@Input() local;\r\n\t@Input() card = false;\r\n\t@Input()\r\n\tset id(id: string) {\r\n\t\tif (!this.local) this.store.dispatch(new GetFormSchemaAction(id));\r\n\t\tthis.service\r\n\t\t\t.selectFormById(id)\r\n\t\t\t.pipe(takeUntil(this.unsubscribe))\r\n\t\t\t.subscribe(schema => this.schema$.next(schema));\r\n\t}\r\n\t@Input()\r\n\tset schema(schema: FormSchemaModel) {\r\n\t\tthis.schema$.next(schema);\r\n\t}\r\n\t_id: string;\r\n\tformGroup: FormGroup;\r\n\tformGroupCreated = false;\r\n\tschema$: BehaviorSubject<FormSchemaModel>;\r\n\r\n\tconstructor(\r\n\t\tprivate service: FormService,\r\n\t\tprivate compiler: Compiler,\r\n\t\tprivate resolver: ComponentFactoryResolver,\r\n\t\tprivate store: Store<MainContainerState>\r\n\t) {\r\n\t\tthis.schema$ = new BehaviorSubject(undefined);\r\n\t\tthis.schema$.pipe(takeUntil(this.unsubscribe)).subscribe(schema => {\r\n\t\t\tif (!schema) return;\r\n\t\t\tthis.formGroup = this.createFrom(schema.form) as FormGroup;\r\n\t\t\tif (!schema.form.name) return;\r\n\t\t\tthis.formGroupCreated = true;\r\n\t\t});\r\n\t}\r\n\tngOnDestroy() {\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t}\r\n\tgenerate(schema: FormSchemaModel) {\r\n\t\tthis.schema$.next(schema);\r\n\t}\r\n\r\n\tcreateFrom(data: FieldConfig, parentPath = \"\"): AbstractControl {\r\n\t\tif (data.type == \"control\") {\r\n\t\t\tlet formGroupPath;\r\n\t\t\tif (data.parentType == \"array\") {\r\n\t\t\t\t// parentPath = `${parentPath}.controls[${(data as FieldConfig).name}]`;\r\n\t\t\t} else if (data.parentType == \"group\") {\r\n\t\t\t\tformGroupPath = parentPath;\r\n\t\t\t\tparentPath = `${parentPath}.controls.${(data as FieldConfig).name}`;\r\n\t\t\t}\r\n\t\t\tconst validators = [];\r\n\t\t\tif (data.validator.required && data.validator.required.active) {\r\n\t\t\t\tvalidators.push(Validators.required);\r\n\t\t\t}\r\n\t\t\tif (data.validator.minlength && data.validator.minlength.active) {\r\n\t\t\t\tvalidators.push(Validators.minLength(data.validator.minlength.value));\r\n\t\t\t}\r\n\t\t\tif (data.validator.email && data.validator.email.active) {\r\n\t\t\t\tvalidators.push(Validators.email);\r\n\t\t\t}\r\n\t\t\tconst ctr = new FormControl(data.value, validators);\r\n\t\t\t(ctr as any).schema = data;\r\n\t\t\t(ctr as any).schema.path = parentPath;\r\n\t\t\t(ctr as any).schema.formGroupPath = formGroupPath;\r\n\t\t\treturn ctr;\r\n\t\t} else if (data.type == \"group\") {\r\n\t\t\tconst formGroup = new FormGroup({});\r\n\t\t\tif (data.parentType == undefined) {\r\n\t\t\t\tparentPath = (data as FieldConfig).name;\r\n\t\t\t} else if (data.parentType == \"array\") {\r\n\t\t\t\tparentPath = `${parentPath}.controls[${(data as FieldConfig).name}]`;\r\n\t\t\t} else if (data.parentType == \"group\") {\r\n\t\t\t\tparentPath = `${parentPath}.controls.${(data as FieldConfig).name}`;\r\n\t\t\t}\r\n\r\n\t\t\t(formGroup as any).schema = data;\r\n\t\t\t(formGroup as any).schema.path = parentPath;\r\n\t\t\tdata.fields.forEach(item => {\r\n\t\t\t\titem.parentType = \"group\";\r\n\t\t\t\tformGroup.addControl(item.name, this.createFrom(item, parentPath));\r\n\t\t\t});\r\n\t\t\treturn formGroup;\r\n\t\t} else {\r\n\t\t\tconst formArray: FormArray = new FormArray([]);\r\n\t\t\tparentPath =\r\n\t\t\t\tparentPath == \"\" ? (data as FieldConfig).name : `${parentPath}.controls.${(data as FieldConfig).name}`;\r\n\t\t\t(formArray as any).schema = data;\r\n\t\t\t(formArray as any).schema.path = parentPath;\r\n\t\t\tdata.fields.forEach((item, idx) => {\r\n\t\t\t\titem.parentType = \"array\";\r\n\t\t\t\titem.name = idx.toString();\r\n\t\t\t\tformArray.controls.push(this.createFrom(item, parentPath));\r\n\t\t\t});\r\n\t\t\treturn formArray;\r\n\t\t}\r\n\t}\r\n\r\n\taccepted() {\r\n\t\tthis.accept.emit(this.formGroup);\r\n\t}\r\n\tcanceled() {\r\n\t\tthis.cancel.emit(this.formGroup);\r\n\t}\r\n}\r\n\r\nconst components: { [type: string]: Type<Field> } = {\r\n\tcheckbox: CheckboxComponent,\r\n\ttext: TextComponent,\r\n\tpassword: TextComponent,\r\n\tdate: DateFormInputControlComponent,\r\n\tfile: FileFormInputControlComponent,\r\n\ttable: TableComponent,\r\n\tcolor: ColorComponent,\r\n\temail: EmailComponent,\r\n\tcaptcha: FormCaptchaComponent,\r\n\tselect: SelectComponent\r\n};\r\n\r\n@Directive({\r\n\tselector: \"[dynamicField]\"\r\n})\r\nexport class DynamicFieldDirective implements Field, OnChanges, OnInit {\r\n\t@Input() config: FieldConfig;\r\n\r\n\t@Input() group: FormGroup;\r\n\r\n\tcomponent: ComponentRef<Field>;\r\n\r\n\tconstructor(private resolver: ComponentFactoryResolver, private container: ViewContainerRef) { }\r\n\r\n\tngOnChanges() {\r\n\t\tdebugger;\r\n\t\tif (this.component) {\r\n\t\t\tthis.component.instance.config = this.config;\r\n\t\t\tthis.component.instance.group = this.group;\r\n\t\t}\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tdebugger;\r\n\t\tif (this.config.inputType == undefined) return;\r\n\t\tif (!components[this.config.inputType]) {\r\n\t\t\tconst supportedTypes = Object.keys(components).join(\", \");\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Trying to use an unsupported type (${this.config.inputType}).\r\n\t\t  Supported types: ${supportedTypes}`\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst component = this.resolver.resolveComponentFactory<Field>(components[this.config.inputType]);\r\n\t\tthis.component = this.container.createComponent(component);\r\n\t\tthis.component.instance.config = this.config;\r\n\t\tthis.component.instance.group = this.group;\r\n\t}\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\nimport { FormSchemaModel } from \"../models\";\r\nimport { FormsListActionTypes, FormsListActions } from \"./list.actions\";\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n\tdata: FormSchemaModel[];\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\",\r\n\tdata: []\r\n};\r\nexport function reducer(state = initialState, action: FormsListActions): State {\r\n\tswitch (action.type) {\r\n\t\tcase FormsListActionTypes.FORMS_LIST: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"dirty\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase FormsListActionTypes.FORMS_LIST_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase FormsListActionTypes.FORMS_LIST_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t\tstatus: \"succeed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase FormsListActionTypes.FORMS_LIST_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase FormsListActionTypes.FORM_SCHEMA_UPDATE: {\r\n\t\t\tconst data = state.data.concat();\r\n\t\t\tvar entityIdx = state.data.findIndex(form => form._id == action.payload._id);\r\n\t\t\tif (entityIdx > -1) {\r\n\t\t\t\tdata[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n\t\t\t} else {\r\n\t\t\t\tdata.push(action.payload);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: data\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase FormsListActionTypes.ADD_FORM_SCHEMA: {\r\n\t\t\tconst data = state.data.concat();\r\n\t\t\tvar entityIdx = state.data.findIndex(form => form._id == action.payload._id);\r\n\t\t\tif (entityIdx > -1) {\r\n\t\t\t\tdata[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n\t\t\t} else {\r\n\t\t\t\tdata.push(action.payload);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: data\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase FormsListActionTypes.FORM_SCHEMA_FETCHED: {\r\n\t\t\tconst data = state.data.concat();\r\n\t\t\tvar entityIdx = state.data.findIndex(form => form._id == action.payload._id);\r\n\t\t\tif (entityIdx > -1) {\r\n\t\t\t\tdata[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n\t\t\t} else {\r\n\t\t\t\tdata.push(action.payload);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: data\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getStatus = (state: State) => state.status;\r\n","import * as list from \"../list/list.reducers\";\r\n\r\nexport interface FormState {\r\n\tlist: list.State;\r\n}\r\n\r\nexport const FormReducers = {\r\n\tlist: list.reducer\r\n};\r\n\r\nexport interface MainContainerState {\r\n\t\"form\": FormState;\r\n}\r\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FieldConfig } from \"../../models\";\r\n\r\n@Component({\r\n\tselector: \"app-form-group\",\r\n\ttemplateUrl: \"./form-group.component.html\"\r\n})\r\nexport class FormGroupComponent {\r\n\t@Input() schema: FieldConfig;\r\n\t@Input() noHeader: boolean = false;\r\n\t@Output() changes = new EventEmitter();\r\n\t@Output() delete = new EventEmitter();\r\n\tconstructor() {}\r\n\r\n\tchanged() {\r\n\t\tthis.changes.emit();\r\n\t}\r\n\r\n\taddFormGroup(root: FieldConfig) {\r\n\t\tconst group = new FieldConfig(\"group\");\r\n\t\tgroup.fields = [];\r\n\t\troot.fields.push(group);\r\n\t\tthis.schema.id = this.schema.id + 1;\r\n\t\treturn group;\r\n\t}\r\n\taddFormArray(root: FieldConfig) {\r\n\t\tconst array = new FieldConfig(\"array\");\r\n\t\tarray.fields = [];\r\n\t\troot.fields.push(array);\r\n\t\treturn array;\r\n\t}\r\n\taddFormControl(root: FieldConfig) {\r\n\t\tconst control = new FieldConfig(\"control\");\r\n\t\troot.fields.push(control);\r\n\t\treturn control;\r\n\t}\r\n\tdeleteFormGroup(idx: number) {\r\n\t\tthis.schema.fields.splice(idx, 1);\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FieldConfig } from \"../../models\";\r\n\r\n@Component({\r\n\tselector: \"app-form-array\",\r\n\ttemplateUrl: \"./form-array.component.html\"\r\n})\r\nexport class FormArrayComponent {\r\n\t@Input() schema: FieldConfig;\r\n\t@Output() changes = new EventEmitter();\r\n\tconstructor() {}\r\n\r\n\tchanged() {\r\n\t\tthis.changes.emit();\r\n\t}\r\n\r\n\taddFormGroup(root: FieldConfig) {\r\n\t\tconst group = new FieldConfig(\"group\");\r\n\t\tgroup.fields = [];\r\n\t\troot.fields.push(group);\r\n\t\treturn group;\r\n\t}\r\n\taddFormArray(root: FieldConfig) {\r\n\t\tconst array = new FieldConfig(\"array\");\r\n\t\tarray.fields = [];\r\n\t\troot.fields.push(array);\r\n\t\treturn array;\r\n\t}\r\n\taddFormControl(root: FieldConfig) {\r\n\t\tconst control = new FieldConfig(\"control\");\r\n\t\troot.fields.push(control);\r\n\t\treturn control;\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormGroup, FormControl, FormArray } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../models\";\r\n\r\n@Component({\r\n\tselector: \"app-form-control\",\r\n\ttemplateUrl: \"./form-control.component.html\"\r\n})\r\nexport class FormControlComponent {\r\n\t@Input() schema: FieldConfig;\r\n\t@Output() changes = new EventEmitter();\r\n\t@Output() delete = new EventEmitter();\r\n\r\n\twidth = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ];\r\n\toptions = new FormArray([\r\n\t\tnew FormGroup({\r\n\t\t\tkey: new FormControl(),\r\n\t\t\tvalue: new FormControl()\r\n\t\t})\r\n\t]);\r\n\ttableOptions = new FormGroup({\r\n\t\tdataEndpoint: new FormControl(\"\")\r\n\t});\r\n\tconstructor() {}\r\n\r\n\tchanged() {\r\n\t\tif ([ this.schema.name, this.schema.title, this.schema.inputType ].some(item => !item)) return true;\r\n\t\tif (this.schema.inputType == \"table\") {\r\n\t\t\tthis.schema.options = this.tableOptions.value;\r\n\t\t} else if (this.schema.inputType == \"select\") {\r\n\t\t\tthis.schema.options = this.options.value;\r\n\t\t}\r\n\t\tthis.changes.emit();\r\n\t}\r\n\r\n\taddOption() {\r\n\t\tthis.options.push(\r\n\t\t\tnew FormGroup({\r\n\t\t\t\tkey: new FormControl(),\r\n\t\t\t\tvalue: new FormControl()\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\tremoveOption(i) {\r\n\t\tthis.options.controls.splice(i, 1);\r\n\t}\r\n\tinsertOptions() {\r\n\t\tthis.schema.options = this.options.value;\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { FormSchemaModel } from \"../models\";\r\n\r\nexport enum EditFormActionTypes {\r\n\tEDIT_FORM = \"[FORM][EDIT] EDIT_FORM\",\r\n\tEDIT_FORM_START = \"[FORM][EDIT] EDIT_FORM_START\",\r\n\tEDIT_FORM_SUCCEED = \"[FORM][EDIT] EDIT_FORM_SUCCEED\",\r\n\tEDIT_FORM_FAILED = \"[FORM][EDIT] EDIT_FORM_FAILED\"\r\n}\r\n\r\nexport class EditFormAction implements Action {\r\n\treadonly type = EditFormActionTypes.EDIT_FORM;\r\n\tconstructor(public payload: FormSchemaModel) {}\r\n}\r\nexport class EditFormStartAction implements Action {\r\n\treadonly type = EditFormActionTypes.EDIT_FORM_START;\r\n\tconstructor(public payload: FormSchemaModel) {}\r\n}\r\nexport class EditFormSucceedAction implements Action {\r\n\treadonly type = EditFormActionTypes.EDIT_FORM_SUCCEED;\r\n\tconstructor(public payload: FormSchemaModel) {}\r\n}\r\nexport class EditFormFailedAction implements Action {\r\n\treadonly type = EditFormActionTypes.EDIT_FORM_FAILED;\r\n}\r\n\r\nexport type EditFormActions = EditFormAction | EditFormStartAction | EditFormSucceedAction | EditFormFailedAction;\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { FormSchemaModel } from \"../models\";\r\n\r\nexport enum AddFormActionTypes {\r\n\tADD_FORM = \"[FORM][ADD] ADD_FORM_PROFILE\",\r\n\tADD_FORM_START = \"[FORM][ADD] ADD_FORM_START\",\r\n\tADD_FORM_SUCCEED = \"[FORM][ADD] ADD_FORM_SUCCEED\",\r\n\tADD_FORM_FAILED = \"[FORM][ADD] ADD_FORM_FAILED\"\r\n}\r\n\r\nexport class AddFormAction implements Action {\r\n\treadonly type = AddFormActionTypes.ADD_FORM;\r\n\tconstructor(public payload: FormSchemaModel) {}\r\n}\r\nexport class AddFormStartAction implements Action {\r\n\treadonly type = AddFormActionTypes.ADD_FORM_START;\r\n\tconstructor(public payload: FormSchemaModel) {}\r\n}\r\nexport class AddFormSucceedAction implements Action {\r\n\treadonly type = AddFormActionTypes.ADD_FORM_SUCCEED;\r\n}\r\nexport class AddFormFailedAction implements Action {\r\n\treadonly type = AddFormActionTypes.ADD_FORM_FAILED;\r\n}\r\n\r\nexport type AddFormActions = AddFormAction | AddFormStartAction | AddFormSucceedAction | AddFormFailedAction;\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { MainContainerState } from \"../../main-container/main-container.reducers\";\r\nimport { FormSchemaModel } from \"../../models\";\r\nimport { AddFormAction } from \"../add-form.actions\";\r\nimport { AddFormSchemaAction, UpdateFormSchemaAction } from \"../../list/list.actions\";\r\nimport { FormService } from \"../../services/form.service\";\r\n\r\n@Component({\r\n\ttemplate: `<ngs-form-add \r\n\t\t\t\t\t[schema]=\"schema\" \r\n\t\t\t\t\t(changes)=\"update_schema($event)\" \r\n\t\t\t\t\t(submited)=add($event)\r\n\t\t\t\t></ngs-form-add>`\r\n})\r\nexport class AddFormContainerComponent implements OnInit {\r\n\tschema: FormSchemaModel;\r\n\tconstructor(public store: Store<MainContainerState>, public service: FormService) {}\r\n\tngOnInit() {\r\n\t\tthis.schema = new FormSchemaModel();\r\n\t\tthis.schema.init();\r\n\t\tthis.store.dispatch(new AddFormSchemaAction(this.schema));\r\n\t}\r\n\tadd(form: FormSchemaModel) {\r\n\t\tthis.store.dispatch(new AddFormAction(form));\r\n\t}\r\n\tupdate_schema(form: FormSchemaModel) {\r\n\t\tthis.store.dispatch(new UpdateFormSchemaAction(form));\r\n\t}\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { MainContainerState } from \"../../main-container/main-container.reducers\";\r\nimport { EditFormApiModel } from \"../../models\";\r\nimport { FormService } from \"../../services/form.service\";\r\nimport { EditFormAction } from \"../../edit/edit-form.actions\";\r\nimport { AddFormContainerComponent } from \"../../add/add-form-container\";\r\nimport { GetFormSchemaAction } from \"../../list/list.actions\";\r\n\r\n@Component({\r\n\ttemplate: `<edit-form\r\n\t\t\t\t\t[formGroup]=\"formGroup\"\r\n\t\t\t\t\t[schema]=\"schema\"\r\n\t\t\t\t\t(changes)=\"update_schema($event)\"\r\n\t\t\t\t\t(submited)=\"update($event)\">\r\n\t\t\t\t</edit-form>`\r\n})\r\nexport class EditFormContainerComponent extends AddFormContainerComponent {\r\n\tformGroup = EditFormApiModel.Request.formGroup;\r\n\tconstructor(public service: FormService, private route: ActivatedRoute, public store: Store<MainContainerState>) {\r\n\t\tsuper(store, service);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.route.params\r\n\t\t\t.map((params) => params[\"_id\"])\r\n\t\t\t.subscribe((id) => this.store.dispatch(new GetFormSchemaAction(id)));\r\n\r\n\t\tthis.route.params\r\n\t\t\t.map((params) => params[\"_id\"])\r\n\t\t\t.switchMap((id) => this.service.selectFormById(id))\r\n\t\t\t.filter((data) => data != null)\r\n\t\t\t.take(1)\r\n\t\t\t.subscribe((formSchema) => {\r\n\t\t\t\tthis.schema = formSchema;\r\n\t\t\t\tthis.formGroup.patchValue(formSchema);\r\n\t\t\t});\r\n\t}\r\n\r\n\tupdate(data) {\r\n\t\tthis.store.dispatch(new EditFormAction(data));\r\n\t}\r\n}\r\n","import { Component, OnInit, EventEmitter, Output, Input } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { FormSchemaModel, AddFormApiModel, FieldConfig } from \"../../models\";\r\n\r\n@Component({\r\n\tselector: \"ngs-form-add\",\r\n\ttemplateUrl: \"./add-form.component.html\"\r\n})\r\nexport class AddFormComponent {\r\n\t@Input() schema: FormSchemaModel;\r\n\t@Input() formGroup = AddFormApiModel.Request.formGroup;\r\n\t@Output() submited = new EventEmitter();\r\n\t@Output() changes = new EventEmitter();\r\n\r\n\temit() {\r\n\t\tthis.formGroup.patchValue({ form: this.schema.form });\r\n\t\tthis.submited.emit(this.formGroup.value);\r\n\t}\r\n\tchanged() {\r\n\t\tthis.formGroup.patchValue({ form: this.schema.form });\r\n\t\tthis.changes.emit(this.formGroup.value);\r\n\t}\r\n\tchangeOrder($event) {}\r\n\r\n\taddFormGroup(root: FieldConfig) {\r\n\t\tconst group = new FieldConfig(\"group\");\r\n\t\tgroup.fields = [];\r\n\t\troot.fields.push(group);\r\n\t\treturn group;\r\n\t}\r\n\taddFormArray(root: FieldConfig) {\r\n\t\tconst array = new FieldConfig(\"array\");\r\n\t\tarray.fields = [];\r\n\t\troot.fields.push(array);\r\n\t\treturn array;\r\n\t}\r\n\taddFormControl(root: FieldConfig) {\r\n\t\tconst control = new FieldConfig(\"control\");\r\n\t\troot.fields.push(control);\r\n\t\treturn control;\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\n\r\nimport { AddFormComponent } from \"../../add/add-form\";\r\n\r\n@Component({\r\n    selector: \"edit-form\",\r\n    templateUrl: \"./edit-form.component.html\",\r\n    styleUrls: [\"./edit-form.component.scss\"]\r\n})\r\nexport class EditFormComponent extends AddFormComponent {\r\n    @Input() schema: any;\r\n    emit() {\r\n        if (!this.formGroup.valid) return;\r\n        return this.submited.emit(this.formGroup.value);\r\n    }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { MainContainerState } from \"../../main-container\";\r\nimport { FormSchemaModel } from \"../../models\";\r\nimport { FormsListAction } from \"../../list/list.actions\";\r\n\r\n@Component({\r\n\ttemplate: `<form-list\r\n\t\t\t\t\t[data]=\"data$\">\r\n\t\t\t\t</form-list>`\r\n})\r\nexport class FormListContainerComponent implements OnInit {\r\n\tdata$: Observable<FormSchemaModel[]>;\r\n\tconstructor(public store: Store<MainContainerState>) {\r\n\t\tthis.data$ = this.store.select(state => state.form.list.data);\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.store.dispatch(new FormsListAction());\r\n\t}\r\n}\r\n","import { Component, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { FormSchemaModel } from \"../../models\";\r\n\r\n@Component({\r\n\tselector: \"form-list\",\r\n\ttemplateUrl: \"./form-list.component.html\",\r\n\tstyleUrls: [\"./form-list.component.scss\"]\r\n})\r\nexport class FormListComponent {\r\n\t// tslint:disable-next-line:no-input-rename\r\n\t@Input(\"data\") data$: Observable<FormSchemaModel[]>;\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport * as MainContainerReducer from \"../../main-container/main-container.reducers\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n\ttemplate: \"<router-outlet></router-outlet>\",\r\n})\r\nexport class MainContainerComponent {\r\n\tconstructor(private route: ActivatedRoute, private store: Store<MainContainerReducer.MainContainerState>) { }\r\n}\r\n","import \"rxjs/add/operator/map\";\r\nimport \"rxjs/add/operator/mergeMap\";\r\nimport \"rxjs/add/operator/switchMap\";\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { FormService } from \"../services/form.service\";\r\nimport { AddFormApiModel } from \"../models\";\r\nimport { AddFormActionTypes, AddFormStartAction, AddFormSucceedAction, AddFormFailedAction } from \"./add-form.actions\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class AddFormEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private service: FormService) {}\r\n\r\n\t@Effect()\r\n\tAddForm$ = this.actions$\r\n\t\t.ofType(AddFormActionTypes.ADD_FORM)\r\n\t\t.pipe(map(action => action.payload), map(data => new AddFormStartAction(data)));\r\n\r\n\t@Effect()\r\n\tAddFormStart$ = this.actions$\r\n\t\t.ofType(AddFormActionTypes.ADD_FORM_START)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap((data: AddFormApiModel.Request) => this.service.add(data)),\r\n\t\t\tmap(res => new AddFormSucceedAction()),\r\n\t\t\tcatchError(() => of(new AddFormFailedAction()))\r\n\t\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { switchMap, map, catchError } from \"rxjs/operators\";\r\n\r\nimport { FormService } from \"../services/form.service\";\r\nimport { FormSchemaModel } from \"../models\";\r\nimport {\r\n\tFormsListAction,\r\n\tFormsListActionTypes,\r\n\tFormsListActions,\r\n\tFormsListFailedAction,\r\n\tFormsListStartAction,\r\n\tFormsListSucceedAction,\r\n\tFormSchemaFechedAction\r\n} from \"./list.actions\";\r\n\r\n@Injectable()\r\nexport class FormsListEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private service: FormService) {}\r\n\r\n\t@Effect()\r\n\tEditProfileRequest$ = this.actions$.ofType(FormsListActionTypes.FORMS_LIST).map(data => new FormsListStartAction());\r\n\r\n\t@Effect()\r\n\tGetForm$ = this.actions$\r\n\t\t.ofType(FormsListActionTypes.GET_FORM_SCHEMA)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap(id => this.service.get(id)),\r\n\t\t\tmap(formSchema => new FormSchemaFechedAction(formSchema))\r\n\t\t);\r\n\r\n\t@Effect()\r\n\tget_forms_list$ = this.actions$\r\n\t\t.ofType(FormsListActionTypes.FORMS_LIST_START)\r\n\t\t.pipe(\r\n\t\t\tswitchMap((data: any) => this.service.getList()),\r\n\t\t\tmap(res => new FormsListSucceedAction(res)),\r\n\t\t\tcatchError(() => of(new FormsListFailedAction()))\r\n\t\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { FormService } from \"../services/form.service\";\r\nimport { EditFormApiModel } from \"../models\";\r\nimport {\r\n\tEditFormActionTypes,\r\n\tEditFormStartAction,\r\n\tEditFormSucceedAction,\r\n\tEditFormFailedAction\r\n} from \"./edit-form.actions\";\r\nimport { UpdateFormSchemaAction } from \"../list\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class EditFormEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private service: FormService) {}\r\n\r\n\t@Effect()\r\n\tEditForm$ = this.actions$\r\n\t\t.ofType(EditFormActionTypes.EDIT_FORM)\r\n\t\t.pipe(map(action => action.payload), map(data => new EditFormStartAction(data)));\r\n\r\n\t@Effect()\r\n\tEditFormStart$ = this.actions$\r\n\t\t.ofType(EditFormActionTypes.EDIT_FORM_START)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap((data: EditFormApiModel.Request) => this.service.update(data)),\r\n\t\t\tmap(formSchema => new EditFormSucceedAction(formSchema)),\r\n\t\t\tcatchError(() => of(new EditFormFailedAction()))\r\n\t\t);\r\n\r\n\t@Effect()\r\n\tUpdateFormsListStart$ = this.actions$\r\n\t\t.ofType(EditFormActionTypes.EDIT_FORM_SUCCEED)\r\n\t\t.pipe(map(action => action.payload), map(formSchema => new UpdateFormSchemaAction(formSchema)));\r\n}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { MainContainerComponent } from \"./main-container/main-container.component/main-container.component\";\r\nimport { EditFormContainerComponent } from \"./edit/edit-form-container/edit-form-container.component\";\r\nimport { AddFormContainerComponent } from \"./add/add-form-container/add-form-container.component\";\r\nimport { FormListContainerComponent } from \"./list/form-list-container/form-list.container.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"form\",\r\n\t\tcomponent: MainContainerComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"add\",\r\n\t\t\t\tcomponent: AddFormContainerComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"edit/:_id\",\r\n\t\t\t\tcomponent: EditFormContainerComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"\",\r\n\t\t\t\tcomponent: FormListContainerComponent\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const RoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { FormSchemaModel } from \"../models\";\r\nimport { CaptchaModel } from \"../models/captcha.model\";\r\n\r\nexport enum CaptchaActionTypes {\r\n\tGET_CAPTCHA = \"[CAPTCHA][GET] GET_CAPTCHA\",\r\n\tGET_CAPTCHA_START = \"[CAPTCHA][GET] GET_CAPTCHA_START\",\r\n\tGET_CAPTCHA_SUCCEED = \"[CAPTCHA][GET] GET_CAPTCHA_SUCCEED\",\r\n\tGET_CAPTCHA_FAILED = \"[CAPTCHA][GET] GET_CAPTCHA_FAILED\"\r\n}\r\n\r\nexport class GetCaptchaAction implements Action {\r\n\treadonly type = CaptchaActionTypes.GET_CAPTCHA;\r\n\t// constructor(public payload: CaptchaModel) { }\r\n}\r\nexport class GetCaptchaStartAction implements Action {\r\n\treadonly type = CaptchaActionTypes.GET_CAPTCHA_START;\r\n\tconstructor(public payload: CaptchaModel) { }\r\n}\r\nexport class GetCaptchaSucceedAction implements Action {\r\n\treadonly type = CaptchaActionTypes.GET_CAPTCHA_SUCCEED;\r\n}\r\nexport class GetCaptchaFailedAction implements Action {\r\n\treadonly type = CaptchaActionTypes.GET_CAPTCHA_FAILED;\r\n}\r\n\r\nexport type CaptchaActions = GetCaptchaAction | GetCaptchaStartAction | GetCaptchaSucceedAction | GetCaptchaFailedAction;\r\n","import \"rxjs/add/operator/map\";\r\nimport \"rxjs/add/operator/mergeMap\";\r\nimport \"rxjs/add/operator/switchMap\";\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { FormService } from \"../services/form.service\";\r\nimport { AddFormApiModel } from \"../models\";\r\nimport {\r\n\tCaptchaActionTypes,\r\n\tGetCaptchaSucceedAction,\r\n\tGetCaptchaFailedAction,\r\n\tGetCaptchaStartAction\r\n} from \"./captcha.actions\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { FormCaptchaService } from \"../services/form-captcha.service\";\r\n\r\n@Injectable()\r\nexport class CaptchaEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private service: FormCaptchaService) {}\r\n\r\n\t@Effect()\r\n\tGetCaptcha$ = this.actions$\r\n\t\t.ofType(CaptchaActionTypes.GET_CAPTCHA)\r\n\t\t.pipe(map(action => action.payload), map(data => new GetCaptchaStartAction(data)));\r\n\r\n\t@Effect()\r\n\tAddFormStart$ = this.actions$\r\n\t\t.ofType(CaptchaActionTypes.GET_CAPTCHA_START)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap((data: AddFormApiModel.Request) => this.service.getCaptcha()),\r\n\t\t\tmap(res => new GetCaptchaSucceedAction()),\r\n\t\t\tcatchError(() => of(new GetCaptchaFailedAction()))\r\n\t\t);\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule,\r\n\tMatSlideToggleModule,\r\n\tMatDividerModule,\r\n\tMatCheckboxModule,\r\n\tMatTableModule,\r\n\tMatDatepickerModule\r\n} from \"@angular/material\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\nimport { EffectsModule, mergeEffects } from \"@ngrx/effects\";\r\n\r\nimport { FormModuleConfig, MODULE_CONFIG_TOKEN, MODULE_DEFAULT_CONFIG } from \"./form.config\";\r\nimport { FormReducers } from \"./main-container/main-container.reducers\";\r\nimport { SelectComponent } from \"./view/form-controls/select/select.component\";\r\nimport { FormGroupComponent } from \"./add/form-group/form-group.component\";\r\nimport { FormArrayComponent } from \"./add/form-array/form-array.component\";\r\nimport { FormControlComponent } from \"./add/form-control/form-control.component\";\r\nimport { FormViewComponent, DynamicFieldDirective } from \"./view/form-view/form-view.component\";\r\nimport { TextComponent } from \"./view/form-controls/text/text.component\";\r\nimport { CheckboxComponent } from \"./view/form-controls/checkbox/checkbox.component\";\r\nimport { EmailComponent } from \"./view/form-controls/email/email.component\";\r\nimport { ColorComponent } from \"./view/form-controls/color/color.component\";\r\nimport { NumberComponent } from \"./view/form-controls/number/number.component\";\r\nimport { TableComponent } from \"./view/form-controls/table/table.component\";\r\nimport { EditFormContainerComponent } from \"./edit/edit-form-container/edit-form-container.component\";\r\nimport { EditFormComponent } from \"./edit/edit-form/edit-form.component\";\r\nimport { FormListContainerComponent } from \"./list/form-list-container/form-list.container.component\";\r\nimport { FormListComponent } from \"./list/form-list/form-list.component\";\r\nimport { AddFormContainerComponent } from \"./add/add-form-container/add-form-container.component\";\r\nimport { MainContainerComponent } from \"./main-container/main-container.component/main-container.component\";\r\nimport { AddFormComponent } from \"./add/add-form/add-form.component\";\r\nimport { AddFormEffects } from \"./add/add-form.effects\";\r\nimport { EditFormEffects } from \"./edit/edit-form.effects\";\r\nimport { FormsListEffects } from \"./list/list.effects\";\r\nimport { RoutingModule } from \"./form-routing.module\";\r\nimport { DateFormInputControlComponent } from \"./view/form-controls/date/date.component\";\r\nimport { FileFormInputControlComponent } from \"./view/form-controls/file/file.component\";\r\nimport { CaptchaEffects } from \"./add/captcha.effects\";\r\nimport { FormCaptchaComponent } from \"./view/form-controls/form-captcha/form-captcha.component\";\r\nimport { FormConfigurationService } from \"./services/form-configuration.service\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tRouterModule,\r\n\t\tCommonModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatDatepickerModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatTableModule,\r\n\t\tMatSelectModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tMatDividerModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatRadioModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tReactiveFormsModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tEditFormContainerComponent,\r\n\t\tEditFormComponent,\r\n\t\tFormListContainerComponent,\r\n\t\tFormListComponent,\r\n\t\tAddFormContainerComponent,\r\n\t\tMainContainerComponent,\r\n\t\tAddFormComponent,\r\n\t\tFormGroupComponent,\r\n\t\tFormArrayComponent,\r\n\t\tFormControlComponent,\r\n\t\tFormViewComponent,\r\n\t\tDynamicFieldDirective,\r\n\t\tSelectComponent,\r\n\t\tCheckboxComponent,\r\n\t\tEmailComponent,\r\n\t\tColorComponent,\r\n\t\tDateFormInputControlComponent,\r\n\t\tFileFormInputControlComponent,\r\n\t\tTextComponent,\r\n\t\tNumberComponent,\r\n\t\tTableComponent,\r\n\t\tFormCaptchaComponent\r\n\t\t// NgsFormSelectorComponent\r\n\t],\r\n\tentryComponents: [\r\n\t\tSelectComponent,\r\n\t\tCheckboxComponent,\r\n\t\tEmailComponent,\r\n\t\tColorComponent,\r\n\t\tDateFormInputControlComponent,\r\n\t\tFileFormInputControlComponent,\r\n\t\tTextComponent,\r\n\t\tNumberComponent,\r\n\t\tTableComponent,\r\n\t\tFormCaptchaComponent\r\n\t],\r\n\texports: [ FormViewComponent ]\r\n\t// exports: [ FormViewComponent, NgsFormSelectorComponent ]\r\n})\r\nexport class NgsFormModule {\r\n\tstatic forRoot(config?: FormModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: RootNgsFormModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config }, FormConfigurationService ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsFormModule,\r\n\t\tStoreModule.forFeature(\"form\", FormReducers),\r\n\t\tEffectsModule.forFeature([ AddFormEffects, EditFormEffects, FormsListEffects, CaptchaEffects ]),\r\n\t\tRoutingModule\r\n\t],\r\n\texports: [ NgsFormModule ]\r\n})\r\nexport class RootNgsFormModule {}\r\n"],"names":["FormGroup","FormControl","Validators","InjectionToken","BehaviorSubject","getFormModuleConfig","Injectable","Inject","Store","config","stringTemplate","filter","forms","map","HttpClient","Component","Input","SelectionModel","MatTableDataSource","take","switchMap","Subject","EventEmitter","takeUntil","FormArray","Compiler","ComponentFactoryResolver","Output","Directive","ViewContainerRef","list.reducer","tslib_1.__extends","ActivatedRoute","router","catchError","of","Actions","Router","Effect","RouterModule","NgModule","HttpClientModule","FormsModule","CommonModule","MatExpansionModule","MatSnackBarModule","MatIconModule","MatDatepickerModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatTableModule","MatSelectModule","MatInputModule","MatFormFieldModule","MatTabsModule","MatDividerModule","FlexLayoutModule","MatRadioModule","MatSlideToggleModule","ReactiveFormsModule","StoreModule","EffectsModule"],"mappings":"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"}
