{"version":3,"sources":["null","ng://@soushians/page/lib/page.config.ts","ng://@soushians/page/lib/services/api/get-pages/get-pages.model.ts","ng://@soushians/page/lib/services/page-configuration.service.ts","ng://@soushians/page/lib/services/api/get-pages/get-pages.actions.ts","ng://@soushians/page/lib/services/api/get-page/get-page.model.ts","ng://@soushians/page/lib/services/api/get-page/get-page.actions.ts","ng://@soushians/page/lib/services/api/delete-page/delete-page.model.ts","ng://@soushians/page/lib/services/api/delete-page/delete-page.actions.ts","ng://@soushians/page/lib/services/api/upsert-page/upsert-page.model.ts","ng://@soushians/page/lib/models/page.model.ts","ng://@soushians/page/lib/services/api/upsert-page/upsert-page.actions.ts","ng://@soushians/page/lib/services/page.service.ts","ng://@soushians/page/lib/view/page-view.component.ts","ng://@soushians/page/lib/root/root.component.ts","ng://@soushians/page/lib/upsert/upsert.component.ts","ng://@soushians/page/lib/mangement/page-management.component.ts","ng://@soushians/page/lib/page-routing.module.ts","ng://@soushians/page/lib/root/pages.actions.ts","ng://@soushians/page/lib/root/pages.effects.ts","ng://@soushians/page/lib/root/pages.reducers.ts","ng://@soushians/page/lib/page.reducer.ts","ng://@soushians/page/lib/services/api/get-page/get-page.effects.ts","ng://@soushians/page/lib/services/api/get-pages/get-pages.effects.ts","ng://@soushians/page/lib/services/api/upsert-page/upsert-page.effects.ts","ng://@soushians/page/lib/services/api/delete-page/delete-page.effects.ts","ng://@soushians/page/lib/page.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","GetPagesApiModel","MODULE_DEFAULT_CONFIG","env","production","frontend_server","endpoints","upsert","delete","find","get","MODULE_CONFIG_TOKEN","InjectionToken","PageConfigurationService","configFile","store","BehaviorSubject","_config","config$","Injectable","Inject","args","Store","Request","initValue","_this","keys","forEach","getRequestBody","Response","GetPageApiModel","GetPagesStartAction","GetPagesSucceedAction","payload","GetPagesFailedAction","DeletePageApiModel","GetPageStartAction","GetPageSucceedAction","GetPageFailedAction","UpsertPageApiModel","DeletePageStartAction","DeletePageSucceedAction","DeletePageFailedAction","PageModel","_a","_b","_id","name","grid","page","UpsertPageStartAction","UpsertPageSucceedAction","UpsertPageFailedAction","PageService","http","configurationService","_location","userFacadeService","userId$","getDisplayName","filter","undefined","pipe","config","take","combineLatest","switchMap","stringTemplate","map","response","Result","getPages","model","post","tap","back","selectByName","subject","select","state","pages","db","data","dispatch","subscribe","asObservable","HttpClient","Location","UserFacadeService","PageViewComponent","service","route","resolver","container","ngOnInit","_selectPage","page$","params","pluck","Component","template","ActivatedRoute","ComponentFactoryResolver","ViewContainerRef","RootComponent","selector","UpsertComponent","_init_formgroup","formGroup","_select_page","_update_formgroup_base_on_page","FormGroup","FormControl","patchValue","PagesManagementComponent","pages$","styles","routes","path","component","children","RoutingModule","RouterModule","forChild","UpsertPageAction","PagesActionTypes","DeletePageAction","PageDbEffects","actions$","ofType","Actions","Effect","initialState","Reducer","action","_data","type","concat","newPages","Array","console","newPage","existedPageIndex","findIndex","w","splice","pageIndex","PageReducer","fromRoot.Reducer","GetPageApiEffects","res","catchError","err","of","GetPagesApiEffects","UpsertPageApiEffects","DeletePageApiEffects","NgsPageModule","forRoot","ngModule","NgsPageRootModule","providers","provide","useValue","NgModule","imports","CommonModule","MatInputModule","MatFormFieldModule","MatCardModule","MatButtonModule","MatIconModule","MatDividerModule","FlexLayoutModule","FormsModule","ReactiveFormsModule","NgsGridModule","declarations","exports","StoreModule","forFeature","EffectsModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface PageModuleConfig {\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t};\r\n\tendpoints?: {\r\n\t\tget: string;\r\n\t\tdelete: string;\r\n\t\tfind: string;\r\n\t\tupsert: string;\r\n\t};\r\n}\r\nexport const MODULE_DEFAULT_CONFIG: PageModuleConfig = {\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"frontend_server/did/not/set\"\r\n\t},\r\n\tendpoints: {\r\n\t\tupsert: \"/api/page\",\r\n\t\tdelete: \"/api/page/${model._id}\",\r\n\t\tfind: \"/api/page\",\r\n\t\tget: \"/api/page/${model.name}\"\r\n\t}\r\n};\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<PageModuleConfig>(\"PageModuleConfig\");\r\n","import { PageModel } from \"../../../models/page.model\";\r\n\r\nexport namespace GetPagesApiModel {\r\n\texport class Request {\r\n\t\tconstructor(initValue = {}) {\r\n\t\t\tObject.keys(initValue).forEach((key) => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: PageModel[];\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { BehaviorSubject } from \"rxjs\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { PageModuleConfig, MODULE_DEFAULT_CONFIG, MODULE_CONFIG_TOKEN } from \"../page.config\";\r\nimport { AppState } from \"../page.reducer\";\r\n\r\n@Injectable()\r\nexport class PageConfigurationService {\r\n\tprivate _config: PageModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<AppState>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\t// this.store.select(getPageModuleConfig).subscribe((pageConfig) => {\r\n\t\t// \tif (!pageConfig) {\r\n\t\t// \t\treturn;\r\n\t\t// \t}\r\n\t\t// \tthis._config = Object.assign({}, this._config, pageConfig.Config);\r\n\t\t// \tthis.config$.next(this._config);\r\n\t\t// });\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetPagesApiModel } from \"./get-pages.model\";\r\nimport { PageModel } from \"../../../models/page.model\";\r\n\r\nexport const enum GET_PAGES_ACTION_TYPES {\r\n\tSTART = \"[GET_PAGES][API][GetPages] start\",\r\n\tSUCCEED = \"[GET_PAGES][API][GetPages] succeed\",\r\n\tFAILED = \"[GET_PAGES][API][GetPages] failed\"\r\n}\r\n\r\nexport class GetPagesStartAction implements Action {\r\n\treadonly type = GET_PAGES_ACTION_TYPES.START;\r\n}\r\nexport class GetPagesSucceedAction implements Action {\r\n\treadonly type = GET_PAGES_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: PageModel[]) {}\r\n}\r\nexport class GetPagesFailedAction implements Action {\r\n\treadonly type = GET_PAGES_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type GetPagesActions = GetPagesStartAction | GetPagesSucceedAction | GetPagesFailedAction;\r\n","import { PageModel } from \"../../../models/page.model\";\r\n\r\nexport namespace GetPageApiModel {\r\n\texport class Request {\r\n\t\tname: string;\r\n\t\tconstructor(initValue = {}) {\r\n\t\t\tObject.keys(initValue).forEach((key) => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: PageModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetPageApiModel } from \"./get-page.model\";\r\nimport { PageModel } from \"../../../models/page.model\";\r\n\r\nexport const enum GET_PAGE_ACTION_TYPES {\r\n\tSTART = \"[PAGE][API][GetPage] start\",\r\n\tSUCCEED = \"[PAGE][API][GetPage] succeed\",\r\n\tFAILED = \"[PAGE][API][GetPage] failed\"\r\n}\r\n\r\nexport class GetPageStartAction implements Action {\r\n\treadonly type = GET_PAGE_ACTION_TYPES.START;\r\n\tconstructor(public payload: string) {}\r\n}\r\nexport class GetPageSucceedAction implements Action {\r\n\treadonly type = GET_PAGE_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: PageModel) {}\r\n}\r\nexport class GetPageFailedAction implements Action {\r\n\treadonly type = GET_PAGE_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type GetPageActions = GetPageStartAction | GetPageSucceedAction | GetPageFailedAction;\r\n","import { PageModel } from \"../../../models/page.model\";\r\n\r\nexport namespace DeletePageApiModel {\r\n\texport class Request {\r\n\t\tconstructor(initValue = {}) {\r\n\t\t\tObject.keys(initValue).forEach((key) => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: PageModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { PageModel } from \"../../../models/page.model\";\r\n\r\nexport const enum DELETE_PAGE_ACTION_TYPES {\r\n\tSTART = \"[PAGE][API][DELETE] start\",\r\n\tSUCCEED = \"[PAGE][API][DELETE] succeed\",\r\n\tFAILED = \"[PAGE][API][DELETE] failed\"\r\n}\r\n\r\nexport class DeletePageStartAction implements Action {\r\n\treadonly type = DELETE_PAGE_ACTION_TYPES.START;\r\n\tconstructor(public payload: string) {}\r\n}\r\nexport class DeletePageSucceedAction implements Action {\r\n\treadonly type = DELETE_PAGE_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: PageModel) {}\r\n}\r\nexport class DeletePageFailedAction implements Action {\r\n\treadonly type = DELETE_PAGE_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type DeletePageActions = DeletePageStartAction | DeletePageSucceedAction | DeletePageFailedAction;\r\n","import { PageModel } from \"../../../models/page.model\";\r\n\r\nexport namespace UpsertPageApiModel {\r\n\texport class Request {\r\n\t\tpage: PageModel;\r\n\t\tconstructor(page = {}) {\r\n\t\t\tdebugger;\r\n\t\t\tthis.page = new PageModel(page);\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn this.page;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: PageModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","export class PageModel {\r\n\t_id: string;\r\n\tname: string;\r\n\tgrid: string;\r\n\tconstructor({ _id, name, grid }: { _id?: string; name?: string; grid?: string } = {}) {\r\n\t\tthis._id = _id;\r\n\t\tthis.name = name || \"\";\r\n\t\tthis.grid = grid || \"\";\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { UpsertPageApiModel } from \"./upsert-page.model\";\r\nimport { PageModel } from \"../../../models/page.model\";\r\n\r\nexport const enum UPSERT_PAGE_ACTION_TYPES {\r\n\tSTART = \"[UPSERT_PAGE][API][UpsertPage] start\",\r\n\tSUCCEED = \"[UPSERT_PAGE][API][UpsertPage] succeed\",\r\n\tFAILED = \"[UPSERT_PAGE][API][UpsertPage] failed\"\r\n}\r\n\r\nexport class UpsertPageStartAction implements Action {\r\n\treadonly type = UPSERT_PAGE_ACTION_TYPES.START;\r\n\tconstructor(public payload: PageModel) {}\r\n}\r\nexport class UpsertPageSucceedAction implements Action {\r\n\treadonly type = UPSERT_PAGE_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: PageModel) {}\r\n}\r\nexport class UpsertPageFailedAction implements Action {\r\n\treadonly type = UPSERT_PAGE_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type UpsertPageActions = UpsertPageStartAction | UpsertPageSucceedAction | UpsertPageFailedAction;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { map, filter, tap, take, switchMap, combineLatest } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { UserFacadeService } from \"@soushians/user\";\r\n\r\nimport { AppState } from \"../page.reducer\";\r\nimport { PageConfigurationService } from \"./page-configuration.service\";\r\nimport { PageModel } from \"../models/page.model\";\r\nimport { stringTemplate } from \"@soushians/shared\";\r\nimport { GetPagesApiModel, GetPageStartAction, UpsertPageApiModel, DeletePageApiModel } from \"./api\";\r\nimport { Location } from \"@angular/common\";\r\n\r\n@Injectable()\r\nexport class PageService {\r\n\tuserId$: Observable<string>;\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate configurationService: PageConfigurationService,\r\n\t\tprivate _location: Location,\r\n\t\tprivate userFacadeService: UserFacadeService\r\n\t) {\r\n\t\tthis.userId$ = this.userFacadeService.getDisplayName().filter((i) => i != undefined);\r\n\t}\r\n\r\n\tget(name: string): Observable<PageModel> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.get !== \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tcombineLatest(this.userId$),\r\n\t\t\tswitchMap(([config, userId]) =>\r\n\t\t\t\tthis.http.get(stringTemplate(config.env.frontend_server + config.endpoints.get, { name }))\r\n\t\t\t),\r\n\t\t\tmap((response: UpsertPageApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\r\n\tdelete(_id: string): Observable<PageModel> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.delete !== \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tswitchMap((config) =>\r\n\t\t\t\tthis.http.delete(stringTemplate(config.env.frontend_server + config.endpoints.delete, { _id }))\r\n\t\t\t),\r\n\t\t\tmap((response: DeletePageApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\r\n\tgetPages(): Observable<PageModel[]> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.find != \"\"),\r\n\t\t\tcombineLatest(this.userId$),\r\n\t\t\tswitchMap(([config, userId]) =>\r\n\t\t\t\tthis.http.get(config.env.frontend_server + config.endpoints.find)\r\n\t\t\t),\r\n\t\t\tmap((response: GetPagesApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\tupsert<T>(page: UpsertPageApiModel.Request): Observable<PageModel> {\r\n\t\tconst model = new UpsertPageApiModel.Request(page);\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.upsert != \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tcombineLatest(this.userId$),\r\n\t\t\tswitchMap(([config, userId]) =>\r\n\t\t\t\tthis.http.post(config.env.frontend_server + config.endpoints.upsert, model.getRequestBody())\r\n\t\t\t),\r\n\t\t\tmap((response: UpsertPageApiModel.Response) => response.Result),\r\n\t\t\ttap(() => this._location.back())\r\n\t\t);\r\n\t}\r\n\t// delete(name: string) {\r\n\t// \treturn this.configurationService.config$\r\n\t// \t\t.filter((config) => config.endpoints.deleteForm != \"\")\r\n\t// \t\t.switchMap((config) => this.http.get(config.endpoints.deleteForm));\r\n\t// }\r\n\tselectByName(name: string): Observable<PageModel> {\r\n\t\tconst subject = new BehaviorSubject<PageModel>(undefined);\r\n\t\tthis.store\r\n\t\t\t.select((state) => state.pages.db.data)\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter((pages) => pages != null),\r\n\t\t\t\tmap((pages) => pages.find((page) => page.name == name)),\r\n\t\t\t\ttap((page) => {\r\n\t\t\t\t\tif (page == null) {\r\n\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t\tthis.store.dispatch(new GetPageStartAction(name));\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe((page) => subject.next(page));\r\n\t\treturn subject.asObservable();\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tComponentRef,\r\n\tComponentFactoryResolver,\r\n\tViewContainerRef,\r\n\tDirective,\r\n\tInput\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { pluck, filter, switchMap, map, startWith } from \"rxjs/operators\";\r\n\r\nimport { PageModel } from \"../models/page.model\";\r\nimport { AppState } from \"../page.reducer\";\r\nimport { PageService } from \"../services/page.service\";\r\nimport { PageConfigurationService } from \"../services/page-configuration.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n\ttemplate: `<div *ngIf=\"(page$ | async)?.grid\">\r\n    <ngs-grid [oid]=\"(page$ | async)?.grid\"></ngs-grid>\r\n</div>`\r\n})\r\nexport class PageViewComponent implements OnInit {\r\n\tpage$: Observable<PageModel>;\r\n\tconstructor(\r\n\t\tpublic store: Store<AppState>,\r\n\t\tprivate service: PageService,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate resolver: ComponentFactoryResolver,\r\n\t\tprivate container: ViewContainerRef\r\n\t) {}\r\n\tngOnInit() {\r\n\t\tthis._selectPage();\r\n\t}\r\n\t_selectPage() {\r\n\t\tthis.page$ = this.route.params.pipe(\r\n\t\t\tpluck(\"name\"),\r\n\t\t\tswitchMap((name: string) => this.service.selectByName(name)),\r\n\t\t\tfilter((page) => page != undefined)\r\n\t\t);\r\n\t}\r\n}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n\tselector: \"page-root\",\r\n\ttemplate: \"<router-outlet></router-outlet>\"\r\n})\r\nexport class RootComponent {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { UpsertPageStartAction } from \"../services/api\";\r\nimport { AppState } from \"../page.reducer\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { PageModel } from \"../models/page.model\";\r\nimport { pluck, switchMap, filter } from \"rxjs/operators\";\r\nimport { PageService } from \"../services/page.service\";\r\n\r\n@Component({\r\n\ttemplate: `<div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"main-container\">\r\n    <mat-card fxFlex=\"50\">\r\n        <mat-card-header>\r\n            <mat-card-title fxLayout=\"row\" fxLayoutGap=\"5px\">\r\n                <mat-icon>receipt</mat-icon>\r\n                <span>Ø§ÛØ¬Ø§Ø¯ ØµÙØ­Ù Ø¬Ø¯ÛØ¯</span>\r\n            </mat-card-title>\r\n            <mat-card-subtitle fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <span>\r\n                    ÙØ§Ù ØµÙØ­Ù Ø±Ø§ ÙØ§Ø±Ø¯ ÙÙØ§ÛÛØ¯ Ù Ø¨Ù ÙØ±Ø­ÙÙ Ø¨Ø¹Ø¯ Ø¨Ø±ÙÛØ¯ ...\r\n                </span>\r\n            </mat-card-subtitle>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content [formGroup]=\"formGroup\">\r\n            <mat-form-field>\r\n                <input type=\"text\" matInput placeholder=\"ÙØ§Ù\" formControlName=\"name\">\r\n            </mat-form-field>\r\n        </mat-card-content>\r\n        <mat-card-actions align=\"end\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"upsert()\">Ø«Ø¨Øª</button>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n</div>`\r\n})\r\nexport class UpsertComponent implements OnInit {\r\n\tformGroup: FormGroup;\r\n\tpage$: Observable<PageModel>;\r\n\tconstructor(private store: Store<AppState>, private route: ActivatedRoute, private service: PageService) {\r\n\t\tthis._init_formgroup();\r\n\t}\r\n\r\n\t/**\r\n\t * view methods\r\n\t */\r\n\tupsert() {\r\n\t\tdebugger;\r\n\t\tconst page = {\r\n\t\t\t...this.formGroup.value\r\n\t\t};\r\n\t\tthis.store.dispatch(new UpsertPageStartAction(page));\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis._select_page();\r\n\t\tthis._update_formgroup_base_on_page();\r\n\t}\r\n\r\n\t/**\r\n\t * private methods\r\n\t */\r\n\t_init_formgroup() {\r\n\t\tthis.formGroup = new FormGroup({\r\n\t\t\t_id: new FormControl(\"\"),\r\n\t\t\tname: new FormControl(\"\"),\r\n\t\t\tgrid: new FormControl(\"\")\r\n\t\t});\r\n\t}\r\n\r\n\t_select_page() {\r\n\t\tthis.page$ = this.route.params.pipe(\r\n\t\t\tpluck(\"name\"),\r\n\t\t\tfilter((name) => name != undefined),\r\n\t\t\tswitchMap((name: string) => this.service.selectByName(name)),\r\n\t\t\tfilter((page) => page != undefined)\r\n\t\t);\r\n\t}\r\n\t_update_formgroup_base_on_page() {\r\n\t\tthis.page$.subscribe((page) => {\r\n\t\t\tthis.formGroup.patchValue(page);\r\n\t\t});\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { PageModel } from \"../models/page.model\";\r\nimport { AppState } from \"../page.reducer\";\r\nimport { GetPagesStartAction } from \"../services/api/get-pages/get-pages.actions\";\r\nimport { DeletePageStartAction } from \"../services/api\";\r\n\r\n@Component({\r\n\ttemplate: `<div fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"25px\" class=\"main-container\">\r\n\r\n  <div class=\"content-action\">\r\n    <mat-card class=\"with-sticky-action\">\r\n      <mat-card-header>\r\n        <mat-card-title fxLayout=\"row\" fxLayoutGap=\"5px\">\r\n          <mat-icon>list_alt</mat-icon>\r\n          <span>ÙØ¯ÛØ±ÛØª ØµØºØ­Ø§Øª</span>\r\n        </mat-card-title>\r\n        <mat-card-subtitle fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span>\r\n            Ø¯Ø± Ø§ÛÙ ÙØ³ÙØª ÙÛâØªÙØ§ÙÛØ¯ ØµØºØ­Ø§Øª Ø¨Ø§ Ú¯Ø±ÛØ¯ÙØ§Û Ø¯ÙØ®ÙØ§Ù Ø®ÙØ¯ Ø±Ø§ Ø§ÛØ¬Ø§Ø¯ ÙÙØ§ÛÛØ¯ ...\r\n          </span>\r\n        </mat-card-subtitle>\r\n      </mat-card-header>\r\n\r\n      <div fxLayout=\"column\" fxLayoutAlign=\"center\" fxLayoutGap=\"25px\">\r\n        <div fxFlex=\"100\" fxLayout=\"row wrap\" fxLayoutAlign=\"start center\">\r\n          <mat-card fxFlex.gt-lg=\"24\" fxFlex.lg=\"32\" fxFlex.md=\"48\" fxFlex.sm=\"100\" fxFlex.xs=\"100\" class=\"link\" *ngFor=\"let item of (pages$ | async)\"\r\n            fxFlex=\"32\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n            <div fxFlex fxLayoutAlign=\"start center\">\r\n              <h3> {{item.name}}</h3>\r\n            </div>\r\n            <div fxFlex fxLayoutAlign=\"center center\">\r\n              {{item.type}}\r\n            </div>\r\n            <div fxLayout=\"row\">\r\n              <div fxFlex=\"nogrow\">\r\n                <a mat-icon-button [routerLink]=\"['../upsert' , item.name]\">\r\n                  <mat-icon aria-label=\"edit page\">edit</mat-icon>\r\n                </a>\r\n              </div>\r\n\r\n              <div fxFlex=\"nogrow\">\r\n                <button mat-icon-button (click)=\"delete(item)\">\r\n                  <mat-icon aria-label=\"delete page\">delete</mat-icon>\r\n                </button>\r\n              </div>\r\n              <div fxFlex=\"nogrow\">\r\n                <a mat-icon-button [routerLink]=\"['/page' , item.name]\">\r\n                  <mat-icon aria-label=\"edit page\">remove_red_eye</mat-icon>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n    <div fxLayout=\"column\" class=\"sticky-action\">\r\n      <a color=\"primary\" mat-mini-fab routerLink=\"../upsert\">\r\n        <mat-icon>add</mat-icon>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>`,\r\n\tstyles: [`mat-card.link{padding:25px 15px;margin:.5%;box-sizing:border-box}`]\r\n})\r\nexport class PagesManagementComponent implements OnInit {\r\n\tpages$: Observable<PageModel[]>;\r\n\tconstructor(public store: Store<AppState>) {\r\n\t\tthis.pages$ = this.store.select((state) => state.pages.db.data);\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.store.dispatch(new GetPagesStartAction());\r\n\t}\r\n\t/**\r\n\t * view methods\r\n\t */\r\n\tdelete(page: PageModel) {\r\n\t\tthis.store.dispatch(new DeletePageStartAction(page._id));\r\n\t}\r\n}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { PageViewComponent } from \"./view/page-view.component\";\r\nimport { RootComponent } from \"./root/root.component\";\r\nimport { UpsertComponent } from \"./upsert/upsert.component\";\r\nimport { PagesManagementComponent } from \"./mangement/page-management.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"pages\",\r\n\t\tcomponent: RootComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"management\",\r\n\t\t\t\tcomponent: PagesManagementComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"upsert\",\r\n\t\t\t\tcomponent: UpsertComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"upsert/:name\",\r\n\t\t\t\tcomponent: UpsertComponent\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tpath: \"page/:name\",\r\n\t\tcomponent: PageViewComponent\r\n\t}\r\n];\r\n\r\nexport const RoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { PageModel } from \"../models/page.model\";\r\n\r\nexport enum PagesActionTypes {\r\n\tUPSERT = \"[PAGE][DB] UPSERT\",\r\n\tDELETE = \"[PAGE][DB] DELETE\"\r\n}\r\n\r\nexport class UpsertPageAction implements Action {\r\n\treadonly type = PagesActionTypes.UPSERT;\r\n\tconstructor(public payload: PageModel[]) {}\r\n}\r\nexport class DeletePageAction implements Action {\r\n\treadonly type = PagesActionTypes.DELETE;\r\n\tconstructor(public payload: PageModel) {}\r\n}\r\n\r\nexport type PagesActions = UpsertPageAction | DeletePageAction;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map, pluck } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { GET_PAGE_ACTION_TYPES, GET_PAGES_ACTION_TYPES, DELETE_PAGE_ACTION_TYPES } from \"../services/api\";\r\nimport { PageModel } from \"../models/page.model\";\r\nimport { UpsertPageAction, DeletePageAction } from \"./pages.actions\";\r\n\r\n@Injectable()\r\nexport class PageDbEffects {\r\n\tconstructor(private actions$: Actions<any>) {}\r\n\r\n\t@Effect()\r\n\tUpsert$ = this.actions$\r\n\t\t.ofType(GET_PAGE_ACTION_TYPES.SUCCEED)\r\n\t\t.pipe(pluck(\"payload\"), map((page: PageModel) => new UpsertPageAction([ page ])));\r\n\r\n\t@Effect()\r\n\tUpsertMany$ = this.actions$\r\n\t\t.ofType(GET_PAGES_ACTION_TYPES.SUCCEED)\r\n\t\t.pipe(pluck(\"payload\"), map((pages: PageModel[]) => new UpsertPageAction(pages)));\r\n\r\n\t@Effect()\r\n\tdelete$ = this.actions$\r\n\t\t.ofType(DELETE_PAGE_ACTION_TYPES.SUCCEED)\r\n\t\t.pipe(pluck(\"payload\"), map((page: PageModel) => new DeletePageAction(page)));\r\n}\r\n","import { PageModel } from \"../models/page.model\";\r\nimport { PagesActions, PagesActionTypes } from \"./pages.actions\";\r\n\r\nexport interface State {\r\n\tdata: PageModel[];\r\n}\r\n\r\nconst initialState: State = {\r\n\tdata: []\r\n};\r\n\r\nexport function Reducer(state = initialState, action: PagesActions): State {\r\n\tlet _data: PageModel[];\r\n\tswitch (action.type) {\r\n\t\tcase PagesActionTypes.UPSERT:\r\n\t\t\tdebugger;\r\n\t\t\t_data = state.data.concat();\r\n\t\t\tlet newPages = action.payload;\r\n\t\t\tif (!(newPages instanceof Array)) {\r\n\t\t\t\tnewPages = [ newPages ];\r\n\t\t\t\tconsole.error(\"'PagesActionTypes.UPSERT' does not get array payload\");\r\n\t\t\t}\r\n\r\n\t\t\tnewPages.forEach((newPage) => {\r\n\t\t\t\tconst existedPageIndex = _data.findIndex((w) => w._id == newPage._id);\r\n\t\t\t\tif (existedPageIndex > -1) {\r\n\t\t\t\t\t_data.splice(existedPageIndex, 1, newPage);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_data.push(newPage);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: _data\r\n\t\t\t};\r\n\r\n\t\tcase PagesActionTypes.DELETE:\r\n\t\t\tdebugger;\r\n\t\t\t_data = state.data.concat();\r\n\r\n\t\t\tconst pageIndex = state.data.findIndex((w) => w._id == action.payload._id);\r\n\t\t\t_data.splice(pageIndex, 1);\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: _data\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const getPages = (state: State) => state.data;\r\n","import * as fromRoot from \"./root/pages.reducers\";\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface PageState {\r\n\tdb: fromRoot.State;\r\n}\r\n\r\nexport const PageReducer = {\r\n\tdb: fromRoot.Reducer\r\n};\r\n\r\nexport interface AppState {\r\n\tpages: PageState;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { PageService } from \"../../page.service\";\r\nimport { GET_PAGE_ACTION_TYPES, GetPageActions, GetPageSucceedAction, GetPageFailedAction } from \"./get-page.actions\";\r\n\r\n@Injectable()\r\nexport class GetPageApiEffects {\r\n\tconstructor(private actions$: Actions<GetPageActions>, private service: PageService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$\r\n\t\t.ofType(GET_PAGE_ACTION_TYPES.START)\r\n\t\t.pipe(\r\n\t\t\tmap((action) => action.payload),\r\n\t\t\tswitchMap((payload) => this.service.get(payload)),\r\n\t\t\tmap((res) => new GetPageSucceedAction(res)),\r\n\t\t\tcatchError((err) => of(new GetPageFailedAction(err)))\r\n\t\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { PageService } from \"../../page.service\";\r\nimport {\r\n\tGET_PAGES_ACTION_TYPES,\r\n\tGetPagesActions,\r\n\tGetPagesSucceedAction,\r\n\tGetPagesFailedAction\r\n} from \"./get-pages.actions\";\r\n\r\n@Injectable()\r\nexport class GetPagesApiEffects {\r\n\tconstructor(private actions$: Actions<GetPagesActions>, private service: PageService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$\r\n\t\t.ofType(GET_PAGES_ACTION_TYPES.START)\r\n\t\t.pipe(\r\n\t\t\tswitchMap(() =>\r\n\t\t\t\tthis.service\r\n\t\t\t\t\t.getPages()\r\n\t\t\t\t\t.pipe(\r\n\t\t\t\t\t\tmap((res) => new GetPagesSucceedAction(res)),\r\n\t\t\t\t\t\tcatchError((err) => of(new GetPagesFailedAction(err)))\r\n\t\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { PageService } from \"../../page.service\";\r\nimport {\r\n\tUPSERT_PAGE_ACTION_TYPES,\r\n\tUpsertPageActions,\r\n\tUpsertPageSucceedAction,\r\n\tUpsertPageFailedAction\r\n} from \"./upsert-page.actions\";\r\n\r\n@Injectable()\r\nexport class UpsertPageApiEffects {\r\n\tconstructor(private actions$: Actions<UpsertPageActions>, private service: PageService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$\r\n\t\t.ofType(UPSERT_PAGE_ACTION_TYPES.START)\r\n\t\t.pipe(\r\n\t\t\tmap((action) => action.payload),\r\n\t\t\tswitchMap((payload) => this.service.upsert(payload)),\r\n\t\t\tmap((res) => new UpsertPageSucceedAction(res)),\r\n\t\t\tcatchError((err) => of(new UpsertPageFailedAction(err)))\r\n\t\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { PageService } from \"../../page.service\";\r\nimport {\r\n\tDELETE_PAGE_ACTION_TYPES,\r\n\tDeletePageActions,\r\n\tDeletePageSucceedAction,\r\n\tDeletePageFailedAction\r\n} from \"./delete-page.actions\";\r\n\r\n@Injectable()\r\nexport class DeletePageApiEffects {\r\n\tconstructor(private actions$: Actions<DeletePageActions>, private service: PageService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$\r\n\t\t.ofType(DELETE_PAGE_ACTION_TYPES.START)\r\n\t\t.pipe(\r\n\t\t\tmap((action) => action.payload),\r\n\t\t\tswitchMap((payload) => this.service.delete(payload)),\r\n\t\t\tmap((res) => new DeletePageSucceedAction(res)),\r\n\t\t\tcatchError((err) => of(new DeletePageFailedAction(err)))\r\n\t\t);\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatCardModule, MatIconModule, MatButtonModule, MatFormFieldModule, MatInputModule, MatDividerModule } from \"@angular/material\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\n\r\nimport { NgsGridModule } from \"@soushians/grid\";\r\n\r\nimport { RoutingModule } from \"./page-routing.module\";\r\nimport { PageViewComponent } from \"./view/page-view.component\";\r\nimport { PagesManagementComponent } from \"./mangement/page-management.component\";\r\nimport { RootComponent } from \"./root/root.component\";\r\nimport { UpsertComponent } from \"./upsert/upsert.component\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { PageModuleConfig, MODULE_CONFIG_TOKEN } from \"./page.config\";\r\nimport { PageConfigurationService } from \"./services/page-configuration.service\";\r\nimport { PageService } from \"./services/page.service\";\r\nimport { PageDbEffects } from \"./root/pages.effects\";\r\nimport { PageReducer } from \"./page.reducer\";\r\nimport { GetPageApiEffects } from \"./services/api/get-page/get-page.effects\";\r\nimport { GetPagesApiEffects } from \"./services/api/get-pages/get-pages.effects\";\r\nimport { UpsertPageApiEffects } from \"./services/api/upsert-page/upsert-page.effects\";\r\nimport { DeletePageApiEffects } from \"./services/api/delete-page/delete-page.effects\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tRouterModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatCardModule,\r\n\t\tMatButtonModule,\r\n\t\tMatIconModule,\r\n\t\tMatDividerModule,\r\n\t\tFlexLayoutModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tNgsGridModule\r\n\t],\r\n\tdeclarations: [PageViewComponent, PagesManagementComponent, RootComponent, UpsertComponent],\r\n\texports: []\r\n})\r\nexport class NgsPageModule {\r\n\tstatic forRoot(config?: PageModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: NgsPageRootModule,\r\n\t\t\tproviders: [{ provide: MODULE_CONFIG_TOKEN, useValue: config }, PageConfigurationService, PageService]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsPageModule,\r\n\t\tRoutingModule,\r\n\t\tStoreModule.forFeature(\"pages\", PageReducer),\r\n\t\tEffectsModule.forFeature([\r\n\t\t\tPageDbEffects,\r\n\t\t\tGetPageApiEffects,\r\n\t\t\tGetPagesApiEffects,\r\n\t\t\tUpsertPageApiEffects,\r\n\t\t\tDeletePageApiEffects\r\n\t\t])\r\n\t],\r\n\texports: [NgsPageModule]\r\n})\r\nexport class NgsPageRootModule { }\r\n"]}