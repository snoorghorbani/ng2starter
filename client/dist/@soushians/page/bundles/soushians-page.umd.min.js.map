{"version":3,"sources":["../node_modules/tslib/tslib.es6.js","ng://@soushians/page/lib/page.config.ts","ng://@soushians/page/lib/services/api/get-pages/get-pages.model.ts","ng://@soushians/page/lib/services/page-configuration.service.ts","ng://@soushians/page/lib/services/api/get-pages/get-pages.actions.ts","ng://@soushians/page/lib/services/api/get-page/get-page.model.ts","ng://@soushians/page/lib/services/api/get-page/get-page.actions.ts","ng://@soushians/page/lib/services/api/delete-page/delete-page.model.ts","ng://@soushians/page/lib/services/api/delete-page/delete-page.actions.ts","ng://@soushians/page/lib/models/page.model.ts","ng://@soushians/page/lib/services/api/upsert-page/upsert-page.model.ts","ng://@soushians/page/lib/services/api/upsert-page/upsert-page.actions.ts","ng://@soushians/page/lib/services/page.service.ts","ng://@soushians/page/lib/view/page-view.component.ts","ng://@soushians/page/lib/root/root.component.ts","ng://@soushians/page/lib/upsert/upsert.component.ts","ng://@soushians/page/lib/mangement/page-management.component.ts","ng://@soushians/page/lib/page-routing.module.ts","ng://@soushians/page/lib/root/pages.actions.ts","ng://@soushians/page/lib/root/pages.effects.ts","ng://@soushians/page/lib/root/pages.reducers.ts","ng://@soushians/page/lib/page.reducer.ts","ng://@soushians/page/lib/services/api/get-page/get-page.effects.ts","ng://@soushians/page/lib/services/api/get-pages/get-pages.effects.ts","ng://@soushians/page/lib/services/api/upsert-page/upsert-page.effects.ts","ng://@soushians/page/lib/services/api/delete-page/delete-page.effects.ts","ng://@soushians/page/lib/page.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","GetPagesApiModel","MODULE_DEFAULT_CONFIG","env","production","frontend_server","endpoints","upsert","delete","find","get","MODULE_CONFIG_TOKEN","InjectionToken","PageConfigurationService","configFile","store","config$","BehaviorSubject","_config","Injectable","Inject","args","Store","Request","initValue","_this","keys","forEach","getRequestBody","Response","GetPagesStartAction","type","GetPagesSucceedAction","payload","GetPageApiModel","GetPagesFailedAction","GetPageStartAction","GetPageSucceedAction","DeletePageApiModel","GetPageFailedAction","DeletePageStartAction","DeletePageSucceedAction","DeletePageFailedAction","UpsertPageApiModel","PageModel","_a","_b","_id","name","grid","page","UpsertPageStartAction","UpsertPageSucceedAction","UpsertPageFailedAction","PageService","http","configurationService","_location","userFacadeService","userId$","getDisplayName","pipe","filter","undefined","config","take","combineLatest","switchMap","stringTemplate","map","response","Result","getPages","model","post","tap","back","selectByName","subject","select","state","pages","db","data","dispatch","subscribe","asObservable","HttpClient","Location","UserFacadeService","PageViewComponent","service","route","resolver","container","ngOnInit","_selectPage","page$","params","pluck","Component","template","ActivatedRoute","ComponentFactoryResolver","ViewContainerRef","RootComponent","selector","UpsertComponent","_init_formgroup","formGroup","_select_page","_update_formgroup_base_on_page","FormGroup","FormControl","patchValue","PagesManagementComponent","pages$","routes","path","component","children","RoutingModule","RouterModule","forChild","UPSERT","DELETE","UpsertPageAction","PagesActionTypes","DeletePageAction","PageDbEffects","actions$","Upsert$","ofType","UpsertMany$","delete$","Actions","tslib_1.__decorate","Effect","initialState","Reducer","action","_data","concat","newPages","Array","console","newPage","existedPageIndex","findIndex","w","splice","pageIndex","PageReducer","fromRoot.Reducer","GetPageApiEffects","start$","res","catchError","err","of","GetPagesApiEffects","UpsertPageApiEffects","DeletePageApiEffects","NgsPageModule","forRoot","ngModule","NgsPageRootModule","providers","provide","useValue","NgModule","imports","CommonModule","MatInputModule","MatFormFieldModule","MatCardModule","MatButtonModule","MatIconModule","MatDividerModule","FlexLayoutModule","FormsModule","ReactiveFormsModule","NgsGridModule","declarations","exports","___starter","StoreModule","forFeature","EffectsModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface PageModuleConfig {\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t};\r\n\tendpoints?: {\r\n\t\tget: string;\r\n\t\tdelete: string;\r\n\t\tfind: string;\r\n\t\tupsert: string;\r\n\t};\r\n}\r\nexport const MODULE_DEFAULT_CONFIG: PageModuleConfig = {\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"frontend_server/did/not/set\"\r\n\t},\r\n\tendpoints: {\r\n\t\tupsert: \"/api/page\",\r\n\t\tdelete: \"/api/page/${model._id}\",\r\n\t\tfind: \"/api/page\",\r\n\t\tget: \"/api/page/${model.name}\"\r\n\t}\r\n};\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<PageModuleConfig>(\"PageModuleConfig\");\r\n","import { PageModel } from \"../../../models/page.model\";\r\n\r\nexport namespace GetPagesApiModel {\r\n\texport class Request {\r\n\t\tconstructor(initValue = {}) {\r\n\t\t\tObject.keys(initValue).forEach((key) => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: PageModel[];\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { BehaviorSubject } from \"rxjs\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { PageModuleConfig, MODULE_DEFAULT_CONFIG, MODULE_CONFIG_TOKEN } from \"../page.config\";\r\nimport { AppState } from \"../page.reducer\";\r\n\r\n@Injectable()\r\nexport class PageConfigurationService {\r\n\tprivate _config: PageModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<AppState>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\t// this.store.select(getPageModuleConfig).subscribe((pageConfig) => {\r\n\t\t// \tif (!pageConfig) {\r\n\t\t// \t\treturn;\r\n\t\t// \t}\r\n\t\t// \tthis._config = Object.assign({}, this._config, pageConfig.Config);\r\n\t\t// \tthis.config$.next(this._config);\r\n\t\t// });\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetPagesApiModel } from \"./get-pages.model\";\r\nimport { PageModel } from \"../../../models/page.model\";\r\n\r\nexport const enum GET_PAGES_ACTION_TYPES {\r\n\tSTART = \"[GET_PAGES][API][GetPages] start\",\r\n\tSUCCEED = \"[GET_PAGES][API][GetPages] succeed\",\r\n\tFAILED = \"[GET_PAGES][API][GetPages] failed\"\r\n}\r\n\r\nexport class GetPagesStartAction implements Action {\r\n\treadonly type = GET_PAGES_ACTION_TYPES.START;\r\n}\r\nexport class GetPagesSucceedAction implements Action {\r\n\treadonly type = GET_PAGES_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: PageModel[]) {}\r\n}\r\nexport class GetPagesFailedAction implements Action {\r\n\treadonly type = GET_PAGES_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type GetPagesActions = GetPagesStartAction | GetPagesSucceedAction | GetPagesFailedAction;\r\n","import { PageModel } from \"../../../models/page.model\";\r\n\r\nexport namespace GetPageApiModel {\r\n\texport class Request {\r\n\t\tname: string;\r\n\t\tconstructor(initValue = {}) {\r\n\t\t\tObject.keys(initValue).forEach((key) => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: PageModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetPageApiModel } from \"./get-page.model\";\r\nimport { PageModel } from \"../../../models/page.model\";\r\n\r\nexport const enum GET_PAGE_ACTION_TYPES {\r\n\tSTART = \"[PAGE][API][GetPage] start\",\r\n\tSUCCEED = \"[PAGE][API][GetPage] succeed\",\r\n\tFAILED = \"[PAGE][API][GetPage] failed\"\r\n}\r\n\r\nexport class GetPageStartAction implements Action {\r\n\treadonly type = GET_PAGE_ACTION_TYPES.START;\r\n\tconstructor(public payload: string) {}\r\n}\r\nexport class GetPageSucceedAction implements Action {\r\n\treadonly type = GET_PAGE_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: PageModel) {}\r\n}\r\nexport class GetPageFailedAction implements Action {\r\n\treadonly type = GET_PAGE_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type GetPageActions = GetPageStartAction | GetPageSucceedAction | GetPageFailedAction;\r\n","import { PageModel } from \"../../../models/page.model\";\r\n\r\nexport namespace DeletePageApiModel {\r\n\texport class Request {\r\n\t\tconstructor(initValue = {}) {\r\n\t\t\tObject.keys(initValue).forEach((key) => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: PageModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { PageModel } from \"../../../models/page.model\";\r\n\r\nexport const enum DELETE_PAGE_ACTION_TYPES {\r\n\tSTART = \"[PAGE][API][DELETE] start\",\r\n\tSUCCEED = \"[PAGE][API][DELETE] succeed\",\r\n\tFAILED = \"[PAGE][API][DELETE] failed\"\r\n}\r\n\r\nexport class DeletePageStartAction implements Action {\r\n\treadonly type = DELETE_PAGE_ACTION_TYPES.START;\r\n\tconstructor(public payload: string) {}\r\n}\r\nexport class DeletePageSucceedAction implements Action {\r\n\treadonly type = DELETE_PAGE_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: PageModel) {}\r\n}\r\nexport class DeletePageFailedAction implements Action {\r\n\treadonly type = DELETE_PAGE_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type DeletePageActions = DeletePageStartAction | DeletePageSucceedAction | DeletePageFailedAction;\r\n","export class PageModel {\r\n\t_id: string;\r\n\tname: string;\r\n\tgrid: string;\r\n\tconstructor({ _id, name, grid }: { _id?: string; name?: string; grid?: string } = {}) {\r\n\t\tthis._id = _id;\r\n\t\tthis.name = name || \"\";\r\n\t\tthis.grid = grid || \"\";\r\n\t}\r\n}\r\n","import { PageModel } from \"../../../models/page.model\";\r\n\r\nexport namespace UpsertPageApiModel {\r\n\texport class Request {\r\n\t\tpage: PageModel;\r\n\t\tconstructor(page = {}) {\r\n\t\t\tdebugger;\r\n\t\t\tthis.page = new PageModel(page);\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn this.page;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: PageModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { UpsertPageApiModel } from \"./upsert-page.model\";\r\nimport { PageModel } from \"../../../models/page.model\";\r\n\r\nexport const enum UPSERT_PAGE_ACTION_TYPES {\r\n\tSTART = \"[UPSERT_PAGE][API][UpsertPage] start\",\r\n\tSUCCEED = \"[UPSERT_PAGE][API][UpsertPage] succeed\",\r\n\tFAILED = \"[UPSERT_PAGE][API][UpsertPage] failed\"\r\n}\r\n\r\nexport class UpsertPageStartAction implements Action {\r\n\treadonly type = UPSERT_PAGE_ACTION_TYPES.START;\r\n\tconstructor(public payload: PageModel) {}\r\n}\r\nexport class UpsertPageSucceedAction implements Action {\r\n\treadonly type = UPSERT_PAGE_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: PageModel) {}\r\n}\r\nexport class UpsertPageFailedAction implements Action {\r\n\treadonly type = UPSERT_PAGE_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type UpsertPageActions = UpsertPageStartAction | UpsertPageSucceedAction | UpsertPageFailedAction;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { map, filter, tap, take, switchMap, combineLatest } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { UserFacadeService } from \"@soushians/user\";\r\n\r\nimport { AppState } from \"../page.reducer\";\r\nimport { PageConfigurationService } from \"./page-configuration.service\";\r\nimport { PageModel } from \"../models/page.model\";\r\nimport { stringTemplate } from \"@soushians/shared\";\r\nimport { GetPagesApiModel, GetPageStartAction, UpsertPageApiModel, DeletePageApiModel } from \"./api\";\r\nimport { Location } from \"@angular/common\";\r\n\r\n@Injectable()\r\nexport class PageService {\r\n\tuserId$: Observable<string>;\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate configurationService: PageConfigurationService,\r\n\t\tprivate _location: Location,\r\n\t\tprivate userFacadeService: UserFacadeService\r\n\t) {\r\n\t\tthis.userId$ = this.userFacadeService.getDisplayName().pipe(filter(i => i != undefined));\r\n\t}\r\n\r\n\tget(name: string): Observable<PageModel> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter(config => config.endpoints.get !== \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tcombineLatest(this.userId$),\r\n\t\t\tswitchMap(([ config, userId ]) =>\r\n\t\t\t\tthis.http.get(stringTemplate(config.env.frontend_server + config.endpoints.get, { name }))\r\n\t\t\t),\r\n\t\t\tmap((response: UpsertPageApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\r\n\tdelete(_id: string): Observable<PageModel> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter(config => config.endpoints.delete !== \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tswitchMap(config =>\r\n\t\t\t\tthis.http.delete(stringTemplate(config.env.frontend_server + config.endpoints.delete, { _id }))\r\n\t\t\t),\r\n\t\t\tmap((response: DeletePageApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\r\n\tgetPages(): Observable<PageModel[]> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter(config => config.endpoints.find != \"\"),\r\n\t\t\tcombineLatest(this.userId$),\r\n\t\t\tswitchMap(([ config, userId ]) => this.http.get(config.env.frontend_server + config.endpoints.find)),\r\n\t\t\tmap((response: GetPagesApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\tupsert<T>(page: UpsertPageApiModel.Request): Observable<PageModel> {\r\n\t\tconst model = new UpsertPageApiModel.Request(page);\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter(config => config.endpoints.upsert != \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tcombineLatest(this.userId$),\r\n\t\t\tswitchMap(([ config, userId ]) =>\r\n\t\t\t\tthis.http.post(config.env.frontend_server + config.endpoints.upsert, model.getRequestBody())\r\n\t\t\t),\r\n\t\t\tmap((response: UpsertPageApiModel.Response) => response.Result),\r\n\t\t\ttap(() => this._location.back())\r\n\t\t);\r\n\t}\r\n\t// delete(name: string) {\r\n\t// \treturn this.configurationService.config$\r\n\t// \t\t.filter((config) => config.endpoints.deleteForm != \"\")\r\n\t// \t\t.switchMap((config) => this.http.get(config.endpoints.deleteForm));\r\n\t// }\r\n\tselectByName(name: string): Observable<PageModel> {\r\n\t\tconst subject = new BehaviorSubject<PageModel>(undefined);\r\n\t\tthis.store\r\n\t\t\t.select(state => state.pages.db.data)\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter(pages => pages != null),\r\n\t\t\t\tmap(pages => pages.find(page => page.name == name)),\r\n\t\t\t\ttap(page => {\r\n\t\t\t\t\tif (page == null) {\r\n\t\t\t\t\t\tdebugger;\r\n\t\t\t\t\t\tthis.store.dispatch(new GetPageStartAction(name));\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe(page => subject.next(page));\r\n\t\treturn subject.asObservable();\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tComponentRef,\r\n\tComponentFactoryResolver,\r\n\tViewContainerRef,\r\n\tDirective,\r\n\tInput\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { pluck, filter, switchMap, map, startWith } from \"rxjs/operators\";\r\n\r\nimport { PageModel } from \"../models/page.model\";\r\nimport { AppState } from \"../page.reducer\";\r\nimport { PageService } from \"../services/page.service\";\r\nimport { PageConfigurationService } from \"../services/page-configuration.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n\ttemplateUrl: \"./page-view.component.html\"\r\n})\r\nexport class PageViewComponent implements OnInit {\r\n\tpage$: Observable<PageModel>;\r\n\tconstructor(\r\n\t\tpublic store: Store<AppState>,\r\n\t\tprivate service: PageService,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate resolver: ComponentFactoryResolver,\r\n\t\tprivate container: ViewContainerRef\r\n\t) {}\r\n\tngOnInit() {\r\n\t\tthis._selectPage();\r\n\t}\r\n\t_selectPage() {\r\n\t\tthis.page$ = this.route.params.pipe(\r\n\t\t\tpluck(\"name\"),\r\n\t\t\tswitchMap((name: string) => this.service.selectByName(name)),\r\n\t\t\tfilter((page) => page != undefined)\r\n\t\t);\r\n\t}\r\n}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n\tselector: \"page-root\",\r\n\ttemplate: \"<router-outlet></router-outlet>\"\r\n})\r\nexport class RootComponent {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { UpsertPageStartAction } from \"../services/api\";\r\nimport { AppState } from \"../page.reducer\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { PageModel } from \"../models/page.model\";\r\nimport { pluck, switchMap, filter } from \"rxjs/operators\";\r\nimport { PageService } from \"../services/page.service\";\r\n\r\n@Component({\r\n\ttemplateUrl: \"./upsert.component.html\"\r\n})\r\nexport class UpsertComponent implements OnInit {\r\n\tformGroup: FormGroup;\r\n\tpage$: Observable<PageModel>;\r\n\tconstructor(private store: Store<AppState>, private route: ActivatedRoute, private service: PageService) {\r\n\t\tthis._init_formgroup();\r\n\t}\r\n\r\n\t/**\r\n\t * view methods\r\n\t */\r\n\tupsert() {\r\n\t\tdebugger;\r\n\t\tconst page = {\r\n\t\t\t...this.formGroup.value\r\n\t\t};\r\n\t\tthis.store.dispatch(new UpsertPageStartAction(page));\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis._select_page();\r\n\t\tthis._update_formgroup_base_on_page();\r\n\t}\r\n\r\n\t/**\r\n\t * private methods\r\n\t */\r\n\t_init_formgroup() {\r\n\t\tthis.formGroup = new FormGroup({\r\n\t\t\t_id: new FormControl(\"\"),\r\n\t\t\tname: new FormControl(\"\"),\r\n\t\t\tgrid: new FormControl(\"\")\r\n\t\t});\r\n\t}\r\n\r\n\t_select_page() {\r\n\t\tthis.page$ = this.route.params.pipe(\r\n\t\t\tpluck(\"name\"),\r\n\t\t\tfilter((name) => name != undefined),\r\n\t\t\tswitchMap((name: string) => this.service.selectByName(name)),\r\n\t\t\tfilter((page) => page != undefined)\r\n\t\t);\r\n\t}\r\n\t_update_formgroup_base_on_page() {\r\n\t\tthis.page$.subscribe((page) => {\r\n\t\t\tthis.formGroup.patchValue(page);\r\n\t\t});\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { PageModel } from \"../models/page.model\";\r\nimport { AppState } from \"../page.reducer\";\r\nimport { GetPagesStartAction } from \"../services/api/get-pages/get-pages.actions\";\r\nimport { DeletePageStartAction } from \"../services/api\";\r\n\r\n@Component({\r\n\ttemplateUrl: \"page-management.component.html\",\r\n\tstyleUrls: [\"page-management.component.scss\"]\r\n})\r\nexport class PagesManagementComponent implements OnInit {\r\n\tpages$: Observable<PageModel[]>;\r\n\tconstructor(public store: Store<AppState>) {\r\n\t\tthis.pages$ = this.store.select((state) => state.pages.db.data);\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.store.dispatch(new GetPagesStartAction());\r\n\t}\r\n\t/**\r\n\t * view methods\r\n\t */\r\n\tdelete(page: PageModel) {\r\n\t\tthis.store.dispatch(new DeletePageStartAction(page._id));\r\n\t}\r\n}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { PageViewComponent } from \"./view/page-view.component\";\r\nimport { RootComponent } from \"./root/root.component\";\r\nimport { UpsertComponent } from \"./upsert/upsert.component\";\r\nimport { PagesManagementComponent } from \"./mangement/page-management.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"pages\",\r\n\t\tcomponent: RootComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"management\",\r\n\t\t\t\tcomponent: PagesManagementComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"upsert\",\r\n\t\t\t\tcomponent: UpsertComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"upsert/:name\",\r\n\t\t\t\tcomponent: UpsertComponent\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tpath: \"page/:name\",\r\n\t\tcomponent: PageViewComponent\r\n\t}\r\n];\r\n\r\nexport const RoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { PageModel } from \"../models/page.model\";\r\n\r\nexport enum PagesActionTypes {\r\n\tUPSERT = \"[PAGE][DB] UPSERT\",\r\n\tDELETE = \"[PAGE][DB] DELETE\"\r\n}\r\n\r\nexport class UpsertPageAction implements Action {\r\n\treadonly type = PagesActionTypes.UPSERT;\r\n\tconstructor(public payload: PageModel[]) {}\r\n}\r\nexport class DeletePageAction implements Action {\r\n\treadonly type = PagesActionTypes.DELETE;\r\n\tconstructor(public payload: PageModel) {}\r\n}\r\n\r\nexport type PagesActions = UpsertPageAction | DeletePageAction;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { map, pluck } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { GET_PAGE_ACTION_TYPES, GET_PAGES_ACTION_TYPES, DELETE_PAGE_ACTION_TYPES } from \"../services/api\";\r\nimport { PageModel } from \"../models/page.model\";\r\nimport { UpsertPageAction, DeletePageAction } from \"./pages.actions\";\r\n\r\n@Injectable()\r\nexport class PageDbEffects {\r\n\tconstructor(private actions$: Actions<any>) {}\r\n\r\n\t@Effect()\r\n\tUpsert$ = this.actions$.pipe(\r\n\t\tofType(GET_PAGE_ACTION_TYPES.SUCCEED),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap((page: PageModel) => new UpsertPageAction([ page ]))\r\n\t);\r\n\r\n\t@Effect()\r\n\tUpsertMany$ = this.actions$.pipe(\r\n\t\tofType(GET_PAGES_ACTION_TYPES.SUCCEED),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap((pages: PageModel[]) => new UpsertPageAction(pages))\r\n\t);\r\n\r\n\t@Effect()\r\n\tdelete$ = this.actions$.pipe(\r\n\t\tofType(DELETE_PAGE_ACTION_TYPES.SUCCEED),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap((page: PageModel) => new DeletePageAction(page))\r\n\t);\r\n}\r\n","import { PageModel } from \"../models/page.model\";\r\nimport { PagesActions, PagesActionTypes } from \"./pages.actions\";\r\n\r\nexport interface State {\r\n\tdata: PageModel[];\r\n}\r\n\r\nconst initialState: State = {\r\n\tdata: []\r\n};\r\n\r\nexport function Reducer(state = initialState, action: PagesActions): State {\r\n\tlet _data: PageModel[];\r\n\tswitch (action.type) {\r\n\t\tcase PagesActionTypes.UPSERT:\r\n\t\t\tdebugger;\r\n\t\t\t_data = state.data.concat();\r\n\t\t\tlet newPages = action.payload;\r\n\t\t\tif (!(newPages instanceof Array)) {\r\n\t\t\t\tnewPages = [ newPages ];\r\n\t\t\t\tconsole.error(\"'PagesActionTypes.UPSERT' does not get array payload\");\r\n\t\t\t}\r\n\r\n\t\t\tnewPages.forEach((newPage) => {\r\n\t\t\t\tconst existedPageIndex = _data.findIndex((w) => w._id == newPage._id);\r\n\t\t\t\tif (existedPageIndex > -1) {\r\n\t\t\t\t\t_data.splice(existedPageIndex, 1, newPage);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_data.push(newPage);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: _data\r\n\t\t\t};\r\n\r\n\t\tcase PagesActionTypes.DELETE:\r\n\t\t\tdebugger;\r\n\t\t\t_data = state.data.concat();\r\n\r\n\t\t\tconst pageIndex = state.data.findIndex((w) => w._id == action.payload._id);\r\n\t\t\t_data.splice(pageIndex, 1);\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: _data\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const getPages = (state: State) => state.data;\r\n","import * as fromRoot from \"./root/pages.reducers\";\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface PageState {\r\n\tdb: fromRoot.State;\r\n}\r\n\r\nexport const PageReducer = {\r\n\tdb: fromRoot.Reducer\r\n};\r\n\r\nexport interface AppState {\r\n\tpages: PageState;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { PageService } from \"../../page.service\";\r\nimport { GET_PAGE_ACTION_TYPES, GetPageActions, GetPageSucceedAction, GetPageFailedAction } from \"./get-page.actions\";\r\n\r\n@Injectable()\r\nexport class GetPageApiEffects {\r\n\tconstructor(private actions$: Actions<GetPageActions>, private service: PageService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$.pipe(\r\n\t\tofType<any>(GET_PAGE_ACTION_TYPES.START),\r\n\t\tmap(action => action.payload),\r\n\t\tswitchMap(payload => this.service.get(payload)),\r\n\t\tmap(res => new GetPageSucceedAction(res)),\r\n\t\tcatchError(err => of(new GetPageFailedAction(err)))\r\n\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { PageService } from \"../../page.service\";\r\nimport {\r\n\tGET_PAGES_ACTION_TYPES,\r\n\tGetPagesActions,\r\n\tGetPagesSucceedAction,\r\n\tGetPagesFailedAction\r\n} from \"./get-pages.actions\";\r\n\r\n@Injectable()\r\nexport class GetPagesApiEffects {\r\n\tconstructor(private actions$: Actions<GetPagesActions>, private service: PageService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$.pipe(\r\n\t\tofType(GET_PAGES_ACTION_TYPES.START),\r\n\t\tswitchMap(() =>\r\n\t\t\tthis.service\r\n\t\t\t\t.getPages()\r\n\t\t\t\t.pipe(map(res => new GetPagesSucceedAction(res)), catchError(err => of(new GetPagesFailedAction(err))))\r\n\t\t)\r\n\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { PageService } from \"../../page.service\";\r\nimport {\r\n\tUPSERT_PAGE_ACTION_TYPES,\r\n\tUpsertPageActions,\r\n\tUpsertPageSucceedAction,\r\n\tUpsertPageFailedAction\r\n} from \"./upsert-page.actions\";\r\n\r\n@Injectable()\r\nexport class UpsertPageApiEffects {\r\n\tconstructor(private actions$: Actions<UpsertPageActions>, private service: PageService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$.pipe(\r\n\t\tofType<any>(UPSERT_PAGE_ACTION_TYPES.START),\r\n\t\tmap(action => action.payload),\r\n\t\tswitchMap(payload => this.service.upsert(payload)),\r\n\t\tmap(res => new UpsertPageSucceedAction(res)),\r\n\t\tcatchError(err => of(new UpsertPageFailedAction(err)))\r\n\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { PageService } from \"../../page.service\";\r\nimport {\r\n\tDELETE_PAGE_ACTION_TYPES,\r\n\tDeletePageActions,\r\n\tDeletePageSucceedAction,\r\n\tDeletePageFailedAction\r\n} from \"./delete-page.actions\";\r\n\r\n@Injectable()\r\nexport class DeletePageApiEffects {\r\n\tconstructor(private actions$: Actions<DeletePageActions>, private service: PageService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$.pipe(\r\n\t\tofType<any>(DELETE_PAGE_ACTION_TYPES.START),\r\n\t\tmap(action => action.payload),\r\n\t\tswitchMap(payload => this.service.delete(payload)),\r\n\t\tmap(res => new DeletePageSucceedAction(res)),\r\n\t\tcatchError(err => of(new DeletePageFailedAction(err)))\r\n\t);\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatCardModule, MatIconModule, MatButtonModule, MatFormFieldModule, MatInputModule, MatDividerModule } from \"@angular/material\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\n\r\nimport { NgsGridModule } from \"@soushians/grid\";\r\n\r\nimport { RoutingModule } from \"./page-routing.module\";\r\nimport { PageViewComponent } from \"./view/page-view.component\";\r\nimport { PagesManagementComponent } from \"./mangement/page-management.component\";\r\nimport { RootComponent } from \"./root/root.component\";\r\nimport { UpsertComponent } from \"./upsert/upsert.component\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { PageModuleConfig, MODULE_CONFIG_TOKEN } from \"./page.config\";\r\nimport { PageConfigurationService } from \"./services/page-configuration.service\";\r\nimport { PageService } from \"./services/page.service\";\r\nimport { PageDbEffects } from \"./root/pages.effects\";\r\nimport { PageReducer } from \"./page.reducer\";\r\nimport { GetPageApiEffects } from \"./services/api/get-page/get-page.effects\";\r\nimport { GetPagesApiEffects } from \"./services/api/get-pages/get-pages.effects\";\r\nimport { UpsertPageApiEffects } from \"./services/api/upsert-page/upsert-page.effects\";\r\nimport { DeletePageApiEffects } from \"./services/api/delete-page/delete-page.effects\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tRouterModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatCardModule,\r\n\t\tMatButtonModule,\r\n\t\tMatIconModule,\r\n\t\tMatDividerModule,\r\n\t\tFlexLayoutModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tNgsGridModule\r\n\t],\r\n\tdeclarations: [PageViewComponent, PagesManagementComponent, RootComponent, UpsertComponent],\r\n\texports: []\r\n})\r\nexport class NgsPageModule {\r\n\tstatic forRoot(config?: PageModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: NgsPageRootModule,\r\n\t\t\tproviders: [{ provide: MODULE_CONFIG_TOKEN, useValue: config }, PageConfigurationService, PageService]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsPageModule,\r\n\t\tRoutingModule,\r\n\t\tStoreModule.forFeature(\"pages\", PageReducer),\r\n\t\tEffectsModule.forFeature([\r\n\t\t\tPageDbEffects,\r\n\t\t\tGetPageApiEffects,\r\n\t\t\tGetPagesApiEffects,\r\n\t\t\tUpsertPageApiEffects,\r\n\t\t\tDeletePageApiEffects\r\n\t\t])\r\n\t],\r\n\texports: [NgsPageModule]\r\n})\r\nexport class NgsPageRootModule {\r\n\tconstructor() {\r\n\t\t(<any>window).___starter = (<any>window).___starter || {};\r\n\t\t(<any>window).___starter.page = \"8.0.10\";\r\n\t}\r\n}\r\n\r\n"]}