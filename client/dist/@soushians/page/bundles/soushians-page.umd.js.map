{"version":3,"file":"soushians-page.umd.js.map","sources":["ng://@soushians/page/lib/root/root.component.ts","ng://@soushians/page/lib/upsert/upsert.component.ts","ng://@soushians/page/lib/services/api/get-pages/get-pages.actions.ts","ng://@soushians/page/lib/mangement/page-management.component.ts","ng://@soushians/page/lib/page-routing.module.ts","ng://@soushians/page/lib/page.config.ts","ng://@soushians/page/lib/services/page-configuration.service.ts","ng://@soushians/page/lib/services/api/get-pages/get-pages.model.ts","ng://@soushians/page/lib/services/api/get-page/get-page.model.ts","ng://@soushians/page/lib/services/api/get-page/get-page.actions.ts","ng://@soushians/page/lib/models/page.model.ts","ng://@soushians/page/lib/services/api/upsert-page/upsert-page.model.ts","ng://@soushians/page/lib/services/page.service.ts","ng://@soushians/page/lib/view/page-view.component.ts","ng://@soushians/page/lib/page.module.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n\tselector: \"page-root\",\r\n\ttemplate: \"<router-outlet></router-outlet>\"\r\n})\r\nexport class RootComponent {}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n\ttemplate: `<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <div fxFlex=\"50\">\r\n        []upsertt\r\n    </div>\r\n</div>`\r\n})\r\nexport class UpsertComponent {}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetPagesApiModel } from \"./get-pages.model\";\r\nimport { PageModel } from \"../../../models/page.model\";\r\n\r\nexport const enum GET_PAGES_ACTION_TYPES {\r\n\tSTART = \"[GET_PAGES][API][GetPages] start\",\r\n\tSUCCEED = \"[GET_PAGES][API][GetPages] succeed\",\r\n\tFAILED = \"[GET_PAGES][API][GetPages] failed\"\r\n}\r\n\r\nexport class GetPagesStartAction implements Action {\r\n\treadonly type = GET_PAGES_ACTION_TYPES.START;\r\n}\r\nexport class GetPagesSucceedAction implements Action {\r\n\treadonly type = GET_PAGES_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: PageModel<any>[]) {}\r\n}\r\nexport class GetPagesFailedAction implements Action {\r\n\treadonly type = GET_PAGES_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type GetPagesActions = GetPagesStartAction | GetPagesSucceedAction | GetPagesFailedAction;\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { PageModel } from \"../models/page.model\";\r\nimport { AppState } from \"../page.reducer\";\r\nimport { GetPagesStartAction } from \"../services/api/get-pages/get-pages.actions\";\r\n\r\n@Component({\r\n\ttemplate: `<div fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"25px\">\r\n  <div fXFlex=\"30\" fxLayout=\"row wrap\">\r\n    <button fxFlex=\"100\" color=\"primary\" mat-raised-button routerLink=\"../upsert/article\">\r\n      Add Article\r\n    </button>\r\n    <button fxFlex=\"100\" color=\"primary\" mat-raised-button routerLink=\"../upsert/links\">\r\n      Add Links\r\n    </button>\r\n  </div>\r\n  <div fxFlex=\"70\" fxLayout=\"row wrap\" fxLayoutGap=\"25px\">\r\n    <mat-card class=\"cards-item\" *ngFor=\"let item of (pages$ | async)\" fxFlex=\"33\" fxLayout=\"row\">\r\n      <div fxFlex>\r\n        <a [routerLink]=\"['../upsert' ,  item.type,  item._id]\">\r\n          <mat-icon aria-label=\"edit page\">edit</mat-icon>\r\n        </a>\r\n      </div>\r\n      <div fxFlex>\r\n        {{item.name}}\r\n      </div>\r\n      <div fxFlex>\r\n        {{item.type}}\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</div>`\r\n})\r\nexport class PagesManagementComponent implements OnInit {\r\n\tpages$: Observable<PageModel<any>[]>;\r\n\tconstructor(public store: Store<AppState>) {\r\n\t\tthis.pages$ = this.store.select((state) => state.pages.db.data);\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.store.dispatch(new GetPagesStartAction());\r\n\t}\r\n}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { PageViewComponent } from \"./view/page-view.component\";\r\nimport { RootComponent } from \"./root/root.component\";\r\nimport { UpsertComponent } from \"./upsert/upsert.component\";\r\nimport { PagesManagementComponent } from \"./mangement/page-management.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"pages\",\r\n\t\tcomponent: RootComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"management\",\r\n\t\t\t\tcomponent: PagesManagementComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"upsert/:type\",\r\n\t\t\t\tcomponent: UpsertComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"upsert/:type/:_id\",\r\n\t\t\t\tcomponent: UpsertComponent\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const RoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface PageModuleConfig {\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t};\r\n\tendpoints?: {\r\n\t\tget: string;\r\n\t\tfind: string;\r\n\t\tupsert: string;\r\n\t};\r\n}\r\nexport const MODULE_DEFAULT_CONFIG: PageModuleConfig = {\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"frontend_server/did/not/set\"\r\n\t},\r\n\tendpoints: {\r\n\t\tupsert: \"/api/page\",\r\n\t\tfind: \"/api/page\",\r\n\t\tget: \"/api/page/${model._id}\"\r\n\t}\r\n};\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<PageModuleConfig>(\"PageModuleConfig\");\r\n","import { BehaviorSubject } from \"rxjs\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { PageModuleConfig, MODULE_DEFAULT_CONFIG, MODULE_CONFIG_TOKEN } from \"../page.config\";\r\nimport { AppState } from \"../page.reducer\";\r\n\r\n@Injectable()\r\nexport class PageConfigurationService {\r\n\tprivate _config: PageModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<AppState>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\t// this.store.select(getPageModuleConfig).subscribe((pageConfig) => {\r\n\t\t// \tif (!pageConfig) {\r\n\t\t// \t\treturn;\r\n\t\t// \t}\r\n\t\t// \tthis._config = Object.assign({}, this._config, pageConfig.Config);\r\n\t\t// \tthis.config$.next(this._config);\r\n\t\t// });\r\n\t}\r\n}\r\n","import { PageModel } from \"../../../models/page.model\";\r\n\r\nexport namespace GetPagesApiModel {\r\n\texport class Request {\r\n\t\tconstructor(initValue = {}) {\r\n\t\t\tObject.keys(initValue).forEach((key) => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: PageModel<any>[];\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { PageModel } from \"../../../models/page.model\";\r\n\r\nexport namespace GetPageApiModel {\r\n\texport class Request {\r\n\t\t_id: string;\r\n\t\tconstructor(initValue = {}) {\r\n\t\t\tObject.keys(initValue).forEach((key) => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: PageModel<any>;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetPageApiModel } from \"./get-page.model\";\r\nimport { PageModel } from \"../../../models/page.model\";\r\n\r\nexport const enum GET_PAGE_ACTION_TYPES {\r\n\tSTART = \"[PAGE][API][GetPage] start\",\r\n\tSUCCEED = \"[PAGE][API][GetPage] succeed\",\r\n\tFAILED = \"[PAGE][API][GetPage] failed\"\r\n}\r\n\r\nexport class GetPageStartAction implements Action {\r\n\treadonly type = GET_PAGE_ACTION_TYPES.START;\r\n\tconstructor(public payload: string) {}\r\n}\r\nexport class GetPageSucceedAction implements Action {\r\n\treadonly type = GET_PAGE_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: PageModel<any>) {}\r\n}\r\nexport class GetPageFailedAction implements Action {\r\n\treadonly type = GET_PAGE_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type GetPageActions = GetPageStartAction | GetPageSucceedAction | GetPageFailedAction;\r\n","export class PageModel<T> {\r\n\t_id: string;\r\n\tname: string;\r\n\ttype: string;\r\n\tConfig: T;\r\n\tconstructor({ _id, name, type, Config }: { _id?: string; name?: string; type?: string; Config?: T } = {}) {\r\n\t\tthis._id = _id;\r\n\t\tthis.name = name || \"\";\r\n\t\tthis.type = type;\r\n\t\tthis.Config = Config || ({} as T);\r\n\t}\r\n}\r\n","import { PageModel } from \"../../../models/page.model\";\r\n\r\nexport namespace UpsertPageApiModel {\r\n\texport class Request {\r\n\t\tpage: PageModel<any>;\r\n\t\tconstructor(page = {}) {\r\n\t\t\tdebugger;\r\n\t\t\tthis.page = new PageModel(page);\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn this.page;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: PageModel<any>;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { map, filter, tap, take, switchMap } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { AppState } from \"../page.reducer\";\r\nimport { PageConfigurationService } from \"./page-configuration.service\";\r\nimport { PageModel } from \"../models/page.model\";\r\nimport { stringTemplate } from \"@soushians/shared\";\r\nimport { GetPagesApiModel, GetPageStartAction, UpsertPageApiModel } from \"./api\";\r\nimport { Location } from \"@angular/common\";\r\n\r\n@Injectable()\r\nexport class PageService {\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate configurationService: PageConfigurationService,\r\n\t\tprivate _location: Location\r\n\t) {}\r\n\r\n\tget<T>(_id: string): Observable<PageModel<T>> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.get !== \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tswitchMap((config) =>\r\n\t\t\t\tthis.http.get(stringTemplate(config.env.frontend_server + config.endpoints.get, { _id }))\r\n\t\t\t),\r\n\t\t\tmap((response: UpsertPageApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\r\n\tgetPages(): Observable<PageModel<any>[]> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.find != \"\"),\r\n\t\t\tswitchMap((config) => this.http.get(config.env.frontend_server + config.endpoints.find)),\r\n\t\t\tmap((response: GetPagesApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\tupsert<T>(page: UpsertPageApiModel.Request): Observable<PageModel<T>> {\r\n\t\tconst model = new UpsertPageApiModel.Request(page);\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.upsert != \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tswitchMap((config) =>\r\n\t\t\t\tthis.http.post(config.env.frontend_server + config.endpoints.upsert, model.getRequestBody())\r\n\t\t\t),\r\n\t\t\tmap((response: UpsertPageApiModel.Response) => response.Result),\r\n\t\t\ttap(() => this._location.back())\r\n\t\t);\r\n\t}\r\n\t// delete(_id: string) {\r\n\t// \treturn this.configurationService.config$\r\n\t// \t\t.filter((config) => config.endpoints.deleteForm != \"\")\r\n\t// \t\t.switchMap((config) => this.http.get(config.endpoints.deleteForm));\r\n\t// }\r\n\tselectById<T>(_id: string): Observable<PageModel<T>> {\r\n\t\tconst subject = new BehaviorSubject<PageModel<T>>(undefined);\r\n\t\tthis.store\r\n\t\t\t.select((state) => state.pages.db.data)\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter((pages) => pages != null),\r\n\t\t\t\tmap((pages) => pages.find((page) => page._id == _id)),\r\n\t\t\t\ttap((page) => {\r\n\t\t\t\t\tif (page == null) {\r\n\t\t\t\t\t\tthis.store.dispatch(new GetPageStartAction(_id));\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe((page) => subject.next(page));\r\n\t\treturn subject.asObservable();\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tComponentRef,\r\n\tComponentFactoryResolver,\r\n\tViewContainerRef,\r\n\tDirective,\r\n\tInput\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { pluck, filter, switchMap, map, startWith } from \"rxjs/operators\";\r\n\r\nimport { PageModel } from \"../models/page.model\";\r\nimport { AppState } from \"../page.reducer\";\r\nimport { PageService } from \"../services/page.service\";\r\nimport { PageConfigurationService } from \"../services/page-configuration.service\";\r\n\r\n@Component({\r\n\ttemplate: \"\"\r\n})\r\nexport class PageViewComponent implements OnInit {\r\n\t@Input()\r\n\tset oid(id: string) {\r\n\t\tthis._selectPage(id);\r\n\t}\r\n\tpage$: Observable<PageModel<any>>;\r\n\tcomponent: ComponentRef<any>;\r\n\tconstructor(\r\n\t\tpublic store: Store<AppState>,\r\n\t\tprivate service: PageService,\r\n\t\tprivate configurationService: PageConfigurationService,\r\n\t\tprivate resolver: ComponentFactoryResolver,\r\n\t\tprivate container: ViewContainerRef\r\n\t) {}\r\n\tngOnInit() {}\r\n\t_selectPage(id: string) {\r\n\t\tthis.page$ = this.service.selectById<any>(id);\r\n\t}\r\n}\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatCardModule, MatIconModule, MatButtonModule } from \"@angular/material\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\n\nimport { RoutingModule } from \"./page-routing.module\";\nimport { PageViewComponent } from \"./view/page-view.component\";\nimport { PagesManagementComponent } from \"./mangement/page-management.component\";\nimport { RootComponent } from \"./root/root.component\";\nimport { UpsertComponent } from \"./upsert/upsert.component\";\n\n@NgModule({\n\timports: [ CommonModule, RoutingModule, MatCardModule, MatButtonModule, MatIconModule, FlexLayoutModule ],\n\tdeclarations: [ PageViewComponent, PagesManagementComponent, RootComponent, UpsertComponent ],\n\texports: []\n})\nexport class PageModule {}\n"],"names":["Component","store","Store","RouterModule","InjectionToken","BehaviorSubject","Injectable","Inject","http","filter","take","switchMap","stringTemplate","map","tap","HttpClient","Location","ComponentFactoryResolver","ViewContainerRef","Input","NgModule","CommonModule","MatCardModule","MatButtonModule","MatIconModule","FlexLayoutModule"],"mappings":"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"}
