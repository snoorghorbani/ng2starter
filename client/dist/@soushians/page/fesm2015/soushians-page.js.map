{"version":3,"file":"soushians-page.js.map","sources":["ng://@soushians/page/lib/root/root.component.ts","ng://@soushians/page/lib/upsert/upsert.component.ts","ng://@soushians/page/lib/services/api/get-pages/get-pages.actions.ts","ng://@soushians/page/lib/mangement/page-management.component.ts","ng://@soushians/page/lib/page-routing.module.ts","ng://@soushians/page/lib/page.config.ts","ng://@soushians/page/lib/services/page-configuration.service.ts","ng://@soushians/page/lib/services/api/get-pages/get-pages.model.ts","ng://@soushians/page/lib/services/api/get-page/get-page.model.ts","ng://@soushians/page/lib/services/api/get-page/get-page.actions.ts","ng://@soushians/page/lib/models/page.model.ts","ng://@soushians/page/lib/services/api/upsert-page/upsert-page.model.ts","ng://@soushians/page/lib/services/page.service.ts","ng://@soushians/page/lib/view/page-view.component.ts","ng://@soushians/page/lib/page.module.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n\tselector: \"page-root\",\r\n\ttemplate: \"<router-outlet></router-outlet>\"\r\n})\r\nexport class RootComponent {}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n\ttemplate: `<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <div fxFlex=\"50\">\r\n        []upsertt\r\n    </div>\r\n</div>`\r\n})\r\nexport class UpsertComponent {}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetPagesApiModel } from \"./get-pages.model\";\r\nimport { PageModel } from \"../../../models/page.model\";\r\n\r\nexport const enum GET_PAGES_ACTION_TYPES {\r\n\tSTART = \"[GET_PAGES][API][GetPages] start\",\r\n\tSUCCEED = \"[GET_PAGES][API][GetPages] succeed\",\r\n\tFAILED = \"[GET_PAGES][API][GetPages] failed\"\r\n}\r\n\r\nexport class GetPagesStartAction implements Action {\r\n\treadonly type = GET_PAGES_ACTION_TYPES.START;\r\n}\r\nexport class GetPagesSucceedAction implements Action {\r\n\treadonly type = GET_PAGES_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: PageModel<any>[]) {}\r\n}\r\nexport class GetPagesFailedAction implements Action {\r\n\treadonly type = GET_PAGES_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type GetPagesActions = GetPagesStartAction | GetPagesSucceedAction | GetPagesFailedAction;\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { PageModel } from \"../models/page.model\";\r\nimport { AppState } from \"../page.reducer\";\r\nimport { GetPagesStartAction } from \"../services/api/get-pages/get-pages.actions\";\r\n\r\n@Component({\r\n\ttemplate: `<div fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"25px\">\r\n  <div fXFlex=\"30\" fxLayout=\"row wrap\">\r\n    <button fxFlex=\"100\" color=\"primary\" mat-raised-button routerLink=\"../upsert/article\">\r\n      Add Article\r\n    </button>\r\n    <button fxFlex=\"100\" color=\"primary\" mat-raised-button routerLink=\"../upsert/links\">\r\n      Add Links\r\n    </button>\r\n  </div>\r\n  <div fxFlex=\"70\" fxLayout=\"row wrap\" fxLayoutGap=\"25px\">\r\n    <mat-card class=\"cards-item\" *ngFor=\"let item of (pages$ | async)\" fxFlex=\"33\" fxLayout=\"row\">\r\n      <div fxFlex>\r\n        <a [routerLink]=\"['../upsert' ,  item.type,  item._id]\">\r\n          <mat-icon aria-label=\"edit page\">edit</mat-icon>\r\n        </a>\r\n      </div>\r\n      <div fxFlex>\r\n        {{item.name}}\r\n      </div>\r\n      <div fxFlex>\r\n        {{item.type}}\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n</div>`\r\n})\r\nexport class PagesManagementComponent implements OnInit {\r\n\tpages$: Observable<PageModel<any>[]>;\r\n\tconstructor(public store: Store<AppState>) {\r\n\t\tthis.pages$ = this.store.select((state) => state.pages.db.data);\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.store.dispatch(new GetPagesStartAction());\r\n\t}\r\n}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { PageViewComponent } from \"./view/page-view.component\";\r\nimport { RootComponent } from \"./root/root.component\";\r\nimport { UpsertComponent } from \"./upsert/upsert.component\";\r\nimport { PagesManagementComponent } from \"./mangement/page-management.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"pages\",\r\n\t\tcomponent: RootComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"management\",\r\n\t\t\t\tcomponent: PagesManagementComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"upsert/:type\",\r\n\t\t\t\tcomponent: UpsertComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"upsert/:type/:_id\",\r\n\t\t\t\tcomponent: UpsertComponent\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const RoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface PageModuleConfig {\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t};\r\n\tendpoints?: {\r\n\t\tget: string;\r\n\t\tfind: string;\r\n\t\tupsert: string;\r\n\t};\r\n}\r\nexport const MODULE_DEFAULT_CONFIG: PageModuleConfig = {\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"frontend_server/did/not/set\"\r\n\t},\r\n\tendpoints: {\r\n\t\tupsert: \"/api/page\",\r\n\t\tfind: \"/api/page\",\r\n\t\tget: \"/api/page/${model._id}\"\r\n\t}\r\n};\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<PageModuleConfig>(\"PageModuleConfig\");\r\n","import { BehaviorSubject } from \"rxjs\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { PageModuleConfig, MODULE_DEFAULT_CONFIG, MODULE_CONFIG_TOKEN } from \"../page.config\";\r\nimport { AppState } from \"../page.reducer\";\r\n\r\n@Injectable()\r\nexport class PageConfigurationService {\r\n\tprivate _config: PageModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<AppState>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\t// this.store.select(getPageModuleConfig).subscribe((pageConfig) => {\r\n\t\t// \tif (!pageConfig) {\r\n\t\t// \t\treturn;\r\n\t\t// \t}\r\n\t\t// \tthis._config = Object.assign({}, this._config, pageConfig.Config);\r\n\t\t// \tthis.config$.next(this._config);\r\n\t\t// });\r\n\t}\r\n}\r\n","import { PageModel } from \"../../../models/page.model\";\r\n\r\nexport namespace GetPagesApiModel {\r\n\texport class Request {\r\n\t\tconstructor(initValue = {}) {\r\n\t\t\tObject.keys(initValue).forEach((key) => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: PageModel<any>[];\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { PageModel } from \"../../../models/page.model\";\r\n\r\nexport namespace GetPageApiModel {\r\n\texport class Request {\r\n\t\t_id: string;\r\n\t\tconstructor(initValue = {}) {\r\n\t\t\tObject.keys(initValue).forEach((key) => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: PageModel<any>;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetPageApiModel } from \"./get-page.model\";\r\nimport { PageModel } from \"../../../models/page.model\";\r\n\r\nexport const enum GET_PAGE_ACTION_TYPES {\r\n\tSTART = \"[PAGE][API][GetPage] start\",\r\n\tSUCCEED = \"[PAGE][API][GetPage] succeed\",\r\n\tFAILED = \"[PAGE][API][GetPage] failed\"\r\n}\r\n\r\nexport class GetPageStartAction implements Action {\r\n\treadonly type = GET_PAGE_ACTION_TYPES.START;\r\n\tconstructor(public payload: string) {}\r\n}\r\nexport class GetPageSucceedAction implements Action {\r\n\treadonly type = GET_PAGE_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: PageModel<any>) {}\r\n}\r\nexport class GetPageFailedAction implements Action {\r\n\treadonly type = GET_PAGE_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type GetPageActions = GetPageStartAction | GetPageSucceedAction | GetPageFailedAction;\r\n","export class PageModel<T> {\r\n\t_id: string;\r\n\tname: string;\r\n\ttype: string;\r\n\tConfig: T;\r\n\tconstructor({ _id, name, type, Config }: { _id?: string; name?: string; type?: string; Config?: T } = {}) {\r\n\t\tthis._id = _id;\r\n\t\tthis.name = name || \"\";\r\n\t\tthis.type = type;\r\n\t\tthis.Config = Config || ({} as T);\r\n\t}\r\n}\r\n","import { PageModel } from \"../../../models/page.model\";\r\n\r\nexport namespace UpsertPageApiModel {\r\n\texport class Request {\r\n\t\tpage: PageModel<any>;\r\n\t\tconstructor(page = {}) {\r\n\t\t\tdebugger;\r\n\t\t\tthis.page = new PageModel(page);\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn this.page;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: PageModel<any>;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { map, filter, tap, take, switchMap } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { AppState } from \"../page.reducer\";\r\nimport { PageConfigurationService } from \"./page-configuration.service\";\r\nimport { PageModel } from \"../models/page.model\";\r\nimport { stringTemplate } from \"@soushians/shared\";\r\nimport { GetPagesApiModel, GetPageStartAction, UpsertPageApiModel } from \"./api\";\r\nimport { Location } from \"@angular/common\";\r\n\r\n@Injectable()\r\nexport class PageService {\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate configurationService: PageConfigurationService,\r\n\t\tprivate _location: Location\r\n\t) {}\r\n\r\n\tget<T>(_id: string): Observable<PageModel<T>> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.get !== \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tswitchMap((config) =>\r\n\t\t\t\tthis.http.get(stringTemplate(config.env.frontend_server + config.endpoints.get, { _id }))\r\n\t\t\t),\r\n\t\t\tmap((response: UpsertPageApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\r\n\tgetPages(): Observable<PageModel<any>[]> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.find != \"\"),\r\n\t\t\tswitchMap((config) => this.http.get(config.env.frontend_server + config.endpoints.find)),\r\n\t\t\tmap((response: GetPagesApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\tupsert<T>(page: UpsertPageApiModel.Request): Observable<PageModel<T>> {\r\n\t\tconst model = new UpsertPageApiModel.Request(page);\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter((config) => config.endpoints.upsert != \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tswitchMap((config) =>\r\n\t\t\t\tthis.http.post(config.env.frontend_server + config.endpoints.upsert, model.getRequestBody())\r\n\t\t\t),\r\n\t\t\tmap((response: UpsertPageApiModel.Response) => response.Result),\r\n\t\t\ttap(() => this._location.back())\r\n\t\t);\r\n\t}\r\n\t// delete(_id: string) {\r\n\t// \treturn this.configurationService.config$\r\n\t// \t\t.filter((config) => config.endpoints.deleteForm != \"\")\r\n\t// \t\t.switchMap((config) => this.http.get(config.endpoints.deleteForm));\r\n\t// }\r\n\tselectById<T>(_id: string): Observable<PageModel<T>> {\r\n\t\tconst subject = new BehaviorSubject<PageModel<T>>(undefined);\r\n\t\tthis.store\r\n\t\t\t.select((state) => state.pages.db.data)\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter((pages) => pages != null),\r\n\t\t\t\tmap((pages) => pages.find((page) => page._id == _id)),\r\n\t\t\t\ttap((page) => {\r\n\t\t\t\t\tif (page == null) {\r\n\t\t\t\t\t\tthis.store.dispatch(new GetPageStartAction(_id));\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe((page) => subject.next(page));\r\n\t\treturn subject.asObservable();\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tComponentRef,\r\n\tComponentFactoryResolver,\r\n\tViewContainerRef,\r\n\tDirective,\r\n\tInput\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { pluck, filter, switchMap, map, startWith } from \"rxjs/operators\";\r\n\r\nimport { PageModel } from \"../models/page.model\";\r\nimport { AppState } from \"../page.reducer\";\r\nimport { PageService } from \"../services/page.service\";\r\nimport { PageConfigurationService } from \"../services/page-configuration.service\";\r\n\r\n@Component({\r\n\ttemplate: \"\"\r\n})\r\nexport class PageViewComponent implements OnInit {\r\n\t@Input()\r\n\tset oid(id: string) {\r\n\t\tthis._selectPage(id);\r\n\t}\r\n\tpage$: Observable<PageModel<any>>;\r\n\tcomponent: ComponentRef<any>;\r\n\tconstructor(\r\n\t\tpublic store: Store<AppState>,\r\n\t\tprivate service: PageService,\r\n\t\tprivate configurationService: PageConfigurationService,\r\n\t\tprivate resolver: ComponentFactoryResolver,\r\n\t\tprivate container: ViewContainerRef\r\n\t) {}\r\n\tngOnInit() {}\r\n\t_selectPage(id: string) {\r\n\t\tthis.page$ = this.service.selectById<any>(id);\r\n\t}\r\n}\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatCardModule, MatIconModule, MatButtonModule } from \"@angular/material\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\n\nimport { RoutingModule } from \"./page-routing.module\";\nimport { PageViewComponent } from \"./view/page-view.component\";\nimport { PagesManagementComponent } from \"./mangement/page-management.component\";\nimport { RootComponent } from \"./root/root.component\";\nimport { UpsertComponent } from \"./upsert/upsert.component\";\n\n@NgModule({\n\timports: [ CommonModule, RoutingModule, MatCardModule, MatButtonModule, MatIconModule, FlexLayoutModule ],\n\tdeclarations: [ PageViewComponent, PagesManagementComponent, RootComponent, UpsertComponent ],\n\texports: []\n})\nexport class PageModule {}\n"],"names":[],"mappings":"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"}
