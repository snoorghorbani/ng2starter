{"version":3,"file":"soushians-grid.umd.js.map","sources":["ng://@soushians/grid/lib/grid.config.ts","ng://@soushians/grid/lib/root/root.component.ts","ng://@soushians/grid/lib/grid-routing.module.ts",null,"ng://@soushians/grid/lib/services/grid-configuration.service.ts","ng://@soushians/grid/lib/models/upsert-grid.api-model.ts","ng://@soushians/grid/lib/models/grid.model.ts","ng://@soushians/grid/lib/services/api/upsert-grid/upsert-grid.model.ts","ng://@soushians/grid/lib/services/api/get-grid/get-grid.actions.ts","ng://@soushians/grid/lib/services/grid.service.ts","ng://@soushians/grid/lib/services/api/get-grid/get-grid.effects.ts","ng://@soushians/grid/lib/services/api/upsert-grid/upsert-grid.actions.ts","ng://@soushians/grid/lib/services/api/upsert-grid/upsert-grid.effects.ts","ng://@soushians/grid/lib/services/api/get-grids/get-grids.actions.ts","ng://@soushians/grid/lib/services/api/get-grids/get-grids.effects.ts","ng://@soushians/grid/lib/root/widget.actions.ts","ng://@soushians/grid/lib/root/grids.reducers.ts","ng://@soushians/grid/lib/grid.reducer.ts","ng://@soushians/grid/lib/root/grids.effects.ts","ng://@soushians/grid/lib/grid-item/dynamic-grid-item-config.directive.ts","ng://@soushians/grid/lib/grid-config/grid-config.component.ts","ng://@soushians/grid/lib/grid/grid.component.ts","ng://@soushians/grid/lib/grid-item/dynamic-grid-item-view.directive.ts","ng://@soushians/grid/lib/grid.module.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\r\nexport interface IGridType {\r\n\tupsertComponet?: any;\r\n\tconfigComponent?: any;\r\n\ttype?: \"simple\" | \"complex\";\r\n\tviewComponent: any;\r\n}\r\nexport interface GridModuleConfig {\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t};\r\n\tendpoints?: {\r\n\t\tget: string;\r\n\t\tfind: string;\r\n\t\tupsert: string;\r\n\t};\r\n\ttypes?: { [key: string]: IGridType };\r\n}\r\n\r\nexport const MODULE_DEFAULT_CONFIG: GridModuleConfig = {\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"\"\r\n\t},\r\n\tendpoints: {\r\n\t\tupsert: \"/api/grid\",\r\n\t\tfind: \"/api/grid\",\r\n\t\tget: \"/api/grid/${model._id}\"\r\n\t},\r\n\ttypes: {}\r\n};\r\n\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<GridModuleConfig>(\"GridModuleConfig\");\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n\tselector: \"ngs-grid-root\",\r\n\ttemplate: \"<router-outlet></router-outlet>\"\r\n})\r\nexport class RootComponent {}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { RootComponent } from \"./root/root.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"grid\",\r\n\t\tcomponent: RootComponent,\r\n\t\tchildren: []\r\n\t}\r\n];\r\n\r\nexport const GridRoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { BehaviorSubject } from \"rxjs\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { GridModuleConfig, MODULE_DEFAULT_CONFIG, MODULE_CONFIG_TOKEN } from \"../grid.config\";\r\nimport { AppState } from \"../grid.reducer\";\r\n\r\n@Injectable()\r\nexport class GridConfigurationService {\r\n\tprivate _config: GridModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<AppState>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\t// this.store.select(getGridModuleConfig).subscribe((gridConfig) => {\r\n\t\t// \tif (!gridConfig) {\r\n\t\t// \t\treturn;\r\n\t\t// \t}\r\n\t\t// \tthis._config = Object.assign({}, this._config, gridConfig.Config);\r\n\t\t// \tthis.config$.next(this._config);\r\n\t\t// });\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { GridModel } from \"./grid.model\";\r\n\r\nexport namespace UpsertGridApiModel {\r\n\texport class Request {\r\n\t\tgrid: GridModel;\r\n\t\tconstructor(initValue: Partial<UpsertGridApiModel.Request> = {}) {\r\n\t\t\tObject.keys(initValue).forEach((key) => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn this.grid;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: GridModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { GridsterConfig } from \"angular-gridster2\";\r\nimport { IGridItemModel } from \"./gird-item.model\";\r\n\r\nexport class GridModel {\r\n\t_id: string;\r\n\toid: string;\r\n\tname: string;\r\n\ttype: string;\r\n\tconfig: GridsterConfig;\r\n\titems: IGridItemModel<any>[];\r\n\tconstructor(\r\n\t\t{\r\n\t\t\t_id,\r\n\t\t\toid,\r\n\t\t\tname,\r\n\t\t\ttype,\r\n\t\t\tconfig,\r\n\t\t\titems\r\n\t\t}: { _id?: string; oid?: string; name?: string; type?: string; config?: GridsterConfig; items?: any[] } = {\r\n\t\t\tconfig: {},\r\n\t\t\titems: []\r\n\t\t}\r\n\t) {\r\n\t\tthis._id = _id;\r\n\t\tthis.oid = oid;\r\n\t\tthis.name = name;\r\n\t\tthis.type = type;\r\n\t\tthis.config = config;\r\n\t\tthis.items = items;\r\n\t}\r\n}\r\n","import { GridModel } from \"../../../models\";\r\n\r\nexport namespace UpsertGridApiModel {\r\n\texport class Request {\r\n\t\tgrid: GridModel;\r\n\t\tconstructor(grid = {}) {\r\n\t\t\tdebugger;\r\n\t\t\tthis.grid = new GridModel(grid);\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn this.grid;\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: GridModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetGridApiModel } from \"./get-grid.model\";\r\nimport { GridModel } from \"../../../models/grid.model\";\r\n\r\nexport const enum GET_GRID_ACTION_TYPES {\r\n\tSTART = \"[GRID][API][GetGrid] start\",\r\n\tSUCCEED = \"[GRID][API][GetGrid] succeed\",\r\n\tFAILED = \"[GRID][API][GetGrid] failed\"\r\n}\r\n\r\nexport class GetGridStartAction implements Action {\r\n\treadonly type = GET_GRID_ACTION_TYPES.START;\r\n\tconstructor(public payload: string) {}\r\n}\r\nexport class GetGridSucceedAction implements Action {\r\n\treadonly type = GET_GRID_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: GridModel) {}\r\n}\r\nexport class GetGridFailedAction implements Action {\r\n\treadonly type = GET_GRID_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type GetGridActions = GetGridStartAction | GetGridSucceedAction | GetGridFailedAction;\r\n","import { map, filter, tap, take, switchMap, combineLatest } from \"rxjs/operators\";\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { stringTemplate } from \"@soushians/shared\";\r\nimport { UserFacadeService } from \"@soushians/user\";\r\n\r\nimport { GridConfigurationService } from \"./grid-configuration.service\";\r\nimport { UpsertGridApiModel } from \"./api/upsert-grid/upsert-grid.model\";\r\nimport { GetGridStartAction } from \"./api/get-grid/get-grid.actions\";\r\nimport { GetGridsApiModel } from \"./api/get-grids/get-grids.model\";\r\nimport { AppState } from \"../grid.reducer\";\r\nimport { GridModel } from \"../models\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class GridService {\r\n\tuserId$: Observable<string>;\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate userFacadeService: UserFacadeService,\r\n\t\tprivate configurationService: GridConfigurationService\r\n\t) {\r\n\t\tthis.userId$ = this.userFacadeService.getDisplayName().filter(i => i != undefined);\r\n\t}\r\n\r\n\tget(_id: string): Observable<GridModel> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter(config => config.endpoints.get !== \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tcombineLatest(this.userId$),\r\n\t\t\tswitchMap(([ config, userId ]) => {\r\n\t\t\t\tdebugger;\r\n\t\t\t\treturn this.http\r\n\t\t\t\t\t.get(stringTemplate(config.env.frontend_server + config.endpoints.get, { _id }), {\r\n\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\tuserId: userId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.pipe(map((response: UpsertGridApiModel.Response) => response.Result));\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tgetGrids(): Observable<GridModel[]> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter(config => config.endpoints.find != \"\"),\r\n\t\t\tswitchMap(config => this.http.get(config.env.frontend_server + config.endpoints.find)),\r\n\t\t\tmap((response: GetGridsApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\tupsert(grid: UpsertGridApiModel.Request): Observable<GridModel> {\r\n\t\tconst model = new UpsertGridApiModel.Request(grid);\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter(config => config.endpoints.upsert != \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tcombineLatest(this.userId$),\r\n\t\t\tswitchMap(([ config, userId ]) => {\r\n\t\t\t\treturn this.http.post(config.env.frontend_server + config.endpoints.upsert, model.getRequestBody(), {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tuserId: userId\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}),\r\n\t\t\tmap((response: UpsertGridApiModel.Response) => response.Result)\r\n\t\t);\r\n\t}\r\n\t// delete(_id: string) {\r\n\t// \treturn this.configurationService.config$\r\n\t// \t\t.filter((config) => config.endpoints.deleteForm != \"\")\r\n\t// \t\t.switchMap((config) => this.http.get(config.endpoints.deleteForm));\r\n\t// }\r\n\tselectById(_id: string): Observable<GridModel> {\r\n\t\tconst subject = new BehaviorSubject<GridModel>(undefined);\r\n\t\tthis.store\r\n\t\t\t.select(state => state.grids.db.data)\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter(grids => grids != null),\r\n\t\t\t\tmap(grids => grids.find(grid => grid._id == _id)),\r\n\t\t\t\ttap(grid => {\r\n\t\t\t\t\tif (grid == null) {\r\n\t\t\t\t\t\tthis.store.dispatch(new GetGridStartAction(_id));\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe(FormSchemaModel => subject.next(FormSchemaModel));\r\n\t\treturn subject.asObservable();\r\n\t}\r\n\tselectByOid(_id: string): Observable<GridModel> {\r\n\t\tconst subject = new BehaviorSubject<GridModel>(undefined);\r\n\t\tthis.store\r\n\t\t\t.select(state => state.grids.db.data)\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter(grids => grids != null),\r\n\t\t\t\tmap(grids => grids.find(grid => grid._id == _id)),\r\n\t\t\t\ttap(grid => {\r\n\t\t\t\t\tif (grid == null) {\r\n\t\t\t\t\t\tthis.store.dispatch(new GetGridStartAction(_id));\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe(FormSchemaModel => subject.next(FormSchemaModel));\r\n\t\treturn subject.asObservable();\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { GridService } from \"../../grid.service\";\r\nimport { GET_GRID_ACTION_TYPES, GetGridActions, GetGridSucceedAction, GetGridFailedAction } from \"./get-grid.actions\";\r\n\r\n@Injectable()\r\nexport class GetGridApiEffects {\r\n\tconstructor(private actions$: Actions<GetGridActions>, private service: GridService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$\r\n\t\t.ofType(GET_GRID_ACTION_TYPES.START)\r\n\t\t.pipe(\r\n\t\t\tmap((action) => action.payload),\r\n\t\t\tswitchMap((payload) => this.service.get(payload)),\r\n\t\t\tmap((res) => new GetGridSucceedAction(res)),\r\n\t\t\tcatchError((err) => of(new GetGridFailedAction(err)))\r\n\t\t);\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { UpsertGridApiModel } from \"./upsert-grid.model\";\r\nimport { GridModel } from \"../../../models/grid.model\";\r\n\r\nexport const enum UPSERT_GRID_ACTION_TYPES {\r\n\tSTART = \"[UPSERT_GRID][API][UpsertGrid] start\",\r\n\tSUCCEED = \"[UPSERT_GRID][API][UpsertGrid] succeed\",\r\n\tFAILED = \"[UPSERT_GRID][API][UpsertGrid] failed\"\r\n}\r\n\r\nexport class UpsertGridStartAction implements Action {\r\n\treadonly type = UPSERT_GRID_ACTION_TYPES.START;\r\n\tconstructor(public payload: GridModel) {}\r\n}\r\nexport class UpsertGridSucceedAction implements Action {\r\n\treadonly type = UPSERT_GRID_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: GridModel) {}\r\n}\r\nexport class UpsertGridFailedAction implements Action {\r\n\treadonly type = UPSERT_GRID_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type UpsertGridActions = UpsertGridStartAction | UpsertGridSucceedAction | UpsertGridFailedAction;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\n\r\nimport { GridService } from \"../../grid.service\";\r\nimport {\r\n\tUPSERT_GRID_ACTION_TYPES,\r\n\tUpsertGridActions,\r\n\tUpsertGridSucceedAction,\r\n\tUpsertGridFailedAction\r\n} from \"./upsert-grid.actions\";\r\nimport { of } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class UpsertGridApiEffects {\r\n\tconstructor(private actions$: Actions<UpsertGridActions>, private service: GridService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$\r\n\t\t.ofType(UPSERT_GRID_ACTION_TYPES.START)\r\n\t\t.pipe(\r\n\t\t\tmap((action) => action.payload),\r\n\t\t\tswitchMap((payload) => this.service.upsert(payload)),\r\n\t\t\tmap((res) => new UpsertGridSucceedAction(res)),\r\n\t\t\tcatchError((err) => of(new UpsertGridFailedAction(err)))\r\n\t\t);\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetGridsApiModel } from \"./get-grids.model\";\r\nimport { GridModel } from \"../../../models/grid.model\";\r\n\r\nexport const enum GET_GRIDS_ACTION_TYPES {\r\n\tSTART = \"[GET_GRIDS][API][GetGrids] start\",\r\n\tSUCCEED = \"[GET_GRIDS][API][GetGrids] succeed\",\r\n\tFAILED = \"[GET_GRIDS][API][GetGrids] failed\"\r\n}\r\n\r\nexport class GetGridsStartAction implements Action {\r\n\treadonly type = GET_GRIDS_ACTION_TYPES.START;\r\n}\r\nexport class GetGridsSucceedAction implements Action {\r\n\treadonly type = GET_GRIDS_ACTION_TYPES.SUCCEED;\r\n\tconstructor(public payload: GridModel[]) {}\r\n}\r\nexport class GetGridsFailedAction implements Action {\r\n\treadonly type = GET_GRIDS_ACTION_TYPES.FAILED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type GetGridsActions = GetGridsStartAction | GetGridsSucceedAction | GetGridsFailedAction;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { GridService } from \"../../grid.service\";\r\nimport {\r\n\tGET_GRIDS_ACTION_TYPES,\r\n\tGetGridsActions,\r\n\tGetGridsSucceedAction,\r\n\tGetGridsFailedAction\r\n} from \"./get-grids.actions\";\r\n\r\n@Injectable()\r\nexport class GetGridsApiEffects {\r\n\tconstructor(private actions$: Actions<GetGridsActions>, private service: GridService) {}\r\n\r\n\t@Effect()\r\n\tstart$ = this.actions$\r\n\t\t.ofType(GET_GRIDS_ACTION_TYPES.START)\r\n\t\t.pipe(\r\n\t\t\tswitchMap(() =>\r\n\t\t\t\tthis.service\r\n\t\t\t\t\t.getGrids()\r\n\t\t\t\t\t.pipe(\r\n\t\t\t\t\t\tmap((res) => new GetGridsSucceedAction(res)),\r\n\t\t\t\t\t\tcatchError((err) => of(new GetGridsFailedAction(err)))\r\n\t\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GridModel } from \"../models\";\r\n\r\nexport enum GridsActionTypes {\r\n\tUPSERT = \"[GRID][DB] UPSERT\",\r\n\tDELETE = \"[GRID][DB] DELETE\"\r\n}\r\n\r\nexport class UpsertGridAction implements Action {\r\n\treadonly type = GridsActionTypes.UPSERT;\r\n\tconstructor(public payload: GridModel[]) {}\r\n}\r\nexport class DeleteGridAction implements Action {\r\n\treadonly type = GridsActionTypes.DELETE;\r\n\tconstructor(public payload: GridModel) {}\r\n}\r\n\r\nexport type GridsActions = UpsertGridAction | DeleteGridAction;\r\n","import { GridModel } from \"../models\";\r\nimport { GridsActionTypes, GridsActions } from \"./widget.actions\";\r\n\r\nexport interface State {\r\n\tdata: GridModel[];\r\n}\r\n\r\nconst initialState: State = {\r\n\tdata: []\r\n};\r\n\r\nexport function Reducer(state = initialState, action: GridsActions): State {\r\n\tlet _data: GridModel[];\r\n\tswitch (action.type) {\r\n\t\tcase GridsActionTypes.UPSERT:\r\n\t\t\t_data = state.data.concat();\r\n\t\t\tconst newGrids = action.payload;\r\n\r\n\t\t\tnewGrids.forEach((newGrid) => {\r\n\t\t\t\tconst existedGridIndex = _data.findIndex((w) => w._id == newGrid._id);\r\n\t\t\t\tif (existedGridIndex > -1) {\r\n\t\t\t\t\t_data.splice(existedGridIndex, 1, newGrid);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t_data.push(newGrid);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: _data\r\n\t\t\t};\r\n\r\n\t\tcase GridsActionTypes.DELETE:\r\n\t\t\t_data = Object.assign({}, state.data);\r\n\r\n\t\t\tconst gridIndex = state.data.findIndex((w) => w._id == action.payload._id);\r\n\t\t\t_data.splice(gridIndex, 1);\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: _data\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const getGrids = (state: State) => state.data;\r\n","import * as fromRoot from \"./root/grids.reducers\";\r\n\r\n// tslint:disable-next-line:no-empty-interface\r\nexport interface GridState {\r\n\tdb: fromRoot.State;\r\n}\r\n\r\nexport const GridReducer = {\r\n\tdb: fromRoot.Reducer\r\n};\r\n\r\nexport interface AppState {\r\n\tgrids: GridState;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map, pluck } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { GridModel } from \"../models\";\r\nimport { UpsertGridAction } from \"./widget.actions\";\r\nimport { GET_GRID_ACTION_TYPES } from \"../services/api/get-grid/get-grid.actions\";\r\nimport { GET_GRIDS_ACTION_TYPES } from \"../services/api/get-grids/get-grids.actions\";\r\nimport { UPSERT_GRID_ACTION_TYPES } from \"../services/api/upsert-grid/upsert-grid.actions\";\r\n\r\n@Injectable()\r\nexport class GridDbEffects {\r\n\tconstructor(private actions$: Actions<any>) {}\r\n\r\n\t@Effect()\r\n\tUpsert$ = this.actions$\r\n\t\t.ofType(GET_GRID_ACTION_TYPES.SUCCEED, UPSERT_GRID_ACTION_TYPES.SUCCEED)\r\n\t\t.pipe(pluck(\"payload\"), map((grid: GridModel) => new UpsertGridAction([ grid ])));\r\n\r\n\t@Effect()\r\n\tUpsertMany$ = this.actions$\r\n\t\t.ofType(GET_GRIDS_ACTION_TYPES.SUCCEED)\r\n\t\t.pipe(pluck(\"payload\"), map((grids: GridModel[]) => new UpsertGridAction(grids)));\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tComponentRef,\r\n\tComponentFactoryResolver,\r\n\tViewContainerRef,\r\n\tDirective,\r\n\tInput,\r\n\tViewChild,\r\n\tInject\r\n} from \"@angular/core\";\r\nimport { GridConfigurationService } from \"../services/grid-configuration.service\";\r\nimport { MAT_BOTTOM_SHEET_DATA } from \"@angular/material\";\r\n\r\n@Directive({\r\n\tselector: \"[ngsDynamicGridItemConfig]\"\r\n})\r\nexport class DynamicGridItremConfigDirective implements OnInit {\r\n\t@Input()\r\n\tset type(type: string) {\r\n\t\tif (!type) return;\r\n\t\tthis._resolve_correct_component_base_on_widget_type(type);\r\n\t}\r\n\tget valid() {\r\n\t\treturn this.component.instance.valid;\r\n\t}\r\n\tget config() {\r\n\t\treturn this.component.instance.config;\r\n\t}\r\n\tcomponent: ComponentRef<any>;\r\n\tmapTypeToComponent: any;\r\n\tconstructor(\r\n\t\tprivate configurationService: GridConfigurationService,\r\n\t\tprivate resolver: ComponentFactoryResolver,\r\n\t\tprivate container: ViewContainerRef\r\n\t) {\r\n\t\tthis.mapTypeToComponent = this.configurationService.config$.getValue().types;\r\n\t}\r\n\tngOnInit() {}\r\n\t_resolve_correct_component_base_on_widget_type(type) {\r\n\t\tif (!this.mapTypeToComponent[type]) {\r\n\t\t\tconst supportedTypes = Object.keys(this.mapTypeToComponent).join(\", \");\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Trying to use an unsupported type (${type}).\r\n\t\t  \t\t Supported types: ${supportedTypes}`\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst component = this.resolver.resolveComponentFactory<any>(this.mapTypeToComponent[type].configComponent);\r\n\t\tthis.component = this.container.createComponent(component);\r\n\t\t// this.widget$.subscribe((w) => (this.component.instance.widget = w));\r\n\t}\r\n}\r\n\r\n@Component({\r\n\ttemplate: `\r\n\t<div ngsDynamicGridItemConfig [type]=\"data.type\"></div>\r\n\t`\r\n})\r\nexport class DynamicGridItemConfigComponent {\r\n\t@ViewChild(DynamicGridItremConfigDirective) DynamicWidgetRef: DynamicGridItremConfigDirective;\r\n\tconstructor(@Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {}\r\n\tget config() {\r\n\t\treturn this.DynamicWidgetRef.config;\r\n\t}\r\n\tget valid() {\r\n\t\treturn this.DynamicWidgetRef.valid;\r\n\t}\r\n}\r\n","import { Component, Injector, Inject } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { MAT_BOTTOM_SHEET_DATA } from \"@angular/material\";\r\nimport { FormGroup, FormControl } from \"@angular/forms\";\r\n\r\nimport { AppState } from \"../grid.reducer\";\r\nimport { GridModel } from \"../models\";\r\nimport { UpsertGridStartAction } from \"../services/api/upsert-grid/upsert-grid.actions\";\r\n\r\n@Component({\r\n\ttemplate: `<h4> ØªÙØ¸ÛÙØ§Øª Ø¯Ø§Ø´Ø¨ÙØ±Ø¯</h4>\r\n<div fxLayout=\"column wrap\" fxLayoutGap=\"15px\">\r\n    <div fxFlex=\"100\" fxLayout=\"row wrap\" [formGroup]=\"gridFormGroup\">\r\n        <mat-form-field fxFlex=\"20\">\r\n            <input matInput placeholder=\"ÙØ§Ù\" formControlName=\"name\">\r\n        </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"column wrap\" fxLayoutGap=\"15px\"  fxFlex=\"100\" [formGroup]=\"configFormGroup\">\r\n        <div fxLayout=\"row wrap\" fxLayoutGap=\"25px\">\r\n            <mat-form-field fxFlex=\"20\">\r\n                <mat-select placeholder=\"ÙÙØ¹ ÙØ±Ø§Ø±Ú¯ÛØ±Û Ú¯Ø±ÛØ¯ÙØ§ Ø¯Ø± ØµÙØ­Ù\" formControlName=\"gridType\">\r\n                    <mat-option *ngFor=\"let item of gridTypes\" [value]=\"item\">\r\n                        {{item}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=\"20\">\r\n                <mat-select placeholder=\"ÙÙØ¹ ÙØ´Ø±Ø¯Ù Ø´Ø¯Ù Ú¯Ø±ÛØ¯ÙØ§ Ø¯Ø± ØµÙØ­Ù\" formControlName=\"compactType\">\r\n                    <mat-option *ngFor=\"let item of compactType\" [value]=\"item\">\r\n                        {{item}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=\"20\">\r\n                <mat-select placeholder=\"ÙØ´Ø§Ù Ø¯Ø§Ø¯Ù Ø³ÙÙÙâÙØ§Û Ú¯Ø±ÛØ¯\" formControlName=\"displayGrid\">\r\n                    <mat-option *ngFor=\"let item of displayGridTypes\" [value]=\"item\">\r\n                        {{item}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <div fxFlex=\"100\" fxLayout=\"row wrap\" fxLayoutGap=\"25px\">\r\n            <div fxFlex=\"20\">\r\n                <mat-checkbox formControlName=\"enableEmptyCellDrag\">Ø§ÛØ¬Ø§Ø¯ Ú¯Ø±ÛØ¯ Ø¨Ø§ Ø¯Ø±Ú¯ Ú©Ø±Ø¯Ù</mat-checkbox>\r\n                <!-- <mat-checkbox formControlName=\"enableEmptyCellClick\">enableEmptyCellClick</mat-checkbox> -->\r\n            </div>\r\n            <div fxFlex=\"20\" [formGroup]=\"configFormGroup.get('draggable')\">\r\n                <mat-checkbox formControlName=\"enabled\">ÙØ§Ø¨ÙÛØª Ø¬Ø§Ø¨Ø¬Ø§ÛÛ Ú¯Ø±ÛØ¯ÙØ§</mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"20\" [formGroup]=\"configFormGroup.get('resizable')\">\r\n                <mat-checkbox formControlName=\"enabled\">ÙØ§Ø¨ÙÛØª ØªØºÛÛØ± Ø³Ø§ÛØ² Ú¯Ø±ÛØ¯ÙØ§</mat-checkbox>\r\n            </div>\r\n        </div>\r\n        <!-- Margins -->\r\n        <div fxFlex=\"100\" fxLayout=\"column wrap\" fxLayoutGap=\"25px\">\r\n            <h4 fxFlex=\"100\">Ø­Ø§Ø´ÛÙ:</h4>\r\n            <div fxFlex fxLayout=\"column\" fxLayoutGap=\"25px\">\r\n                <mat-checkbox fxFlex formControlName=\"outerMargin\">Ø§ÙÚ©Ø§Ù ØªÙØ¸ÛÙ ÙØ§ØµÙÙ Ú¯Ø±ÛØ¯ÙØ§</mat-checkbox>\r\n            </div>\r\n            <div fxFlex=\"100\"  fxLayout=\"row wrap\" fxLayoutGap=\"25px\">\r\n                <mat-form-field fxFlex>\r\n                    <input matInput type=\"number\" placeholder=\"ÙØ§ØµÙÙ Ú¯Ø±ÛØ¯ÙØ§ Ø§Ø² ÙÙ\" formControlName=\"margin\" />\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex>\r\n                    <input matInput type=\"number\" placeholder=\"ÙØ§ØµÙÙ Ú¯Ø±ÛØ¯ÙØ§ Ø§Ø± Ø¨Ø§ÙØ§ Ø¯Ø§Ø´Ø¨ÙØ±Ø¯\" formControlName=\"outerMarginTop\" />\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex>\r\n                    <input matInput type=\"number\" placeholder=\"ÙØ§ØµÙÙ Ú¯Ø±ÛØ¯ÙØ§ Ø§Ø² Ø±Ø§Ø³Øª Ø¯Ø§Ø´Ø¨ÙØ±Ø¯\" formControlName=\"outerMarginRight\" />\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex>\r\n                    <input matInput type=\"number\" placeholder=\"ÙØ§ØµÙÙ Ú¯Ø±ÛØ¯ÙØ§ Ø§Ø² Ù¾Ø§ÛÛÙ Ø¯Ø§Ø´Ø¨ÙØ±Ø¯\" formControlName=\"outerMarginBottom\" />\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex>\r\n                    <input matInput type=\"number\" placeholder=\"ÙØ§ØµÙÙ Ú¯Ø±ÛØ¯ÙØ§ Ø§Ø² ÚÙ¾ Ø¯Ø§Ø´Ø¨ÙØ±Ø¯\" formControlName=\"outerMarginLeft\" />\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <!-- Grid Size -->\r\n        <div fxFlex=\"100\" fxLayout=\"row wrap\" fxLayoutGap=\"25px\">\r\n            <h4 fxFlex=\"100\">ØªØ¹Ø¯Ø§Ø¯ Ø³ØªÙÙâÙØ§:</h4>\r\n            <mat-form-field fxFlex=\"18\">\r\n                <input matInput type=\"number\" placeholder=\"Ú©ÙØªØ±ÛÙ Ø³ØªÙÙ\" formControlName=\"minCols\" />\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex=\"18\">\r\n                <input matInput type=\"number\" placeholder=\"Ø¨ÛØ´ØªØ±ÛÙ Ø³ØªÙÙ\" formControlName=\"maxCols\" />\r\n            </mat-form-field>\r\n        </div> \r\n        <div fxFlex=\"20\" fxLayoutAlign=\"flex-end center\" fxLayout=\"row wrap\" fxLayoutGap=\"25px\">\r\n         <button color=\"primary\" mat-raised-button (click)=\"save()\">Ø°Ø®ÛØ±Ù</button>\r\n    </div>\r\n</div>\r\n</div>`\r\n})\r\nexport class GridConfigComponent {\r\n\tgridTypes: any[];\r\n\tcompactType: any[];\r\n\tdisplayGridTypes: any[];\r\n\tgrid: GridModel;\r\n\toid: string;\r\n\tconfigFormGroup: FormGroup;\r\n\tgridFormGroup: FormGroup;\r\n\tconstructor(private store: Store<AppState>, @Inject(MAT_BOTTOM_SHEET_DATA) private data: any) {\r\n\t\tthis.grid = this.data.grid;\r\n\t\tthis.oid = this.data.oid;\r\n\t\tthis._init_properties();\r\n\t\tthis._init_form_group();\r\n\t}\r\n\tsave() {\r\n\t\tconst grid = {\r\n\t\t\t...this.grid,\r\n\t\t\t...this.gridFormGroup.value,\r\n\t\t\tconfig: { ...this.configFormGroup.value }\r\n\t\t};\r\n\t\tthis.store.dispatch(new UpsertGridStartAction(grid));\r\n\t}\r\n\t_init_form_group() {\r\n\t\tthis.configFormGroup = new FormGroup({\r\n\t\t\tgridType: new FormControl(\"fit\"),\r\n\t\t\tcompactType: new FormControl(\"none\"),\r\n\t\t\tdisplayGrid: new FormControl(\"onDrag&Resize\"),\r\n\t\t\t// empty cell\r\n\t\t\tenableEmptyCellDrag: new FormControl(true),\r\n\t\t\tenableEmptyCellClick: new FormControl(false),\r\n\t\t\tenableEmptyCellContextMenu: new FormControl(false),\r\n\t\t\t//\r\n\t\t\tscrollToNewItems: new FormControl(true),\r\n\t\t\t// margins\r\n\t\t\tmargin: new FormControl(10),\r\n\t\t\touterMargin: new FormControl(true),\r\n\t\t\touterMarginTop: new FormControl(10),\r\n\t\t\touterMarginRight: new FormControl(10),\r\n\t\t\touterMarginBottom: new FormControl(10),\r\n\t\t\touterMarginLeft: new FormControl(10),\r\n\t\t\t// grid size\r\n\t\t\tminCols: new FormControl(3),\r\n\t\t\tmaxCols: new FormControl(3),\r\n\t\t\t//\r\n\t\t\tdraggable: new FormGroup({\r\n\t\t\t\tenabled: new FormControl(),\r\n\t\t\t\tdelayStart: new FormControl(333)\r\n\t\t\t\t// ignoreContent: new FormControl(\"false\")\r\n\t\t\t}),\r\n\t\t\tresizable: new FormGroup({\r\n\t\t\t\tenabled: new FormControl()\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.gridFormGroup = new FormGroup({\r\n\t\t\toid: new FormControl(this.oid),\r\n\t\t\tname: new FormControl(\"\")\r\n\t\t});\r\n\t\tthis.gridFormGroup.patchValue(this.grid);\r\n\t\tthis.configFormGroup.patchValue(this.grid.config);\r\n\t}\r\n\t_init_properties() {\r\n\t\tthis.gridTypes = [ \"fit\", \"scrollVertical\", \"scrollHorizontal\", \"fixed\", \"verticalFixed\", \"horizontalFixed\" ];\r\n\t\tthis.compactType = [ \"none\", \"compactUp\", \"compactLeft\", \"compactUp&Left\", \"compactLeft&Up\" ];\r\n\t\tthis.displayGridTypes = [ \"always\", \"onDrag&Resize\", \"none\" ];\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { GridsterConfig, GridsterItem } from \"angular-gridster2\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { filter } from \"rxjs/operators\";\r\nimport { MatBottomSheet } from \"@angular/material\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { getFrontendAuthenticationState } from \"@soushians/frontend-authentication\";\r\n\r\nimport { AppState } from \"../grid.reducer\";\r\nimport { GridModel } from \"../models\";\r\nimport { GridService } from \"../services/grid.service\";\r\nimport { GridConfigurationService } from \"../services/grid-configuration.service\";\r\nimport { DynamicGridItemConfigComponent } from \"../grid-item/dynamic-grid-item-config.directive\";\r\nimport { GridConfigComponent } from \"../grid-config/grid-config.component\";\r\nimport { IGridItemModel } from \"../models/gird-item.model\";\r\nimport { UpsertGridStartAction } from \"../services/api/upsert-grid/upsert-grid.actions\";\r\n\r\n@Component({\r\n\tselector: \"ngs-grid\",\r\n\ttemplate: `<gridster [options]=\"options\">\r\n    <div class=\"actions\">\r\n        <button mat-mini-fab (click)=\"addItem($event)\">\r\n            <mat-icon>add</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab (click)=\"openConfig($event)\" *ngIf=\"havePermission$ | async\">\r\n            <mat-icon>dashboard</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab (click)=\"saveConfig($event)\">\r\n            <mat-icon>done</mat-icon>\r\n        </button>\r\n    </div>\r\n    <gridster-item [item]=\"item\" *ngFor=\"let item of grid.items\">\r\n        <div class=\"initializer\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n            <div fxFlex=\"nogrow\"> \r\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n                    <mat-icon>more_horiz</mat-icon>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\">\r\n                    <button mat-menu-item (click)=\"showConfig(item)\">\r\n                        <mat-icon>settings</mat-icon>\r\n                        <span>ØªÙØ¸ÛÙØ§Øª</span>\r\n                    </button>\r\n                    <button mat-menu-item  *ngIf=\"item.type\" (click)=\"removeItem(item)\">\r\n                        <mat-icon>delete</mat-icon>\r\n                        <span>Ø­Ø°Ù</span>\r\n                    </button>\r\n                </mat-menu>\r\n            </div>\r\n        </div>\r\n        <div class=\"widget-content\">\r\n            <div *ngIf=\"!item.valid\" fxFlex=\"100\" class=\"form-container\">\r\n                <h4>ØªÙØ¸ÛÙØ§Øª</h4>\r\n                <mat-form-field fxFlex=\"grow\">\r\n                    <mat-select placeholder=\"Grid Item Type\" [(ngModel)]=\"item.type\" (selectionChange)=\"gridItemTypeChanged(item)\">\r\n                        <mat-option *ngFor=\"let item of gridItemTypes\" [value]=\"item\">\r\n                            {{item}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n        <div *ngIf=\"item.valid\" [ngsDynamicGridItemView]=\"item\"></div>\r\n    </div>\r\n    </gridster-item>\r\n</gridster>\r\n\r\n            <!-- \r\n                <button mat-icon-button (click)=\"removeItem(item)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                </button>\r\n                <button *ngIf=\"item.type\" mat-icon-button (click)=\"showConfig(item)\">\r\n                    <mat-icon>settings</mat-icon>\r\n                </button>\r\n            </div> -->\r\n`,\r\n\tstyles: [`:host{width:100%;height:100vh;display:block;direction:ltr}.initializer{position:absolute;z-index:10;top:5px;left:5px;height:25px}.actions{position:absolute;top:25px;right:25px;z-index:5}.actions button{margin-left:10px}.widget-content{position:relative;height:100%}.form-container{padding:25px;width:100%;direction:rtl}.form-container mat-form-field{width:100%}`]\r\n})\r\nexport class GridComponent implements OnInit {\r\n\t@Output() itemValidateCallback = new EventEmitter();\r\n\t@Output() itemRemovedCallback = new EventEmitter();\r\n\t@Output() itemInitCallback = new EventEmitter();\r\n\t@Output() itemResizeCallback = new EventEmitter();\r\n\t@Output() itemChangeCallback = new EventEmitter();\r\n\t@Output() gridSizeChangedCallback = new EventEmitter();\r\n\t@Output() destroyCallback = new EventEmitter();\r\n\t@Output() initCallback = new EventEmitter();\r\n\r\n\t@Input() oid: string;\r\n\thavePermission$: Observable<boolean>;\r\n\toptions: GridsterConfig;\r\n\tgrid: GridModel;\r\n\tready = false;\r\n\tgridItemTypes: any[string];\r\n\tconstructor(\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate service: GridService,\r\n\t\tprivate configurationService: GridConfigurationService,\r\n\t\tprivate bottomSheet: MatBottomSheet\r\n\t) {\r\n\t\tthis.options = {};\r\n\t\tthis.gridItemTypes = Object.keys(this.configurationService.config$.getValue().types);\r\n\t\tthis.havePermission$ = this.store.select(getFrontendAuthenticationState);\r\n\t}\r\n\r\n\tstatic itemChange(item, itemComponent) {\r\n\t\tconsole.log(\"itemChanged\", item, itemComponent);\r\n\t}\r\n\r\n\tstatic itemResize(item, itemComponent) {\r\n\t\tconsole.log(\"itemResized\", item, itemComponent);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\t// this.items = [ { cols: 2, rows: 1, y: 0, x: 0 }, { cols: 2, rows: 2, y: 0, x: 2 } ];\r\n\r\n\t\tthis.grid = new GridModel({\r\n\t\t\toid: this.oid,\r\n\t\t\tconfig: {}\r\n\t\t});\r\n\t\tthis._get_grid_by_oid_and_update_component();\r\n\t}\r\n\r\n\t_initCallback(item) {\r\n\t\tthis.initCallback.emit(item);\r\n\t}\r\n\r\n\tremoveItem(item) {\r\n\t\tthis.grid.items.splice(this.grid.items.indexOf(item), 1);\r\n\t}\r\n\r\n\taddItem(e) {\r\n\t\te.stopPropagation();\r\n\t\tthis.grid.items.push({} as IGridItemModel<any>);\r\n\t}\r\n\temptyCellClick(event: MouseEvent, item: GridsterItem) {\r\n\t\tconsole.log(\"empty cell click\", event, item);\r\n\t\tthis.grid.items.push(item as any);\r\n\t}\r\n\topenConfig(e) {\r\n\t\te.stopPropagation();\r\n\t\te.preventDefault();\r\n\t\tthis.bottomSheet.open(GridConfigComponent, {\r\n\t\t\tdata: {\r\n\t\t\t\tgrid: this.grid\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tsaveConfig(e) {\r\n\t\te.stopPropagation();\r\n\t\te.stopImmediatePropagation();\r\n\t\te.preventDefault();\r\n\r\n\t\t/**\r\n\t\t * TODO: \r\n\t\t * Ø§Ø­Ø²Ø§Ø± ÙÙÛØª Ø¯Ø± Ø³ÙØª ÙÙØ¯ Ø§ØªØ­Ø§Ù Ø´ÙØ¯\r\n\t\t* Ú©Ø§ÙÙÛÚ¯ Ø¨Ø±Ø§Û Ú¯Ø±ÙØªÙ Ø´ÙØ§Ø³Ù Ú©Ø§Ø±Ø¨Ø±\r\n\t\t */\r\n\t\tthis.store.dispatch(new UpsertGridStartAction(this.grid));\r\n\t}\r\n\tgridItemTypeChanged(item: IGridItemModel<any>) {\r\n\t\tconst bs = this.bottomSheet.open(DynamicGridItemConfigComponent, {\r\n\t\t\tdata: {\r\n\t\t\t\ttype: item.type\r\n\t\t\t}\r\n\t\t});\r\n\t\tbs.afterDismissed().subscribe((data) => {\r\n\t\t\titem.config = bs.instance.config;\r\n\t\t\titem.valid = bs.instance.valid;\r\n\t\t});\r\n\t}\r\n\tshowConfig(item: IGridItemModel<any>) {\r\n\t\tconst bs = this.bottomSheet.open(DynamicGridItemConfigComponent, {\r\n\t\t\tdata: {\r\n\t\t\t\ttype: item.type\r\n\t\t\t}\r\n\t\t});\r\n\t\tbs.afterDismissed().subscribe((data) => {\r\n\t\t\titem.config = bs.instance.config;\r\n\t\t\titem.valid = bs.instance.valid;\r\n\t\t});\r\n\t}\r\n\t_get_grid_by_oid_and_update_component() {\r\n\t\tthis.service.selectById(this.oid).pipe(filter((data) => data != undefined)).subscribe((data) => {\r\n\t\t\tthis.grid = data;\r\n\t\t\tthis.options = { ...this.options, ...data.config };\r\n\t\t\t// this.options.draggable = {\r\n\t\t\t// \tenabled: true\r\n\t\t\t// };\r\n\t\t\t// this.options.emptyCellContextMenuCallback = this.emptyCellClick.bind(this);\r\n\t\t\t// this.options.emptyCellDropCallback = this.emptyCellClick.bind(this);\r\n\t\t\tif (this.options.enableEmptyCellDrag) this.options.emptyCellDragCallback = this.emptyCellClick.bind(this);\r\n\t\t\t// if (this.options.enableEmptyCellClick) this.options.emptyCellClickCallback = this.emptyCellClick.bind(this);\r\n\t\t\tthis.ready = true;\r\n\t\t\t// this.options.api.optionsChanged();\r\n\t\t});\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tComponentRef,\r\n\tComponentFactoryResolver,\r\n\tViewContainerRef,\r\n\tDirective,\r\n\tInput,\r\n\tInject,\r\n\tViewChild\r\n} from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { pluck, filter, switchMap, map, startWith } from \"rxjs/operators\";\r\nimport { GridConfigurationService } from \"../services/grid-configuration.service\";\r\nimport { MAT_BOTTOM_SHEET_DATA } from \"@angular/material\";\r\nimport { IGridItemModel } from \"../models/gird-item.model\";\r\n\r\n@Directive({\r\n\tselector: \"[ngsDynamicGridItemView]\"\r\n})\r\nexport class DynamicGridItemViewDirective implements OnInit {\r\n\t@Input(\"ngsDynamicGridItemView\")\r\n\tset item(item: IGridItemModel<any>) {\r\n\t\tif (!item) return;\r\n\t\tif (!item.valid) return;\r\n\t\tthis._resolve_correct_component_base_on_widget_type(item);\r\n\t}\r\n\tcomponent: ComponentRef<any>;\r\n\tmapTypeToComponent: any;\r\n\tconstructor(\r\n\t\tprivate configurationService: GridConfigurationService,\r\n\t\tprivate resolver: ComponentFactoryResolver,\r\n\t\tprivate container: ViewContainerRef\r\n\t) {\r\n\t\tthis.mapTypeToComponent = this.configurationService.config$.getValue().types;\r\n\t}\r\n\tngOnInit() {}\r\n\t_resolve_correct_component_base_on_widget_type(item: IGridItemModel<any>) {\r\n\t\tdebugger;\r\n\t\tif (!this.mapTypeToComponent[item.type]) {\r\n\t\t\tconst supportedTypes = Object.keys(this.mapTypeToComponent).join(\", \");\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Trying to use an unsupported type (${item.type}).\r\n\t\t  \t\t Supported types: ${supportedTypes}`\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst componentFactory = this.resolver.resolveComponentFactory<any>(\r\n\t\t\tthis.mapTypeToComponent[item.type].viewComponent\r\n\t\t);\r\n\t\tthis.component = this.container.createComponent(componentFactory);\r\n\t\tObject.keys(item.config || {}).forEach((key) => {\r\n\t\t\tthis.component.instance[key] = item.config[key];\r\n\t\t});\r\n\t}\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule,\r\n\tMatSlideToggleModule,\r\n\tMatDividerModule,\r\n\tMatCheckboxModule,\r\n\tMatTableModule,\r\n\tMatBottomSheetModule,\r\n\tMatMenuModule,\r\n\tMatToolbarModule\r\n} from \"@angular/material\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { GridsterModule } from \"angular-gridster2\";\r\n\r\nimport { GridModuleConfig, MODULE_CONFIG_TOKEN } from \"./grid.config\";\r\nimport { GridRoutingModule } from \"./grid-routing.module\";\r\nimport { GetGridApiEffects } from \"./services/api/get-grid/get-grid.effects\";\r\nimport { UpsertGridApiEffects } from \"./services/api/upsert-grid/upsert-grid.effects\";\r\nimport { GetGridsApiEffects } from \"./services/api/get-grids/get-grids.effects\";\r\nimport { GridReducer } from \"./grid.reducer\";\r\nimport { GridDbEffects } from \"./root/grids.effects\";\r\nimport { RootComponent } from \"./root/root.component\";\r\nimport { GridService } from \"./services/grid.service\";\r\nimport { GridConfigurationService } from \"./services/grid-configuration.service\";\r\nimport { GridComponent } from \"./grid/grid.component\";\r\nimport { GridConfigComponent } from \"./grid-config/grid-config.component\";\r\nimport {\r\n\tDynamicGridItremConfigDirective,\r\n\tDynamicGridItemConfigComponent\r\n} from \"./grid-item/dynamic-grid-item-config.directive\";\r\nimport { DynamicGridItemViewDirective } from \"./grid-item/dynamic-grid-item-view.directive\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tRouterModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSelectModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tMatBottomSheetModule,\r\n\t\tMatRadioModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatMenuModule,\r\n\t\tMatToolbarModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tMatDividerModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatTableModule,\r\n\t\tGridsterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tRootComponent,\r\n\t\tGridComponent,\r\n\t\tGridConfigComponent,\r\n\t\tDynamicGridItremConfigDirective,\r\n\t\tDynamicGridItemConfigComponent,\r\n\t\tDynamicGridItemViewDirective\r\n\t],\r\n\tentryComponents: [ GridConfigComponent, DynamicGridItemConfigComponent ],\r\n\texports: [ GridComponent ]\r\n})\r\nexport class NgsGridModule {\r\n\tstatic forRoot(config?: GridModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: NgsGridRootModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config }, GridConfigurationService, GridService ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsGridModule,\r\n\t\tGridRoutingModule,\r\n\t\tStoreModule.forFeature(\"grids\", GridReducer),\r\n\t\tEffectsModule.forFeature([ GridDbEffects, GetGridApiEffects, GetGridsApiEffects, UpsertGridApiEffects ])\r\n\t],\r\n\texports: [ NgsGridModule ]\r\n})\r\nexport class NgsGridRootModule {}\r\n"],"names":["InjectionToken","Component","RouterModule","BehaviorSubject","Injectable","Inject","Store","UpsertGridApiModel","filter","take","combineLatest","switchMap","stringTemplate","map","tap","HttpClient","UserFacadeService","catchError","of","Actions","Effect","fromRoot.Reducer","pluck","Directive","ComponentFactoryResolver","ViewContainerRef","Input","MAT_BOTTOM_SHEET_DATA","ViewChild","FormGroup","FormControl","EventEmitter","getFrontendAuthenticationState","MatBottomSheet","Output","NgModule","CommonModule","MatExpansionModule","MatSnackBarModule","MatIconModule","MatButtonModule","MatCardModule","MatSelectModule","MatInputModule","MatFormFieldModule","MatTabsModule","MatBottomSheetModule","MatRadioModule","FlexLayoutModule","MatMenuModule","MatToolbarModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","MatDividerModule","MatCheckboxModule","MatTableModule","GridsterModule","StoreModule","EffectsModule"],"mappings":"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"}
