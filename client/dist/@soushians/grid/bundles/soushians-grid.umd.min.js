!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/router"),require("rxjs"),require("@ngrx/store"),require("rxjs/operators"),require("@angular/common/http"),require("@soushians/shared"),require("@soushians/user"),require("@ngrx/effects"),require("@angular/material"),require("@angular/forms"),require("@soushians/frontend-authentication"),require("@angular/common"),require("@angular/flex-layout"),require("angular-gridster2")):"function"==typeof define&&define.amd?define("@soushians/grid",["exports","@angular/core","@angular/router","rxjs","@ngrx/store","rxjs/operators","@angular/common/http","@soushians/shared","@soushians/user","@ngrx/effects","@angular/material","@angular/forms","@soushians/frontend-authentication","@angular/common","@angular/flex-layout","angular-gridster2"],e):e((t.soushians=t.soushians||{},t.soushians.grid={}),t.ng.core,t.ng.router,t.rxjs,null,t.rxjs.operators,t.ng.common.http,null,null,null,t.ng.material,t.ng.forms,null,t.ng.common,t.ng["flex-layout"],null)}(this,function(t,r,e,i,n,a,o,s,c,p,u,l,d,f,m,g){"use strict";var y={env:{production:!1,frontend_server:""},endpoints:{upsert:"/api/grid",find:"/api/grid",get:"/api/grid/${model._id}"},types:{}},h=new r.InjectionToken("GridModuleConfig"),v=function(){function t(){}return t.decorators=[{type:r.Component,args:[{selector:"ngs-grid-root",template:"<router-outlet></router-outlet>"}]}],t}(),b=[{path:"grid",component:v,children:[]}],C=e.RouterModule.forChild(b),x=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t};function w(t,e,n,o){var r,i=arguments.length,a=i<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,o);else for(var s=t.length-1;0<=s;s--)(r=t[s])&&(a=(i<3?r(a):3<i?r(e,n,a):r(e,n))||a);return 3<i&&a&&Object.defineProperty(e,n,a),a}function I(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}function _(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var o,r,i=n.call(t),a=[];try{for(;(void 0===e||0<e--)&&!(o=i.next()).done;)a.push(o.value)}catch(s){r={error:s}}finally{try{o&&!o.done&&(n=i["return"])&&n.call(i)}finally{if(r)throw r.error}}return a}var G,F=function(){function t(t,e){this.store=e,this.config$=new i.BehaviorSubject(y),this._config=Object.assign({},y,t),this.config$.next(this._config)}return Object.defineProperty(t.prototype,"config",{get:function(){return this._config},enumerable:!0,configurable:!0}),t.decorators=[{type:r.Injectable}],t.ctorParameters=function(){return[{type:undefined,decorators:[{type:r.Inject,args:[h]}]},{type:n.Store}]},t}();!function(t){var e=function(){function t(e){void 0===e&&(e={});var n=this;Object.keys(e).forEach(function(t){return n[t]=e[t]})}return t.prototype.getRequestBody=function(){return this.grid},t}();t.Request=e;var n=function(){};t.Response=n}(G||(G={}));var M,T=function(t){var e=void 0===t?{config:{},items:[]}:t,n=e._id,o=e.oid,r=e.name,i=e.type,a=e.config,s=e.items;this._id=n,this.oid=o,this.name=r,this.type=i,this.config=a,this.items=s};!function(t){var e=function(){function t(t){void 0===t&&(t={}),this.grid=new T(t)}return t.prototype.getRequestBody=function(){return this.grid},t}();t.Request=e;var n=function(){};t.Response=n}(M||(M={}));var R=function(t){this.payload=t,this.type="[GRID][API][GetGrid] start"},E=function(t){this.payload=t,this.type="[GRID][API][GetGrid] succeed"},k=function(t){this.payload=t,this.type="[GRID][API][GetGrid] failed"},j=function(){function t(t,e,n,o){this.http=t,this.store=e,this.userFacadeService=n,this.configurationService=o,this.userId$=this.userFacadeService.getDisplayName().filter(function(t){return t!=undefined})}return t.prototype.get=function(r){var i=this;return this.configurationService.config$.pipe(a.filter(function(t){return""!==t.endpoints.get}),a.take(1),a.combineLatest(this.userId$),a.switchMap(function(t){var e=_(t,2),n=e[0],o=e[1];return i.http.get(s.stringTemplate(n.env.frontend_server+n.endpoints.get,{_id:r}),{params:{userId:o}})}),a.map(function(t){return t.Result}))},t.prototype.getGrids=function(){var e=this;return this.configurationService.config$.pipe(a.filter(function(t){return""!=t.endpoints.find}),a.switchMap(function(t){return e.http.get(t.env.frontend_server+t.endpoints.find)}),a.map(function(t){return t.Result}))},t.prototype.upsert=function(t){var r=this,i=new M.Request(t);return this.configurationService.config$.pipe(a.filter(function(t){return""!=t.endpoints.upsert}),a.take(1),a.combineLatest(this.userId$),a.switchMap(function(t){var e=_(t,2),n=e[0],o=e[1];return r.http.post(n.env.frontend_server+n.endpoints.upsert,i.getRequestBody(),{params:{userId:o}})}),a.map(function(t){return t.Result}))},t.prototype.selectById=function(e){var n=this,o=new i.BehaviorSubject(undefined);return this.store.select(function(t){return t.grids.db.data}).pipe(a.filter(function(t){return null!=t}),a.map(function(t){return t.find(function(t){return t._id==e})}),a.tap(function(t){null==t&&n.store.dispatch(new R(e))})).subscribe(function(t){return o.next(t)}),o.asObservable()},t.prototype.selectByOid=function(e){var n=this,o=new i.BehaviorSubject(undefined);return this.store.select(function(t){return t.grids.db.data}).pipe(a.filter(function(t){return null!=t}),a.map(function(t){return t.find(function(t){return t._id==e})}),a.tap(function(t){null==t&&n.store.dispatch(new R(e))})).subscribe(function(t){return o.next(t)}),o.asObservable()},t.decorators=[{type:r.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:o.HttpClient},{type:n.Store},{type:c.UserFacadeService},{type:F}]},t.ngInjectableDef=r.defineInjectable({factory:function(){return new t(r.inject(o.HttpClient),r.inject(n.Store),r.inject(c.UserFacadeService),r.inject(F))},token:t,providedIn:"root"}),t}(),D=function(){function t(t,e){var n=this;this.actions$=t,this.service=e,this.start$=this.actions$.ofType("[GRID][API][GetGrid] start").pipe(a.map(function(t){return t.payload}),a.switchMap(function(t){return n.service.get(t)}),a.map(function(t){return new E(t)}),a.catchError(function(t){return i.of(new k(t))}))}return t.decorators=[{type:r.Injectable}],t.ctorParameters=function(){return[{type:p.Actions},{type:j}]},w([p.Effect(),I("design:type",Object)],t.prototype,"start$",void 0),t}(),S=function(t){this.payload=t,this.type="[UPSERT_GRID][API][UpsertGrid] start"},O=function(t){this.payload=t,this.type="[UPSERT_GRID][API][UpsertGrid] succeed"},P=function(t){this.payload=t,this.type="[UPSERT_GRID][API][UpsertGrid] failed"},$=function(){function t(t,e){var n=this;this.actions$=t,this.service=e,this.start$=this.actions$.ofType("[UPSERT_GRID][API][UpsertGrid] start").pipe(a.map(function(t){return t.payload}),a.switchMap(function(t){return n.service.upsert(t)}),a.map(function(t){return new O(t)}),a.catchError(function(t){return i.of(new P(t))}))}return t.decorators=[{type:r.Injectable}],t.ctorParameters=function(){return[{type:p.Actions},{type:j}]},w([p.Effect(),I("design:type",Object)],t.prototype,"start$",void 0),t}(),A=function(t){this.payload=t,this.type="[GET_GRIDS][API][GetGrids] succeed"},L=function(t){this.payload=t,this.type="[GET_GRIDS][API][GetGrids] failed"},N=function(){function t(t,e){var n=this;this.actions$=t,this.service=e,this.start$=this.actions$.ofType("[GET_GRIDS][API][GetGrids] start").pipe(a.switchMap(function(){return n.service.getGrids().pipe(a.map(function(t){return new A(t)}),a.catchError(function(t){return i.of(new L(t))}))}))}return t.decorators=[{type:r.Injectable}],t.ctorParameters=function(){return[{type:p.Actions},{type:j}]},w([p.Effect(),I("design:type",Object)],t.prototype,"start$",void 0),t}(),U="[GRID][DB] UPSERT",q="[GRID][DB] DELETE",B=function(t){this.payload=t,this.type=U},z={data:[]};function V(t,e){var n;switch(void 0===t&&(t=z),e.type){case U:return n=t.data.concat(),e.payload.forEach(function(e){var t=n.findIndex(function(t){return t._id==e._id});-1<t?n.splice(t,1,e):n.push(e)}),x({},t,{data:n});case q:n=Object.assign({},t.data);var o=t.data.findIndex(function(t){return t._id==e.payload._id});return n.splice(o,1),x({},t,{data:n});default:return t}}var H={db:V},W=function(){function t(t){this.actions$=t,this.Upsert$=this.actions$.ofType("[GRID][API][GetGrid] succeed","[UPSERT_GRID][API][UpsertGrid] succeed").pipe(a.pluck("payload"),a.map(function(t){return new B([t])})),this.UpsertMany$=this.actions$.ofType("[GET_GRIDS][API][GetGrids] succeed").pipe(a.pluck("payload"),a.map(function(t){return new B(t)}))}return t.decorators=[{type:r.Injectable}],t.ctorParameters=function(){return[{type:p.Actions}]},w([p.Effect(),I("design:type",Object)],t.prototype,"Upsert$",void 0),w([p.Effect(),I("design:type",Object)],t.prototype,"UpsertMany$",void 0),t}(),K=function(){function t(t,e,n){this.configurationService=t,this.resolver=e,this.container=n,this.mapTypeToComponent=this.configurationService.config$.getValue().types}return Object.defineProperty(t.prototype,"type",{set:function(t){t&&this._resolve_correct_component_base_on_widget_type(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valid",{get:function(){return this.component.instance.valid},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"config",{get:function(){return this.component.instance.config},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype._resolve_correct_component_base_on_widget_type=function(t){if(!this.mapTypeToComponent[t]){var e=Object.keys(this.mapTypeToComponent).join(", ");throw new Error("Trying to use an unsupported type ("+t+").\n\t\t  \t\t Supported types: "+e)}var n=this.resolver.resolveComponentFactory(this.mapTypeToComponent[t].configComponent);this.component=this.container.createComponent(n)},t.decorators=[{type:r.Directive,args:[{selector:"[ngsDynamicGridItemConfig]"}]}],t.ctorParameters=function(){return[{type:F},{type:r.ComponentFactoryResolver},{type:r.ViewContainerRef}]},t.propDecorators={type:[{type:r.Input}]},t}(),J=function(){function t(t){this.data=t}return Object.defineProperty(t.prototype,"config",{get:function(){return this.DynamicWidgetRef.config},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valid",{get:function(){return this.DynamicWidgetRef.valid},enumerable:!0,configurable:!0}),t.decorators=[{type:r.Component,args:[{template:'\n\t<div ngsDynamicGridItemConfig [type]="data.type"></div>\n\t'}]}],t.ctorParameters=function(){return[{type:undefined,decorators:[{type:r.Inject,args:[u.MAT_BOTTOM_SHEET_DATA]}]}]},t.propDecorators={DynamicWidgetRef:[{type:r.ViewChild,args:[K]}]},t}(),Q=function(){function t(t,e){this.store=t,this.data=e,this.grid=this.data.grid,this.oid=this.data.oid,this._init_properties(),this._init_form_group()}return t.prototype.save=function(){var t=x({},this.grid,this.gridFormGroup.value,{config:x({},this.configFormGroup.value)});this.store.dispatch(new S(t))},t.prototype._init_form_group=function(){this.configFormGroup=new l.FormGroup({gridType:new l.FormControl("fit"),compactType:new l.FormControl("none"),displayGrid:new l.FormControl("onDrag&Resize"),enableEmptyCellDrag:new l.FormControl(!0),enableEmptyCellClick:new l.FormControl(!1),enableEmptyCellContextMenu:new l.FormControl(!1),scrollToNewItems:new l.FormControl(!0),margin:new l.FormControl("10"),outerMargin:new l.FormControl(!0),outerMarginTop:new l.FormControl("10"),outerMarginRight:new l.FormControl("10"),outerMarginBottom:new l.FormControl("10"),outerMarginLeft:new l.FormControl("10"),minCols:new l.FormControl(3),maxCols:new l.FormControl(3),draggable:new l.FormGroup({enabled:new l.FormControl,delayStart:new l.FormControl(333)}),resizable:new l.FormGroup({enabled:new l.FormControl})}),this.gridFormGroup=new l.FormGroup({oid:new l.FormControl(this.oid),name:new l.FormControl("")}),this.gridFormGroup.patchValue(this.grid),this.configFormGroup.patchValue(this.grid.config)},t.prototype._init_properties=function(){this.gridTypes=["fit","scrollVertical","scrollHorizontal","fixed","verticalFixed","horizontalFixed"],this.compactType=["none","compactUp","compactLeft","compactUp&Left","compactLeft&Up"],this.displayGridTypes=["always","onDrag&Resize","none"]},t.decorators=[{type:r.Component,args:[{template:'<div fxLayout="row wrap" fxLayoutAlign="center center">\n    <div fxFlex="100" [formGroup]="gridFormGroup">\n        <mat-form-field>\n            <input matInput placeholder="name" formControlName="name">\n        </mat-form-field>\n    </div>\n\n    <div  fxFlex="100" [formGroup]="configFormGroup">\n        <div fxFlex="100" fxLayout="row wrap" fxLayoutGap="25px">\n            <mat-form-field>\n                <mat-select placeholder="Grid Type" formControlName="gridType">\n                    <mat-option *ngFor="let item of gridTypes" [value]="item">\n                        {{item}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-select placeholder="Compact Type" formControlName="compactType">\n                    <mat-option *ngFor="let item of compactType" [value]="item">\n                        {{item}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-select placeholder="Display Grid" formControlName="displayGrid">\n                    <mat-option *ngFor="let item of displayGridTypes" [value]="item">\n                        {{item}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div fxFlex="100" fxLayout="row wrap" fxLayoutGap="25px">\n            <div>\n                <mat-checkbox formControlName="enableEmptyCellDrag">enableEmptyCellDrag</mat-checkbox>\n                \x3c!-- <mat-checkbox formControlName="enableEmptyCellClick">enableEmptyCellClick</mat-checkbox> --\x3e\n            </div>\n            <div [formGroup]="configFormGroup.get(\'draggable\')">\n                <mat-checkbox formControlName="enabled">enable draggable</mat-checkbox>\n            </div>\n            <div [formGroup]="configFormGroup.get(\'resizable\')">\n                <mat-checkbox formControlName="enabled">enable resizable</mat-checkbox>\n            </div>\n        </div>\n        \x3c!-- Margins --\x3e\n        <div fxFlex="100" fxLayout="row wrap" fxLayoutGap="25px">\n            <h3 fxFlex="100">حاشیه</h3>\n            <div fxFlex="100">\n                <mat-checkbox fxFlex formControlName="outerMargin">outerMargin</mat-checkbox>\n            </div>\n            <div fxFlex="100" fxLayout="row wrap" fxLayoutGap="25px">\n                <mat-form-field fxFlex>\n                    <input matInput type="number" placeholder="margin" formControlName="margin" />\n                </mat-form-field>\n                <mat-form-field fxFlex>\n                    <input matInput type="number" placeholder="outerMarginTop" formControlName="outerMarginTop" />\n                </mat-form-field>\n                <mat-form-field fxFlex>\n                    <input matInput type="number" placeholder="outerMarginRight" formControlName="outerMarginRight" />\n                </mat-form-field>\n                <mat-form-field fxFlex>\n                    <input matInput type="number" placeholder="outerMarginBottom" formControlName="outerMarginBottom" />\n                </mat-form-field>\n                <mat-form-field fxFlex>\n                    <input matInput type="number" placeholder="outerMarginLeft" formControlName="outerMarginLeft" />\n                </mat-form-field>\n            </div>\n        </div>\n\n        \x3c!-- Grid Size --\x3e\n        <div fxFlex="100" fxLayout="row wrap" fxLayoutGap="25px">\n            <h3 fxFlex="100">گرید</h3>\n            <mat-form-field fxFlex>\n                <input matInput type="number" placeholder="minCols" formControlName="minCols" />\n            </mat-form-field>\n            <mat-form-field fxFlex>\n                <input matInput type="number" placeholder="maxCols" formControlName="maxCols" />\n            </mat-form-field>\n        </div>\n        <button fxFlex="100" color="primary" mat-raised-button (click)="save()">Save</button>\n    </div>\n</div>'}]}],t.ctorParameters=function(){return[{type:n.Store},{type:undefined,decorators:[{type:r.Inject,args:[u.MAT_BOTTOM_SHEET_DATA]}]}]},t}(),X=function(){function t(t,e,n,o){this.store=t,this.service=e,this.configurationService=n,this.bottomSheet=o,this.itemValidateCallback=new r.EventEmitter,this.itemRemovedCallback=new r.EventEmitter,this.itemInitCallback=new r.EventEmitter,this.itemResizeCallback=new r.EventEmitter,this.itemChangeCallback=new r.EventEmitter,this.gridSizeChangedCallback=new r.EventEmitter,this.destroyCallback=new r.EventEmitter,this.initCallback=new r.EventEmitter,this.ready=!1,this.options={},this.gridItemTypes=Object.keys(this.configurationService.config$.getValue().types),this.havePermission$=this.store.select(d.getFrontendAuthenticationState)}return t.itemChange=function(t,e){console.log("itemChanged",t,e)},t.itemResize=function(t,e){console.log("itemResized",t,e)},t.prototype.ngOnInit=function(){this.grid=new T({oid:this.oid,config:{}}),this._get_grid_by_oid_and_update_component()},t.prototype._initCallback=function(t){this.initCallback.emit(t)},t.prototype.removeItem=function(t){this.grid.items.splice(this.grid.items.indexOf(t),1)},t.prototype.addItem=function(t){t.stopPropagation(),this.grid.items.push({})},t.prototype.emptyCellClick=function(t,e){console.log("empty cell click",t,e),this.grid.items.push(e)},t.prototype.openConfig=function(t){t.stopPropagation(),t.preventDefault(),this.bottomSheet.open(Q,{data:{grid:this.grid}})},t.prototype.saveConfig=function(t){t.stopPropagation(),t.stopImmediatePropagation(),t.preventDefault(),this.store.dispatch(new S(this.grid))},t.prototype.gridItemTypeChanged=function(e){var n=this.bottomSheet.open(J,{data:{type:e.type}});n.afterDismissed().subscribe(function(t){e.config=n.instance.config,e.valid=n.instance.valid})},t.prototype.showConfig=function(e){var n=this.bottomSheet.open(J,{data:{type:e.type}});n.afterDismissed().subscribe(function(t){e.config=n.instance.config,e.valid=n.instance.valid})},t.prototype._get_grid_by_oid_and_update_component=function(){var e=this;this.service.selectById(this.oid).pipe(a.filter(function(t){return t!=undefined})).subscribe(function(t){e.grid=t,e.options=x({},e.options,t.config),e.options.enableEmptyCellDrag&&(e.options.emptyCellDragCallback=e.emptyCellClick.bind(e)),e.ready=!0})},t.decorators=[{type:r.Component,args:[{selector:"ngs-grid",template:'<gridster [options]="options">\n    <div class="actions">\n        <button mat-mini-fab (click)="addItem($event)">\n            <mat-icon>add</mat-icon>\n        </button>\n        <button mat-mini-fab (click)="openConfig($event)" *ngIf="havePermission$ | async">\n            <mat-icon>dashboard</mat-icon>\n        </button>\n        <button mat-mini-fab (click)="saveConfig($event)">\n            <mat-icon>done</mat-icon>\n        </button>\n    </div>\n    <gridster-item [item]="item" *ngFor="let item of grid.items">\n        <div class="initializer" fxLayout="row" fxLayoutAlign="space-between center">\n            <div fxFlex="nogrow">\n                <button mat-icon-button (click)="removeItem(item)">\n                    <mat-icon>delete</mat-icon>\n                </button>\n                <button *ngIf="item.type" mat-icon-button (click)="showConfig(item)">\n                    <mat-icon>settings</mat-icon>\n                </button>\n            </div>\n        </div>\n        <mat-form-field *ngIf="!item.valid"  fxFlex="100">\n            <mat-select placeholder="Grid Item Type" [(ngModel)]="item.type" (selectionChange)="gridItemTypeChanged(item)">\n                <mat-option *ngFor="let item of gridItemTypes" [value]="item">\n                    {{item}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <div *ngIf="item.valid" [ngsDynamicGridItemView]="item"></div>\n    </gridster-item>\n</gridster>',styles:[":host{width:100%;height:100vh;display:block;direction:ltr}.initializer{padding:25px}.actions{position:absolute;top:25px;right:25px;z-index:5}.actions button{margin-left:10px}"]}]}],t.ctorParameters=function(){return[{type:n.Store},{type:j},{type:F},{type:u.MatBottomSheet}]},t.propDecorators={itemValidateCallback:[{type:r.Output}],itemRemovedCallback:[{type:r.Output}],itemInitCallback:[{type:r.Output}],itemResizeCallback:[{type:r.Output}],itemChangeCallback:[{type:r.Output}],gridSizeChangedCallback:[{type:r.Output}],destroyCallback:[{type:r.Output}],initCallback:[{type:r.Output}],oid:[{type:r.Input}]},t}(),Y=function(){function t(t,e,n){this.configurationService=t,this.resolver=e,this.container=n,this.mapTypeToComponent=this.configurationService.config$.getValue().types}return Object.defineProperty(t.prototype,"item",{set:function(t){t&&t.valid&&this._resolve_correct_component_base_on_widget_type(t)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype._resolve_correct_component_base_on_widget_type=function(e){var n=this;if(!this.mapTypeToComponent[e.type]){var t=Object.keys(this.mapTypeToComponent).join(", ");throw new Error("Trying to use an unsupported type ("+e.type+").\n\t\t  \t\t Supported types: "+t)}var o=this.resolver.resolveComponentFactory(this.mapTypeToComponent[e.type].viewComponent);this.component=this.container.createComponent(o),Object.keys(e.config||{}).forEach(function(t){n.component.instance[t]=e.config[t]})},t.decorators=[{type:r.Directive,args:[{selector:"[ngsDynamicGridItemView]"}]}],t.ctorParameters=function(){return[{type:F},{type:r.ComponentFactoryResolver},{type:r.ViewContainerRef}]},t.propDecorators={item:[{type:r.Input,args:["ngsDynamicGridItemView"]}]},t}(),Z=function(){function t(){}return t.forRoot=function(t){return{ngModule:tt,providers:[{provide:h,useValue:t},F,j]}},t.decorators=[{type:r.NgModule,args:[{imports:[f.CommonModule,e.RouterModule,u.MatExpansionModule,u.MatSnackBarModule,u.MatIconModule,u.MatButtonModule,u.MatCardModule,u.MatSelectModule,u.MatInputModule,u.MatFormFieldModule,u.MatTabsModule,u.MatBottomSheetModule,u.MatRadioModule,m.FlexLayoutModule,l.FormsModule,l.ReactiveFormsModule,u.MatSlideToggleModule,u.MatDividerModule,u.MatCheckboxModule,u.MatTableModule,g.GridsterModule],declarations:[v,X,Q,K,J,Y],entryComponents:[Q,J],exports:[X]}]}],t}(),tt=function(){function t(){}return t.decorators=[{type:r.NgModule,args:[{imports:[Z,C,n.StoreModule.forFeature("grids",H),p.EffectsModule.forFeature([W,D,N,$])],exports:[Z]}]}],t}();t.GridModel=T,t.NgsGridModule=Z,t.NgsGridRootModule=tt,t.MODULE_DEFAULT_CONFIG=y,t.MODULE_CONFIG_TOKEN=h,t.ɵg=Q,t.ɵi=J,t.ɵh=K,t.ɵj=Y,t.ɵk=C,t.ɵc=H,t.ɵb=X,t.ɵm=W,t.ɵl=V,t.ɵa=v,t.ɵn=D,t.ɵp=N,t.ɵr=$,t.ɵf=F,t.ɵe=j,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=soushians-grid.umd.min.js.map