!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("@ngrx/store"),require("@angular/router"),require("@angular/forms"),require("@angular/material"),require("@ngrx/effects"),require("@angular/flex-layout"),require("angular-gridster2"),require("rxjs/operators"),require("rxjs"),require("@angular/common/http"),require("@soushians/frontend-authentication"),require("@soushians/user"),require("@soushians/shared")):"function"==typeof define&&define.amd?define("@soushians/grid",["exports","@angular/core","@angular/common","@ngrx/store","@angular/router","@angular/forms","@angular/material","@ngrx/effects","@angular/flex-layout","angular-gridster2","rxjs/operators","rxjs","@angular/common/http","@soushians/frontend-authentication","@soushians/user","@soushians/shared"],e):e(((t=t||self).soushians=t.soushians||{},t.soushians.grid={}),t.ng.core,t.ng.common,t.store,t.ng.router,t.ng.forms,t.ng.material,t.effects,t.ng["flex-layout"],t.angularGridster2,t.rxjs.operators,t.rxjs,t.ng.common.http,t.frontendAuthentication,t.user,t.shared)}(this,(function(t,e,n,r,o,i,a,c,s,p,u,l,d,f,m,g){"use strict";var h=function(){return(h=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};function y(t,e,n,r){var o,i=arguments.length,a=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,r);else for(var c=t.length-1;c>=0;c--)(o=t[c])&&(a=(i<3?o(a):i>3?o(e,n,a):o(e,n))||a);return i>3&&a&&Object.defineProperty(e,n,a),a}function v(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}var b,x={env:{production:!1,frontend_server:""},endpoints:{upsert:"/api/grid",find:"/api/grid",get:"/api/grid/${model._id}",update_item:"/api/grid/item",update_item_access:"/api/grid/item/access"},types:{}},C=new e.InjectionToken("GridModuleConfig"),_=function(){function t(){}return t.decorators=[{type:e.Component,args:[{selector:"ngs-grid-root",template:"<router-outlet></router-outlet>"}]}],t}(),w=[{path:"grid",component:_,children:[]}],F=o.RouterModule.forChild(w),G=function(t){var e=void 0===t?{config:{},items:[]}:t,n=e._id,r=e.oid,o=e.name,i=e.type,a=e.config,c=e.items;this._id=n,this.oid=r,this.name=o,this.type=i,this.config=a,this.items=c};(function(t){var e=function(){function t(t){void 0===t&&(t={}),this.grid=new G(t)}return t.prototype.getRequestBody=function(){return this.grid},t}();t.Request=e;var n=function(){};t.Response=n})(b||(b={}));var I=function(){function t(t,e){this.store=e,this.config$=new l.BehaviorSubject(x),this._config=Object.assign({},x,t),this.config$.next(this._config)}return Object.defineProperty(t.prototype,"config",{get:function(){return this._config},enumerable:!0,configurable:!0}),t.decorators=[{type:e.Injectable}],t.ctorParameters=function(){return[{type:void 0,decorators:[{type:e.Inject,args:[C]}]},{type:r.Store}]},t}();var M=function(t){this.payload=t,this.type="[GRID][API][GetGrid] start"};var T=function(t){this.payload=t,this.type="[GRID][API][GetGrid] succeed"};var E=function(t){this.payload=t,this.type="[GRID][API][GetGrid] failed"};var R=function(){function t(t,e,n,r){this.http=t,this.store=e,this.userFacadeService=n,this.configurationService=r}return t.prototype.get=function(t){var e=this;return this.configurationService.config$.pipe(u.filter((function(t){return""!==t.endpoints.get})),u.take(1),u.skipUntil(this.store.select(f.getFrontendUser)),u.switchMap((function(n){return e.http.get(g.stringTemplate(n.env.frontend_server+n.endpoints.get,{_id:t}),{}).pipe(u.map((function(t){return t.Result})))})))},t.prototype.getGrids=function(){var t=this;return this.configurationService.config$.pipe(u.filter((function(t){return""!=t.endpoints.find})),u.switchMap((function(e){return t.http.get(e.env.frontend_server+e.endpoints.find)})),u.map((function(t){return t.Result})))},t.prototype.update_item=function(t){var e=this;return this.configurationService.config$.pipe(u.filter((function(t){return""!=t.endpoints.update_item})),u.switchMap((function(n){return e.http.patch(n.env.frontend_server+n.endpoints.update_item,t)})),u.map((function(t){return t.Result})))},t.prototype.update_item_access=function(t){var e=this;return this.configurationService.config$.pipe(u.filter((function(t){return""!=t.endpoints.update_item_access})),u.switchMap((function(n){return e.http.patch(n.env.frontend_server+n.endpoints.update_item_access,t)})),u.map((function(t){return t.Result})))},t.prototype.upsert=function(t){var e=this,n=new b.Request(t);return this.configurationService.config$.pipe(u.filter((function(t){return""!=t.endpoints.upsert})),u.take(1),u.switchMap((function(t){return e.http.post(t.env.frontend_server+t.endpoints.upsert,n.getRequestBody(),{})})),u.map((function(t){return t.Result})))},t.prototype.selectById=function(t){var e=this,n=new l.BehaviorSubject(void 0);return this.store.select((function(t){return t.grids.db.data})).pipe(u.filter((function(t){return null!=t})),u.map((function(e){return e.find((function(e){return e._id==t}))})),u.tap((function(n){null==n&&e.store.dispatch(new M(t))}))).subscribe((function(t){return n.next(t)})),n.asObservable()},t.prototype.selectByOid=function(t){var e=this,n=new l.BehaviorSubject(void 0);return this.store.select((function(t){return t.grids.db.data})).pipe(u.filter((function(t){return null!=t})),u.map((function(e){return e.find((function(e){return e._id==t}))})),u.tap((function(n){null==n&&e.store.dispatch(new M(t))}))).subscribe((function(t){return n.next(t)})),n.asObservable()},t.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:d.HttpClient},{type:r.Store},{type:m.UserFacadeService},{type:I}]},t.ngInjectableDef=e.ɵɵdefineInjectable({factory:function(){return new t(e.ɵɵinject(d.HttpClient),e.ɵɵinject(r.Store),e.ɵɵinject(m.UserFacadeService),e.ɵɵinject(I))},token:t,providedIn:"root"}),t}();var k=function(){function t(t,e){var n=this;this.actions$=t,this.service=e,this.start$=this.actions$.pipe(c.ofType("[GRID][API][GetGrid] start"),u.map((function(t){return t.payload})),u.switchMap((function(t){return n.service.get(t)})),u.map((function(t){return new T(t)})),u.catchError((function(t){return l.of(new E(t))})))}return t.decorators=[{type:e.Injectable}],t.ctorParameters=function(){return[{type:c.Actions},{type:R}]},y([c.Effect(),v("design:type",Object)],t.prototype,"start$",void 0),t}();var S=function(t){this.payload=t,this.type="[UPSERT_GRID][API][UpsertGrid] start"};var j=function(t){this.payload=t,this.type="[UPSERT_GRID][API][UpsertGrid] succeed"};var D=function(t){this.payload=t,this.type="[UPSERT_GRID][API][UpsertGrid] failed"};var P=function(){function t(t,e){var n=this;this.actions$=t,this.service=e,this.start$=this.actions$.pipe(c.ofType("[UPSERT_GRID][API][UpsertGrid] start"),u.pluck("payload"),u.switchMap((function(t){return n.service.upsert(t)})),u.map((function(t){return new j(t)})),u.catchError((function(t){return l.of(new D(t))})))}return t.decorators=[{type:e.Injectable}],t.ctorParameters=function(){return[{type:c.Actions},{type:R}]},y([c.Effect(),v("design:type",Object)],t.prototype,"start$",void 0),t}();var O=function(t){this.payload=t,this.type="[GET_GRIDS][API][GetGrids] succeed"};var $=function(t){this.payload=t,this.type="[GET_GRIDS][API][GetGrids] failed"};var L=function(){function t(t,e){var n=this;this.actions$=t,this.service=e,this.start$=this.actions$.pipe(c.ofType("[GET_GRIDS][API][GetGrids] start"),u.switchMap((function(){return n.service.getGrids().pipe(u.map((function(t){return new O(t)})),u.catchError((function(t){return l.of(new $(t))})))})))}return t.decorators=[{type:e.Injectable}],t.ctorParameters=function(){return[{type:c.Actions},{type:R}]},y([c.Effect(),v("design:type",Object)],t.prototype,"start$",void 0),t}();var U={UPSERT:"[GRID][DB] UPSERT",DELETE:"[GRID][DB] DELETE"},A=function(t){this.payload=t,this.type=U.UPSERT};var N={data:[]};function B(t,e){var n;switch(void 0===t&&(t=N),e.type){case U.UPSERT:return n=t.data.concat(),e.payload.forEach((function(t){var e=n.findIndex((function(e){return e._id==t._id}));e>-1?n.splice(e,1,t):n.push(t)})),h({},t,{data:n});case U.DELETE:n=Object.assign({},t.data);var r=t.data.findIndex((function(t){return t._id==e.payload._id}));return n.splice(r,1),h({},t,{data:n});default:return t}}var q={db:B};var z=function(){function t(t){this.actions$=t,this.Upsert$=this.actions$.pipe(c.ofType("[GRID][API][GetGrid] succeed","[UPSERT_GRID][API][UpsertGrid] succeed"),u.pluck("payload"),u.map((function(t){return new A([t])}))),this.UpsertMany$=this.actions$.pipe(c.ofType("[GET_GRIDS][API][GetGrids] succeed"),u.pluck("payload"),u.map((function(t){return new A(t)})))}return t.decorators=[{type:e.Injectable}],t.ctorParameters=function(){return[{type:c.Actions}]},y([c.Effect(),v("design:type",Object)],t.prototype,"Upsert$",void 0),y([c.Effect(),v("design:type",Object)],t.prototype,"UpsertMany$",void 0),t}();var V=function(){function t(t,e,n){this.configurationService=t,this.resolver=e,this.container=n,this.mapTypeToComponent=this.configurationService.config$.getValue().types}return Object.defineProperty(t.prototype,"type",{set:function(t){t&&this._resolve_correct_component_base_on_widget_type(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valid",{get:function(){return this.component.instance.valid},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"config",{get:function(){return this.component.instance.config},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype._resolve_correct_component_base_on_widget_type=function(t){if(!this.mapTypeToComponent[t]){var e=Object.keys(this.mapTypeToComponent).join(", ");throw new Error("Trying to use an unsupported type ("+t+").\n\t\t  \t\t Supported types: "+e)}var n=this.resolver.resolveComponentFactory(this.mapTypeToComponent[t].configComponent);this.component=this.container.createComponent(n)},t.decorators=[{type:e.Directive,args:[{selector:"[ngsDynamicGridItemConfig]"}]}],t.ctorParameters=function(){return[{type:I},{type:e.ComponentFactoryResolver},{type:e.ViewContainerRef}]},t.propDecorators={type:[{type:e.Input}]},t}();var H=function(){function t(t){this.data=t}return Object.defineProperty(t.prototype,"config",{get:function(){return this.DynamicWidgetRef.config},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valid",{get:function(){return this.DynamicWidgetRef.valid},enumerable:!0,configurable:!0}),t.decorators=[{type:e.Component,args:[{template:'\n\t<div ngsDynamicGridItemConfig [type]="data.type"></div>\n\t'}]}],t.ctorParameters=function(){return[{type:void 0,decorators:[{type:e.Inject,args:[a.MAT_BOTTOM_SHEET_DATA]}]}]},t.propDecorators={DynamicWidgetRef:[{type:e.ViewChild,args:[V,{static:!1}]}]},t}();var W=function(){function t(t,e){this.store=t,this.data=e,this.grid=this.data.grid,this.oid=this.data.oid,this._init_properties(),this._init_form_group()}return t.prototype.save=function(){var t=h({},this.grid,this.gridFormGroup.value,{config:h({},this.configFormGroup.value)});this.store.dispatch(new S(t))},t.prototype._init_form_group=function(){this.configFormGroup=new i.FormGroup({gridType:new i.FormControl("fit"),compactType:new i.FormControl("none"),displayGrid:new i.FormControl("onDrag&Resize"),enableEmptyCellDrag:new i.FormControl(!0),enableEmptyCellClick:new i.FormControl(!1),enableEmptyCellContextMenu:new i.FormControl(!1),scrollToNewItems:new i.FormControl(!0),margin:new i.FormControl(10),outerMargin:new i.FormControl(!0),outerMarginTop:new i.FormControl(10),outerMarginRight:new i.FormControl(10),outerMarginBottom:new i.FormControl(10),outerMarginLeft:new i.FormControl(10),minCols:new i.FormControl(3),maxCols:new i.FormControl(3),draggable:new i.FormGroup({enabled:new i.FormControl,delayStart:new i.FormControl(333)}),resizable:new i.FormGroup({enabled:new i.FormControl})}),this.gridFormGroup=new i.FormGroup({oid:new i.FormControl(this.oid),name:new i.FormControl("")}),this.gridFormGroup.patchValue(this.grid),this.configFormGroup.patchValue(this.grid.config)},t.prototype._init_properties=function(){this.gridTypes=["fit","scrollVertical","scrollHorizontal","fixed","verticalFixed","horizontalFixed"],this.compactType=["none","compactUp","compactLeft","compactUp&Left","compactLeft&Up"],this.displayGridTypes=["always","onDrag&Resize","none"]},t.decorators=[{type:e.Component,args:[{template:'<h4> تنظیمات داشبورد</h4>\r\n<div fxLayout="column wrap" fxLayoutGap="15px">\r\n    <div fxFlex="100" fxLayout="row wrap" [formGroup]="gridFormGroup">\r\n        <mat-form-field fxFlex="20">\r\n            <input matInput placeholder="نام" formControlName="name">\r\n        </mat-form-field>\r\n    </div>\r\n    <div fxLayout="column wrap" fxLayoutGap="15px"  fxFlex="100" [formGroup]="configFormGroup">\r\n        <div fxLayout="row wrap" fxLayoutGap="25px">\r\n            <mat-form-field fxFlex="20">\r\n                <mat-select placeholder="نوع قرارگیری گریدها در صفحه" formControlName="gridType">\r\n                    <mat-option *ngFor="let item of gridTypes" [value]="item">\r\n                        {{item}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex="20">\r\n                <mat-select placeholder="نوع فشرده شدن گریدها در صفحه" formControlName="compactType">\r\n                    <mat-option *ngFor="let item of compactType" [value]="item">\r\n                        {{item}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex="20">\r\n                <mat-select placeholder="نشان دادن سلول‌های گرید" formControlName="displayGrid">\r\n                    <mat-option *ngFor="let item of displayGridTypes" [value]="item">\r\n                        {{item}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <div fxFlex="100" fxLayout="row wrap" fxLayoutGap="25px">\r\n            <div fxFlex="20">\r\n                <mat-checkbox formControlName="enableEmptyCellDrag">ایجاد گرید با درگ کردن</mat-checkbox>\r\n                \x3c!-- <mat-checkbox formControlName="enableEmptyCellClick">enableEmptyCellClick</mat-checkbox> --\x3e\r\n            </div>\r\n            <div fxFlex="20" [formGroup]="configFormGroup.get(\'draggable\')">\r\n                <mat-checkbox formControlName="enabled">قابلیت جابجایی گریدها</mat-checkbox>\r\n            </div>\r\n            <div fxFlex="20" [formGroup]="configFormGroup.get(\'resizable\')">\r\n                <mat-checkbox formControlName="enabled">قابلیت تغییر سایز گریدها</mat-checkbox>\r\n            </div>\r\n        </div>\r\n        \x3c!-- Margins --\x3e\r\n        <div fxFlex="100" fxLayout="column wrap" fxLayoutGap="25px">\r\n            <h4 fxFlex="100">حاشیه:</h4>\r\n            <div fxFlex fxLayout="column" fxLayoutGap="25px">\r\n                <mat-checkbox fxFlex formControlName="outerMargin">امکان تنظیم فاصله گریدها</mat-checkbox>\r\n            </div>\r\n            <div fxFlex="100"  fxLayout="row wrap" fxLayoutGap="25px">\r\n                <mat-form-field fxFlex>\r\n                    <input matInput type="number" placeholder="فاصله گریدها از هم" formControlName="margin" />\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex>\r\n                    <input matInput type="number" placeholder="فاصله گریدها ار بالا داشبورد" formControlName="outerMarginTop" />\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex>\r\n                    <input matInput type="number" placeholder="فاصله گریدها از راست داشبورد" formControlName="outerMarginRight" />\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex>\r\n                    <input matInput type="number" placeholder="فاصله گریدها از پایین داشبورد" formControlName="outerMarginBottom" />\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex>\r\n                    <input matInput type="number" placeholder="فاصله گریدها از چپ داشبورد" formControlName="outerMarginLeft" />\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        \x3c!-- Grid Size --\x3e\r\n        <div fxFlex="100" fxLayout="row wrap" fxLayoutGap="25px">\r\n            <h4 fxFlex="100">تعداد ستون‌ها:</h4>\r\n            <mat-form-field fxFlex="18">\r\n                <input matInput type="number" placeholder="کمترین ستون" formControlName="minCols" />\r\n            </mat-form-field>\r\n            <mat-form-field fxFlex="18">\r\n                <input matInput type="number" placeholder="بیشترین ستون" formControlName="maxCols" />\r\n            </mat-form-field>\r\n        </div> \r\n        <div fxFlex="20" fxLayoutAlign="flex-end center" fxLayout="row wrap" fxLayoutGap="25px">\r\n         <button color="primary" mat-raised-button (click)="save()">ذخیره</button>\r\n    </div>\r\n</div>\r\n</div>'}]}],t.ctorParameters=function(){return[{type:r.Store},{type:void 0,decorators:[{type:e.Inject,args:[a.MAT_BOTTOM_SHEET_DATA]}]}]},t}();var K=function(){function t(t,n,r,o,i){var a=this;this.store=t,this.service=n,this.userFacadeService=r,this.configurationService=o,this.bottomSheet=i,this.itemValidateCallback=new e.EventEmitter,this.itemRemovedCallback=new e.EventEmitter,this.itemInitCallback=new e.EventEmitter,this.itemResizeCallback=new e.EventEmitter,this.itemChangeCallback=new e.EventEmitter,this.gridSizeChangedCallback=new e.EventEmitter,this.destroyCallback=new e.EventEmitter,this.initCallback=new e.EventEmitter,this.ready=!1,this.options={},this.userFacadeService.getInfo().pipe(u.filter((function(t){return null!=t.CurrentSession})),u.map((function(t){return t.CurrentSession.Username}))).subscribe((function(t){a.username=t})),this.gridItemTypes=Object.keys(this.configurationService.config$.getValue().types),this.havePermission$=this.store.select(m.getAccountInfo).pipe(u.map((function(t){return![t,t._id,a.grid,a.grid.owner].some((function(t){return!t}))&&t._id==a.grid.owner})))}return t.itemChange=function(t,e){console.log("itemChanged",t,e)},t.itemResize=function(t,e){console.log("itemResized",t,e)},t.prototype.ngOnInit=function(){this.grid=new G({oid:this.oid,config:{}}),this._get_grid_by_oid_and_update_component()},t.prototype._initCallback=function(t){this.initCallback.emit(t)},t.prototype.removeItem=function(t){this.grid.items.splice(this.grid.items.indexOf(t),1)},t.prototype.make_public=function(t,e){t.access=e.checked?"public":"private",this.service.update_item_access(t).subscribe((function(t){}))},t.prototype.addItem=function(t){t.stopPropagation(),this.grid.items.push({})},t.prototype.emptyCellClick=function(t,e){console.log("empty cell click",t,e),this.grid.items.push(e)},t.prototype.openConfig=function(t){t.stopPropagation(),t.preventDefault(),this.bottomSheet.open(W,{data:{grid:this.grid}})},t.prototype.saveConfig=function(t){t.stopPropagation(),t.stopImmediatePropagation(),t.preventDefault(),this.store.dispatch(new S(this.grid))},t.prototype.gridItemTypeChanged=function(t){var e=this.bottomSheet.open(H,{data:{type:t.type}});e.afterDismissed().subscribe((function(n){t.config=e.instance.config,t.valid=e.instance.valid}))},t.prototype.showConfig=function(t){var e=this.bottomSheet.open(H,{data:{type:t.type}});e.afterDismissed().subscribe((function(n){t.config=e.instance.config,t.valid=e.instance.valid}))},t.prototype.goToEdit=function(){},t.prototype._get_grid_by_oid_and_update_component=function(){var t=this;this.service.selectById(this.oid).pipe(u.filter((function(t){return null!=t}))).subscribe((function(e){t.grid=e,e.config.outerMarginBottom=+e.config.outerMarginBottom,e.config.outerMarginRight=+e.config.outerMarginRight,t.options=h({},t.options,e.config),t.options.enableEmptyCellDrag&&(t.options.emptyCellDragCallback=t.emptyCellClick.bind(t)),t.ready=!0}))},t.decorators=[{type:e.Component,args:[{selector:"ngs-grid",template:'<gridster [options]="options">\r\n    <div class="actions" >\r\n        <button mat-mini-fab (click)="addItem($event)">\r\n            <mat-icon>add</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab (click)="openConfig($event)" *ngIf="havePermission$ | async">\r\n            <mat-icon>dashboard</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab (click)="saveConfig($event)">\r\n            <mat-icon>done</mat-icon>\r\n        </button>\r\n    </div>\r\n    <gridster-item [item]="item" *ngFor="let item of grid.items">\r\n        <div class="initializer" fxLayout="row" fxLayoutAlign="space-between center">\r\n            <div fxFlex="nogrow">\r\n                <button mat-icon-button [matMenuTriggerFor]="menu">\r\n                    <mat-icon>more_horiz</mat-icon>\r\n                </button>\r\n                <mat-menu #menu="matMenu" class="rtl">\r\n                    <mat-checkbox *ngIf="grid.owner == username" labelPosition="before" [checked]="item.access==\'public\'"\r\n                        (change)="make_public(item,$event)">عمومی</mat-checkbox>\r\n                    <button mat-menu-item class="rtl" (click)="goToEdit()">\r\n                        <mat-icon>edit</mat-icon>\r\n                        <span>ویرایش افزونه</span>\r\n                    </button>\r\n                    \x3c!-- <button mat-menu-item class="rtl" (click)="showConfig(item)">\r\n                        <mat-icon>settings</mat-icon>\r\n                        <span>تنظیمات</span>\r\n                    </button> --\x3e\r\n                    <button mat-menu-item class="rtl" (click)="removeItem(item)">\r\n                        <mat-icon>delete</mat-icon>\r\n                        <span>حذف</span>\r\n                    </button>\r\n                </mat-menu>\r\n            </div>\r\n        </div>\r\n        <div class="widget-content">\r\n            <div *ngIf="!item.valid" fxFlex="100" class="form-container">\r\n                <h4>تنظیمات</h4>\r\n                <mat-form-field fxFlex="grow">\r\n                    <mat-select placeholder="Grid Item Type" [(ngModel)]="item.type" (selectionChange)="gridItemTypeChanged(item)">\r\n                        <mat-option *ngFor="let item of gridItemTypes" [value]="item">\r\n                            {{item}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div *ngIf="item.valid" #test [ngsDynamicGridItemView]="item"></div>\r\n        </div>\r\n    </gridster-item>\r\n</gridster>',styles:[":host{width:100%;min-height:calc(100vh - 205px);display:-ms-grid;display:grid;direction:ltr}.initializer{position:absolute;z-index:10;top:5px;left:5px;height:25px}.actions{position:absolute;top:25px;right:25px;z-index:5}.actions button{margin-left:10px}.widget-content{position:relative;height:100%}.form-container{padding:25px;width:100%}[dir=rtl] .form-container{direction:rtl}.form-container mat-form-field{width:100%}.rtl{direction:rtl}"]}]}],t.ctorParameters=function(){return[{type:r.Store},{type:R},{type:m.UserFacadeService},{type:I},{type:a.MatBottomSheet}]},t.propDecorators={itemValidateCallback:[{type:e.Output}],itemRemovedCallback:[{type:e.Output}],itemInitCallback:[{type:e.Output}],itemResizeCallback:[{type:e.Output}],itemChangeCallback:[{type:e.Output}],gridSizeChangedCallback:[{type:e.Output}],destroyCallback:[{type:e.Output}],initCallback:[{type:e.Output}],oid:[{type:e.Input}]},t}();var J=function(){function t(t,e,n){this.configurationService=t,this.resolver=e,this.container=n,this.mapTypeToComponent=this.configurationService.config$.getValue().types}return Object.defineProperty(t.prototype,"item",{set:function(t){t&&t.valid&&this._resolve_correct_component_base_on_widget_type(t)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype._resolve_correct_component_base_on_widget_type=function(t){var e=this;if(!this.mapTypeToComponent[t.type]){var n=Object.keys(this.mapTypeToComponent).join(", ");throw new Error("Trying to use an unsupported type ("+t.type+").\n\t\t  \t\t Supported types: "+n)}var r=this.resolver.resolveComponentFactory(this.mapTypeToComponent[t.type].viewComponent);this.component=this.container.createComponent(r),Object.keys(t.config||{}).forEach((function(n){e.component.instance[n]=t.config[n]}))},t.decorators=[{type:e.Directive,args:[{selector:"[ngsDynamicGridItemView]"}]}],t.ctorParameters=function(){return[{type:I},{type:e.ComponentFactoryResolver},{type:e.ViewContainerRef}]},t.propDecorators={item:[{type:e.Input,args:["ngsDynamicGridItemView"]}]},t}();var Q=function(){function t(){}return t.forRoot=function(t){return{ngModule:X,providers:[{provide:C,useValue:t},I,R]}},t.decorators=[{type:e.NgModule,args:[{imports:[n.CommonModule,o.RouterModule,a.MatExpansionModule,a.MatSnackBarModule,a.MatIconModule,a.MatButtonModule,a.MatCardModule,a.MatSelectModule,a.MatInputModule,a.MatFormFieldModule,a.MatTabsModule,a.MatBottomSheetModule,a.MatRadioModule,s.FlexLayoutModule,a.MatMenuModule,a.MatToolbarModule,i.FormsModule,i.ReactiveFormsModule,a.MatSlideToggleModule,a.MatDividerModule,a.MatCheckboxModule,a.MatTableModule,p.GridsterModule],declarations:[_,K,W,V,H,J],entryComponents:[W,H],exports:[K]}]}],t}(),X=function(){function t(){window.___starter=window.___starter||{},window.___starter.grid="8.0.10"}return t.decorators=[{type:e.NgModule,args:[{imports:[Q,F,r.StoreModule.forFeature("grids",q),c.EffectsModule.forFeature([z,k,L,P])],exports:[Q]}]}],t.ctorParameters=function(){return[]},t}();t.GridModel=G,t.MODULE_CONFIG_TOKEN=C,t.MODULE_DEFAULT_CONFIG=x,t.NgsGridModule=Q,t.NgsGridRootModule=X,t.ɵa=_,t.ɵb=K,t.ɵc=q,t.ɵe=R,t.ɵf=I,t.ɵg=W,t.ɵh=V,t.ɵi=H,t.ɵj=J,t.ɵk=F,t.ɵl=B,t.ɵm=z,t.ɵn=k,t.ɵp=L,t.ɵr=P,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=soushians-grid.umd.min.js.map