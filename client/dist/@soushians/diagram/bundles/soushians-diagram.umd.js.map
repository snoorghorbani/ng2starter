{"version":3,"file":"soushians-diagram.umd.js.map","sources":["ng://@soushians/diagram/lib/diagram.config.ts",null,"ng://@soushians/diagram/lib/models/get-diagrams-api.model.ts","ng://@soushians/diagram/lib/actions/diagrams.actions.ts","ng://@soushians/diagram/lib/reducers/diagrams.reducer.ts","ng://@soushians/diagram/lib/models/edit-diagram-api.model.ts","ng://@soushians/diagram/lib/actions/edit-diagram.actions.ts","ng://@soushians/diagram/lib/reducers/edit-diagram.reducer.ts","ng://@soushians/diagram/lib/reducers/parent-guard.reducer.ts","ng://@soushians/diagram/lib/reducers/index.ts","ng://@soushians/diagram/lib/dumb-components/server-status-diagram/server-status-diagram.component.ts","ng://@soushians/diagram/lib/dumb-components/diagram-partial-config-edit/diagram-partial-config-edit.component.ts","ng://@soushians/diagram/lib/dumb-components/pie-diagram-partial-config/pie-diagram-partial-config.component.ts","ng://@soushians/diagram/lib/dumb-components/booleano-widget-partial-config/booleano-widget-partial-config.component.ts","ng://@soushians/diagram/lib/dumb-components/numeric-widget-partial-config/numeric-widget-partial-config.component.ts","ng://@soushians/diagram/lib/dumb-components/linear-diagram-partial-config/linear-diagram-partial-config.component.ts","ng://@soushians/diagram/lib/dumb-components/server-connecting-time-diagram/server-connecting-time-diagram.component.ts","ng://@soushians/diagram/lib/services/diagram-configuration.service.ts","ng://@soushians/diagram/lib/models/add-diagram-api.model.ts","ng://@soushians/diagram/lib/services/diagram.service.ts","ng://@soushians/diagram/lib/dumb-components/numeric-edit-diagram/numeric-edit-diagram.component.ts","ng://@soushians/diagram/lib/dumb-components/numeric-diagram/numeric-diagram.component.ts","ng://@soushians/diagram/lib/smart-components/diagram-module-container/diagram-module-container.component.ts","ng://@soushians/diagram/lib/smart-components/data-mapper/data-mapper.component.ts","ng://@soushians/diagram/lib/models/diagram.model.ts","ng://@soushians/diagram/lib/actions/add-diagram.actions.ts","ng://@soushians/diagram/lib/smart-components/add-diagram/add-diagram.component.ts","ng://@soushians/diagram/lib/smart-components/diagram-view/diagram-view.component.ts","ng://@soushians/diagram/lib/smart-components/diagrams/diagrams.component.ts","ng://@soushians/diagram/lib/smart-components/edit-diagram/edit-diagram.component.ts","ng://@soushians/diagram/lib/smart-components/diagram/diagram.component.ts","ng://@soushians/diagram/lib/smart-components/dynamic-component-selector/dynamic-component-selector.component.ts","ng://@soushians/diagram/lib/smart-components/dynamic-config-component-selector/dynamic-config-component-selector.component.ts","ng://@soushians/diagram/lib/effects/diagrams.effects.ts","ng://@soushians/diagram/lib/effects/add-diagram.effects.ts","ng://@soushians/diagram/lib/diagram-routing.module.ts","ng://@soushians/diagram/lib/smart-components/diagram-selector/diagram-selector.component.ts","ng://@soushians/diagram/lib/diagram.module.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface DiagramModuleConfig {\r\n\tendpoints?: {};\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t};\r\n}\r\n\r\nexport const MODULE_DEFAULT_CONFIG: DiagramModuleConfig = {\r\n\tendpoints: {},\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"frontend/server/did/not/set\"\r\n\t}\r\n};\r\n\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<DiagramModuleConfig>(\"DiagramModuleConfig\");\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { DiagramModel } from \"./diagram.model\";\r\n\r\nexport namespace GetDiagramsApiModel {\r\n\texport class Request {\r\n\t\tdiagram: string;\r\n\r\n\t\tconstructor(initValue: GetDiagramsApiModel.Request = {} as GetDiagramsApiModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\t//static get formGroup() {\r\n\t\t// return new FormGroup({\r\n\t\t//   diagram: new FormControl('', [Validators.minLength(8), Validators.required])\r\n\t\t// })\r\n\t\t//}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: DiagramModel[];\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetDiagramsApiModel } from \"../models/get-diagrams-api.model\";\r\n\r\nexport enum DiagramsActionTypes {\r\n\tGET_DIAGRAM = \"[DIAGRAM] GET_DIAGRAM\",\r\n\tGET_DIAGRAM_START = \"[DIAGRAM] GET_DIAGRAM_START\",\r\n\tGET_DIAGRAM_SUCCEED = \"[DIAGRAM] GET_DIAGRAM_SUCCEED\",\r\n\tGET_DIAGRAM_FAILED = \"[DIAGRAM] GET_DIAGRAM_FAILED\"\r\n}\r\n\r\nexport class GetDiagrams implements Action {\r\n\treadonly type = DiagramsActionTypes.GET_DIAGRAM;\r\n}\r\nexport class GetDiagramsStart implements Action {\r\n\treadonly type = DiagramsActionTypes.GET_DIAGRAM_START;\r\n}\r\nexport class GetDiagramsSucceed implements Action {\r\n\treadonly type = DiagramsActionTypes.GET_DIAGRAM_SUCCEED;\r\n\tconstructor(public payload: GetDiagramsApiModel.Response) {}\r\n}\r\nexport class GetDiagramsFailed implements Action {\r\n\treadonly type = DiagramsActionTypes.GET_DIAGRAM_FAILED;\r\n}\r\n\r\nexport type DiagramsAction = GetDiagrams | GetDiagramsStart | GetDiagramsSucceed | GetDiagramsFailed;\r\n","import { GetDiagramsApiModel } from \"../models/get-diagrams-api.model\";\r\nimport { DiagramsActionTypes, DiagramsAction } from \"../actions/diagrams.actions\";\r\n\r\nconsole.log(GetDiagramsApiModel);\r\n\r\nexport interface State {\r\n\tloaded: boolean;\r\n\tdiagram: GetDiagramsApiModel.Response;\r\n}\r\nexport const initialState: State = {\r\n\tloaded: false,\r\n\tdiagram: {\r\n\t\tResult: []\r\n\t}\r\n};\r\n\r\nexport function diagramReducer(state = initialState, action: DiagramsAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase DiagramsActionTypes.GET_DIAGRAM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloaded: true\r\n\t\t\t\t// diagram: action.payload,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase DiagramsActionTypes.GET_DIAGRAM_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloaded: true\r\n\t\t\t\t//  diagram: action.payload,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const DiagramInfo = (state: State) => state.diagram;\r\n","import { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\n\r\nimport { DiagramModel } from \"./diagram.model\";\r\n\r\nexport namespace EditDiagramApiModel {\r\n\texport class Request {\r\n\t\tconstructor(params: Request) {}\r\n\t\tgetRequestQueryParams() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t\t// TODO:\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tName: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tIsActive: new FormControl(\"true\", [ Validators.required ]),\r\n\t\t\t\tRoute: new FormControl(\"\", [ Validators.required ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: DiagramModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { EditDiagramApiModel } from \"../models/edit-diagram-api.model\";\r\n\r\nexport enum EditDiagramActionTypes {\r\n\tEDIT_DIAGRAM = \"[DIAGRAM][EDIT] EDIT_DIAGRAM\",\r\n\tEDIT_DIAGRAM_START = \"[DIAGRAM][EDIT] EDIT_DIAGRAM_START\",\r\n\tEDIT_DIAGRAM_SUCCEED = \"[DIAGRAM][EDIT] EDIT_DIAGRAM_SUCCEED\",\r\n\tEDIT_DIAGRAM_FAILED = \"[DIAGRAM][EDIT] EDIT_DIAGRAM_FAILED\"\r\n}\r\n\r\nexport class EditDiagramAction implements Action {\r\n\treadonly type = EditDiagramActionTypes.EDIT_DIAGRAM;\r\n\tconstructor(public payload: EditDiagramApiModel.Response) {}\r\n}\r\nexport class EditDiagramActionStart implements Action {\r\n\treadonly type = EditDiagramActionTypes.EDIT_DIAGRAM_START;\r\n\tconstructor(public payload: EditDiagramApiModel.Response) {}\r\n}\r\nexport class EditDiagramActionSucceed implements Action {\r\n\treadonly type = EditDiagramActionTypes.EDIT_DIAGRAM_SUCCEED;\r\n\tconstructor(public payload: EditDiagramApiModel.Response) {}\r\n}\r\nexport class EditDiagramActionFailed implements Action {\r\n\treadonly type = EditDiagramActionTypes.EDIT_DIAGRAM_FAILED;\r\n}\r\n\r\nexport type EditDiagramActions =\r\n\t| EditDiagramAction\r\n\t| EditDiagramActionStart\r\n\t| EditDiagramActionSucceed\r\n\t| EditDiagramActionFailed;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\n\r\nimport { EditDiagramApiModel } from \"../models/edit-diagram-api.model\";\r\nimport { EditDiagramActionTypes, EditDiagramActions } from \"../actions/edit-diagram.actions\";\r\n\r\nconsole.log(EditDiagramApiModel);\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n\tdata: EditDiagramApiModel.Response;\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\",\r\n\tdata: { Result: {} } as EditDiagramApiModel.Response\r\n};\r\nexport function Reducer(state = initialState, action: EditDiagramActions): State {\r\n\tswitch (action.type) {\r\n\t\tcase EditDiagramActionTypes.EDIT_DIAGRAM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"dirty\",\r\n\t\t\t\tdata: new EditDiagramApiModel.Response()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditDiagramActionTypes.EDIT_DIAGRAM_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"pending\",\r\n\t\t\t\tdata: new EditDiagramApiModel.Response()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditDiagramActionTypes.EDIT_DIAGRAM_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"succeed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditDiagramActionTypes.EDIT_DIAGRAM_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const EditDiagramInfo = (state: State) => state.data;\r\n","import { ParentGuardAction } from \"../actions/parent-guard.actions\";\r\n\r\nexport interface State {\r\n\troute: string;\r\n\tresult: boolean;\r\n}\r\nexport const initialState: State = {\r\n\troute: \"\",\r\n\tresult: false\r\n};\r\n\r\nexport function ParentGuardReducer(state = initialState, action: ParentGuardAction): State {\r\n\tswitch (action.type) {\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getParentRoutingGuard = (state: State) => state;\r\n","import { createSelector, createFeatureSelector, MemoizedSelector } from \"@ngrx/store\";\r\n\r\nimport * as DiagramsReducer from \"./diagrams.reducer\";\r\nimport * as fromEditDiagram from \"./edit-diagram.reducer\";\r\nimport * as parentGuardReducer from \"./parent-guard.reducer\";\r\n\r\nexport interface DiagramState {\r\n\tdiagrams: DiagramsReducer.State;\r\n\teditDiagram: fromEditDiagram.State;\r\n\tparentGuard: parentGuardReducer.State;\r\n}\r\n\r\nexport const DiagramReducers = {\r\n\tdiagrams: DiagramsReducer.diagramReducer,\r\n\teditDiagram: fromEditDiagram.Reducer,\r\n\tparentGuard: parentGuardReducer.ParentGuardReducer\r\n};\r\n\r\nexport interface FeatureState {\r\n\t\"diagram\": DiagramState;\r\n}\r\n\r\n//#region selectors\r\n\r\nexport const selectFeatureState = createFeatureSelector<DiagramState>(\"diagram\");\r\n\r\n// export const getDiagramInformationStatus = createSelector(\r\n//   selectFeatureState,\r\n//   (state: DiagramState) => state.diagram\r\n// );\r\n\r\n//#region edit diagram\r\nexport const selectEditDiagramState = createSelector(selectFeatureState, (state: DiagramState) => state.editDiagram);\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject, Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: \"diagram-server-status\",\r\n\ttemplate: `<div *ngIf=\"dataLoaded | async\">\r\n  <!-- <mat-icon [ngClass]=\"dataStatus$ ? 'connected' : 'disconnected'\">\r\n    fiber_manual_record\r\n  </mat-icon> -->\r\n  <!-- <span *ngIf=\"dataStatus$\">{{data.Widget.booleano.SuccessMessage}}</span>\r\n  <span *ngIf=\"!dataStatus$\">{{data.Widget.booleano.FailureMessage}}</span> -->\r\n</div>`,\r\n\tstyles: [`.disconnected{color:#ba3030}.connected{color:#30ae1c}.numeric{font-size:2.4em;line-height:1.8}.numeric.title{font-family:iran-sans-bold,Tahoma;font-size:1.1em}`]\r\n})\r\nexport class ServerStatusDiagramComponent implements OnInit {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\t}\r\n\r\n\ttimeChange(e) {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source._id, this.data.Source.Interval)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger\r\n\t\t//     this.chart.load({\r\n\t\t//       columns: this.diagramService.extract_columns_from_data(data, this.data.Chart.ColumnMappings)\r\n\t\t//     });\r\n\t\t//   })\r\n\t}\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"diagram-partial-config-edit\",\r\n\ttemplate: `<form [formGroup]=\"formGroup\" fxLayout='column'>\r\n  <div>\r\n    <mat-checkbox (change)=\"configChanged()\" formControlName=\"Legend\" fxFlexFill>ÙÙØ§ÛØ´ ØªÙØ¶ÛØ­Ø§Øª</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)=\"configChanged()\" formControlName=\"Zoom\" fxFlexFill>Ø¨Ø²Ø±Ú¯ÙÙØ§ÛÛ</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)=\"configChanged()\" formControlName=\"Subchart\" fxFlexFill>ÙÙØ§ÛØ´ Ø¨Ø²Ø±Ú¯ÙÙØ§ÛÛ Ø¯Ø± Ø²ÛØ± ÙÙÙØ¯Ø§Ø±</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)=\"configChanged()\" formControlName=\"Tooltip\" fxFlexFill>ÙÙØ§ÛØ´ ØªÙØ¶ÛØ­Ø§Øª Ø¨Ù ØµÙØ±Øª Ú¯Ø±ÙÙÛ</mat-checkbox>\r\n  </div>\r\n</form>`,\r\n\tstyles: [`:host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}`]\r\n})\r\nexport class DiagramPartialConfigEditComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\tdiagramService: DiagramService;\r\n\tformGroup: FormGroup;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n\tconfigChanged() {}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"pie-diagram-partial-config\",\r\n\ttemplate: `<div *ngIf=\"dataLoaded | async\" class=\"diagram-box\">\r\n  <form [formGroup]=\"formGroup\" fxLayout='column'>\r\n    <div>\r\n      <mat-checkbox (change)=\"configChanged()\" formControlName=\"Legend\" fxFlexFill>ÙÙØ§ÛØ´ ØªÙØ¶ÛØ­Ø§Øª</mat-checkbox>\r\n    </div>\r\n    <div>\r\n      <mat-checkbox (change)=\"configChanged()\" formControlName=\"IsActive\" fxFlexFill>ÙØ¶Ø¹ÛØª</mat-checkbox>\r\n    </div>\r\n    <div>\r\n      <mat-checkbox (change)=\"configChanged()\" formControlName=\"Legend\" fxFlexFill>ÙÙØ§ÛØ´ ØªÙØ¶ÛØ­Ø§Øª</mat-checkbox>\r\n    </div>\r\n    <div>\r\n      <mat-checkbox (change)=\"configChanged()\" formControlName=\"IsActive\" fxFlexFill>ÙØ¶Ø¹ÛØª</mat-checkbox>\r\n    </div>\r\n  </form>\r\n  <form [formGroup]=\"donutFormGroup\">\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Ø¹ÙÙØ§Ù\" formControlName=\"title\">\r\n    </mat-form-field>\r\n  </form>\r\n</div>`,\r\n\tstyles: [`:host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}`]\r\n})\r\nexport class PieDiagramPartialConfigComponent implements OnInit, OnDestroy {\r\n\t@Output() ConfigChanged = new EventEmitter();\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_dataLoaded;\r\n\t@Input()\r\n\tset formGroup(data: FormGroup) {\r\n\t\tif (!data) return;\r\n\t\tthis._dataLoaded = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget formGroup() {\r\n\t\treturn this._dataLoaded;\r\n\t}\r\n\tdonutFormGroup: FormGroup;\r\n\tdiagramService: DiagramService;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t\tthis.donutFormGroup = this.formGroup.controls.donut as FormGroup;\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n\tconfigChanged() {\r\n\t\tthis.ConfigChanged.emit();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"booleano-widget-partial-config\",\r\n\ttemplate: `<div *ngIf=\"dataLoaded | async\" class=\"diagram-box\">\r\n  <form [formGroup]=\"booleanoFormGroup\">\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Ø¹ÙÙØ§Ù\" formControlName=\"SuccessMessage\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Ø¹ÙÙØ§Ù\" formControlName=\"FailureMessage\">\r\n    </mat-form-field>\r\n  </form>\r\n</div>`,\r\n\tstyles: [`:host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}`]\r\n})\r\nexport class BooleanoWidgetPartialConfigComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_dataLoaded;\r\n\t@Input()\r\n\tset formGroup(data: FormGroup) {\r\n\t\tif (!data) return;\r\n\t\tthis._dataLoaded = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget formGroup() {\r\n\t\treturn this._dataLoaded;\r\n\t}\r\n\tbooleanoFormGroup: FormGroup;\r\n\tdiagramService: DiagramService;\r\n\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t\tthis.booleanoFormGroup = this.formGroup.controls.booleano as FormGroup;\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"numeric-widget-partial-config\",\r\n\ttemplate: `<div *ngIf=\"dataLoaded | async\" class=\"diagram-box\">\r\n  <form [formGroup]=\"donutFormGroup\">\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Ø¹ÙÙØ§Ù\" formControlName=\"title\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Ø¹ÙÙØ§Ù\" formControlName=\"title\">\r\n    </mat-form-field>\r\n  </form>\r\n</div>`,\r\n\tstyles: [`:host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}`]\r\n})\r\nexport class NumericWidgetPartialConfigComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_dataLoaded;\r\n\t@Input()\r\n\tset formGroup(data: FormGroup) {\r\n\t\tif (!data) return;\r\n\t\tthis._dataLoaded = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget formGroup() {\r\n\t\treturn this._dataLoaded;\r\n\t}\r\n\tdonutFormGroup: FormGroup;\r\n\tdiagramService: DiagramService;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t\tthis.donutFormGroup = this.formGroup.controls.donut as FormGroup;\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"linear-diagram-partial-config\",\r\n\ttemplate: `<form [formGroup]=\"formGroup\" fxLayout='column'>\r\n  <div>\r\n    <mat-checkbox (change)=\"configChanged()\" formControlName=\"Legend\" fxFlexFill>ÙÙØ§ÛØ´ ØªÙØ¶ÛØ­Ø§Øª</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)=\"configChanged()\" formControlName=\"Zoom\" fxFlexFill>Ø¨Ø²Ø±Ú¯ÙÙØ§ÛÛ</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)=\"configChanged()\" formControlName=\"Subchart\" fxFlexFill>ÙÙØ§ÛØ´ Ø¨Ø²Ø±Ú¯ÙÙØ§ÛÛ Ø¯Ø± Ø²ÛØ± ÙÙÙØ¯Ø§Ø±</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)=\"configChanged()\" formControlName=\"Tooltip\" fxFlexFill>ÙÙØ§ÛØ´ ØªÙØ¶ÛØ­Ø§Øª Ø¨Ù ØµÙØ±Øª Ú¯Ø±ÙÙÛ</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)=\"configChanged()\" formControlName=\"Flow\" fxFlexFill>Flow</mat-checkbox>\r\n  </div>\r\n</form>`,\r\n\tstyles: [`:host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}`]\r\n})\r\nexport class LinearDiagramPartialConfigComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\t@Output() ConfigChanged = new EventEmitter();\r\n\tdiagramService: DiagramService;\r\n\tformGroup: FormGroup;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n\tconfigChanged() {\r\n\t\tthis.ConfigChanged.emit();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: \"diagram-server-connecting-time\",\r\n\ttemplate: `<div *ngIf=\"dataLoaded | async\">\r\n  <div fxLayoutAlign=\"center center\" class=\"numeric title\">{{data.Description}}</div>\r\n  <!-- <div fxLayoutAlign=\"center center\" class=\"numeric\">{{time | timeCounter}}</div> -->\r\n  <div [id]=\"'diagram_' + data._id\"></div>\r\n</div>`,\r\n\tstyles: [`.numeric{font-size:2.4em;line-height:1.8}.numeric.title{font-family:iran-sans-bold,Tahoma;font-size:1.1em}`]\r\n})\r\nexport class ServerConnectingTimeDiagramComponent implements OnInit {\r\n\t@Input() time: number = 0;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\t\tsetInterval(() => {\r\n\t\t\tthis.time = this.time + 1;\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\ttimeChange(e) {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route, this.data.Source.Sync)\r\n\t\t//         .subscribe(data => {\r\n\t\t//                 this.chart.load({\r\n\t\t//                         columns: this.diagramService.extract_columns_from_data(data, this.data.Chart.ColumnMappings)\r\n\t\t//                 });\r\n\t\t//         })\r\n\t}\r\n}\r\n","import { Injectable, Inject } from \"@angular/core\";\r\n\r\nimport { MODULE_CONFIG_TOKEN, DiagramModuleConfig, MODULE_DEFAULT_CONFIG } from \"../diagram.config\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class DiagramConfigurationService {\r\n\tprivate _config: DiagramModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) config) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, config);\r\n\t}\r\n}\r\n","import { FormGroup, FormControl, Validators, FormArray } from \"@angular/forms\";\r\n\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\n\r\nimport { DiagramModel } from \"./diagram.model\";\r\nimport { SourceModel } from \"./source.model\";\r\n\r\nexport namespace AddDiagramApiModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\t_id: string;\r\n\t\tName: string;\r\n\t\tIsActive: Boolean;\r\n\t\tType: string;\r\n\t\tTypes: { [columnLabel: string]: string };\r\n\t\tLegend: Boolean;\r\n\t\tSubchart: Boolean;\r\n\t\tZoom: Boolean;\r\n\t\tTooltip: Boolean;\r\n\t\tRoute: string;\r\n\t\tSync: number;\r\n\t\tColors: string[];\r\n\t\tColumnMappings: { NamePath: string; ValuePath: string }[];\r\n\t\tFlow: string;\r\n\t\tcolumns: any[];\r\n\t\tCols: number;\r\n\t\tRows: number;\r\n\t\tTextColor: String;\r\n\t\tBackgroundColor: string;\r\n\t\tbooleano: any;\r\n\t\tSource: SourceModel;\r\n\t\tGroups: string[];\r\n\t\tconstructor(initValue: AddDiagramApiModel.Request = {} as AddDiagramApiModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {\r\n\t\t\t\t_id: this._id,\r\n\t\t\t\tName: this.Name,\r\n\t\t\t\tIsActive: this.IsActive,\r\n\t\t\t\tSource: this.Source,\r\n\t\t\t\tType: this.Type,\r\n\t\t\t\tGroups: this.Groups,\r\n\t\t\t\tWidget: {\r\n\t\t\t\t\tbooleano: this.booleano\r\n\t\t\t\t},\r\n\t\t\t\tChart: {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\ttype: this.Type,\r\n\t\t\t\t\t\tcolumns: this.columns,\r\n\t\t\t\t\t\tcolors: this.Colors,\r\n\t\t\t\t\t\ttypes: this.Types\r\n\t\t\t\t\t},\r\n\t\t\t\t\tColumnMappings: this.ColumnMappings,\r\n\t\t\t\t\tFlow: this.Flow,\r\n\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\tshow: this.Legend\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsubchart: {\r\n\t\t\t\t\t\tshow: this.Subchart\r\n\t\t\t\t\t},\r\n\t\t\t\t\tzoom: {\r\n\t\t\t\t\t\tenabled: this.Zoom\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttooltip: {\r\n\t\t\t\t\t\tgrouped: this.Tooltip\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tBox: {\r\n\t\t\t\t\tCols: this.Cols,\r\n\t\t\t\t\tRows: this.Rows,\r\n\t\t\t\t\tTextColor: this.TextColor,\r\n\t\t\t\t\tBackgroundColor: this.BackgroundColor\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\t_id: new FormControl(\"\", []),\r\n\t\t\t\tName: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tSync: new FormControl(0, [ Validators.required ]),\r\n\t\t\t\tIsActive: new FormControl(\"true\", [ Validators.required ]),\r\n\t\t\t\tType: new FormControl(\"pie\", [ Validators.required ]),\r\n\t\t\t\tGroups: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tLegend: new FormControl(\"true\", [ Validators.required ]),\r\n\t\t\t\tSubchart: new FormControl(\"false\", [ Validators.required ]),\r\n\t\t\t\tZoom: new FormControl(\"false\", [ Validators.required ]),\r\n\t\t\t\tTooltip: new FormControl(\"false\", [ Validators.required ]),\r\n\t\t\t\tRoute: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tSource: new FormControl({}, [ Validators.required ]),\r\n\t\t\t\tcolumns: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tCols: new FormControl(1, [ Validators.required ]),\r\n\t\t\t\tRows: new FormControl(1, [ Validators.required ]),\r\n\t\t\t\tTextColor: new FormControl(\"#000000\", [ Validators.required ]),\r\n\t\t\t\tBackgroundColor: new FormControl(\"#ffffff\", [ Validators.required ]),\r\n\t\t\t\tColors: new FormGroup({}),\r\n\t\t\t\tTypes: new FormGroup({}),\r\n\t\t\t\tColumnMappings: new FormArray([]),\r\n\t\t\t\tFlow: new FormControl(true),\r\n\t\t\t\tdonut: new FormGroup({\r\n\t\t\t\t\ttitle: new FormControl(\"Default Title\")\r\n\t\t\t\t}),\r\n\t\t\t\tbooleano: new FormGroup({\r\n\t\t\t\t\tSuccessMessage: new FormControl(\"SuccessMessage\"),\r\n\t\t\t\t\tFailureMessage: new FormControl(\"FailureMessage\")\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\texport class Response {\r\n\t\tResult: DiagramModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subscription } from 'rxjs/Rx';\r\nimport { Store } from '@ngrx/store';\r\ndeclare var c3: any;\r\n\r\nimport { DiagramConfigurationService } from './diagram-configuration.service';\r\nimport { FeatureState } from '../reducers';\r\nimport { GetDiagramsApiModel } from '../models/get-diagrams-api.model';\r\nimport { SourceModel } from '../models/source.model';\r\nimport { AddDiagramApiModel } from '../models/add-diagram-api.model';\r\nimport { DiagramModuleConfig } from '../diagram.config';\r\n\r\ndeclare var _: any;\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class DiagramService {\r\n\tconfig: DiagramModuleConfig;\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<FeatureState>,\r\n\t\tprivate configurationService: DiagramConfigurationService\r\n\t) {\r\n\t\tthis.config = this.configurationService.config;\r\n\t}\r\n\r\n\tgetDiagrams(): Observable<GetDiagramsApiModel.Response> {\r\n\t\treturn this.http\r\n\t\t\t.get<GetDiagramsApiModel.Response>(this.config.env.frontend_server + '/api/diagram')\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetSources(): Observable<SourceModel[]> {\r\n\t\treturn this.http\r\n\t\t\t.get(this.config.env.frontend_server + '/api/source')\r\n\t\t\t.map((response) => (response as any).Result)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetGroups(): Observable<string[]> {\r\n\t\treturn this.http\r\n\t\t\t.get(this.config.env.frontend_server + '/api/diagram/groups')\r\n\t\t\t.map((response) => (response as any).Result)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetDiagram(id: string): Observable<any> {\r\n\t\tif (!id) debugger;\r\n\t\treturn this.http\r\n\t\t\t.get(this.config.env.frontend_server + `/api/diagram/${id}`)\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\taddDiagram(data: any): Observable<AddDiagramApiModel.Response> {\r\n\t\tvar model = new AddDiagramApiModel.Request(data);\r\n\t\treturn this.http\r\n\t\t\t.post<AddDiagramApiModel.Response>(this.config.env.frontend_server + '/api/diagram', model.getRequestBody())\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tupdateDiagram(body: any): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.put(this.config.env.frontend_server + '/api/diagram', body)\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tdeleteDiagram(id: string): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.delete(`${this.config.env.frontend_server}/api/diagram/${id}`)\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetData(source: SourceModel, time: number = 0, once: Boolean = false): Observable<any> {\r\n\t\tif (once && time !== 0) {\r\n\t\t\treturn this.http\r\n\t\t\t\t.get(`${this.config.env.frontend_server}/api/data`, {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tsourceId: source._id,\r\n\t\t\t\t\t\ttime: this.getFloorTime(source.Interval, time).toString()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.map((res: any) => res.Result);\r\n\t\t} else if (source.Interval == 0) {\r\n\t\t\treturn this.http\r\n\t\t\t\t.get(`${this.config.env.frontend_server}/api/data`, {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tsourceId: source._id,\r\n\t\t\t\t\t\ttime: null\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.map((res: any) => res.Result);\r\n\t\t} else {\r\n\t\t\ttime = time || Date.now();\r\n\t\t\treturn Observable.timer(0, source.Interval).switchMap((i) =>\r\n\t\t\t\tthis.http\r\n\t\t\t\t\t.get(`${this.config.env.frontend_server}/api/data`, {\r\n\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\tsourceId: source._id,\r\n\t\t\t\t\t\t\ttime: this.getFloorTime(source.Interval, time).toString()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.map((res: any) => res.Result)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\textract_columns_from_data(data: any, columnsMappings) {\r\n\t\tlet res = [];\r\n\r\n\t\tcolumnsMappings.forEach((item) => {\r\n\t\t\tvar ValueData = _.getValue(data, item.ValuePath);\r\n\r\n\t\t\tif (!item.NamePath) {\r\n\t\t\t\treturn res.push([ item.ValuePath.split('.').pop() ].concat(ValueData));\r\n\t\t\t}\r\n\t\t\tvar NameData = _.getValue(data, item.NamePath);\r\n\r\n\t\t\tif (_.is.array(NameData)) {\r\n\t\t\t\treturn (res = res.concat(NameData.map((item, i) => [ item ].concat(ValueData[i]))));\r\n\t\t\t} else {\r\n\t\t\t\treturn res.push([ NameData ].concat(ValueData));\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn res;\r\n\t}\r\n\tget_data_report(data: any) {\r\n\t\treturn _.report(data);\r\n\t}\r\n\tget_last_node_of_data(data: any) {\r\n\t\treturn (_.report(data) as any[]).filter((item) => item.isLastNode);\r\n\t}\r\n\tbuildChartConfig(columns) {\r\n\t\treturn {\r\n\t\t\tdata: {\r\n\t\t\t\tcolumns\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tshow: true\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t// TODO: implement interface of c3 config\r\n\tcharts = {};\r\n\tgenerateDiagram(config: any, id: string, route: string, sync: number): Subscription {\r\n\t\tthis.charts[id] = c3.generate({\r\n\t\t\t...config,\r\n\t\t\tbindto: `#diagram_${id}`\r\n\t\t});\r\n\r\n\t\treturn this.getData({} as SourceModel, sync).subscribe((data) => {\r\n\t\t\tthis.charts[id].load({\r\n\t\t\t\tcolumns: this.extract_columns_from_data(data.Data, config.ColumnMappings)\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tgetFloorTime(precision = 60 * 1000, time: number = 0) {\r\n\t\treturn Math.floor((time || Date.now()) / precision);\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"numeric-edit-diagram\",\r\n\ttemplate: `<mat-card *ngIf=\"dataLoaded | async\" class=\"diagram-box\">\r\n  <mat-card-header>\r\n    <mat-card-title fxLayoutAlign=\"space-between center\">\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n  </mat-card-content>\r\n</mat-card>`,\r\n\tstyles: [`:host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}`]\r\n})\r\nexport class NumericEditDiagramComponent implements OnInit {\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\tconstructor(private injector: Injector, private diagramService: DiagramService) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\tthis.diagramService.getData(this.data.Source).subscribe(data => {\r\n\t\t\tdebugger;\r\n\t\t});\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"diagram-numeric\",\r\n\ttemplate: `<div *ngIf=\"dataLoaded | async\">\r\n  <!-- <div fxLayoutAlign=\"center center\" class=\"numeric\">{{data.Source.Data | json}}</div> -->\r\n  <div fxLayoutAlign=\"center center\" class=\"numeric\">{{counter}}</div>\r\n  <div [id]=\"'diagram_' + data._id\"></div>\r\n</div>`,\r\n\tstyles: [`:host{width:100%}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}.mat-card{padding:0}`]\r\n})\r\nexport class NumericDiagramComponent implements OnInit, OnDestroy {\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\tcounter: number;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\tdataSubscribtion: Subscription;\r\n\tconstructor(private injector: Injector, private diagramService: DiagramService) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\t\tthis.counter = 0;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.dataSubscribtion = this.diagramService.getData(this.data.Source).subscribe(data => {\r\n\t\t\tlet counter = this.diagramService.extract_columns_from_data(data.Data, this.data.Chart.ColumnMappings);\r\n\t\t\tthis.counter = counter[0][1];\r\n\t\t});\r\n\t}\r\n\tngOnDestroy() {\r\n\t\tthis.dataSubscribtion.unsubscribe();\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n// import { UserModel } from 'app/models/authentication';\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n// import * as appReducer from 'app/reducers';\r\n\r\n@Component({\r\n\tselector: \"diagram-module-container\",\r\n\ttemplate: `<div fxflex=\"100\" fxLayout=\"column\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n`\r\n})\r\nexport class DiagramModuleContainerComponent implements OnInit {\r\n\tconstructor(private service: DiagramService) {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport * as FeatureReducer from \"../../reducers\";\r\n\r\ndeclare var _: any;\r\n\r\n@Component({\r\n\tselector: \"data-mapper\",\r\n\ttemplate: `<div fxLayout=\"row\">\r\n    <div fxFlex=\"grow\">\r\n        <b>\r\n            Key\r\n        </b>\r\n    </div>\r\n    <div fxFlex=\"nogrow\">\r\n        <b>\r\n            Type\r\n        </b>\r\n    </div>\r\n</div>\r\n<div *ngFor=\"let item of dataReport\" [class]=\"'depts_' + item.depts\" fxLayout=\"row\">\r\n    <div fxFlex=\"grow\">\r\n        {{item.name}}\r\n    </div>\r\n    <div fxFlex=\"nogrow\">\r\n        {{item.type}}\r\n    </div>\r\n</div>\r\n`,\r\n\tstyles: [`mat-radio-button{width:100%;display:block}div.depts_2{margin-right:25px}div.depts_3{margin-right:50px}`]\r\n})\r\nexport class DataMapperComponent implements OnInit {\r\n\t@Input() destination: string;\r\n\t_data: any;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tif (!data) return;\r\n\t\tthis.dataReport = _.report(data);\r\n\t\tthis._data = data;\r\n\t}\r\n\tdataReport: any[] = [];\r\n\tconstructor(private diagramService: DiagramService, private store: Store<FeatureReducer.FeatureState>) {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { SourceModel } from \"./source.model\";\r\n\r\nexport class DiagramModel {\r\n\t_id: string;\r\n\tName: string;\r\n\tIsActive: boolean;\r\n\tDescription: string;\r\n\tGroups: string[];\r\n\tBox: {\r\n\t\tNumberOfColumns: number;\r\n\t\tOrder: number;\r\n\t\tBackgroundColor: string;\r\n\t};\r\n\tSource: SourceModel;\r\n\tWidget: {\r\n\t\t\"booleano\": {\r\n\t\t\t\"SuccessMessage\": string;\r\n\t\t\t\"FailureMessage\": string;\r\n\t\t};\r\n\t};\r\n\r\n\tChart: {\r\n\t\tdata: {\r\n\t\t\ttype: \"pie\" | \"linear\" | \"scatter\" | \"bar\" | \"line\";\r\n\t\t\ttypes: { [key: string]: string };\r\n\t\t\tcolumns: any[];\r\n\t\t\tcolors: any[];\r\n\t\t};\r\n\t\tFlow: boolean;\r\n\t\tColumnMappings: {\r\n\t\t\tNamePath: string;\r\n\t\t\tValuePath: string;\r\n\t\t}[];\r\n\t\tlegend: {\r\n\t\t\tshow: boolean;\r\n\t\t};\r\n\t\tsubchart: {\r\n\t\t\tshow: boolean;\r\n\t\t};\r\n\t\tzoom: {\r\n\t\t\tenabled: boolean;\r\n\t\t};\r\n\t\ttooltip: {\r\n\t\t\tgrouped: boolean;\r\n\t\t};\r\n\t};\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { AddDiagramApiModel } from \"../models/add-diagram-api.model\";\r\n\r\nexport enum AddDiagramActionTypes {\r\n\tADD_DIAGRAM = \"[DIAGRAM][ADD] ADD_DIAGRAM\",\r\n\tADD_DIAGRAM_START = \"[DIAGRAM][ADD] ADD_DIAGRAM_START\",\r\n\tADD_DIAGRAM_SUCCEED = \"[DIAGRAM][ADD] ADD_DIAGRAM_SUCCEED\",\r\n\tDIAGRAM_CONFIG_CHANGED = \"[DIAGRAM][ADD] DIAGRAM_CONFIG_CHANGED\",\r\n\tADD_DIAGRAM_FAILED = \"[DIAGRAM][ADD] ADD_DIAGRAM_FAILED\",\r\n\tSTRUCTURE_DEFINITION_START = \"[DIAGRAM][ADD] STRUCTURE_DEFINITION_START\",\r\n\tHAVE_ENDPOINT = \"[DIAGRAM][ADD] HAVE_STRUCTURE\",\r\n\tDATA_LOADED = \"[DIAGRAM][ADD] DATA_LOADED\",\r\n\tSTRUCTURE_DEFINITION_END = \"[DIAGRAM][ADD] STRUCTURE_DEFINITION_END\",\r\n\tCOLUMNS_MAPPING_CHANGED = \"[DIAGRAM][ADD] COLUMNS_MAPPING_CHANGED\",\r\n\tDATA_CALCULATED = \"[DIAGRAM][ADD] DATA_CALCULATED\",\r\n\tCOLUMN_ADDED = \"[DIAGRAM][ADD] COLUMN_ADDED\",\r\n\tGENERATE_DIAGRAM = \"[DIAGRAM][ADD] GENERATE_DIAGRAM\"\r\n}\r\n\r\nexport class AddDiagramAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.ADD_DIAGRAM;\r\n\tconstructor(public payload: AddDiagramApiModel.Response) {}\r\n}\r\nexport class AddDiagramActionStart implements Action {\r\n\treadonly type = AddDiagramActionTypes.ADD_DIAGRAM_START;\r\n\tconstructor(public payload: AddDiagramApiModel.Response) {}\r\n}\r\nexport class AddDiagramActionSucceed implements Action {\r\n\treadonly type = AddDiagramActionTypes.ADD_DIAGRAM_SUCCEED;\r\n\tconstructor(public payload: AddDiagramApiModel.Response) {}\r\n}\r\nexport class AddDiagramActionFailed implements Action {\r\n\treadonly type = AddDiagramActionTypes.ADD_DIAGRAM_FAILED;\r\n}\r\nexport class DiagramConfigChangedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.DIAGRAM_CONFIG_CHANGED;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class HaveEndpointAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.HAVE_ENDPOINT;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class DataLoadedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.DATA_LOADED;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class StructureDefinitionStartAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.STRUCTURE_DEFINITION_START;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class StructureDefinitionFinishedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.STRUCTURE_DEFINITION_END;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class ColumnsMappingChangedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.COLUMNS_MAPPING_CHANGED;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class DataCalculatedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.DATA_CALCULATED;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class GenerateDiagramAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.GENERATE_DIAGRAM;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport class ColumnAdded implements Action {\r\n\treadonly type = AddDiagramActionTypes.COLUMN_ADDED;\r\n}\r\n\r\nexport type AddDiagramActions =\r\n\t| AddDiagramAction\r\n\t| AddDiagramActionStart\r\n\t| AddDiagramActionSucceed\r\n\t| AddDiagramActionFailed\r\n\t| HaveEndpointAction\r\n\t| DataLoadedAction\r\n\t| StructureDefinitionStartAction\r\n\t| StructureDefinitionFinishedAction\r\n\t| ColumnsMappingChangedAction\r\n\t| DataCalculatedAction\r\n\t| GenerateDiagramAction\r\n\t| DiagramConfigChangedAction;\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder, AbstractControl } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Route, ActivatedRoute } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { publish } from \"rxjs/operator/publish\";\r\nimport { Effect } from \"@ngrx/effects\";\r\ndeclare var c3: any;\r\n\r\nimport { addDiagramReducer } from \"../../reducers/add-diagram.reducer\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\nimport { FeatureState } from \"../../reducers\";\r\nimport { AddDiagramApiModel } from \"../../models/add-diagram-api.model\";\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { SourceModel } from \"../../models/source.model\";\r\nimport {\r\n\tHaveEndpointAction,\r\n\tColumnsMappingChangedAction,\r\n\tDiagramConfigChangedAction,\r\n\tAddDiagramAction\r\n} from \"../../actions/add-diagram.actions\";\r\n\r\n@Component({\r\n\tselector: \"diagram-add\",\r\n\ttemplate: `<div fxLayout=\"column\" fxFlex=\"100\">\r\n  <div fxLayout=\"row\" fxLayout.lt-md=\"column\">\r\n    <mat-card fxFlex=\"60\">\r\n      <form [formGroup]=\"formGroup\" fxLayout='column'>\r\n        <mat-card-header>\r\n          <mat-card-title>Ø§ÙØ²ÙØ¯Ù ÙÙÙØ¯Ø§Ø± Ø¬Ø¯ÛØ¯</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"Ø¹ÙÙØ§Ù ÙÙÙØ¯Ø§Ø±\" formControlName=\"Name\">\r\n          </mat-form-field>\r\n          <mat-form-field fxFlexFill>\r\n            <mat-select placeholder=\"ÙØ§Ù ÙØ³ÛØ±\" formControlName=\"Source\" (change)=\"routeEntered($event)\">\r\n              <mat-option *ngFor=\"let item of sources | async\" [value]=\"item\">\r\n                {{item.Endpoint}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field fxFlexFill>\r\n            <input matInput placeholder=\"sync time\" formControlName=\"Sync\">\r\n          </mat-form-field>\r\n          <div>\r\n            <mat-radio-group (change)=\"typeChanged()\" formControlName=\"Type\" fxFlexFill>\r\n              <label>ÙÙØ¹ ÙÙÙØ¯Ø§Ø± :</label>\r\n              <mat-radio-button (change)=\"typeChanged()\" *ngFor=\"let item of diagramTypes\" [value]=\"item\" class=\"form-element-margin\">\r\n                {{item}}\r\n              </mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n          <mat-form-field>\r\n            <mat-select placeholder=\"Groups\" formControlName=\"Groups\" multiple>\r\n              <mat-select-trigger>\r\n                {{formGroup.controls.Groups.value ? formGroup.controls.Groups.value[0] : ''}}\r\n                <span *ngIf=\"formGroup.controls.Groups.value?.length > 1\">\r\n                  (+{{formGroup.controls.Groups.value.length - 1}} others)\r\n                </span>\r\n              </mat-select-trigger>\r\n              <mat-option *ngFor=\"let item of groups | async\" [value]=\"item\">{{item}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <div>\r\n            <mat-checkbox (change)=\"configChanged()\" formControlName=\"IsActive\" fxFlexFill>ÙØ¶Ø¹ÛØª</mat-checkbox>\r\n          </div>\r\n          <dynamic-config-component-selector (ConfigChanged)=\"configChanged()\" [data]=\"diagramPartialConfig\"></dynamic-config-component-selector>\r\n        </mat-card-content>\r\n      </form>\r\n    </mat-card>\r\n    <dynamic-component-selector id=\"modify-diagram\" fxFlex=\"40\" [data]=\"diagramModel\"></dynamic-component-selector>\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" fxLayout.lt-md=\"column\">\r\n    <mat-card fxFlex=\"25\">\r\n      <mat-card-header>\r\n        <mat-card-title> Ø³Ø§Ø®ØªØ§Ø± Ø¯ÛØªØ§ </mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"item-margin\">\r\n          <data-mapper destination=\"value\" [data]=\"data\"></data-mapper>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card fxLayout=\"column\" fxFlex=\"25\">\r\n      <mat-card-header>\r\n        <mat-card-title>ÙÚ¯Ø§Ø´Øª Ø¯Ø§Ø¯Ù</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div fxLayout=\"column\" fxLayoutGap=\"5px\">\r\n          <div *ngFor=\"let column of columnsMappings; let i=index\" fxFlex=\"100\" fxLayout=\"column\">\r\n            <div fxLayout=\"column\">\r\n              <div [formGroup]=\"columnsMappings[i]\" fxLayout=\"row\" fxLayout.xs=\"column\">\r\n                <mat-form-field fxFlex=\"50\" fxFlex.xs=\"100\">\r\n                  <mat-select placeholder=\"ÙØ§Ù ÙØ³ÛØ±\" formControlName=\"NamePath\">\r\n                    <mat-option>--</mat-option>\r\n                    <mat-option *ngFor=\"let item of pathOptions\" [value]=\"item.path\" [class]=\"'mat-option depth_' + item.depts\">\r\n                      <!-- <mat-option *ngFor=\"let item of pathOptions\" [value]=\"item.path\" [class]=\"'mat-option depth_' + item.depts\" [disabled]=\"!item.isLastNode\"> -->\r\n                      {{item.path}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex=\"50\" fxFlex.xs=\"100\">\r\n                  <mat-select placeholder=\"ÙÙØ¯Ø§Ø± ÙØ³ÛØ±\" formControlName=\"ValuePath\">\r\n                    <mat-option>--</mat-option>\r\n                    <!-- <mat-option *ngFor=\"let item of pathOptions\" [value]=\"item.path\" [class]=\"'mat-option depth_' + item.depts\" [disabled]=\"!item.isLastNode\"> -->\r\n                    <mat-option *ngFor=\"let item of pathOptions\" [value]=\"item.path\" [class]=\"'mat-option depth_' + item.depts\">\r\n                      {{item.path}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <button (click)=\"removeColumn(i)\" fxFlex mat-button color=\"primary\" type=\"button\">Ù¾Ø§Ú© Ú©Ø±Ø¯Ù</button>\r\n              </div>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button (click)=\"addColumn()\" fxFlex mat-raised-button color=\"primary\" type=\"button\">Ø§ÙØ²ÙØ¯Ù Ø³ØªÙÙ</button>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <mat-card fxFlex=\"25\">\r\n      <mat-card-header>\r\n        <mat-card-title>ÙØªØ§ÛØ¬ Ø¯Ø§Ø¯Ù ÙØ§</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"item-margin\">\r\n          <div class=\"list-item\" *ngFor=\"let item of formGroup.controls.columns.value; let i=index\" fxLayoutAlign=\"space-between center\">\r\n            <span>{{item[0]}} : {{item[1]}}</span>\r\n            <span [formGroup]=\"formGroup.controls.Colors\" *ngIf=\"$any(formGroup.controls.Colors).controls[item[0]]\">\r\n              <input placeholder=\"Ø±ÙÚ¯ ÙÙÙØ¯Ø§Ø±\" (change)=\"configChanged()\" [formControlName]=\"item[0]\" type=\"color\">\r\n            </span>\r\n            <mat-form-field [formGroup]=\"formGroup.controls.Types\" *ngIf=\"$any(formGroup.controls.Types).controls[item[0]]\">\r\n              <!-- <input placeholder=\"tipo\" (change)=\"configChanged()\" > -->\r\n              <mat-select placeholder=\"tipo\" [formControlName]=\"item[0]\">\r\n                <mat-option>--</mat-option>\r\n                <mat-option *ngFor=\"let item of diagramTypes\" [value]=\"item\">\r\n                  {{item}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <mat-card fxLayout=\"column\" fxFlex=\"25\">\r\n      <mat-card-header>\r\n        <mat-card-title>ØªÙØ¸ÛÙØ§Øª Ø¸Ø§ÙØ±Û</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content [formGroup]=\"formGroup\">\r\n        <mat-form-field>\r\n          <input matInput placeholder=\"ØªØ¹Ø¯Ø§Ø¯ Ø³Ø·Ø±\" formControlName=\"Cols\">\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <input matInput placeholder=\"ØªØ¹Ø¯Ø§Ø¯ Ø³ØªÙÙ\" formControlName=\"Rows\">\r\n        </mat-form-field>\r\n        <div>\r\n          <label fxFlex=\"50\">Ø±ÙÚ¯ ÙØªÙ :</label>\r\n          <span>\r\n            <input (change)=\"configChanged()\" formControlName=\"TextColor\" type=\"color\">\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <label fxFlex=\"50\">Ø±ÙÚ¯ Ù¾Ø³ Ø²ÙÛÙÙ :</label>\r\n          <span>\r\n            <input formControlName=\"BackgroundColor\" type=\"color\">\r\n          </span>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  <div>\r\n    <mat-card fxLayoutAlign=\"end center\" fxLayout=\"row\" fxFlex=\"100\">\r\n      <mat-card-content>\r\n        <button (click)=\"add($event)\" fxFlex mat-raised-button color=\"primary\" type=\"submit\">Ø«Ø¨Øª</button>\r\n        <button fxFlex='nogrow' mat-button routerLink='/diagrams'>Ø§ÙØµØ±Ø§Ù</button>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>`,\r\n\tstyles: [`#chart{width:300px;direction:ltr}.form-element-margin{margin:5px 10px}.item-margin{margin:10px 0;display:block}mat-option.depth_2{padding-right:30px}mat-option.depth_3{padding-right:50px}mat-option.depth_4{padding-right:70px}.mat-card{margin:12.5px}`]\r\n})\r\nexport class AddDiagramComponent implements OnInit, OnDestroy {\r\n\tformGroup: FormGroup = AddDiagramApiModel.Request.formGroup;\r\n\tdata: any;\r\n\tcolumns: any;\r\n\tchart;\r\n\tdiagramTypes: string[];\r\n\tpathOptions: {\r\n\t\tpath: string;\r\n\t\tname: string;\r\n\t\ttype: string;\r\n\t\tcolor: string;\r\n\t}[];\r\n\tcolumnsMappings: AbstractControl[];\r\n\tdataSubscription: Subscription;\r\n\tdiagramModel: DiagramModel;\r\n\tcomponentModel: { component: any; inputs: object };\r\n\ttypeMapToDiagram: { [type: string]: any };\r\n\tdiagramPartialConfig: { type: string; inputs: { formGroup: FormGroup; diagramService: DiagramService } };\r\n\tsources: Observable<SourceModel[]>;\r\n\tgroups: Observable<string[]>;\r\n\tsource: SourceModel;\r\n\tconstructor(\r\n\t\tprivate diagramService: DiagramService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate store: Store<FeatureState>,\r\n\t\tprivate route: ActivatedRoute\r\n\t) {\r\n\t\tthis.sources = this.diagramService.getSources();\r\n\t\tthis.groups = this.diagramService.getGroups();\r\n\t\t// this.diagramModel = new DiagramModel();\r\n\t\tthis.columnsMappings = (this.formGroup.controls.ColumnMappings as FormArray).controls;\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tconst diagramId: string = params[\"id\"];\r\n\t\t\tdiagramId &&\r\n\t\t\t\tthis.diagramService.getDiagram(diagramId).subscribe(data => {\r\n\t\t\t\t\tthis.formGroup.patchValue({\r\n\t\t\t\t\t\t_id: data._id,\r\n\t\t\t\t\t\tName: data.Name,\r\n\t\t\t\t\t\tIsActive: data.IsActive,\r\n\t\t\t\t\t\tGroups: data.Groups,\r\n\t\t\t\t\t\tType: data.Chart.data.type,\r\n\t\t\t\t\t\tLegend: data.Chart.legend.show,\r\n\t\t\t\t\t\tSubchart: data.Chart.subchart.show,\r\n\t\t\t\t\t\tZoom: data.Chart.zoom.enabled,\r\n\t\t\t\t\t\tTooltip: data.Chart.tooltip.grouped,\r\n\t\t\t\t\t\tSync: data.Source.Interval,\r\n\t\t\t\t\t\tSource: data.Source,\r\n\t\t\t\t\t\tcolumns: data.Chart.data.columns,\r\n\t\t\t\t\t\tColumnMappings: data.Chart.ColumnMappings,\r\n\t\t\t\t\t\tCols: data.Box.Cols,\r\n\t\t\t\t\t\tFlow: data.Chart.Flow,\r\n\t\t\t\t\t\tRows: data.Box.Rows,\r\n\t\t\t\t\t\tBackgroundColor: data.Box.BackgroundColor,\r\n\t\t\t\t\t\tTextColor: data.Box.TextColor\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst colorsControl = <FormGroup>this.formGroup.controls[\"Colors\"];\r\n\t\t\t\t\tObject.keys(data.Chart.data.colors || {}).forEach(columnKey => {\r\n\t\t\t\t\t\tif (!(columnKey in colorsControl.controls))\r\n\t\t\t\t\t\t\tcolorsControl.addControl(columnKey, new FormControl(data.Chart.data.colors[columnKey]));\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst typesControl = <FormGroup>this.formGroup.controls[\"Types\"];\r\n\t\t\t\t\tObject.keys(data.Chart.data.types || {}).forEach(key => {\r\n\t\t\t\t\t\tif (!(key in typesControl.controls))\r\n\t\t\t\t\t\t\ttypesControl.addControl(key, new FormControl(data.Chart.data.types[key]));\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdata.Chart.ColumnMappings.forEach(mapping => this.addColumn(mapping.NamePath, mapping.ValuePath));\r\n\t\t\t\t\tthis.source = data.Source;\r\n\t\t\t\t\tthis.store.dispatch(new HaveEndpointAction(this));\r\n\r\n\t\t\t\t\tthis.diagramPartialConfig = {\r\n\t\t\t\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\t\t\t\tinputs: {\r\n\t\t\t\t\t\t\tformGroup: this.formGroup,\r\n\t\t\t\t\t\t\tdiagramService: this.diagramService\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\tthis.diagramPartialConfig = {\r\n\t\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\t\tinputs: {\r\n\t\t\t\t\tformGroup: this.formGroup,\r\n\t\t\t\t\tdiagramService: this.diagramService\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tthis.diagramTypes = [\r\n\t\t\t\"bar\",\r\n\t\t\t\"donut\",\r\n\t\t\t\"pie\",\r\n\t\t\t\"scatter\",\r\n\t\t\t\"line\",\r\n\t\t\t\"area\",\r\n\t\t\t\"area-spline\",\r\n\t\t\t\"numero\",\r\n\t\t\t\"booleano\",\r\n\t\t\t\"tempo\"\r\n\t\t];\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.formGroup.controls.ColumnMappings.statusChanges.subscribe(status => {\r\n\t\t\tif (\r\n\t\t\t\tstatus == \"VALID\" &&\r\n\t\t\t\t(this.formGroup.controls.ColumnMappings as FormArray).controls.length > 0 &&\r\n\t\t\t\tthis.data\r\n\t\t\t)\r\n\t\t\t\tthis.store.dispatch(new ColumnsMappingChangedAction(this));\r\n\t\t});\r\n\t}\r\n\tngOnDestroy() {\r\n\t\tif (this.dataSubscription) this.dataSubscription.unsubscribe();\r\n\t}\r\n\t// getData() {\r\n\t//   const o$ = this.diagramService.getData(this.source);\r\n\t//   this.dataSubscription = o$.subscribe(data => new DataLoadedAction(this))\r\n\t//   return o$;\r\n\t// }\r\n\tgetDataStructure() {\r\n\t\tconst observer = this.diagramService.getData({ ...this.source, Interval: 0 }, Date.now() - 10000);\r\n\t\tthis.dataSubscription = observer.subscribe(data => {\r\n\t\t\tthis.data = data.Data;\r\n\t\t\tthis.pathOptions = this.diagramService.get_data_report(data.Data);\r\n\t\t});\r\n\t\treturn observer;\r\n\t}\r\n\tconfigChanged() {\r\n\t\tthis.store.dispatch(new DiagramConfigChangedAction(this));\r\n\t}\r\n\ttypeChanged() {\r\n\t\tconst typesFormGroup = (this.formGroup.controls.Types as FormGroup).controls;\r\n\t\tfor (let cb in typesFormGroup) {\r\n\t\t\ttypesFormGroup[cb].setValue(this.formGroup.value.Type);\r\n\t\t}\r\n\t\tthis.diagramPartialConfig = {\r\n\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\tinputs: {\r\n\t\t\t\tformGroup: this.formGroup,\r\n\t\t\t\tdiagramService: this.diagramService\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.store.dispatch(new DiagramConfigChangedAction(this));\r\n\t}\r\n\taddColumn(NamePath: string = \"\", ValuePath: string = \"\") {\r\n\t\tconst control = <FormArray>this.formGroup.controls[\"ColumnMappings\"];\r\n\t\tcontrol.push(\r\n\t\t\tthis.formBuilder.group({\r\n\t\t\t\tNamePath: [ NamePath ],\r\n\t\t\t\tValuePath: [ ValuePath, Validators.required ]\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\trouteEntered(event) {\r\n\t\tthis.source = event.value;\r\n\t\tthis.formGroup.patchValue({ Source: event.value });\r\n\t\tthis.store.dispatch(new HaveEndpointAction(this));\r\n\t}\r\n\tremoveColumn(i: number) {\r\n\t\tconst control = <FormArray>this.formGroup.controls[\"ColumnMappings\"];\r\n\t\tcontrol.removeAt(i);\r\n\t}\r\n\tcalculateColumns(): Observable<void> {\r\n\t\treturn Observable.create(obser => {\r\n\t\t\tvar columnsMApping = {\r\n\t\t\t\t// NameVAlue:  (this.formGroup.controls.ColumnMappings as FormArray).controls.values\r\n\t\t\t};\r\n\t\t\tlet columns = this.diagramService.extract_columns_from_data(\r\n\t\t\t\tthis.data,\r\n\t\t\t\t(this.formGroup.controls.ColumnMappings as FormArray).value\r\n\t\t\t);\r\n\t\t\tthis.formGroup.controls.columns.setValue(columns);\r\n\t\t\t//add new item to this.formGroup.controls.colors form control\r\n\t\t\tconst colorsControl = <FormGroup>this.formGroup.controls[\"Colors\"];\r\n\t\t\tcolumns.forEach(column => {\r\n\t\t\t\tlet columnKey = column[0];\r\n\t\t\t\tif (!(columnKey in colorsControl.controls))\r\n\t\t\t\t\tcolorsControl.addControl(columnKey, new FormControl(\"#123456\"));\r\n\t\t\t});\r\n\r\n\t\t\tconst typesControl = <FormGroup>this.formGroup.controls[\"Types\"];\r\n\t\t\tcolumns.forEach(column => {\r\n\t\t\t\tlet key = column[0];\r\n\t\t\t\tif (!(key in typesControl.controls))\r\n\t\t\t\t\ttypesControl.addControl(key, new FormControl(this.formGroup.value.Type));\r\n\t\t\t});\r\n\t\t\tobser.next();\r\n\t\t});\r\n\t}\r\n\tgenerateDiagram(): Observable<any> {\r\n\t\tvar temp = new DiagramModel();\r\n\t\ttemp._id = \"template_id\";\r\n\t\ttemp.Name = this.formGroup.value.Name;\r\n\t\ttemp.Source = this.source;\r\n\t\ttemp.Box = {\r\n\t\t\tNumberOfColumns: 1,\r\n\t\t\tOrder: 1,\r\n\t\t\tBackgroundColor: this.formGroup.value.BackgroundColor\r\n\t\t};\r\n\t\ttemp.Widget = {\r\n\t\t\tbooleano: this.formGroup.value.booleano\r\n\t\t};\r\n\t\ttemp.Chart = {\r\n\t\t\tColumnMappings: this.formGroup.value.ColumnMappings,\r\n\t\t\tdata: {\r\n\t\t\t\tcolumns: this.formGroup.controls.columns.value,\r\n\t\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\t\ttypes: this.formGroup.value.Types,\r\n\t\t\t\tcolors: this.formGroup.controls.Colors.value\r\n\t\t\t},\r\n\t\t\tFlow: this.formGroup.value.Flow,\r\n\t\t\tlegend: {\r\n\t\t\t\tshow: this.formGroup.value.Legend\r\n\t\t\t},\r\n\t\t\tsubchart: {\r\n\t\t\t\tshow: this.formGroup.value.Subchart\r\n\t\t\t},\r\n\t\t\tzoom: {\r\n\t\t\t\tenabled: this.formGroup.value.Zoom\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tgrouped: this.formGroup.value.Tooltip\r\n\t\t\t}\r\n\t\t\t// tooltip: {\r\n\t\t\t//         format: {\r\n\t\t\t//                 value: function (value) {\r\n\t\t\t//                         return value + \"%\";\r\n\t\t\t//                 }\r\n\t\t\t//         }\r\n\t\t\t// },\r\n\t\t\t// color: {\r\n\t\t\t//         pattern: ['#60B044', '#F6C600', '#F97600', '#FF0000'],\r\n\t\t\t//         threshold: {\r\n\t\t\t//                 //  unit: 'value', // percentage is default\r\n\t\t\t//                 values: [30, 60, 90, 100]\r\n\t\t\t//         }\r\n\t\t\t// },\r\n\t\t};\r\n\t\t// this.componentModel = {\r\n\t\t//   component: this.typeMapToDiagram[temp.Chart.data.type],\r\n\t\t//   inputs: { data: temp }\r\n\t\t// }\r\n\t\tthis.diagramModel = temp;\r\n\t\treturn Observable.empty();\r\n\t}\r\n\tadd(event) {\r\n\t\tthis.store.dispatch(new AddDiagramAction(this.formGroup.value));\r\n\t}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { GetDiagramsApiModel } from \"../../models/get-diagrams-api.model\";\r\n\r\n@Component({\r\n\tselector: \"diagram-view\",\r\n\ttemplate: `<div *ngIf=\"diagramData$ | async\" [style.color]=\"(diagramData$ | async)?.Box.Color\">\r\n    <dynamic-component-selector class=\"diagram-box\" [data]=\"(diagramData$ | async)\"></dynamic-component-selector>\r\n</div>`,\r\n\tstyles: [`:host{width:100%;margin:12.5px}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}.widget-title{font:1.3em IRANSans,tahoma}`]\r\n})\r\nexport class diagramViewComponent implements OnInit {\r\n\tdiagrams: Observable<GetDiagramsApiModel.Response>;\r\n\twidth = 100;\r\n\r\n\tdiagramData$: any;\r\n\t@Input(\"id\") diagramId: string;\r\n\r\n\tconstructor(private diagramService: DiagramService) {\r\n\t\tthis.diagrams = this.diagramService.getDiagrams();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.diagramData$ = this.diagramService.getDiagram(this.diagramId);\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { GetDiagramsApiModel } from \"../../models/get-diagrams-api.model\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n@Component({\r\n\tselector: \"diagrams\",\r\n\ttemplate: `<mat-grid-list cols=\"12\" rowHeight=\"100px\">\r\n  <mat-grid-tile *ngFor=\"let diagram of (diagrams | async)?.Result\" \r\n  [colspan]=\"diagram.Box.Cols\" \r\n  [rowspan]=\"diagram.Box.Rows\" \r\n  [style.color]=\"diagram.Box.Color\">\r\n    <dynamic-component-selector class=\"diagram-box\" [data]=\"diagram\"></dynamic-component-selector>\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n<br />\r\n<div fxFlexLayout=\"row\" fxLayoutWrap fxLayoutAlign=\"center center\">\r\n</div>\r\n<div fxLayoutAlign='end center'>\r\n  <button mat-fab routerLink=\"../diagrams/add\" class=\"add-btn\">\r\n    <mat-icon aria-label=\"Example icon-button with a heart icon\">add</mat-icon>\r\n  </button>\r\n</div>\r\n`,\r\n\tstyles: [`:host{width:100%}.diagram-box{margin:15px}.add-btn{position:fixed;bottom:50px;left:25px;z-index:1}`]\r\n})\r\nexport class DiagramsComponent implements OnInit {\r\n\tdiagrams: Observable<GetDiagramsApiModel.Response>;\r\n\twidth = 100;\r\n\tconstructor(private diagramService: DiagramService) {\r\n\t\tthis.diagrams = this.diagramService.getDiagrams();\r\n\r\n\t\t// this.diagrams\r\n\t\t//         .delay(100)\r\n\t\t//         .subscribe(diagrams =>\r\n\t\t//                 diagrams.Result.forEach(diagram =>\r\n\t\t//                         this.diagramService.generateDiagram(diagram.Chart, diagram._id, diagram.Source.Route, diagram.Source.Sync)));\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\t// this.socketService.initSocket();\r\n\t\t// this.socketService.send(\"add-message\");\r\n\t\t// this.socketService.onMessage().subscribe(msg=>{\r\n\t\t//         debugger\r\n\t\t// });\r\n\t}\r\n}\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { FeatureState } from \"../../reducers\";\r\nimport { EditDiagramApiModel } from \"../../models/edit-diagram-api.model\";\r\nimport { EditDiagramAction } from \"../../actions/edit-diagram.actions\";\r\n\r\n@Component({\r\n\tselector: \"diagram-edit\",\r\n\ttemplate: `<mat-card fxLayout=\"column\" fxFlex=\"400px\">\r\n    <form [formGroup]=\"formGroup\" fxLayout='column' (ngSubmit)=\"add($event)\">\r\n\r\n        <mat-card-header>\r\n            <mat-card-title>Ø§ÙØ²ÙØ¯Ù ÙÙÙØ¯Ø§Ø± Ø¬Ø¯ÛØ¯</mat-card-title>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n            <mat-form-field fxFlexFill>\r\n                <input matInput placeholder=\"Ø¹ÙÙØ§Ù ÙÙÙØ¯Ø§Ø±\" formControlName=\"Name\">\r\n            </mat-form-field>\r\n            <mat-form-field fxFlexFill>\r\n                <input matInput placeholder=\"Ø¢Ø¯Ø±Ø³ ÙÙÙØ¯Ø§Ø±\" formControlName=\"Route\">\r\n            </mat-form-field>\r\n\r\n            <mat-checkbox formControlName=\"IsActive\">ÙØ¶Ø¹ÛØª</mat-checkbox>\r\n\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button fxFlex mat-raised-button color=\"primary\" type=\"submit\">Ø«Ø¨Øª</button>\r\n            <button fxFlex='nogrow' mat-button routerLink='/diagrams'>Ø§ÙØµØ±Ø§Ù</button>\r\n        </mat-card-actions>\r\n    </form>\r\n</mat-card>\r\n`,\r\n\tstyles: [``]\r\n})\r\nexport class EditDiagramComponent implements OnInit {\r\n\tformGroup: FormGroup = EditDiagramApiModel.Request.formGroup;\r\n\tconstructor(\r\n\t\tprivate diagramService: DiagramService,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate store: Store<FeatureState>\r\n\t) {\r\n\t\tlet Route = this.route.params.subscribe(params => {\r\n\t\t\tconst diagramId: string = params[\"id\"];\r\n\t\t\tthis.diagramService.getDiagram(diagramId).subscribe(data => this.formGroup.patchValue(data));\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\r\n\tadd(event) {\r\n\t\tthis.store.dispatch(new EditDiagramAction(this.formGroup.value));\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, AfterViewInit, OnDestroy, Injector } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { MatSliderChange } from \"@angular/material\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { FeatureState } from \"../../reducers\";\r\n\r\ndeclare var c3: any;\r\n\r\n@Component({\r\n\tselector: \"diagram\",\r\n\ttemplate: `<div class=\"over\" fxlayout=\"row\" fxLayoutAlign=\"space-between\">\r\n    <div fxFlex=\"nogrow\" fxFlexAlign=\"start\" class=\"data-time\">{{now | date : 'y/M/d h:m:s'}}</div>\r\n    <div fxFlex=\"nogrow\" fxFlexAlign=\"center\" class=\"data-time\">{{time | date : 'y/M/d h:m:s'}}</div>\r\n    <div fxFlex=\"nogrow\" fxFlexAlign=\"end\" class=\"data-time\">{{now | date : 'y/M/d h:m:s'}}</div>\r\n</div>\r\n<div *ngIf=\"modelIsCorrect | async\" class=\"diagram widget\" [id]=\"'diagram_' + data._id\"></div>`,\r\n\tstyles: [`:host{width:100%}.diagram-box .c3{direction:ltr}mat-slider{width:100%}.data-time{direction:ltr;text-align:center}.over{visibility:hidden;opacity:0;position:absolute;top:35px;left:0;right:0;background:#fff;z-index:3;transition:all .4s ease-in-out}`]\r\n})\r\nexport class DiagramComponent implements AfterViewInit, OnDestroy {\r\n\tmodelIsCorrect: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\t_model: DiagramModel;\r\n\t@Input()\r\n\tset data(value: DiagramModel) {\r\n\t\tif (!(value.Chart && value._id)) return;\r\n\t\tthis._model = value;\r\n\t\tthis.modelIsCorrect.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._model;\r\n\t}\r\n\tdataSubscribtion: Subscription;\r\n\tchart: any;\r\n\ttime: number;\r\n\tnow: number = Date.now();\r\n\tconstructor(\r\n\t\tprivate store: Store<FeatureState>,\r\n\t\tprivate diagramService: DiagramService,\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate injector: Injector,\r\n\t\tprivate route: ActivatedRoute\r\n\t) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tconst diagramId: string = params[\"id\"];\r\n\t\t\tdiagramId &&\r\n\t\t\t\tthis.diagramService.getDiagram(diagramId).subscribe(data => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n\tngAfterViewInit() {\r\n\t\t// this.dataSubscribtion = IntervalObservable\r\n\t\t//         // .create(this.model.Source.Sync)\r\n\t\t//         .create(999)\r\n\t\t//         .switchMap(i =>\r\n\t\t//                 this.http.get(`http://localhost:3000/api/data`, {\r\n\t\t//                         params: {\r\n\t\t//                                 route: this.model.Source.Route,\r\n\t\t//                                 time: '0'\r\n\t\t//                         }\r\n\t\t//                 })\r\n\t\t//         )\r\n\t\t//         // .switchMap((res: any) => Observable.of(res.Result.Data))\r\n\t\t//         .map((res: any) => res.Result.Data)\r\n\t\tthis.modelIsCorrect.delay(300).filter(data => data).subscribe(state => {\r\n\t\t\tthis.chart = c3.generate({\r\n\t\t\t\t...this.data.Chart,\r\n\t\t\t\tbindto: `#diagram_${this.data._id}`\r\n\t\t\t\t// size: {\r\n\t\t\t\t//         height: 150\r\n\t\t\t\t// }\r\n\t\t\t});\r\n\t\t\tthis.dataSubscribtion = this.diagramService\r\n\t\t\t\t.getData(this.data.Source)\r\n\t\t\t\t.filter(data => data != undefined)\r\n\t\t\t\t.subscribe(data => {\r\n\t\t\t\t\tthis.now = Date.now();\r\n\t\t\t\t\tthis.time = data.Time;\r\n\t\t\t\t\tif (this.data.Chart.Flow) {\r\n\t\t\t\t\t\tthis.chart.flow({\r\n\t\t\t\t\t\t\tcolumns: this.diagramService.extract_columns_from_data(\r\n\t\t\t\t\t\t\t\tdata.Data,\r\n\t\t\t\t\t\t\t\tthis.data.Chart.ColumnMappings\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tduration: 1500\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.chart.load({\r\n\t\t\t\t\t\t\tcolumns: this.diagramService.extract_columns_from_data(\r\n\t\t\t\t\t\t\t\tdata.Data,\r\n\t\t\t\t\t\t\t\tthis.data.Chart.ColumnMappings\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t});\r\n\r\n\t\t// this.dataSubscribtion = this.diagramService.generateDiagram(\r\n\t\t//         this.model.Chart,\r\n\t\t//         this.model._id,\r\n\t\t//         this.model.Source.Route,\r\n\t\t//         this.model.Source.Sync\r\n\t\t// );\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n\ttimeChange(e: MatSliderChange) {\r\n\t\tthis.dataSubscribtion.unsubscribe();\r\n\t\t// this.diagramService.getData(this.data.Source, Date.now() - ((1000 - e.value) * this.data.Source.Interval), true)\r\n\t\tthis.dataSubscribtion = this.diagramService\r\n\t\t\t.getData(this.data.Source, Date.now() - (1000 - e.value) * this.data.Source.Interval, true)\r\n\t\t\t.subscribe(data => {\r\n\t\t\t\tthis.time = data.Time;\r\n\t\t\t\tthis.now = Date.now();\r\n\t\t\t\t// const columns = this.diagramService\r\n\t\t\t\t//         .extract_columns_from_data(data.Data, this.data.Chart.ColumnMappings)\r\n\t\t\t\t//         .map(column => {\r\n\t\t\t\t//                 debugger;\r\n\t\t\t\t//                 column[0] += '_historic';\r\n\t\t\t\t//                 return column;\r\n\t\t\t\t//         });\r\n\t\t\t\tthis.chart.load({\r\n\t\t\t\t\tcolumns: this.diagramService.extract_columns_from_data(data.Data, this.data.Chart.ColumnMappings)\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tInput,\r\n\tAfterViewInit,\r\n\tComponentFactoryResolver,\r\n\tViewChild,\r\n\tViewContainerRef,\r\n\tReflectiveInjector,\r\n\tOnDestroy\r\n} from \"@angular/core\";\r\n\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { NumericDiagramComponent } from \"../../dumb-components/numeric-diagram/numeric-diagram.component\";\r\nimport { ServerStatusDiagramComponent } from \"../../dumb-components/server-status-diagram/server-status-diagram.component\";\r\nimport { ServerConnectingTimeDiagramComponent } from \"../../dumb-components/server-connecting-time-diagram/server-connecting-time-diagram.component\";\r\nimport { DiagramComponent } from \"../../smart-components/diagram/diagram.component\";\r\n\r\n@Component({\r\n\tselector: \"dynamic-component-selector\",\r\n\ttemplate: `<mat-card class=\"diagram-box\" [style.background]=\"backgroundColor\" fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">\r\n    <div fxFlex=\"0 0 auto\" *ngIf=\"_data\" fxLayoutAlign=\"space-between center\">\r\n        <span fxLayoutAlign=\"start center\" class=\"widget-title\">\r\n            {{_data.Name}}\r\n        </span>\r\n        <a [routerLink]=\"['edit' ,  _data._id]\" fxLayoutAlign=\"center center\" mat-icon-button color=\"primary\">\r\n            <mat-icon aria-label=\"edit diagram\">edit</mat-icon>\r\n        </a>\r\n    </div>\r\n    <!-- <mat-card-content> -->\r\n    <!-- <mat-slider invert [(ngModel)]=\"time\" (change)=\"timeChange($event)\"></mat-slider> -->\r\n    <mat-slider class=\"over\" fxFlex=\"0 0 auto\" invert min='1' max='1000' value=\"1000\" (change)=\"timeChange($event)\"></mat-slider>\r\n    <div fxFlex=\"1 1 auto\" class=\"widget-container\">\r\n        <div #dynamicComponentContainer></div>\r\n    </div>\r\n    <!-- </mat-card-content> -->\r\n</mat-card>`,\r\n\tstyles: [`:host{width:100%;margin:12.5px}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}.widget-title{font:1.3em IRANSans,tahoma}.over{visibility:hidden;opacity:0;position:absolute;top:60px;left:0;right:0;background:#fff;z-index:3;transition:all .4s ease-in-out}`],\r\n\tentryComponents: [\r\n\t\tNumericDiagramComponent,\r\n\t\tServerConnectingTimeDiagramComponent,\r\n\t\tServerStatusDiagramComponent,\r\n\t\tDiagramComponent\r\n\t]\r\n})\r\nexport class DynamicComponentSelectorComponent implements AfterViewInit {\r\n\ttypeMapToDiagram = {\r\n\t\tbar: DiagramComponent,\r\n\t\tdonut: DiagramComponent,\r\n\t\tpie: DiagramComponent,\r\n\t\tscatter: DiagramComponent,\r\n\t\tline: DiagramComponent,\r\n\t\tarea: DiagramComponent,\r\n\t\t\"area-spline\": DiagramComponent,\r\n\t\tnumero: NumericDiagramComponent,\r\n\t\ttempo: ServerConnectingTimeDiagramComponent,\r\n\t\tbooleano: ServerStatusDiagramComponent\r\n\t};\r\n\t@ViewChild(\"dynamicComponentContainer\", { read: ViewContainerRef })\r\n\tdynamicComponentContainer: ViewContainerRef;\r\n\t@ViewChild(DiagramComponent) widgetComponent: DiagramComponent;\r\n\tcurrentComponent: any = null;\r\n\t_data: any;\r\n\t@Input()\r\n\tset data(data: any) {\r\n\t\tif (!data || Object.keys(data).length == 0) return;\r\n\t\tthis.backgroundColor = data.Box.BackgroundColor;\r\n\t\tthis._data = data;\r\n\t\tlet raw = { data };\r\n\t\tlet _component = this.typeMapToDiagram[data.Chart.data.type];\r\n\t\tlet inputProviders = Object.keys(raw).map(inputName => {\r\n\t\t\treturn { provide: inputName, useValue: raw[inputName] };\r\n\t\t});\r\n\t\tlet resolvedInputs = ReflectiveInjector.resolve(inputProviders);\r\n\r\n\t\tlet injector = ReflectiveInjector.fromResolvedProviders(\r\n\t\t\tresolvedInputs,\r\n\t\t\tthis.dynamicComponentContainer.parentInjector\r\n\t\t);\r\n\t\tlet factory = this.resolver.resolveComponentFactory(_component);\r\n\r\n\t\tlet component = factory.create(injector);\r\n\r\n\t\tthis.dynamicComponentContainer.insert(component.hostView);\r\n\r\n\t\tif (this.currentComponent) {\r\n\t\t\tthis.currentComponent.destroy();\r\n\t\t}\r\n\r\n\t\tthis.currentComponent = component;\r\n\t}\r\n\tbackgroundColor: String = \"\";\r\n\tconstructor(private resolver: ComponentFactoryResolver) {}\r\n\tngAfterViewInit() {}\r\n\ttimeChange(e) {\r\n\t\tthis.currentComponent._component.timeChange(e);\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tInput,\r\n\tAfterViewInit,\r\n\tComponentFactoryResolver,\r\n\tViewChild,\r\n\tViewContainerRef,\r\n\tReflectiveInjector,\r\n\tOnDestroy,\r\n\tOutput,\r\n\tEventEmitter\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { DiagramPartialConfigEditComponent } from \"../../dumb-components/diagram-partial-config-edit/diagram-partial-config-edit.component\";\r\nimport { PieDiagramPartialConfigComponent } from \"../../dumb-components/pie-diagram-partial-config/pie-diagram-partial-config.component\";\r\nimport { BooleanoWidgetPartialConfigComponent } from \"../../dumb-components/booleano-widget-partial-config/booleano-widget-partial-config.component\";\r\nimport { LinearDiagramPartialConfigComponent } from \"../../dumb-components/linear-diagram-partial-config/linear-diagram-partial-config.component\";\r\n\r\ndeclare var c3: any;\r\n\r\n@Component({\r\n\tselector: \"dynamic-config-component-selector\",\r\n\ttemplate: `<div #dynamicComponentContainer></div>`,\r\n\tstyles: [`:host{width:100%}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}`],\r\n\tentryComponents: [\r\n\t\tDiagramPartialConfigEditComponent,\r\n\t\tPieDiagramPartialConfigComponent,\r\n\t\tLinearDiagramPartialConfigComponent,\r\n\t\tBooleanoWidgetPartialConfigComponent\r\n\t]\r\n})\r\nexport class DynamicConfigComponentSelectorComponent implements AfterViewInit {\r\n\ttypeMapToDiagram = {\r\n\t\tbar: DiagramPartialConfigEditComponent,\r\n\t\tarea: LinearDiagramPartialConfigComponent,\r\n\t\t\"area-spline\": LinearDiagramPartialConfigComponent,\r\n\t\tdonut: DiagramPartialConfigEditComponent,\r\n\t\tpie: PieDiagramPartialConfigComponent,\r\n\t\tscatter: DiagramPartialConfigEditComponent,\r\n\t\tline: LinearDiagramPartialConfigComponent,\r\n\t\tbooleano: BooleanoWidgetPartialConfigComponent\r\n\t};\r\n\t@ViewChild(\"dynamicComponentContainer\", { read: ViewContainerRef })\r\n\tdynamicComponentContainer: ViewContainerRef;\r\n\t@Output() ConfigChanged = new EventEmitter();\r\n\tcurrentComponent: any = null;\r\n\t@Input()\r\n\tset data(data: any) {\r\n\t\tif (!data || Object.keys(data).length == 0) return;\r\n\t\tif (!(data.type in this.typeMapToDiagram)) {\r\n\t\t\tif (this.currentComponent) this.currentComponent.destroy();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet _component = this.typeMapToDiagram[data.type];\r\n\t\tlet inputProviders = Object.keys(data.inputs).map(inputName => {\r\n\t\t\treturn { provide: inputName, useValue: data.inputs[inputName] };\r\n\t\t});\r\n\t\tlet resolvedInputs = ReflectiveInjector.resolve(inputProviders);\r\n\r\n\t\tlet injector = ReflectiveInjector.fromResolvedProviders(\r\n\t\t\tresolvedInputs,\r\n\t\t\tthis.dynamicComponentContainer.parentInjector\r\n\t\t);\r\n\t\tlet factory = this.resolver.resolveComponentFactory(_component);\r\n\t\tlet component = factory.create(injector);\r\n\t\tif ((<any>component.instance).ConfigChanged)\r\n\t\t\t(<any>component.instance).ConfigChanged.subscribe(() => {\r\n\t\t\t\tthis.ConfigChanged.emit();\r\n\t\t\t});\r\n\r\n\t\tthis.dynamicComponentContainer.insert(component.hostView);\r\n\r\n\t\tif (this.currentComponent) {\r\n\t\t\tthis.currentComponent.destroy();\r\n\t\t}\r\n\r\n\t\tthis.currentComponent = component;\r\n\t}\r\n\tconstructor(private resolver: ComponentFactoryResolver) {}\r\n\tngAfterViewInit() {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\n\r\nimport { DiagramService } from \"../services/diagram.service\";\r\nimport { GetDiagramsApiModel } from \"../models/get-diagrams-api.model\";\r\nimport { GetDiagramsSucceed, GetDiagramsFailed, GetDiagramsStart } from \"../actions/diagrams.actions\";\r\n\r\n@Injectable()\r\nexport class DiagramEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private diagramService: DiagramService) {}\r\n\r\n\t@Effect()\r\n\tDiagramRequest$ = this.actions$.ofType().pipe(map(action => action.payload), map(data => new GetDiagramsStart()));\r\n\r\n\t@Effect()\r\n\tgetDiagram$ = this.actions$\r\n\t\t.ofType()\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap((data: GetDiagramsApiModel.Request) =>\r\n\t\t\t\tthis.diagramService\r\n\t\t\t\t\t.getDiagrams()\r\n\t\t\t\t\t.pipe(\r\n\t\t\t\t\t\tmap(res => new GetDiagramsSucceed(res)),\r\n\t\t\t\t\t\tcatchError(() => Observable.of(new GetDiagramsFailed()))\r\n\t\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\n\r\nimport { DiagramService } from \"../services/diagram.service\";\r\nimport { AddDiagramApiModel } from \"../models/add-diagram-api.model\";\r\nimport {\r\n\tAddDiagramActionTypes,\r\n\tAddDiagramActionStart,\r\n\tAddDiagramActionSucceed,\r\n\tAddDiagramActionFailed,\r\n\tDataLoadedAction,\r\n\tStructureDefinitionStartAction,\r\n\tGenerateDiagramAction,\r\n\tStructureDefinitionFinishedAction\r\n} from \"../actions/add-diagram.actions\";\r\n\r\n@Injectable()\r\nexport class AddDiagramEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private diagramService: DiagramService) {}\r\n\r\n\t@Effect()\r\n\taddDiagramRequest$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.ADD_DIAGRAM)\r\n\t\t.pipe(map(action => action.payload), map(data => new AddDiagramActionStart(data)));\r\n\r\n\t@Effect()\r\n\taddDiagram$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.ADD_DIAGRAM_START)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap((data: AddDiagramApiModel.Request) =>\r\n\t\t\t\tthis.diagramService\r\n\t\t\t\t\t.addDiagram(data)\r\n\t\t\t\t\t.pipe(\r\n\t\t\t\t\t\tmap(res => new AddDiagramActionSucceed(res)),\r\n\t\t\t\t\t\tcatchError(() => Observable.of(new AddDiagramActionFailed()))\r\n\t\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t@Effect({ dispatch: false })\r\n\tADD_DIAGRAM_SUCCEED$ = this.actions$.ofType(AddDiagramActionTypes.ADD_DIAGRAM_SUCCEED).pipe(\r\n\t\tmap(action => action.payload),\r\n\t\tmap(data => {\r\n\t\t\tthis.router.navigate([ \"diagrams\" ]);\r\n\t\t\treturn Observable.empty();\r\n\t\t})\r\n\t);\r\n\r\n\t@Effect()\r\n\tHAVE_ENDPOINT$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.HAVE_ENDPOINT)\r\n\t\t.pipe(map(action => action.payload), map(data => new DataLoadedAction(data)));\r\n\r\n\t@Effect()\r\n\tDATA_LOADED$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.DATA_LOADED)\r\n\t\t.pipe(map(action => action.payload), map(data => new StructureDefinitionStartAction(data)));\r\n\r\n\t@Effect()\r\n\tDIAGRAM_CONFIG_CHANGED$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.DIAGRAM_CONFIG_CHANGED)\r\n\t\t.pipe(map(action => action.payload), map(data => new GenerateDiagramAction(data)));\r\n\r\n\t@Effect()\r\n\tSTRUCTURE_DEFINITION_START$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.STRUCTURE_DEFINITION_START)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap(data => data.getDataStructure().map(() => new StructureDefinitionFinishedAction(data)))\r\n\t\t);\r\n\r\n\t@Effect()\r\n\tCOLUMNS_MAPPING_CHANGED$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.COLUMNS_MAPPING_CHANGED)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap(data => data.calculateColumns().map(() => new StructureDefinitionFinishedAction(data)))\r\n\t\t);\r\n\r\n\t@Effect()\r\n\tSTRUCTURE_DEFINITION_END$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.STRUCTURE_DEFINITION_END)\r\n\t\t// .skipUntil(this.actions$.ofType(AddDiagramActionTypes.DATA_LOADED))\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap(data => data.calculateColumns().map(() => new GenerateDiagramAction(data)))\r\n\t\t);\r\n\r\n\t@Effect({ dispatch: false })\r\n\tGenerateDiagram$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.GENERATE_DIAGRAM)\r\n\t\t.pipe(map(action => action.payload), map(data => data.generateDiagram()));\r\n}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { DiagramModuleContainerComponent } from \"./smart-components/diagram-module-container/diagram-module-container.component\";\r\nimport { DiagramsComponent } from \"./smart-components/diagrams/diagrams.component\";\r\nimport { AddDiagramComponent } from \"./smart-components/add-diagram/add-diagram.component\";\r\nimport { NumericDiagramComponent } from \"./dumb-components/numeric-diagram/numeric-diagram.component\";\r\nimport { ServerConnectingTimeDiagramComponent } from \"./dumb-components/server-connecting-time-diagram/server-connecting-time-diagram.component\";\r\nimport { ServerStatusDiagramComponent } from \"./dumb-components/server-status-diagram/server-status-diagram.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"diagrams\",\r\n\t\tcomponent: DiagramModuleContainerComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"\",\r\n\t\t\t\tcomponent: DiagramsComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"add\",\r\n\t\t\t\tcomponent: AddDiagramComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"edit/:id\",\r\n\t\t\t\tcomponent: AddDiagramComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"numero\",\r\n\t\t\t\tcomponent: NumericDiagramComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"tempo\",\r\n\t\t\t\tcomponent: ServerConnectingTimeDiagramComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"booleano\",\r\n\t\t\t\tcomponent: ServerStatusDiagramComponent\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const RoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { IGridItemComponent } from \"@soushians/grid\";\r\n\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\ttemplate: `<mat-select placeholder=\"Diagrams\" [(ngModel)]=\"selectedDiagramId\" name=\"selectedDiagramId\">\r\n  <mat-option *ngFor=\"let item of (diagrams$ | async)\" [value]=\"item._id\">\r\n    {{item._id}}\r\n  </mat-option>\r\n</mat-select>`\r\n})\r\nexport class DiagramSelectorComponent implements OnInit, IGridItemComponent<{ diagramId: string }> {\r\n\tdiagrams$: Observable<DiagramModel[]>;\r\n\tselectedDiagramId: string;\r\n\tget valid() {\r\n\t\treturn this.config.diagramId != undefined;\r\n\t}\r\n\tget config() {\r\n\t\treturn {\r\n\t\t\tdiagramId: this.selectedDiagramId\r\n\t\t};\r\n\t}\r\n\tconstructor(private diagramService: DiagramService) {\r\n\t\tthis.diagrams$ = this.diagramService.getDiagrams().pipe(map(res => res.Result));\r\n\t}\r\n\tngOnInit() {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatTooltipModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule,\r\n\tMatCheckboxModule,\r\n\tMatGridListModule,\r\n\tMatSliderModule,\r\n\tMatAutocompleteModule\r\n} from \"@angular/material\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\nimport { EffectsModule, mergeEffects } from \"@ngrx/effects\";\r\n\r\nimport { SharedModule } from \"@soushians/shared\";\r\n\r\nimport { DiagramModuleConfig, MODULE_CONFIG_TOKEN } from \"./diagram.config\";\r\n\r\nimport { DiagramReducers } from \"./reducers/index\";\r\n\r\nimport { ServerStatusDiagramComponent } from \"./dumb-components/server-status-diagram/server-status-diagram.component\";\r\nimport { DiagramPartialConfigEditComponent } from \"./dumb-components/diagram-partial-config-edit/diagram-partial-config-edit.component\";\r\nimport { PieDiagramPartialConfigComponent } from \"./dumb-components/pie-diagram-partial-config/pie-diagram-partial-config.component\";\r\nimport { BooleanoWidgetPartialConfigComponent } from \"./dumb-components/booleano-widget-partial-config/booleano-widget-partial-config.component\";\r\nimport { NumericWidgetPartialConfigComponent } from \"./dumb-components/numeric-widget-partial-config/numeric-widget-partial-config.component\";\r\nimport { LinearDiagramPartialConfigComponent } from \"./dumb-components/linear-diagram-partial-config/linear-diagram-partial-config.component\";\r\nimport { ServerConnectingTimeDiagramComponent } from \"./dumb-components/server-connecting-time-diagram/server-connecting-time-diagram.component\";\r\nimport { NumericEditDiagramComponent } from \"./dumb-components/numeric-edit-diagram/numeric-edit-diagram.component\";\r\nimport { NumericDiagramComponent } from \"./dumb-components/numeric-diagram/numeric-diagram.component\";\r\n\r\nimport { DiagramModuleContainerComponent } from \"./smart-components/diagram-module-container/diagram-module-container.component\";\r\nimport { DataMapperComponent } from \"./smart-components/data-mapper/data-mapper.component\";\r\n\r\nimport { AddDiagramComponent } from \"./smart-components/add-diagram/add-diagram.component\";\r\nimport { diagramViewComponent } from \"./smart-components/diagram-view/diagram-view.component\";\r\nimport { DiagramsComponent } from \"./smart-components/diagrams/diagrams.component\";\r\nimport { EditDiagramComponent } from \"./smart-components/edit-diagram/edit-diagram.component\";\r\nimport { DiagramComponent } from \"./smart-components/diagram/diagram.component\";\r\nimport { DynamicComponentSelectorComponent } from \"./smart-components/dynamic-component-selector/dynamic-component-selector.component\";\r\nimport { DynamicConfigComponentSelectorComponent } from \"./smart-components/dynamic-config-component-selector/dynamic-config-component-selector.component\";\r\n\r\nimport { DiagramEffects } from \"./effects/diagrams.effects\";\r\nimport { AddDiagramEffects } from \"./effects/add-diagram.effects\";\r\n\r\nimport { RoutingModule } from \"./diagram-routing.module\";\r\nimport { DiagramSelectorComponent } from \"./smart-components/diagram-selector/diagram-selector.component\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tRouterModule,\r\n\t\tCommonModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSelectModule,\r\n\t\tMatSliderModule,\r\n\t\tMatInputModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatRadioModule,\r\n\t\tMatTooltipModule,\r\n\t\tMatGridListModule,\r\n\t\tMatAutocompleteModule,\r\n\t\tReactiveFormsModule,\r\n\t\tBrowserAnimationsModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tAddDiagramComponent,\r\n\t\tDiagramsComponent,\r\n\t\tdiagramViewComponent,\r\n\t\tEditDiagramComponent,\r\n\t\tDynamicConfigComponentSelectorComponent,\r\n\t\tDiagramComponent,\r\n\t\tDynamicComponentSelectorComponent,\r\n\t\tDiagramModuleContainerComponent,\r\n\t\tDataMapperComponent,\r\n\t\tNumericDiagramComponent,\r\n\t\tServerStatusDiagramComponent,\r\n\t\tDiagramPartialConfigEditComponent,\r\n\t\tPieDiagramPartialConfigComponent,\r\n\t\tBooleanoWidgetPartialConfigComponent,\r\n\t\tNumericWidgetPartialConfigComponent,\r\n\t\tServerConnectingTimeDiagramComponent,\r\n\t\tNumericEditDiagramComponent,\r\n\t\tLinearDiagramPartialConfigComponent,\r\n\t\tDiagramSelectorComponent\r\n\t],\r\n\tentryComponents: [ DiagramSelectorComponent, diagramViewComponent ],\r\n\texports: [ DiagramSelectorComponent ],\r\n\tproviders: []\r\n})\r\nexport class NgsDiagramModule {\r\n\tstatic forRoot(config?: DiagramModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: RootNgsDiagramModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config } ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsDiagramModule,\r\n\t\tStoreModule.forFeature(\"diagram\", DiagramReducers),\r\n\t\tEffectsModule.forFeature([ DiagramEffects, AddDiagramEffects ]),\r\n\t\tRoutingModule\r\n\t],\r\n\texports: [ NgsDiagramModule ]\r\n})\r\nexport class RootNgsDiagramModule {}\r\n"],"names":["InjectionToken","FormGroup","FormControl","Validators","initialState","DiagramsReducer.diagramReducer","fromEditDiagram.Reducer","parentGuardReducer.ParentGuardReducer","createFeatureSelector","createSelector","BehaviorSubject","Component","Injector","Input","EventEmitter","Output","Injectable","Inject","FormArray","Observable","HttpClient","Store","FormBuilder","ActivatedRoute","ReflectiveInjector","ComponentFactoryResolver","ViewChild","ViewContainerRef","router","map","switchMap","catchError","Actions","Router","Effect","RouterModule","NgModule","HttpClientModule","FormsModule","CommonModule","MatExpansionModule","MatSnackBarModule","MatIconModule","MatButtonModule","MatCardModule","MatSelectModule","MatSliderModule","MatInputModule","MatCheckboxModule","MatFormFieldModule","MatTabsModule","FlexLayoutModule","MatRadioModule","MatTooltipModule","MatGridListModule","MatAutocompleteModule","ReactiveFormsModule","BrowserAnimationsModule","StoreModule","EffectsModule"],"mappings":";;;;;;;;;;AAAA,IAUO,qBAAM,qBAAqB,GAAwB;QACzD,SAAS,EAAE,EAAE;QACb,GAAG,EAAE;YACJ,UAAU,EAAE,KAAK;YACjB,eAAe,EAAE,6BAA6B;SAC9C;KACD,CAAC;AAEF,yBAAa,mBAAmB,GAAG,IAAIA,iBAAc,CAAsB,qBAAqB,CAAC;;IClBjG;;;;;;;;;;;;;;AAcA,IAeO,IAAI,QAAQ,GAAG;QAClB,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,kBAAkB,CAAC;YAC3C,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAK,IAAI,CAAC,IAAI,CAAC;oBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAChF;YACD,OAAO,CAAC,CAAC;SACZ,CAAA;QACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAA;AAED,wBAU2B,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI;QACpD,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;QAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;YAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;;YAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;oBAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;QAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;AAED,wBAI2B,WAAW,EAAE,aAAa;QACjD,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;YAAE,OAAO,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IACnI,CAAC;;;;;;AC7DD,QAAiB,mBAAmB;IAApC,WAAiB,mBAAmB;QACnC,IAAA;YAGC,iBAAY,SAA0E;gBAA1E,0BAAA;oBAAA,8BAAyC,EAAiC,CAAA;;gBAAtF,iBAEC;gBADA,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG,IAAI,QAAC,KAAI,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,IAAC,CAAC,CAAC;aACpE;;;;YAED,gCAAc;;;gBAAd;oBACC,OAAO,EAAE,CAAC;iBACV;0BAZH;YAmBE,CAAA;QAhBY,2BAAO;QAkBpB,IAAA;YAEC;aAAgB;2BAvBlB;YAwBE,CAAA;QAHY,4BAAQ;OAnBL,mBAAmB,KAAnB,mBAAmB,QAuBnC;;;;;;;;qBCpBc,uBAAuB;2BACjB,6BAA6B;6BAC3B,+BAA+B;4BAChC,8BAA8B;;IAMpD,IAAA;;wBACiB,mBAAmB,CAAC,iBAAiB;;+BAftD;QAgBC,CAAA;AAFD,IAGA,IAAA;QAEC,4BAAmB,OAAqC;YAArC,YAAO,GAAP,OAAO,CAA8B;wBADxC,mBAAmB,CAAC,mBAAmB;SACK;iCAnB7D;QAoBC,CAAA;AAHD,IAIA,IAAA;;wBACiB,mBAAmB,CAAC,kBAAkB;;gCAtBvD;QAuBC,CAAA;;;;;;ICpBD,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IAM1B,qBAAM,YAAY,GAAU;QAClC,MAAM,EAAE,KAAK;QACb,OAAO,EAAE;YACR,MAAM,EAAE,EAAE;SACV;KACD,CAAC;;;;;;AAEF,4BAA+B,KAAoB,EAAE,MAAsB;QAA5C,sBAAA;YAAA,oBAAoB;;QAClD,QAAQ,MAAM,CAAC,IAAI;YAClB,KAAK,mBAAmB,CAAC,WAAW,EAAE;gBACrC,oBACI,KAAK,IACR,MAAM,EAAE,IAAI,IAEX;aACF;YACD,KAAK,mBAAmB,CAAC,iBAAiB,EAAE;gBAC3C,oBACI,KAAK,IACR,MAAM,EAAE,IAAI,IAEX;aACF;YAED,SAAS;gBACR,OAAO,KAAK,CAAC;aACb;SACD;KACD;;;;;;ACrCD,QAOiB,mBAAmB;IAApC,WAAiB,mBAAmB;QACnC,IAAA;YACC,iBAAY,MAAe;aAAI;;;;YAC/B,uCAAqB;;;gBAArB;oBACC,OAAO,EAAE,CAAC;iBACV;YAED,sBAAW,oBAAS;;;;oBAApB;oBACC,OAAO,IAAIC,eAAS,CAAC;wBACpB,IAAI,EAAE,IAAIC,iBAAW,CAAC,EAAE,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBAClD,QAAQ,EAAE,IAAID,iBAAW,CAAC,MAAM,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBAC1D,KAAK,EAAE,IAAID,iBAAW,CAAC,EAAE,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;qBACnD,CAAC,CAAC;iBACH;;;eAAA;0BApBH;YAqBE,CAAA;QAbY,2BAAO;QAepB,IAAA;YAEC;aAAgB;2BAzBlB;YA0BE,CAAA;QAHY,4BAAQ;OAhBL,mBAAmB,KAAnB,mBAAmB,QAoBnC;;;;;;;;sBCtBe,8BAA8B;4BACxB,oCAAoC;8BAClC,sCAAsC;6BACvC,qCAAqC;;IAG5D,IAAA;QAEC,2BAAmB,OAAqC;YAArC,YAAO,GAAP,OAAO,CAA8B;wBADxC,sBAAsB,CAAC,YAAY;SACS;gCAb7D;QAcC,CAAA;;;;;;ICTD,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IAK1B,qBAAMC,cAAY,GAAU;QAClC,MAAM,EAAE,UAAU;QAClB,IAAI,oBAAE,EAAE,MAAM,EAAE,EAAE,EAAkC,CAAA;KACpD,CAAC;;;;;;AACF,qBAAwB,KAAoB,EAAE,MAA0B;QAAhD,sBAAA;YAAA,sBAAoB;;QAC3C,QAAQ,MAAM,CAAC,IAAI;YAClB,KAAK,sBAAsB,CAAC,YAAY,EAAE;gBACzC,oBACI,KAAK,IACR,MAAM,EAAE,OAAO,EACf,IAAI,EAAE,IAAI,mBAAmB,CAAC,QAAQ,EAAE,IACvC;aACF;YACD,KAAK,sBAAsB,CAAC,kBAAkB,EAAE;gBAC/C,oBACI,KAAK,IACR,MAAM,EAAE,SAAS,EACjB,IAAI,EAAE,IAAI,mBAAmB,CAAC,QAAQ,EAAE,IACvC;aACF;YACD,KAAK,sBAAsB,CAAC,oBAAoB,EAAE;gBACjD,oBACI,KAAK,IACR,MAAM,EAAE,SAAS,IAChB;aACF;YACD,KAAK,sBAAsB,CAAC,mBAAmB,EAAE;gBAChD,oBACI,KAAK,IACR,MAAM,EAAE,QAAQ,IACf;aACF;YAED,SAAS;gBACR,OAAO,KAAK,CAAC;aACb;SACD;KACD;;;;;;ICzCM,qBAAMA,cAAY,GAAU;QAClC,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,KAAK;KACb,CAAC;;;;;;AAEF,gCAAmC,KAAoB,EAAE,MAAyB;QAA/C,sBAAA;YAAA,sBAAoB;;QACtD,QAAQ,MAAM,CAAC,IAAI;YAClB,SAAS;gBACR,OAAO,KAAK,CAAC;aACb;SACD;KACD;;;;;;ACjBD,yBAYa,eAAe,GAAG;QAC9B,QAAQ,EAAEC,cAA8B;QACxC,WAAW,EAAEC,OAAuB;QACpC,WAAW,EAAEC,kBAAqC;KAClD,CAAC;;AAQF,IAAO,qBAAM,kBAAkB,GAAGC,wBAAqB,CAAe,SAAS,CAAC,CAAC;;;;;;AAQjF,IAAO,qBAAM,sBAAsB,GAAGC,iBAAc,CAAC,kBAAkB,EAAE,UAAC,KAAmB,IAAK,OAAA,KAAK,CAAC,WAAW,GAAA,CAAC,CAAC;;;;;;AChCrH;QA4BC,sCAAoB,QAAkB;YAAlB,aAAQ,GAAR,QAAQ,CAAU;8BAXzB,IAAIC,oBAAe,CAAC,KAAK,CAAC;YAYtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACtC;QAXD,sBACI,8CAAI;;;gBAIR;gBACC,OAAO,IAAI,CAAC,KAAK,CAAC;aAClB;;;;gBAPD,UACS,IAAI;gBACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;;;WAAA;;;;;QASD,iDAAU;;;;YAAV,UAAW,CAAC;;;;;;;;;aASX;;;;QACD,+CAAQ;;;YAAR,eAAa;;oBAtCbC,YAAS,SAAC;wBACV,QAAQ,EAAE,uBAAuB;wBACjC,QAAQ,EAAE,0UAMJ;wBACN,MAAM,EAAE,CAAC,iKAAiK,CAAC;qBAC3K;;;;;wBAdwDC,WAAQ;;;;2BAmB/DC,QAAK;;2CAnBP;;;;;;;ACAA;QAyCC,2CAAoB,QAAkB;YAAlB,aAAQ,GAAR,QAAQ,CAAU;8BAZzB,IAAIH,+BAAe,CAAC,KAAK,CAAC;YAatC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAChD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;SAC1D;QAbD,sBACI,mDAAI;;;gBAIR;gBACC,OAAO,IAAI,CAAC,KAAK,CAAC;aAClB;;;;gBAPD,UACS,IAAI;gBACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;;;WAAA;;;;QAUD,oDAAQ;;;YAAR;;;;;aAKC;;;;QACD,uDAAW;;;YAAX;;aAEC;;;;QACD,yDAAa;;;YAAb,eAAkB;;oBA7ClBC,YAAS,SAAC;wBACV,QAAQ,EAAE,6BAA6B;wBACvC,QAAQ,EAAE,y8BAaH;wBACP,MAAM,EAAE,CAAC,oJAAoJ,CAAC;qBAC9J;;;;;wBA1BwDC,WAAQ;;;;2BA+B/DC,QAAK;;gDA/BP;;;;;;;ACAA;QAiDC,0CAAoB,QAAkB;YAAlB,aAAQ,GAAR,QAAQ,CAAU;iCAfZ,IAAIC,eAAY,EAAE;8BAE/B,IAAIJ,+BAAe,CAAC,KAAK,CAAC;YActC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAChD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAC1D,IAAI,CAAC,cAAc,qBAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,SAAmB,CAAA,CAAC;SACjE;QAfD,sBACI,uDAAS;;;gBAKb;gBACC,OAAO,IAAI,CAAC,WAAW,CAAC;aACxB;;;;gBARD,UACc,IAAe;gBAC5B,IAAI,CAAC,IAAI;oBAAE,OAAO;gBAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;;;WAAA;;;;QAWD,mDAAQ;;;YAAR;;;;;aAKC;;;;QACD,sDAAW;;;YAAX;;aAEC;;;;QACD,wDAAa;;;YAAb;gBACC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;aAC1B;;oBAzDDC,YAAS,SAAC;wBACV,QAAQ,EAAE,4BAA4B;wBACtC,QAAQ,EAAE,mhCAoBJ;wBACN,MAAM,EAAE,CAAC,oJAAoJ,CAAC;qBAC9J;;;;;wBAhCwDC,WAAQ;;;;oCAkC/DG,SAAM;gCAINF,QAAK;;+CAtCP;;;;;;;ACAA;QAsCC,8CAAoB,QAAkB;YAAlB,aAAQ,GAAR,QAAQ,CAAU;8BAdzB,IAAIH,+BAAe,CAAC,KAAK,CAAC;YAetC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAChD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAC1D,IAAI,CAAC,iBAAiB,qBAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,YAAsB,CAAA,CAAC;SACvE;QAhBD,sBACI,2DAAS;;;gBAKb;gBACC,OAAO,IAAI,CAAC,WAAW,CAAC;aACxB;;;;gBARD,UACc,IAAe;gBAC5B,IAAI,CAAC,IAAI;oBAAE,OAAO;gBAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;;;WAAA;;;;QAYD,uDAAQ;;;YAAR;;;;;aAKC;;;;QACD,0DAAW;;;YAAX;;aAEC;;oBA3CDC,YAAS,SAAC;wBACV,QAAQ,EAAE,gCAAgC;wBAC1C,QAAQ,EAAE,uaASJ;wBACN,MAAM,EAAE,CAAC,oJAAoJ,CAAC;qBAC9J;;;;;wBArBwDC,WAAQ;;;;gCA0B/DC,QAAK;;mDA1BP;;;;;;;ACAA;QAqCC,6CAAoB,QAAkB;YAAlB,aAAQ,GAAR,QAAQ,CAAU;8BAbzB,IAAIH,+BAAe,CAAC,KAAK,CAAC;YActC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAChD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAC1D,IAAI,CAAC,cAAc,qBAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,SAAmB,CAAA,CAAC;SACjE;QAfD,sBACI,0DAAS;;;gBAKb;gBACC,OAAO,IAAI,CAAC,WAAW,CAAC;aACxB;;;;gBARD,UACc,IAAe;gBAC5B,IAAI,CAAC,IAAI;oBAAE,OAAO;gBAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;;;WAAA;;;;QAWD,sDAAQ;;;YAAR;;;;;aAKC;;;;QACD,yDAAW;;;YAAX;;aAEC;;oBA1CDC,YAAS,SAAC;wBACV,QAAQ,EAAE,+BAA+B;wBACzC,QAAQ,EAAE,kZASJ;wBACN,MAAM,EAAE,CAAC,oJAAoJ,CAAC;qBAC9J;;;;;wBArBwDC,WAAQ;;;;gCA0B/DC,QAAK;;kDA1BP;;;;;;;ACAA;QA4CC,6CAAoB,QAAkB;YAAlB,aAAQ,GAAR,QAAQ,CAAU;8BAbzB,IAAIH,+BAAe,CAAC,KAAK,CAAC;iCAUb,IAAII,eAAY,EAAE;YAI3C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAChD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;SAC1D;QAdD,sBACI,qDAAI;;;gBAIR;gBACC,OAAO,IAAI,CAAC,KAAK,CAAC;aAClB;;;;gBAPD,UACS,IAAI;gBACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;;;WAAA;;;;QAWD,sDAAQ;;;YAAR;;;;;aAKC;;;;QACD,yDAAW;;;YAAX;;aAEC;;;;QACD,2DAAa;;;YAAb;gBACC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;aAC1B;;oBAnDDH,YAAS,SAAC;wBACV,QAAQ,EAAE,+BAA+B;wBACzC,QAAQ,EAAE,okCAgBH;wBACP,MAAM,EAAE,CAAC,oJAAoJ,CAAC;qBAC9J;;;;;wBA5BwDC,WAAQ;;;;2BAiC/DC,QAAK;oCAQLE,SAAM;;kDAzCR;;;;;;;ACAA;QAyBC,8CAAoB,QAAkB;YAAtC,iBAKC;YALmB,aAAQ,GAAR,QAAQ,CAAU;wBAXd,CAAC;8BACZ,IAAIL,oBAAe,CAAC,KAAK,CAAC;YAWtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACtC,WAAW,CAAC;gBACX,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC;aAC1B,EAAE,IAAI,CAAC,CAAC;SACT;QAbD,sBACI,sDAAI;;;gBAIR;gBACC,OAAO,IAAI,CAAC,KAAK,CAAC;aAClB;;;;gBAPD,UACS,IAAI;gBACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;;;WAAA;;;;QAWD,uDAAQ;;;YAAR,eAAa;;;;;QACb,yDAAU;;;;YAAV,UAAW,CAAC;;;;;;;;aAQX;;oBArCDC,YAAS,SAAC;wBACV,QAAQ,EAAE,gCAAgC;wBAC1C,QAAQ,EAAE,qRAIJ;wBACN,MAAM,EAAE,CAAC,4GAA4G,CAAC;qBACtH;;;;;wBAZwDC,WAAQ;;;;2BAc/DC,QAAK;2BAGLA,QAAK;;mDAjBP;;;;;;;ACAA;QAaC,qCAAyC,MAAM;YAC9C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,qBAAqB,EAAE,MAAM,CAAC,CAAC;SAChE;QAND,sBAAI,+CAAM;;;gBAAV;gBACC,OAAO,IAAI,CAAC,OAAO,CAAC;aACpB;;;WAAA;;oBAPDG,aAAU,SAAC;wBACX,UAAU,EAAE,MAAM;qBAClB;;;;;wDAOaC,SAAM,SAAC,mBAAmB;;;;0CAbxC;;;;;;;ACAA,QAOiB,kBAAkB;IAAnC,WAAiB,kBAAkB;QAClC,IAAA;YAuBC,iBAAY,SAAwE;gBAAxE,0BAAA;oBAAA,8BAAwC,EAAgC,CAAA;;gBAApF,iBAEC;gBADA,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG,IAAI,QAAC,KAAI,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,IAAC,CAAC,CAAC;aACpE;;;;YACD,gCAAc;;;gBAAd;oBACC,OAAO;wBACN,GAAG,EAAE,IAAI,CAAC,GAAG;wBACb,IAAI,EAAE,IAAI,CAAC,IAAI;wBACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;wBACvB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,IAAI,EAAE,IAAI,CAAC,IAAI;wBACf,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,MAAM,EAAE;4BACP,QAAQ,EAAE,IAAI,CAAC,QAAQ;yBACvB;wBACD,KAAK,EAAE;4BACN,IAAI,EAAE;gCACL,IAAI,EAAE,IAAI,CAAC,IAAI;gCACf,OAAO,EAAE,IAAI,CAAC,OAAO;gCACrB,MAAM,EAAE,IAAI,CAAC,MAAM;gCACnB,KAAK,EAAE,IAAI,CAAC,KAAK;6BACjB;4BACD,cAAc,EAAE,IAAI,CAAC,cAAc;4BACnC,IAAI,EAAE,IAAI,CAAC,IAAI;4BACf,MAAM,EAAE;gCACP,IAAI,EAAE,IAAI,CAAC,MAAM;6BACjB;4BACD,QAAQ,EAAE;gCACT,IAAI,EAAE,IAAI,CAAC,QAAQ;6BACnB;4BACD,IAAI,EAAE;gCACL,OAAO,EAAE,IAAI,CAAC,IAAI;6BAClB;4BACD,OAAO,EAAE;gCACR,OAAO,EAAE,IAAI,CAAC,OAAO;6BACrB;yBACD;wBACD,GAAG,EAAE;4BACJ,IAAI,EAAE,IAAI,CAAC,IAAI;4BACf,IAAI,EAAE,IAAI,CAAC,IAAI;4BACf,SAAS,EAAE,IAAI,CAAC,SAAS;4BACzB,eAAe,EAAE,IAAI,CAAC,eAAe;yBACrC;qBACD,CAAC;iBACF;YAED,sBAAW,oBAAS;;;oBAApB;oBACC,OAAO,IAAIhB,eAAS,CAAC;wBACpB,GAAG,EAAE,IAAIC,iBAAW,CAAC,EAAE,EAAE,EAAE,CAAC;wBAC5B,IAAI,EAAE,IAAIA,iBAAW,CAAC,EAAE,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBAClD,IAAI,EAAE,IAAID,iBAAW,CAAC,CAAC,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBACjD,QAAQ,EAAE,IAAID,iBAAW,CAAC,MAAM,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBAC1D,IAAI,EAAE,IAAID,iBAAW,CAAC,KAAK,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBACrD,MAAM,EAAE,IAAID,iBAAW,CAAC,EAAE,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBACpD,MAAM,EAAE,IAAID,iBAAW,CAAC,MAAM,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBACxD,QAAQ,EAAE,IAAID,iBAAW,CAAC,OAAO,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBAC3D,IAAI,EAAE,IAAID,iBAAW,CAAC,OAAO,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBACvD,OAAO,EAAE,IAAID,iBAAW,CAAC,OAAO,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBAC1D,KAAK,EAAE,IAAID,iBAAW,CAAC,EAAE,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBACnD,MAAM,EAAE,IAAID,iBAAW,CAAC,EAAE,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBACpD,OAAO,EAAE,IAAID,iBAAW,CAAC,EAAE,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBACrD,IAAI,EAAE,IAAID,iBAAW,CAAC,CAAC,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBACjD,IAAI,EAAE,IAAID,iBAAW,CAAC,CAAC,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBACjD,SAAS,EAAE,IAAID,iBAAW,CAAC,SAAS,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBAC9D,eAAe,EAAE,IAAID,iBAAW,CAAC,SAAS,EAAE,CAAEC,gBAAU,CAAC,QAAQ,CAAE,CAAC;wBACpE,MAAM,EAAE,IAAIF,eAAS,CAAC,EAAE,CAAC;wBACzB,KAAK,EAAE,IAAIA,eAAS,CAAC,EAAE,CAAC;wBACxB,cAAc,EAAE,IAAIiB,eAAS,CAAC,EAAE,CAAC;wBACjC,IAAI,EAAE,IAAIhB,iBAAW,CAAC,IAAI,CAAC;wBAC3B,KAAK,EAAE,IAAID,eAAS,CAAC;4BACpB,KAAK,EAAE,IAAIC,iBAAW,CAAC,eAAe,CAAC;yBACvC,CAAC;wBACF,QAAQ,EAAE,IAAID,eAAS,CAAC;4BACvB,cAAc,EAAE,IAAIC,iBAAW,CAAC,gBAAgB,CAAC;4BACjD,cAAc,EAAE,IAAIA,iBAAW,CAAC,gBAAgB,CAAC;yBACjD,CAAC;qBACF,CAAC,CAAC;iBACH;;;eAAA;0BA3GH;YA4GE,CAAA;QApGY,0BAAO;QAqGpB,IAAA;YAEC;aAAgB;2BA/GlB;YAgHE,CAAA;QAHY,2BAAQ;OAtGL,kBAAkB,KAAlB,kBAAkB,QA0GlC;;;;;;;QC7FA,wBACS,MACA,OACA;YAFA,SAAI,GAAJ,IAAI;YACJ,UAAK,GAAL,KAAK;YACL,yBAAoB,GAApB,oBAAoB;;0BAoIpB,EAAE;YAlIV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC;SAC/C;;;;QAED,oCAAW;;;YAAX;gBACC,OAAO,IAAI,CAAC,IAAI;qBACd,GAAG,CAA+B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,GAAG,cAAc,CAAC;qBACnF,GAAG,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,GAAA,CAAC;qBAC3B,KAAK,CAAC,UAAC,GAAG;oBACV,OAAOiB,aAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAC7B,CAAC,CAAC;aACJ;;;;QACD,mCAAU;;;YAAV;gBACC,OAAO,IAAI,CAAC,IAAI;qBACd,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,GAAG,aAAa,CAAC;qBACpD,GAAG,CAAC,UAAC,QAAQ,IAAK,OAAA,EAAC,QAAe,GAAE,MAAM,GAAA,CAAC;qBAC3C,KAAK,CAAC,UAAC,GAAG;oBACV,OAAOA,aAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAC7B,CAAC,CAAC;aACJ;;;;QACD,kCAAS;;;YAAT;gBACC,OAAO,IAAI,CAAC,IAAI;qBACd,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,GAAG,qBAAqB,CAAC;qBAC5D,GAAG,CAAC,UAAC,QAAQ,IAAK,OAAA,EAAC,QAAe,GAAE,MAAM,GAAA,CAAC;qBAC3C,KAAK,CAAC,UAAC,GAAG;oBACV,OAAOA,aAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAC7B,CAAC,CAAC;aACJ;;;;;QACD,mCAAU;;;;YAAV,UAAW,EAAU;gBACpB,IAAI,CAAC,EAAE;oBAAE,SAAS;gBAClB,OAAO,IAAI,CAAC,IAAI;qBACd,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,IAAG,kBAAgB,EAAI,CAAA,CAAC;qBAC3D,GAAG,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,GAAA,CAAC;qBAC3B,KAAK,CAAC,UAAC,GAAG;oBACV,OAAOA,aAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAC7B,CAAC,CAAC;aACJ;;;;;QACD,mCAAU;;;;YAAV,UAAW,IAAS;gBACnB,qBAAI,KAAK,GAAG,IAAI,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACjD,OAAO,IAAI,CAAC,IAAI;qBACd,IAAI,CAA8B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,GAAG,cAAc,EAAE,KAAK,CAAC,cAAc,EAAE,CAAC;qBAC3G,GAAG,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,GAAA,CAAC;qBAC3B,KAAK,CAAC,UAAC,GAAG;oBACV,OAAOA,aAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAC7B,CAAC,CAAC;aACJ;;;;;QACD,sCAAa;;;;YAAb,UAAc,IAAS;gBACtB,OAAO,IAAI,CAAC,IAAI;qBACd,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,GAAG,cAAc,EAAE,IAAI,CAAC;qBAC3D,GAAG,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,GAAA,CAAC;qBAC3B,KAAK,CAAC,UAAC,GAAG;oBACV,OAAOA,aAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAC7B,CAAC,CAAC;aACJ;;;;;QACD,sCAAa;;;;YAAb,UAAc,EAAU;gBACvB,OAAO,IAAI,CAAC,IAAI;qBACd,MAAM,CAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,qBAAgB,EAAI,CAAC;qBAC9D,GAAG,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,GAAA,CAAC;qBAC3B,KAAK,CAAC,UAAC,GAAG;oBACV,OAAOA,aAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAC7B,CAAC,CAAC;aACJ;;;;;;;QACD,gCAAO;;;;;;YAAP,UAAQ,MAAmB,EAAE,IAAgB,EAAE,IAAqB;gBAApE,iBAgCC;gBAhC4B,qBAAA;oBAAA,QAAgB;;gBAAE,qBAAA;oBAAA,YAAqB;;gBACnE,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC,EAAE;oBACvB,OAAO,IAAI,CAAC,IAAI;yBACd,GAAG,CAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,cAAW,EAAE;wBACnD,MAAM,EAAE;4BACP,QAAQ,EAAE,MAAM,CAAC,GAAG;4BACpB,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE;yBACzD;qBACD,CAAC;yBACD,GAAG,CAAC,UAAC,GAAQ,IAAK,OAAA,GAAG,CAAC,MAAM,GAAA,CAAC,CAAC;iBAChC;qBAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,CAAC,EAAE;oBAChC,OAAO,IAAI,CAAC,IAAI;yBACd,GAAG,CAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,cAAW,EAAE;wBACnD,MAAM,EAAE;4BACP,QAAQ,EAAE,MAAM,CAAC,GAAG;4BACpB,IAAI,EAAE,IAAI;yBACV;qBACD,CAAC;yBACD,GAAG,CAAC,UAAC,GAAQ,IAAK,OAAA,GAAG,CAAC,MAAM,GAAA,CAAC,CAAC;iBAChC;qBAAM;oBACN,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;oBAC1B,OAAOA,aAAU,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,CAAC;wBACvD,OAAA,KAAI,CAAC,IAAI;6BACP,GAAG,CAAI,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,cAAW,EAAE;4BACnD,MAAM,EAAE;gCACP,QAAQ,EAAE,MAAM,CAAC,GAAG;gCACpB,IAAI,EAAE,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE;6BACzD;yBACD,CAAC;6BACD,GAAG,CAAC,UAAC,GAAQ,IAAK,OAAA,GAAG,CAAC,MAAM,GAAA,CAAC;qBAAA,CAC/B,CAAC;iBACF;aACD;;;;;;QACD,kDAAyB;;;;;YAAzB,UAA0B,IAAS,EAAE,eAAe;gBACnD,qBAAI,GAAG,GAAG,EAAE,CAAC;gBAEb,eAAe,CAAC,OAAO,CAAC,UAAC,IAAI;oBAC5B,qBAAI,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;oBAEjD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;wBACnB,OAAO,GAAG,CAAC,IAAI,CAAC,CAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;qBACvE;oBACD,qBAAI,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAE/C,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;wBACzB,QAAQ,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,CAAC,IAAK,OAAA,CAAE,IAAI,CAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAA,CAAC,CAAC,EAAE;qBACpF;yBAAM;wBACN,OAAO,GAAG,CAAC,IAAI,CAAC,CAAE,QAAQ,CAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;qBAChD;iBACD,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC;aACX;;;;;QACD,wCAAe;;;;YAAf,UAAgB,IAAS;gBACxB,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACtB;;;;;QACD,8CAAqB;;;;YAArB,UAAsB,IAAS;gBAC9B,OAAO,EAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAU,GAAE,MAAM,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,UAAU,GAAA,CAAC,CAAC;aACnE;;;;;QACD,yCAAgB;;;;YAAhB,UAAiB,OAAO;gBACvB,OAAO;oBACN,IAAI,EAAE;wBACL,OAAO,SAAA;qBACP;oBACD,MAAM,EAAE;wBACP,IAAI,EAAE,IAAI;qBACV;iBACD,CAAC;aACF;;;;;;;;QAGD,wCAAe;;;;;;;YAAf,UAAgB,MAAW,EAAE,EAAU,EAAE,KAAa,EAAE,IAAY;gBAApE,iBAWC;gBAVA,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,cACzB,MAAM,IACT,MAAM,EAAE,cAAY,EAAI,IACvB,CAAC;gBAEH,OAAO,IAAI,CAAC,OAAO,mBAAC,EAAiB,GAAE,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;oBAC3D,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;wBACpB,OAAO,EAAE,KAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,cAAc,CAAC;qBACzE,CAAC,CAAC;iBACH,CAAC,CAAC;aACH;;;;;;QACD,qCAAY;;;;;YAAZ,UAAa,SAAqB,EAAE,IAAgB;gBAAvC,0BAAA;oBAAA,YAAY,EAAE,GAAG,IAAI;;gBAAE,qBAAA;oBAAA,QAAgB;;gBACnD,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,IAAI,SAAS,CAAC,CAAC;aACpD;;oBA3JDH,aAAU,SAAC;wBACX,UAAU,EAAE,MAAM;qBAClB;;;;;wBAhBQI,aAAU;wBAEVC,QAAK;wBAGL,2BAA2B;;;;6BANpC;;;;;;;ACAA;QA6BC,qCAAoB,QAAkB,EAAU,cAA8B;YAA1D,aAAQ,GAAR,QAAQ,CAAU;YAAU,mBAAc,GAAd,cAAc,CAAgB;8BAVjE,IAAIX,+BAAe,CAAC,KAAK,CAAC;YAWtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACtC;QAVD,sBACI,6CAAI;;;gBAIR;gBACC,OAAO,IAAI,CAAC,KAAK,CAAC;aAClB;;;;gBAPD,UACS,IAAI;gBACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;;;WAAA;;;;QAQD,8CAAQ;;;YAAR;;gBAEC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAA,IAAI;oBAC3D,SAAS;iBACT,CAAC,CAAC;aACH;;oBAhCDC,YAAS,SAAC;wBACV,QAAQ,EAAE,sBAAsB;wBAChC,QAAQ,EAAE,wPAOC;wBACX,MAAM,EAAE,CAAC,oJAAoJ,CAAC;qBAC9J;;;;;wBAjBwDC,WAAQ;wBAIxD,cAAc;;;;2BAiBrBC,QAAK;;0CArBP;;;;;;;ACAA;QA6BC,iCAAoB,QAAkB,EAAU,cAA8B;YAA1D,aAAQ,GAAR,QAAQ,CAAU;YAAU,mBAAc,GAAd,cAAc,CAAgB;8BAZjE,IAAIH,+BAAe,CAAC,KAAK,CAAC;YAatC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACtC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;SACjB;QAZD,sBACI,yCAAI;;;gBAIR;gBACC,OAAO,IAAI,CAAC,KAAK,CAAC;aAClB;;;;gBAPD,UACS,IAAI;gBACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;;;WAAA;;;;QAUD,0CAAQ;;;YAAR;gBAAA,iBAKC;gBAJA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAA,IAAI;oBACnF,qBAAI,OAAO,GAAG,KAAI,CAAC,cAAc,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,EAAE,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;oBACvG,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC7B,CAAC,CAAC;aACH;;;;QACD,6CAAW;;;YAAX;gBACC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;aACpC;;oBAnCDC,YAAS,SAAC;wBACV,QAAQ,EAAE,iBAAiB;wBAC3B,QAAQ,EAAE,2QAIJ;wBACN,MAAM,EAAE,CAAC,+IAA+I,CAAC;qBACzJ;;;;;wBAfwDC,WAAQ;wBAKxD,cAAc;;;;2BAerBC,QAAK;;sCApBP;;;;;;;ACAA;QAiBC,yCAAoB,OAAuB;YAAvB,YAAO,GAAP,OAAO,CAAgB;SAAI;;;;QAE/C,kDAAQ;;;YAAR,eAAa;;oBAVbF,YAAS,SAAC;wBACV,QAAQ,EAAE,0BAA0B;wBACpC,QAAQ,EAAE,yFAGV;qBACA;;;;;wBAVQ,cAAc;;;8CALvB;;;;;;;ACAA;QA6CC,6BAAoB,cAA8B,EAAU,KAAyC;YAAjF,mBAAc,GAAd,cAAc,CAAgB;YAAU,UAAK,GAAL,KAAK,CAAoC;8BADjF,EAAE;SACmF;QAPzG,sBACI,qCAAI;;;;gBADR,UACS,IAAI;gBACZ,IAAI,CAAC,IAAI;oBAAE,OAAO;gBAClB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACjC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;aAClB;;;WAAA;;;;QAID,sCAAQ;;;YAAR,eAAa;;oBArCbA,YAAS,SAAC;wBACV,QAAQ,EAAE,aAAa;wBACvB,QAAQ,EAAE,6aAoBV;wBACA,MAAM,EAAE,CAAC,wGAAwG,CAAC;qBAClH;;;;;wBA7BQ,cAAc;wBAHdU,QAAK;;;;kCAkCZR,QAAK;2BAELA,QAAK;;kCAtCP;;;;;;;ICEA,IAAA;;;2BAFA;QA8CC,CAAA;;;;;;;;qBCzCc,4BAA4B;2BACtB,kCAAkC;6BAChC,oCAAoC;gCACjC,uCAAuC;4BAC3C,mCAAmC;oCAC3B,2CAA2C;uBACxD,+BAA+B;qBACjC,4BAA4B;kCACf,yCAAyC;iCAC1C,wCAAwC;yBAChD,gCAAgC;sBACnC,6BAA6B;0BACzB,iCAAiC;;IAGrD,IAAA;QAEC,0BAAmB,OAAoC;YAApC,YAAO,GAAP,OAAO,CAA6B;wBADvC,qBAAqB,CAAC,WAAW;SACU;+BAtB5D;QAuBC,CAAA;AAHD,IAIA,IAAA;QAEC,+BAAmB,OAAoC;YAApC,YAAO,GAAP,OAAO,CAA6B;wBADvC,qBAAqB,CAAC,iBAAiB;SACI;oCA1B5D;QA2BC,CAAA;AAHD,IAIA,IAAA;QAEC,iCAAmB,OAAoC;YAApC,YAAO,GAAP,OAAO,CAA6B;wBADvC,qBAAqB,CAAC,mBAAmB;SACE;sCA9B5D;QA+BC,CAAA;AAHD,IAIA,IAAA;;wBACiB,qBAAqB,CAAC,kBAAkB;;qCAjCzD;QAkCC,CAAA;AAFD,IAGA,IAAA;QAEC,oCAAmB,OAAY;YAAZ,YAAO,GAAP,OAAO,CAAK;wBADf,qBAAqB,CAAC,sBAAsB;SACzB;yCArCpC;QAsCC,CAAA;AAHD,IAIA,IAAA;QAEC,4BAAmB,OAAY;YAAZ,YAAO,GAAP,OAAO,CAAK;wBADf,qBAAqB,CAAC,aAAa;SAChB;iCAzCpC;QA0CC,CAAA;AAHD,IAIA,IAAA;QAEC,0BAAmB,OAAY;YAAZ,YAAO,GAAP,OAAO,CAAK;wBADf,qBAAqB,CAAC,WAAW;SACd;+BA7CpC;QA8CC,CAAA;AAHD,IAIA,IAAA;QAEC,wCAAmB,OAAY;YAAZ,YAAO,GAAP,OAAO,CAAK;wBADf,qBAAqB,CAAC,0BAA0B;SAC7B;6CAjDpC;QAkDC,CAAA;AAHD,IAIA,IAAA;QAEC,2CAAmB,OAAY;YAAZ,YAAO,GAAP,OAAO,CAAK;wBADf,qBAAqB,CAAC,wBAAwB;SAC3B;gDArDpC;QAsDC,CAAA;AAHD,IAIA,IAAA;QAEC,qCAAmB,OAAY;YAAZ,YAAO,GAAP,OAAO,CAAK;wBADf,qBAAqB,CAAC,uBAAuB;SAC1B;0CAzDpC;QA0DC,CAAA;AAHD,IAQA,IAAA;QAEC,+BAAmB,OAAY;YAAZ,YAAO,GAAP,OAAO,CAAK;wBADf,qBAAqB,CAAC,gBAAgB;SACnB;oCAjEpC;QAkEC,CAAA;;;;;;;QC8IA,6BACS,gBACA,aACA,OACA;YAJT,iBA+EC;YA9EQ,mBAAc,GAAd,cAAc;YACd,gBAAW,GAAX,WAAW;YACX,UAAK,GAAL,KAAK;YACL,UAAK,GAAL,KAAK;6BAxBS,kBAAkB,CAAC,OAAO,CAAC,SAAS;YA0B1D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;YAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC;;YAE9C,IAAI,CAAC,eAAe,GAAG,EAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,kBAA4B,GAAE,QAAQ,CAAC;YACtF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;gBACjC,qBAAM,SAAS,GAAW,MAAM,CAAC,IAAI,CAAC,CAAC;gBACvC,SAAS;oBACR,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAA,IAAI;wBACvD,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC;4BACzB,GAAG,EAAE,IAAI,CAAC,GAAG;4BACb,IAAI,EAAE,IAAI,CAAC,IAAI;4BACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;4BACvB,MAAM,EAAE,IAAI,CAAC,MAAM;4BACnB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;4BAC1B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI;4BAC9B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI;4BAClC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO;4BAC7B,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO;4BACnC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;4BAC1B,MAAM,EAAE,IAAI,CAAC,MAAM;4BACnB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO;4BAChC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc;4BACzC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI;4BACnB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;4BACrB,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI;4BACnB,eAAe,EAAE,IAAI,CAAC,GAAG,CAAC,eAAe;4BACzC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS;yBAC7B,CAAC,CAAC;wBAEH,qBAAM,aAAa,IAAc,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA,CAAC;wBACnE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,SAAS;4BAC1D,IAAI,EAAE,SAAS,IAAI,aAAa,CAAC,QAAQ,CAAC;gCACzC,aAAa,CAAC,UAAU,CAAC,SAAS,EAAE,IAAIX,iBAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;yBACzF,CAAC,CAAC;wBAEH,qBAAM,YAAY,IAAc,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA,CAAC;wBACjE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG;4BACnD,IAAI,EAAE,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC;gCAClC,YAAY,CAAC,UAAU,CAAC,GAAG,EAAE,IAAIA,iBAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;yBAC3E,CAAC,CAAC;wBACH,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,SAAS,CAAC,GAAA,CAAC,CAAC;wBAClG,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;wBAC1B,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kBAAkB,CAAC,KAAI,CAAC,CAAC,CAAC;wBAElD,KAAI,CAAC,oBAAoB,GAAG;4BAC3B,IAAI,EAAE,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI;4BAC/B,MAAM,EAAE;gCACP,SAAS,EAAE,KAAI,CAAC,SAAS;gCACzB,cAAc,EAAE,KAAI,CAAC,cAAc;6BACnC;yBACD,CAAC;qBACF,CAAC,CAAC;gBACJ,KAAI,CAAC,oBAAoB,GAAG;oBAC3B,IAAI,EAAE,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI;oBAC/B,MAAM,EAAE;wBACP,SAAS,EAAE,KAAI,CAAC,SAAS;wBACzB,cAAc,EAAE,KAAI,CAAC,cAAc;qBACnC;iBACD,CAAC;aACF,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,GAAG;gBACnB,KAAK;gBACL,OAAO;gBACP,KAAK;gBACL,SAAS;gBACT,MAAM;gBACN,MAAM;gBACN,aAAa;gBACb,QAAQ;gBACR,UAAU;gBACV,OAAO;aACP,CAAC;SACF;;;;QACD,sCAAQ;;;YAAR;gBAAA,iBASC;gBARA,IAAI,CAAC,SAAS,CAAC,QAAQ,mBAAgB,aAAa,CAAC,SAAS,CAAC,UAAA,MAAM;oBACpE,IACC,MAAM,IAAI,OAAO;wBACjB,EAAC,KAAI,CAAC,SAAS,CAAC,QAAQ,kBAA4B,GAAE,QAAQ,CAAC,MAAM,GAAG,CAAC;wBACzE,KAAI,CAAC,IACN;wBACC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,2BAA2B,CAAC,KAAI,CAAC,CAAC,CAAC;iBAC5D,CAAC,CAAC;aACH;;;;QACD,yCAAW;;;YAAX;gBACC,IAAI,IAAI,CAAC,gBAAgB;oBAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;aAC/D;;;;;;;;;QAMD,8CAAgB;;;YAAhB;gBAAA,iBAOC;gBANA,qBAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,cAAM,IAAI,CAAC,MAAM,IAAE,QAAQ,EAAE,CAAC,KAAI,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC;gBAClG,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,SAAS,CAAC,UAAA,IAAI;oBAC9C,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBACtB,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAClE,CAAC,CAAC;gBACH,OAAO,QAAQ,CAAC;aAChB;;;;QACD,2CAAa;;;YAAb;gBACC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,0BAA0B,CAAC,IAAI,CAAC,CAAC,CAAC;aAC1D;;;;QACD,yCAAW;;;YAAX;gBACC,qBAAM,cAAc,GAAG,EAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,SAAmB,GAAE,QAAQ,CAAC;gBAC7E,KAAK,qBAAI,EAAE,IAAI,cAAc,EAAE;oBAC9B,cAAc,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;iBACvD;gBACD,IAAI,CAAC,oBAAoB,GAAG;oBAC3B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI;oBAC/B,MAAM,EAAE;wBACP,SAAS,EAAE,IAAI,CAAC,SAAS;wBACzB,cAAc,EAAE,IAAI,CAAC,cAAc;qBACnC;iBACD,CAAC;gBACF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,0BAA0B,CAAC,IAAI,CAAC,CAAC,CAAC;aAC1D;;;;;;QACD,uCAAS;;;;;YAAT,UAAU,QAAqB,EAAE,SAAsB;gBAA7C,yBAAA;oBAAA,aAAqB;;gBAAE,0BAAA;oBAAA,cAAsB;;gBACtD,qBAAM,OAAO,IAAc,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAA,CAAC;gBACrE,OAAO,CAAC,IAAI,CACX,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;oBACtB,QAAQ,EAAE,CAAE,QAAQ,CAAE;oBACtB,SAAS,EAAE,CAAE,SAAS,EAAEC,gBAAU,CAAC,QAAQ,CAAE;iBAC7C,CAAC,CACF,CAAC;aACF;;;;;QACD,0CAAY;;;;YAAZ,UAAa,KAAK;gBACjB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;gBAC1B,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;gBACnD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;aAClD;;;;;QACD,0CAAY;;;;YAAZ,UAAa,CAAS;gBACrB,qBAAM,OAAO,IAAc,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAA,CAAC;gBACrE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aACpB;;;;QACD,8CAAgB;;;YAAhB;gBAAA,iBA0BC;gBAzBA,OAAOgB,qBAAU,CAAC,MAAM,CAAC,UAAA,KAAK;oBAI7B,qBAAI,OAAO,GAAG,KAAI,CAAC,cAAc,CAAC,yBAAyB,CAC1D,KAAI,CAAC,IAAI,EACT,EAAC,KAAI,CAAC,SAAS,CAAC,QAAQ,kBAA4B,GAAE,KAAK,CAC3D,CAAC;oBACF,KAAI,CAAC,SAAS,CAAC,QAAQ,YAAS,QAAQ,CAAC,OAAO,CAAC,CAAC;;oBAElD,qBAAM,aAAa,IAAc,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA,CAAC;oBACnE,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM;wBACrB,qBAAI,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;wBAC1B,IAAI,EAAE,SAAS,IAAI,aAAa,CAAC,QAAQ,CAAC;4BACzC,aAAa,CAAC,UAAU,CAAC,SAAS,EAAE,IAAIjB,iBAAW,CAAC,SAAS,CAAC,CAAC,CAAC;qBACjE,CAAC,CAAC;oBAEH,qBAAM,YAAY,IAAc,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA,CAAC;oBACjE,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM;wBACrB,qBAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;wBACpB,IAAI,EAAE,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC;4BAClC,YAAY,CAAC,UAAU,CAAC,GAAG,EAAE,IAAIA,iBAAW,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;qBAC1E,CAAC,CAAC;oBACH,KAAK,CAAC,IAAI,EAAE,CAAC;iBACb,CAAC,CAAC;aACH;;;;QACD,6CAAe;;;YAAf;gBACC,qBAAI,IAAI,GAAG,IAAI,YAAY,EAAE,CAAC;gBAC9B,IAAI,CAAC,GAAG,GAAG,aAAa,CAAC;gBACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;gBACtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC1B,IAAI,CAAC,GAAG,GAAG;oBACV,eAAe,EAAE,CAAC;oBAClB,KAAK,EAAE,CAAC;oBACR,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe;iBACrD,CAAC;gBACF,IAAI,CAAC,MAAM,GAAG;oBACb,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ;iBACvC,CAAC;gBACF,IAAI,CAAC,KAAK,GAAG;oBACZ,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc;oBACnD,IAAI,EAAE;wBACL,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,YAAS,KAAK;wBAC9C,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI;wBAC/B,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK;wBACjC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,WAAQ,KAAK;qBAC5C;oBACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI;oBAC/B,MAAM,EAAE;wBACP,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM;qBACjC;oBACD,QAAQ,EAAE;wBACT,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ;qBACnC;oBACD,IAAI,EAAE;wBACL,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI;qBAClC;oBACD,OAAO,EAAE;wBACR,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO;qBACrC;iBAeD,CAAC;;;;;gBAKF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,OAAOiB,qBAAU,CAAC,KAAK,EAAE,CAAC;aAC1B;;;;;QACD,iCAAG;;;;YAAH,UAAI,KAAK;gBACR,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;aAChE;;oBA1ZDR,YAAS,SAAC;wBACV,QAAQ,EAAE,aAAa;wBACvB,QAAQ,EAAE,62QA8JJ;wBACN,MAAM,EAAE,CAAC,2PAA2P,CAAC;qBACrQ;;;;;wBA/KQ,cAAc;wBAViCW,iBAAW;wBAE1DD,QAAK;wBACEE,qBAAc;;;kCAJ9B;;;;;;;ACAA;QAoBC,8BAAoB,cAA8B;YAA9B,mBAAc,GAAd,cAAc,CAAgB;yBAL1C,GAAG;YAMV,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;SAClD;;;;QAED,uCAAQ;;;YAAR;gBACC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACnE;;oBApBDZ,YAAS,SAAC;wBACV,QAAQ,EAAE,cAAc;wBACxB,QAAQ,EAAE,yNAEJ;wBACN,MAAM,EAAE,CAAC,kIAAkI,CAAC;qBAC5I;;;;;wBATQ,cAAc;;;;gCAerBE,QAAK,SAAC,IAAI;;mCAlBZ;;;;;;;ACAA;QA6BC,2BAAoB,cAA8B;YAA9B,mBAAc,GAAd,cAAc,CAAgB;yBAD1C,GAAG;YAEV,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;;;;;;SAOlD;;;;QAED,oCAAQ;;;YAAR;;;;;;aAMC;;oBAxCDF,YAAS,SAAC;wBACV,QAAQ,EAAE,UAAU;wBACpB,QAAQ,EAAE,+pBAgBV;wBACA,MAAM,EAAE,CAAC,oGAAoG,CAAC;qBAC9G;;;;;wBArBQ,cAAc;;;gCAJvB;;;;;;;ACAA;QA0CC,8BACS,gBACA,OACA;YAHT,iBASC;YARQ,mBAAc,GAAd,cAAc;YACd,UAAK,GAAL,KAAK;YACL,UAAK,GAAL,KAAK;6BAJS,mBAAmB,CAAC,OAAO,CAAC,SAAS;YAM3D,qBAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;gBAC7C,qBAAM,SAAS,GAAW,MAAM,CAAC,IAAI,CAAC,CAAC;gBACvC,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC;aAC7F,CAAC,CAAC;SACH;;;;QAED,uCAAQ;;;YAAR,eAAa;;;;;QAEb,kCAAG;;;;YAAH,UAAI,KAAK;gBACR,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;aACjE;;oBA9CDA,YAAS,SAAC;wBACV,QAAQ,EAAE,cAAc;wBACxB,QAAQ,EAAE,ktCAwBV;wBACA,MAAM,EAAE,CAAC,EAAE,CAAC;qBACZ;;;;;wBAjCQ,cAAc;wBANdY,qBAAc;wBAGdF,QAAK;;;mCAHd;;;;;;;;QCwCC,0BACS,OACA,gBACA,MACA,UACA;YALT,iBAgBC;YAfQ,UAAK,GAAL,KAAK;YACL,mBAAc,GAAd,cAAc;YACd,SAAI,GAAJ,IAAI;YACJ,aAAQ,GAAR,QAAQ;YACR,UAAK,GAAL,KAAK;kCApB6B,IAAIX,+BAAe,CAAC,KAAK,CAAC;uBAcvD,IAAI,CAAC,GAAG,EAAE;YAQvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAEtC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;gBACjC,qBAAM,SAAS,GAAW,MAAM,CAAC,IAAI,CAAC,CAAC;gBACvC,SAAS;oBACR,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAA,IAAI;wBACvD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;qBAClB,CAAC,CAAC;aACJ,CAAC,CAAC;SACH;QA7BD,sBACI,kCAAI;;;gBAKR;gBACC,OAAO,IAAI,CAAC,MAAM,CAAC;aACnB;;;;gBARD,UACS,KAAmB;gBAC3B,IAAI,EAAE,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,GAAG,CAAC;oBAAE,OAAO;gBACxC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC/B;;;WAAA;;;;QAyBD,0CAAe;;;YAAf;gBAAA,iBAqDC;;;;;;;;;;;;;;gBAvCA,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,GAAA,CAAC,CAAC,SAAS,CAAC,UAAA,KAAK;oBAClE,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC,QAAQ,cACpB,KAAI,CAAC,IAAI,CAAC,KAAK,IAClB,MAAM,EAAE,cAAY,KAAI,CAAC,IAAI,CAAC,GAAK,IAIlC,CAAC;oBACH,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,cAAc;yBACzC,OAAO,CAAC,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC;yBACzB,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,IAAI,SAAS,GAAA,CAAC;yBACjC,SAAS,CAAC,UAAA,IAAI;wBACd,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;wBACtB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;wBACtB,IAAI,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;4BACzB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gCACf,OAAO,EAAE,KAAI,CAAC,cAAc,CAAC,yBAAyB,CACrD,IAAI,CAAC,IAAI,EACT,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAC9B;gCACD,QAAQ,EAAE,IAAI;6BACd,CAAC,CAAC;yBACH;6BAAM;4BACN,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gCACf,OAAO,EAAE,KAAI,CAAC,cAAc,CAAC,yBAAyB,CACrD,IAAI,CAAC,IAAI,EACT,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAC9B;6BACD,CAAC,CAAC;yBACH;qBACD,CAAC,CAAC;iBACJ,CAAC,CAAC;;;;;;;aAQH;;;;QACD,sCAAW;;;YAAX;;aAEC;;;;;QACD,qCAAU;;;;YAAV,UAAW,CAAkB;gBAA7B,iBAmBC;gBAlBA,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;;gBAEpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc;qBACzC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC;qBAC1F,SAAS,CAAC,UAAA,IAAI;oBACd,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;oBACtB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;;;;;;;;;;;;;;;oBAQtB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC;wBACf,OAAO,EAAE,KAAI,CAAC,cAAc,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,EAAE,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;qBACjG,CAAC,CAAC;iBACH,CAAC,CAAC;aACJ;;oBAvHDC,YAAS,SAAC;wBACV,QAAQ,EAAE,SAAS;wBACnB,QAAQ,EAAE,sfAKoF;wBAC9F,MAAM,EAAE,CAAC,wPAAwP,CAAC;qBAClQ;;;;;wBAnBQU,QAAK;wBAIL,cAAc;wBANdD,aAAU;wBAF0CR,WAAQ;wBAM5DW,qBAAc;;;;2BAqBrBV,QAAK;;+BA3BP;;;;;;;ACAA;QA4FC,2CAAoB,QAAkC;YAAlC,aAAQ,GAAR,QAAQ,CAA0B;oCA9CnC;gBAClB,GAAG,EAAE,gBAAgB;gBACrB,KAAK,EAAE,gBAAgB;gBACvB,GAAG,EAAE,gBAAgB;gBACrB,OAAO,EAAE,gBAAgB;gBACzB,IAAI,EAAE,gBAAgB;gBACtB,IAAI,EAAE,gBAAgB;gBACtB,aAAa,EAAE,gBAAgB;gBAC/B,MAAM,EAAE,uBAAuB;gBAC/B,KAAK,EAAE,oCAAoC;gBAC3C,QAAQ,EAAE,4BAA4B;aACtC;oCAIuB,IAAI;mCA8BF,EAAE;SAC8B;QA7B1D,sBACI,mDAAI;;;;gBADR,UACS,IAAS;gBACjB,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC;oBAAE,OAAO;gBACnD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC;gBAChD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,qBAAI,GAAG,GAAG,EAAE,IAAI,MAAA,EAAE,CAAC;gBACnB,qBAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC7D,qBAAI,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAA,SAAS;oBAClD,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC;iBACxD,CAAC,CAAC;gBACH,qBAAI,cAAc,GAAGW,qBAAkB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;gBAEhE,qBAAI,QAAQ,GAAGA,qBAAkB,CAAC,qBAAqB,CACtD,cAAc,EACd,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAC7C,CAAC;gBACF,qBAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;gBAEhE,qBAAI,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAEzC,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBAE1D,IAAI,IAAI,CAAC,gBAAgB,EAAE;oBAC1B,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;iBAChC;gBAED,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;aAClC;;;WAAA;;;;QAGD,2DAAe;;;YAAf,eAAoB;;;;;QACpB,sDAAU;;;;YAAV,UAAW,CAAC;gBACX,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aAC/C;;oBA9EDb,YAAS,SAAC;wBACV,QAAQ,EAAE,4BAA4B;wBACtC,QAAQ,EAAE,s9BAgBC;wBACX,MAAM,EAAE,CAAC,uQAAuQ,CAAC;wBACjR,eAAe,EAAE;4BAChB,uBAAuB;4BACvB,oCAAoC;4BACpC,4BAA4B;4BAC5B,gBAAgB;yBAChB;qBACD;;;;;wBAxCAc,2BAAwB;;;;gDAsDvBC,YAAS,SAAC,2BAA2B,EAAE,EAAE,IAAI,EAAEC,mBAAgB,EAAE;sCAEjED,YAAS,SAAC,gBAAgB;2BAG1Bb,QAAK;;gDA/DP;;;;;;;ACAA;QAmFC,iDAAoB,QAAkC;YAAlC,aAAQ,GAAR,QAAQ,CAA0B;oCA9CnC;gBAClB,GAAG,EAAE,iCAAiC;gBACtC,IAAI,EAAE,mCAAmC;gBACzC,aAAa,EAAE,mCAAmC;gBAClD,KAAK,EAAE,iCAAiC;gBACxC,GAAG,EAAE,gCAAgC;gBACrC,OAAO,EAAE,iCAAiC;gBAC1C,IAAI,EAAE,mCAAmC;gBACzC,QAAQ,EAAE,oCAAoC;aAC9C;iCAGyB,IAAIC,eAAY,EAAE;oCACpB,IAAI;SAiC8B;QAhC1D,sBACI,yDAAI;;;;gBADR,UACS,IAAS;gBADlB,iBA+BC;gBA7BA,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC;oBAAE,OAAO;gBACnD,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,EAAE;oBAC1C,IAAI,IAAI,CAAC,gBAAgB;wBAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;oBAC3D,OAAO;iBACP;gBACD,qBAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAClD,qBAAI,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAA,SAAS;oBAC1D,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC;iBAChE,CAAC,CAAC;gBACH,qBAAI,cAAc,GAAGU,qBAAkB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;gBAEhE,qBAAI,QAAQ,GAAGA,qBAAkB,CAAC,qBAAqB,CACtD,cAAc,EACd,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAC7C,CAAC;gBACF,qBAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;gBAChE,qBAAI,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACzC,IAAI,EAAM,SAAS,CAAC,QAAQ,GAAE,aAAa;oBAC1C,EAAM,SAAS,CAAC,QAAQ,GAAE,aAAa,CAAC,SAAS,CAAC;wBACjD,KAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;qBAC1B,CAAC,CAAC;gBAEJ,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBAE1D,IAAI,IAAI,CAAC,gBAAgB,EAAE;oBAC1B,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;iBAChC;gBAED,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;aAClC;;;WAAA;;;;QAED,iEAAe;;;YAAf,eAAoB;;oBA3DpBb,YAAS,SAAC;wBACV,QAAQ,EAAE,mCAAmC;wBAC7C,QAAQ,EAAE,wCAAwC;wBAClD,MAAM,EAAE,CAAC,2EAA2E,CAAC;wBACrF,eAAe,EAAE;4BAChB,iCAAiC;4BACjC,gCAAgC;4BAChC,mCAAmC;4BACnC,oCAAoC;yBACpC;qBACD;;;;;wBA9BAc,2BAAwB;;;;gDA0CvBC,YAAS,SAAC,2BAA2B,EAAE,EAAE,IAAI,EAAEC,mBAAgB,EAAE;oCAEjEZ,SAAM;2BAENF,QAAK;;sDAnDP;;;;;;;;QCcC,wBAAoB,QAAsB,EAAUe,SAAc,EAAU,cAA8B;YAA1G,iBAA8G;YAA1F,aAAQ,GAAR,QAAQ,CAAc;YAAU,WAAM,GAANA,SAAM,CAAQ;YAAU,mBAAc,GAAd,cAAc,CAAgB;mCAGxF,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAACC,aAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,OAAO,GAAA,CAAC,EAAEA,aAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,gBAAgB,EAAE,GAAA,CAAC,CAAC;+BAGnG,IAAI,CAAC,QAAQ;iBACzB,MAAM,EAAE;iBACR,IAAI,CACJA,aAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,OAAO,GAAA,CAAC,EAC7BC,mBAAS,CAAC,UAAC,IAAiC;gBAC3C,OAAA,KAAI,CAAC,cAAc;qBACjB,WAAW,EAAE;qBACb,IAAI,CACJD,aAAG,CAAC,UAAA,GAAG,IAAI,OAAA,IAAI,kBAAkB,CAAC,GAAG,CAAC,GAAA,CAAC,EACvCE,oBAAU,CAAC,cAAM,OAAAZ,qBAAU,CAAC,EAAE,CAAC,IAAI,iBAAiB,EAAE,CAAC,GAAA,CAAC,CACxD;aAAA,CACF,CACD;SAlB4G;;oBAF9GH,aAAU;;;;;wBARFgB,eAAO;wBAHPC,aAAM;wBAON,cAAc;;;;YAQrBC,cAAM,EAAE;;;;YAGRA,cAAM,EAAE;;;6BAnBV;;;;;;;;QCwBC,2BAAoB,QAAsB,EAAUN,SAAc,EAAU,cAA8B;YAA1G,iBAA8G;YAA1F,aAAQ,GAAR,QAAQ,CAAc;YAAU,WAAM,GAANA,SAAM,CAAQ;YAAU,mBAAc,GAAd,cAAc,CAAgB;sCAGrF,IAAI,CAAC,QAAQ;iBAChC,MAAM,CAAC,qBAAqB,CAAC,WAAW,CAAC;iBACzC,IAAI,CAACC,aAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,OAAO,GAAA,CAAC,EAAEA,aAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,qBAAqB,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC;+BAGrE,IAAI,CAAC,QAAQ;iBACzB,MAAM,CAAC,qBAAqB,CAAC,iBAAiB,CAAC;iBAC/C,IAAI,CACJA,aAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,OAAO,GAAA,CAAC,EAC7BC,mBAAS,CAAC,UAAC,IAAgC;gBAC1C,OAAA,KAAI,CAAC,cAAc;qBACjB,UAAU,CAAC,IAAI,CAAC;qBAChB,IAAI,CACJD,aAAG,CAAC,UAAA,GAAG,IAAI,OAAA,IAAI,uBAAuB,CAAC,GAAG,CAAC,GAAA,CAAC,EAC5CE,oBAAU,CAAC,cAAM,OAAAZ,qBAAU,CAAC,EAAE,CAAC,IAAI,sBAAsB,EAAE,CAAC,GAAA,CAAC,CAC7D;aAAA,CACF,CACD;wCAGqB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAC1FU,aAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,OAAO,GAAA,CAAC,EAC7BA,aAAG,CAAC,UAAA,IAAI;gBACP,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAE,UAAU,CAAE,CAAC,CAAC;gBACrC,OAAOV,qBAAU,CAAC,KAAK,EAAE,CAAC;aAC1B,CAAC,CACF;kCAGgB,IAAI,CAAC,QAAQ;iBAC5B,MAAM,CAAC,qBAAqB,CAAC,aAAa,CAAC;iBAC3C,IAAI,CAACU,aAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,OAAO,GAAA,CAAC,EAAEA,aAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,gBAAgB,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC;gCAG/D,IAAI,CAAC,QAAQ;iBAC1B,MAAM,CAAC,qBAAqB,CAAC,WAAW,CAAC;iBACzC,IAAI,CAACA,aAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,OAAO,GAAA,CAAC,EAAEA,aAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,8BAA8B,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC;2CAGlE,IAAI,CAAC,QAAQ;iBACrC,MAAM,CAAC,qBAAqB,CAAC,sBAAsB,CAAC;iBACpD,IAAI,CAACA,aAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,OAAO,GAAA,CAAC,EAAEA,aAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,qBAAqB,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC;+CAGrD,IAAI,CAAC,QAAQ;iBACzC,MAAM,CAAC,qBAAqB,CAAC,0BAA0B,CAAC;iBACxD,IAAI,CACJA,aAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,OAAO,GAAA,CAAC,EAC7BC,mBAAS,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,gBAAgB,EAAE,CAAC,GAAG,CAAC,cAAM,OAAA,IAAI,iCAAiC,CAAC,IAAI,CAAC,GAAA,CAAC,GAAA,CAAC,CACjG;4CAGyB,IAAI,CAAC,QAAQ;iBACtC,MAAM,CAAC,qBAAqB,CAAC,uBAAuB,CAAC;iBACrD,IAAI,CACJD,aAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,OAAO,GAAA,CAAC,EAC7BC,mBAAS,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,gBAAgB,EAAE,CAAC,GAAG,CAAC,cAAM,OAAA,IAAI,iCAAiC,CAAC,IAAI,CAAC,GAAA,CAAC,GAAA,CAAC,CACjG;6CAG0B,IAAI,CAAC,QAAQ;iBACvC,MAAM,CAAC,qBAAqB,CAAC,wBAAwB,CAAC;iBAEtD,IAAI,CACJD,aAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,OAAO,GAAA,CAAC,EAC7BC,mBAAS,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,gBAAgB,EAAE,CAAC,GAAG,CAAC,cAAM,OAAA,IAAI,qBAAqB,CAAC,IAAI,CAAC,GAAA,CAAC,GAAA,CAAC,CACrF;oCAGiB,IAAI,CAAC,QAAQ;iBAC9B,MAAM,CAAC,qBAAqB,CAAC,gBAAgB,CAAC;iBAC9C,IAAI,CAACD,aAAG,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,OAAO,GAAA,CAAC,EAAEA,aAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,eAAe,EAAE,GAAA,CAAC,CAAC;SA1EoC;;oBAF9Gb,aAAU;;;;;wBAlBFgB,eAAO;wBAHPC,aAAM;wBAQN,cAAc;;;;YAiBrBC,cAAM,EAAE;;;;YAKRA,cAAM,EAAE;;;;YAeRA,cAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;;;;YAS3BA,cAAM,EAAE;;;;YAKRA,cAAM,EAAE;;;;YAKRA,cAAM,EAAE;;;;YAKRA,cAAM,EAAE;;;;YAQRA,cAAM,EAAE;;;;YAQRA,cAAM,EAAE;;;;YASRA,cAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;;;gCA/F7B;;;;;;;ACCA,IASA,qBAAM,MAAM,GAAW;QACtB;YACC,IAAI,EAAE,UAAU;YAChB,SAAS,EAAE,+BAA+B;YAC1C,QAAQ,EAAE;gBACT;oBACC,IAAI,EAAE,EAAE;oBACR,SAAS,EAAE,iBAAiB;iBAC5B;gBACD;oBACC,IAAI,EAAE,KAAK;oBACX,SAAS,EAAE,mBAAmB;iBAC9B;gBACD;oBACC,IAAI,EAAE,UAAU;oBAChB,SAAS,EAAE,mBAAmB;iBAC9B;gBACD;oBACC,IAAI,EAAE,QAAQ;oBACd,SAAS,EAAE,uBAAuB;iBAClC;gBACD;oBACC,IAAI,EAAE,OAAO;oBACb,SAAS,EAAE,oCAAoC;iBAC/C;gBACD;oBACC,IAAI,EAAE,UAAU;oBAChB,SAAS,EAAE,4BAA4B;iBACvC;aACD;SACD;KACD,CAAC;AAEF,yBAAa,aAAa,GAAwBC,mBAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;;;;;;AC3C/E;QA2BC,kCAAoB,cAA8B;YAA9B,mBAAc,GAAd,cAAc,CAAgB;YACjD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,IAAI,CAACN,aAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,MAAM,GAAA,CAAC,CAAC,CAAC;SAChF;QAVD,sBAAI,2CAAK;;;gBAAT;gBACC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,SAAS,CAAC;aAC1C;;;WAAA;QACD,sBAAI,4CAAM;;;gBAAV;gBACC,OAAO;oBACN,SAAS,EAAE,IAAI,CAAC,iBAAiB;iBACjC,CAAC;aACF;;;WAAA;;;;QAID,2CAAQ;;;YAAR,eAAa;;oBArBblB,YAAS,SAAC;wBACV,QAAQ,EAAE,sOAIG;qBACb;;;;;wBATQ,cAAc;;;uCANvB;;;;;;;ACAA;;;;;;;QAgHQ,wBAAO;;;;YAAd,UAAe,MAA4B;gBAC1C,OAAO;oBACN,QAAQ,EAAE,oBAAoB;oBAC9B,SAAS,EAAE,CAAE,EAAE,OAAO,EAAE,mBAAmB,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAE;iBACjE,CAAC;aACF;;oBAxDDyB,WAAQ,SAAC;wBACT,OAAO,EAAE;4BACRC,mBAAgB;4BAChBC,iBAAW;4BACXH,mBAAY;4BACZI,mBAAY;4BACZC,2BAAkB;4BAClBC,0BAAiB;4BACjBC,sBAAa;4BACbC,wBAAe;4BACfC,sBAAa;4BACbC,wBAAe;4BACfC,wBAAe;4BACfC,uBAAc;4BACdC,0BAAiB;4BACjBC,2BAAkB;4BAClBC,sBAAa;4BACbC,2BAAgB;4BAChBC,uBAAc;4BACdC,yBAAgB;4BAChBC,0BAAiB;4BACjBC,8BAAqB;4BACrBC,yBAAmB;4BACnBC,kCAAuB;yBACvB;wBACD,YAAY,EAAE;4BACb,mBAAmB;4BACnB,iBAAiB;4BACjB,oBAAoB;4BACpB,oBAAoB;4BACpB,uCAAuC;4BACvC,gBAAgB;4BAChB,iCAAiC;4BACjC,+BAA+B;4BAC/B,mBAAmB;4BACnB,uBAAuB;4BACvB,4BAA4B;4BAC5B,iCAAiC;4BACjC,gCAAgC;4BAChC,oCAAoC;4BACpC,mCAAmC;4BACnC,oCAAoC;4BACpC,2BAA2B;4BAC3B,mCAAmC;4BACnC,wBAAwB;yBACxB;wBACD,eAAe,EAAE,CAAE,wBAAwB,EAAE,oBAAoB,CAAE;wBACnE,OAAO,EAAE,CAAE,wBAAwB,CAAE;wBACrC,SAAS,EAAE,EAAE;qBACb;;+BA9GD;;;;;;oBAwHCrB,WAAQ,SAAC;wBACT,OAAO,EAAE;4BACR,gBAAgB;4BAChBsB,cAAW,CAAC,UAAU,CAAC,SAAS,EAAE,eAAe,CAAC;4BAClDC,qBAAa,CAAC,UAAU,CAAC,CAAE,cAAc,EAAE,iBAAiB,CAAE,CAAC;4BAC/D,aAAa;yBACb;wBACD,OAAO,EAAE,CAAE,gBAAgB,CAAE;qBAC7B;;mCAhID;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
