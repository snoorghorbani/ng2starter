!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/common"),require("@angular/flex-layout"),require("@angular/platform-browser/animations"),require("@angular/material"),require("rxjs/Rx"),require("@angular/forms"),require("@angular/common/http"),require("rxjs/BehaviorSubject"),require("@ngrx/store"),require("rxjs"),require("rxjs/Observable"),require("@ngrx/effects"),require("rxjs/observable/of"),require("@angular/router"),require("@angular/core"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("@soushians/diagram",["exports","@angular/common","@angular/flex-layout","@angular/platform-browser/animations","@angular/material","rxjs/Rx","@angular/forms","@angular/common/http","rxjs/BehaviorSubject","@ngrx/store","rxjs","rxjs/Observable","@ngrx/effects","rxjs/observable/of","@angular/router","@angular/core","rxjs/operators"],e):e((t.soushians=t.soushians||{},t.soushians.diagram={}),t.ng.common,t.ng["flex-layout"],t.ng.platformBrowser.animations,t.ng.material,t.rxjs.Rx,t.ng.forms,t.ng.common.http,t.rxjs.BehaviorSubject,t.i2,t.rxjs,t.rxjs.Observable,t.effects,t.rxjs["observable/of"],t.ng.router,t.ng.core,t.rxjs.operators)}(this,function(t,e,r,o,n,a,i,c,s,u,d,m,p,l,f,h,g){"use strict";var y,v={endpoints:{},env:{production:!1,frontend_server:"frontend/server/did/not/set"}},b=new h.InjectionToken("DiagramModuleConfig"),x=function(){return(x=Object.assign||function(t){for(var e,r=1,o=arguments.length;r<o;r++)for(var n in e=arguments[r])Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t}).apply(this,arguments)};function C(t,e,r,o){var n,a=arguments.length,i=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;0<=c;c--)(n=t[c])&&(i=(a<3?n(i):3<a?n(e,r,i):n(e,r))||i);return 3<a&&i&&Object.defineProperty(e,r,i),i}function D(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}!function(t){var e=function(){function t(e){void 0===e&&(e={});var r=this;Object.keys(e).forEach(function(t){return r[t]=e[t]})}return t.prototype.getRequestBody=function(){return{}},t}();t.Request=e;var r=function o(){};t.Response=r}(y||(y={}));var w="[DIAGRAM] GET_DIAGRAM",I="[DIAGRAM] GET_DIAGRAM_START",G="[DIAGRAM] GET_DIAGRAM_SUCCEED",F="[DIAGRAM] GET_DIAGRAM_FAILED",A=function Vt(){this.type=I},S=function Bt(t){this.payload=t,this.type=G},j=function Ut(){this.type=F};console.log(y);var M,R={loaded:!1,diagram:{Result:[]}};function T(t,e){switch(void 0===t&&(t=R),e.type){case w:case I:return x({},t,{loaded:!0});default:return t}}!function(t){var e=function(){function t(t){}return t.prototype.getRequestQueryParams=function(){return{}},Object.defineProperty(t,"formGroup",{get:function(){return new i.FormGroup({Name:new i.FormControl("",[i.Validators.required]),IsActive:new i.FormControl("true",[i.Validators.required]),Route:new i.FormControl("",[i.Validators.required])})},enumerable:!0,configurable:!0}),t}();t.Request=e;var r=function o(){};t.Response=r}(M||(M={}));var O="[DIAGRAM][EDIT] EDIT_DIAGRAM",L="[DIAGRAM][EDIT] EDIT_DIAGRAM_START",N="[DIAGRAM][EDIT] EDIT_DIAGRAM_SUCCEED",E="[DIAGRAM][EDIT] EDIT_DIAGRAM_FAILED",k=function zt(t){this.payload=t,this.type=O};console.log(M);var P={status:"pristine",data:{Result:{}}};function $(t,e){switch(void 0===t&&(t=P),e.type){case O:return x({},t,{status:"dirty",data:new M.Response});case L:return x({},t,{status:"pending",data:new M.Response});case N:return x({},t,{status:"succeed"});case E:return x({},t,{status:"failed"});default:return t}}var q={route:"",result:!1};function V(t,e){return void 0===t&&(t=q),e.type,t}var B,U={diagrams:T,editDiagram:$,parentGuard:V},z=u.createFeatureSelector("diagram"),H=(u.createSelector(z,function(t){return t.editDiagram}),function(){function t(t){this.injector=t,this.dataLoaded=new d.BehaviorSubject(!1),this.data=this.injector.get("data")}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.timeChange=function(t){},t.prototype.ngOnInit=function(){},t.decorators=[{type:h.Component,args:[{selector:"diagram-server-status",template:'<div *ngIf="dataLoaded | async">\r\n  \x3c!-- <mat-icon [ngClass]="dataStatus$ ? \'connected\' : \'disconnected\'">\r\n    fiber_manual_record\r\n  </mat-icon> --\x3e\r\n  \x3c!-- <span *ngIf="dataStatus$">{{data.Widget.booleano.SuccessMessage}}</span>\r\n  <span *ngIf="!dataStatus$">{{data.Widget.booleano.FailureMessage}}</span> --\x3e\r\n</div>',styles:[".disconnected{color:#ba3030}.connected{color:#30ae1c}.numeric{font-size:2.4em;line-height:1.8}.numeric.title{font-family:iran-sans-bold,Tahoma;font-size:1.1em}"]}]}],t.ctorParameters=function(){return[{type:h.Injector}]},t.propDecorators={data:[{type:h.Input}]},t}()),Z=function(){function t(t){this.injector=t,this.dataLoaded=new s.BehaviorSubject(!1),this.formGroup=this.injector.get("formGroup"),this.diagramService=this.injector.get("diagramService")}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.ngOnDestroy=function(){},t.prototype.configChanged=function(){},t.decorators=[{type:h.Component,args:[{selector:"diagram-partial-config-edit",template:'<form [formGroup]="formGroup" fxLayout=\'column\'>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Legend" fxFlexFill>نمایش توضیحات</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Zoom" fxFlexFill>بزرگنمایی</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Subchart" fxFlexFill>نمایش بزرگنمایی در زیر نمودار</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Tooltip" fxFlexFill>نمایش توضیحات به صورت گروهی</mat-checkbox>\r\n  </div>\r\n</form>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],t.ctorParameters=function(){return[{type:h.Injector}]},t.propDecorators={data:[{type:h.Input}]},t}(),W=function(){function t(t){this.injector=t,this.ConfigChanged=new h.EventEmitter,this.dataLoaded=new s.BehaviorSubject(!1),this.formGroup=this.injector.get("formGroup"),this.diagramService=this.injector.get("diagramService"),this.donutFormGroup=this.formGroup.controls.donut}return Object.defineProperty(t.prototype,"formGroup",{get:function(){return this._dataLoaded},set:function(t){t&&(this._dataLoaded=t,this.dataLoaded.next(!0))},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.ngOnDestroy=function(){},t.prototype.configChanged=function(){this.ConfigChanged.emit()},t.decorators=[{type:h.Component,args:[{selector:"pie-diagram-partial-config",template:'<div *ngIf="dataLoaded | async" class="diagram-box">\r\n  <form [formGroup]="formGroup" fxLayout=\'column\'>\r\n    <div>\r\n      <mat-checkbox (change)="configChanged()" formControlName="Legend" fxFlexFill>نمایش توضیحات</mat-checkbox>\r\n    </div>\r\n    <div>\r\n      <mat-checkbox (change)="configChanged()" formControlName="IsActive" fxFlexFill>وضعیت</mat-checkbox>\r\n    </div>\r\n    <div>\r\n      <mat-checkbox (change)="configChanged()" formControlName="Legend" fxFlexFill>نمایش توضیحات</mat-checkbox>\r\n    </div>\r\n    <div>\r\n      <mat-checkbox (change)="configChanged()" formControlName="IsActive" fxFlexFill>وضعیت</mat-checkbox>\r\n    </div>\r\n  </form>\r\n  <form [formGroup]="donutFormGroup">\r\n    <mat-form-field>\r\n      <input matInput placeholder="عنوان" formControlName="title">\r\n    </mat-form-field>\r\n  </form>\r\n</div>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],t.ctorParameters=function(){return[{type:h.Injector}]},t.propDecorators={ConfigChanged:[{type:h.Output}],formGroup:[{type:h.Input}]},t}(),K=function(){function t(t){this.injector=t,this.dataLoaded=new s.BehaviorSubject(!1),this.formGroup=this.injector.get("formGroup"),this.diagramService=this.injector.get("diagramService"),this.booleanoFormGroup=this.formGroup.controls.booleano}return Object.defineProperty(t.prototype,"formGroup",{get:function(){return this._dataLoaded},set:function(t){t&&(this._dataLoaded=t,this.dataLoaded.next(!0))},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.ngOnDestroy=function(){},t.decorators=[{type:h.Component,args:[{selector:"booleano-widget-partial-config",template:'<div *ngIf="dataLoaded | async" class="diagram-box">\r\n  <form [formGroup]="booleanoFormGroup">\r\n    <mat-form-field>\r\n      <input matInput placeholder="عنوان" formControlName="SuccessMessage">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input matInput placeholder="عنوان" formControlName="FailureMessage">\r\n    </mat-form-field>\r\n  </form>\r\n</div>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],t.ctorParameters=function(){return[{type:h.Injector}]},t.propDecorators={formGroup:[{type:h.Input}]},t}(),Q=function(){function t(t){this.injector=t,this.dataLoaded=new s.BehaviorSubject(!1),this.formGroup=this.injector.get("formGroup"),this.diagramService=this.injector.get("diagramService"),this.donutFormGroup=this.formGroup.controls.donut}return Object.defineProperty(t.prototype,"formGroup",{get:function(){return this._dataLoaded},set:function(t){t&&(this._dataLoaded=t,this.dataLoaded.next(!0))},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.ngOnDestroy=function(){},t.decorators=[{type:h.Component,args:[{selector:"numeric-widget-partial-config",template:'<div *ngIf="dataLoaded | async" class="diagram-box">\r\n  <form [formGroup]="donutFormGroup">\r\n    <mat-form-field>\r\n      <input matInput placeholder="عنوان" formControlName="title">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input matInput placeholder="عنوان" formControlName="title">\r\n    </mat-form-field>\r\n  </form>\r\n</div>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],t.ctorParameters=function(){return[{type:h.Injector}]},t.propDecorators={formGroup:[{type:h.Input}]},t}(),J=function(){function t(t){this.injector=t,this.dataLoaded=new s.BehaviorSubject(!1),this.ConfigChanged=new h.EventEmitter,this.formGroup=this.injector.get("formGroup"),this.diagramService=this.injector.get("diagramService")}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.ngOnDestroy=function(){},t.prototype.configChanged=function(){this.ConfigChanged.emit()},t.decorators=[{type:h.Component,args:[{selector:"linear-diagram-partial-config",template:'<form [formGroup]="formGroup" fxLayout=\'column\'>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Legend" fxFlexFill>نمایش توضیحات</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Zoom" fxFlexFill>بزرگنمایی</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Subchart" fxFlexFill>نمایش بزرگنمایی در زیر نمودار</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Tooltip" fxFlexFill>نمایش توضیحات به صورت گروهی</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Flow" fxFlexFill>Flow</mat-checkbox>\r\n  </div>\r\n</form>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],t.ctorParameters=function(){return[{type:h.Injector}]},t.propDecorators={data:[{type:h.Input}],ConfigChanged:[{type:h.Output}]},t}(),X=function(){function t(t){var e=this;this.injector=t,this.time=0,this.dataLoaded=new d.BehaviorSubject(!1),this.data=this.injector.get("data"),setInterval(function(){e.time=e.time+1},1e3)}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.timeChange=function(t){},t.decorators=[{type:h.Component,args:[{selector:"diagram-server-connecting-time",template:'<div *ngIf="dataLoaded | async">\r\n  <div fxLayoutAlign="center center" class="numeric title">{{data.Description}}</div>\r\n  \x3c!-- <div fxLayoutAlign="center center" class="numeric">{{time | timeCounter}}</div> --\x3e\r\n  <div [id]="\'diagram_\' + data._id"></div>\r\n</div>',styles:[".numeric{font-size:2.4em;line-height:1.8}.numeric.title{font-family:iran-sans-bold,Tahoma;font-size:1.1em}"]}]}],t.ctorParameters=function(){return[{type:h.Injector}]},t.propDecorators={time:[{type:h.Input}],data:[{type:h.Input}]},t}(),Y=function(){function t(t){this._config=Object.assign({},v,t)}return Object.defineProperty(t.prototype,"config",{get:function(){return this._config},enumerable:!0,configurable:!0}),t.decorators=[{type:h.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:undefined,decorators:[{type:h.Inject,args:[b]}]}]},t.ngInjectableDef=h.defineInjectable({factory:function(){return new t(h.inject(b))},token:t,providedIn:"root"}),t}();!function(t){var e=function(){function t(e){void 0===e&&(e={});var r=this;Object.keys(e).forEach(function(t){return r[t]=e[t]})}return t.prototype.getRequestBody=function(){return{_id:this._id,Name:this.Name,IsActive:this.IsActive,Source:this.Source,Type:this.Type,Groups:this.Groups,Widget:{booleano:this.booleano},Chart:{data:{type:this.Type,columns:this.columns,colors:this.Colors,types:this.Types},ColumnMappings:this.ColumnMappings,Flow:this.Flow,legend:{show:this.Legend},subchart:{show:this.Subchart},zoom:{enabled:this.Zoom},tooltip:{grouped:this.Tooltip}},Box:{Cols:this.Cols,Rows:this.Rows,TextColor:this.TextColor,BackgroundColor:this.BackgroundColor}}},Object.defineProperty(t,"formGroup",{get:function(){return new i.FormGroup({_id:new i.FormControl("",[]),Name:new i.FormControl("",[i.Validators.required]),Sync:new i.FormControl(0,[i.Validators.required]),IsActive:new i.FormControl("true",[i.Validators.required]),Type:new i.FormControl("pie",[i.Validators.required]),Groups:new i.FormControl("",[i.Validators.required]),Legend:new i.FormControl("true",[i.Validators.required]),Subchart:new i.FormControl("false",[i.Validators.required]),Zoom:new i.FormControl("false",[i.Validators.required]),Tooltip:new i.FormControl("false",[i.Validators.required]),Route:new i.FormControl("",[i.Validators.required]),Source:new i.FormControl({},[i.Validators.required]),columns:new i.FormControl("",[i.Validators.required]),Cols:new i.FormControl(1,[i.Validators.required]),Rows:new i.FormControl(1,[i.Validators.required]),TextColor:new i.FormControl("#000000",[i.Validators.required]),BackgroundColor:new i.FormControl("#ffffff",[i.Validators.required]),Colors:new i.FormGroup({}),Types:new i.FormGroup({}),ColumnMappings:new i.FormArray([]),Flow:new i.FormControl(!0),donut:new i.FormGroup({title:new i.FormControl("Default Title")}),booleano:new i.FormGroup({SuccessMessage:new i.FormControl("SuccessMessage"),FailureMessage:new i.FormControl("FailureMessage")})})},enumerable:!0,configurable:!0}),t}();t.Request=e;var r=function o(){};t.Response=r}(B||(B={}));var tt=function(){function t(t,e,r){this.http=t,this.store=e,this.configurationService=r,this.charts={},this.config=this.configurationService.config}return t.prototype.getDiagrams=function(){return this.http.get(this.config.env.frontend_server+"/api/diagram").map(function(t){return t})["catch"](function(t){return a.Observable["throw"](t)})},t.prototype.getSources=function(){return this.http.get(this.config.env.frontend_server+"/api/source").map(function(t){return t.Result})["catch"](function(t){return a.Observable["throw"](t)})},t.prototype.getGroups=function(){return this.http.get(this.config.env.frontend_server+"/api/diagram/groups").map(function(t){return t.Result})["catch"](function(t){return a.Observable["throw"](t)})},t.prototype.getDiagram=function(t){return this.http.get(this.config.env.frontend_server+"/api/diagram/"+t).map(function(t){return t})["catch"](function(t){return a.Observable["throw"](t)})},t.prototype.addDiagram=function(t){var e=new B.Request(t);return this.http.post(this.config.env.frontend_server+"/api/diagram",e.getRequestBody()).map(function(t){return t})["catch"](function(t){return a.Observable["throw"](t)})},t.prototype.updateDiagram=function(t){return this.http.put(this.config.env.frontend_server+"/api/diagram",t).map(function(t){return t})["catch"](function(t){return a.Observable["throw"](t)})},t.prototype.deleteDiagram=function(t){return this.http["delete"](this.config.env.frontend_server+"/api/diagram/"+t).map(function(t){return t})["catch"](function(t){return a.Observable["throw"](t)})},t.prototype.getData=function(e,t,r,o){var n=this;return void 0===r&&(r=0),void 0===o&&(o=!1),o&&0!==r?this.http.get(this.config.env.frontend_server+"/api/data",{params:{sourceId:e._id,time:this.getFloorTime(e.Interval,r).toString()}}).map(function(t){return t.Result}):0==e.Interval?this.http.get(this.config.env.frontend_server+"/api/data",{params:{sourceId:e._id,time:null}}).map(function(t){return t.Result}):(r=r||Date.now(),a.Observable.timer(0,e.Interval).pipe(g.takeUntil(t),g.switchMap(function(t){return n.http.get(n.config.env.frontend_server+"/api/data",{params:{sourceId:e._id,time:n.getFloorTime(e.Interval,r).toString()}}).pipe(g.map(function(t){return t.Result}))})))},t.prototype.extract_columns_from_data=function(o,t){var n=[];return t.forEach(function(t){var r=_.getValue(o,t.ValuePath);if(!t.NamePath)return n.push([t.ValuePath.split(".").pop()].concat(r));var e=_.getValue(o,t.NamePath);return _.is.array(e)?n=n.concat(e.map(function(t,e){return[t].concat(r[e])})):n.push([e].concat(r))}),n},t.prototype.get_data_report=function(t){return _.report(t)},t.prototype.get_last_node_of_data=function(t){return _.report(t).filter(function(t){return t.isLastNode})},t.prototype.buildChartConfig=function(t){return{data:{columns:t},legend:{show:!0}}},t.prototype.generateDiagram=function(e,r,t,o){var n=this;return this.charts[r]=c3.generate(x({},e,{bindto:"#diagram_"+r})),this.getData({},new a.Subject,o).subscribe(function(t){n.charts[r].load({columns:n.extract_columns_from_data(t.Data,e.ColumnMappings)})})},t.prototype.getFloorTime=function(t,e){return void 0===t&&(t=6e4),void 0===e&&(e=0),Math.floor((e||Date.now())/t)},t.decorators=[{type:h.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:c.HttpClient},{type:u.Store},{type:Y}]},t.ngInjectableDef=h.defineInjectable({factory:function(){return new t(h.inject(c.HttpClient),h.inject(u.Store),h.inject(Y))},token:t,providedIn:"root"}),t}(),et=function(){function t(t,e){this.injector=t,this.diagramService=e,this.unsubscribe=new d.Subject,this.dataLoaded=new s.BehaviorSubject(!1),this.data=this.injector.get("data")}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.diagramService.getData(this.data.Source,this.unsubscribe).pipe(g.filter(function(t){return t!=undefined}),g.takeUntil(this.unsubscribe)).subscribe(function(t){})},t.prototype.ngOnDestroy=function(){this.unsubscribe.next(),this.unsubscribe.complete()},t.decorators=[{type:h.Component,args:[{selector:"numeric-edit-diagram",template:'<mat-card *ngIf="dataLoaded | async" class="diagram-box">\r\n  <mat-card-header>\r\n    <mat-card-title fxLayoutAlign="space-between center">\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n  </mat-card-content>\r\n</mat-card>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],t.ctorParameters=function(){return[{type:h.Injector},{type:tt}]},t.propDecorators={data:[{type:h.Input}]},t}(),rt=function(){function t(t,e){this.injector=t,this.diagramService=e,this.unsubscribe=new d.Subject,this.dataLoaded=new s.BehaviorSubject(!1),this.data=this.injector.get("data"),this.counter=0}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){var r=this;this.dataSubscribtion=this.diagramService.getData(this.data.Source,this.unsubscribe).pipe(g.takeUntil(this.unsubscribe)).subscribe(function(t){var e=r.diagramService.extract_columns_from_data(t.Data,r.data.Chart.ColumnMappings);r.counter=e[0][1]})},t.prototype.ngOnDestroy=function(){this.dataSubscribtion.unsubscribe(),this.unsubscribe.next(),this.unsubscribe.complete()},t.decorators=[{type:h.Component,args:[{selector:"diagram-numeric",template:'<div *ngIf="dataLoaded | async">\r\n  \x3c!-- <div fxLayoutAlign="center center" class="numeric">{{data.Source.Data | json}}</div> --\x3e\r\n  <div fxLayoutAlign="center center" class="numeric">{{counter}}</div>\r\n  <div [id]="\'diagram_\' + data._id"></div>\r\n</div>',styles:[":host{width:100%}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}.mat-card{padding:0}"]}]}],t.ctorParameters=function(){return[{type:h.Injector},{type:tt}]},t.propDecorators={data:[{type:h.Input}]},t}(),ot=function(){function t(t){this.service=t}return t.prototype.ngOnInit=function(){},t.decorators=[{type:h.Component,args:[{selector:"diagram-module-container",template:'<div fxflex="100" fxLayout="column">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n'}]}],t.ctorParameters=function(){return[{type:tt}]},t}(),nt=function(){function t(t,e){this.diagramService=t,this.store=e,this.dataReport=[]}return Object.defineProperty(t.prototype,"data",{set:function(t){t&&(this.dataReport=_.report(t),this._data=t)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.decorators=[{type:h.Component,args:[{selector:"data-mapper",template:'<div fxLayout="row">\r\n    <div fxFlex="grow">\r\n        <b>\r\n            Key\r\n        </b>\r\n    </div>\r\n    <div fxFlex="nogrow">\r\n        <b>\r\n            Type\r\n        </b>\r\n    </div>\r\n</div>\r\n<div *ngFor="let item of dataReport" [class]="\'depts_\' + item.depts" fxLayout="row">\r\n    <div fxFlex="grow">\r\n        {{item.name}}\r\n    </div>\r\n    <div fxFlex="nogrow">\r\n        {{item.type}}\r\n    </div>\r\n</div>\r\n',styles:["mat-radio-button{width:100%;display:block}div.depts_2{margin-right:25px}div.depts_3{margin-right:50px}"]}]}],t.ctorParameters=function(){return[{type:tt},{type:u.Store}]},t.propDecorators={destination:[{type:h.Input}],data:[{type:h.Input}]},t}(),at=function Ht(){},it="[DIAGRAM][ADD] ADD_DIAGRAM",ct="[DIAGRAM][ADD] ADD_DIAGRAM_START",st="[DIAGRAM][ADD] ADD_DIAGRAM_SUCCEED",ut="[DIAGRAM][ADD] DIAGRAM_CONFIG_CHANGED",dt="[DIAGRAM][ADD] ADD_DIAGRAM_FAILED",mt="[DIAGRAM][ADD] STRUCTURE_DEFINITION_START",pt="[DIAGRAM][ADD] HAVE_STRUCTURE",lt="[DIAGRAM][ADD] DATA_LOADED",ft="[DIAGRAM][ADD] STRUCTURE_DEFINITION_END",ht="[DIAGRAM][ADD] COLUMNS_MAPPING_CHANGED",gt="[DIAGRAM][ADD] GENERATE_DIAGRAM",yt=function Zt(t){this.payload=t,this.type=it},vt=function Wt(t){this.payload=t,this.type=ct},bt=function Kt(t){this.payload=t,this.type=st},xt=function Qt(){this.type=dt},Ct=function Jt(t){this.payload=t,this.type=ut},Dt=function Xt(t){this.payload=t,this.type=pt},wt=function Yt(t){this.payload=t,this.type=lt},It=function te(t){this.payload=t,this.type=mt},Gt=function ee(t){this.payload=t,this.type=ft},Ft=function re(t){this.payload=t,this.type=ht},_t=function oe(t){this.payload=t,this.type=gt},At=function(){function t(t,e,r,o){var n=this;this.diagramService=t,this.formBuilder=e,this.store=r,this.route=o,this.unsubscribe=new d.Subject,this.formGroup=B.Request.formGroup,this.sources=this.diagramService.getSources(),this.groups=this.diagramService.getGroups(),this.columnsMappings=this.formGroup.controls.ColumnMappings.controls,this.route.params.subscribe(function(t){var e=t.id;e&&n.diagramService.getDiagram(e).subscribe(function(e){n.formGroup.patchValue({_id:e._id,Name:e.Name,IsActive:e.IsActive,Groups:e.Groups,Type:e.Chart.data.type,Legend:e.Chart.legend.show,Subchart:e.Chart.subchart.show,Zoom:e.Chart.zoom.enabled,Tooltip:e.Chart.tooltip.grouped,Sync:e.Source.Interval,Source:e.Source,columns:e.Chart.data.columns,ColumnMappings:e.Chart.ColumnMappings,Cols:e.Box.Cols,Flow:e.Chart.Flow,Rows:e.Box.Rows,BackgroundColor:e.Box.BackgroundColor,TextColor:e.Box.TextColor});var r=n.formGroup.controls.Colors;Object.keys(e.Chart.data.colors||{}).forEach(function(t){t in r.controls||r.addControl(t,new i.FormControl(e.Chart.data.colors[t]))});var o=n.formGroup.controls.Types;Object.keys(e.Chart.data.types||{}).forEach(function(t){t in o.controls||o.addControl(t,new i.FormControl(e.Chart.data.types[t]))}),e.Chart.ColumnMappings.forEach(function(t){return n.addColumn(t.NamePath,t.ValuePath)}),n.source=e.Source,n.store.dispatch(new Dt(n)),n.diagramPartialConfig={type:n.formGroup.value.Type,inputs:{formGroup:n.formGroup,diagramService:n.diagramService}}}),n.diagramPartialConfig={type:n.formGroup.value.Type,inputs:{formGroup:n.formGroup,diagramService:n.diagramService}}}),this.diagramTypes=["bar","donut","pie","scatter","line","area","area-spline","numero","booleano","tempo"]}return t.prototype.ngOnInit=function(){var e=this;this.formGroup.controls.ColumnMappings.statusChanges.subscribe(function(t){"VALID"==t&&0<e.formGroup.controls.ColumnMappings.controls.length&&e.data&&e.store.dispatch(new Ft(e))})},t.prototype.ngOnDestroy=function(){this.dataSubscription&&this.dataSubscription.unsubscribe(),this.unsubscribe.next(),this.unsubscribe.complete()},t.prototype.getDataStructure=function(){var e=this,t=this.diagramService.getData(x({},this.source,{Interval:0}),this.unsubscribe,Date.now()-1e4);return this.dataSubscription=t.subscribe(function(t){e.data=t.Data,e.pathOptions=e.diagramService.get_data_report(t.Data)}),t},t.prototype.configChanged=function(){this.store.dispatch(new Ct(this))},t.prototype.typeChanged=function(){var t=this.formGroup.controls.Types.controls;for(var e in t)t[e].setValue(this.formGroup.value.Type);this.diagramPartialConfig={type:this.formGroup.value.Type,inputs:{formGroup:this.formGroup,diagramService:this.diagramService}},this.store.dispatch(new Ct(this))},t.prototype.addColumn=function(t,e){void 0===t&&(t=""),void 0===e&&(e=""),this.formGroup.controls.ColumnMappings.push(this.formBuilder.group({NamePath:[t],ValuePath:[e,i.Validators.required]}))},t.prototype.routeEntered=function(t){this.source=t.value,this.formGroup.patchValue({Source:t.value}),this.store.dispatch(new Dt(this))},t.prototype.removeColumn=function(t){this.formGroup.controls.ColumnMappings.removeAt(t)},t.prototype.calculateColumns=function(){var n=this;return m.Observable.create(function(t){var e=n.diagramService.extract_columns_from_data(n.data,n.formGroup.controls.ColumnMappings.value);n.formGroup.controls.columns.setValue(e);var r=n.formGroup.controls.Colors;e.forEach(function(t){var e=t[0];e in r.controls||r.addControl(e,new i.FormControl("#123456"))});var o=n.formGroup.controls.Types;e.forEach(function(t){var e=t[0];e in o.controls||o.addControl(e,new i.FormControl(n.formGroup.value.Type))}),t.next()})},t.prototype.generateDiagram=function(){var t=new at;return t._id="template_id",t.Name=this.formGroup.value.Name,t.Source=this.source,t.Box={NumberOfColumns:1,Order:1,BackgroundColor:this.formGroup.value.BackgroundColor},t.Widget={booleano:this.formGroup.value.booleano},t.Chart={ColumnMappings:this.formGroup.value.ColumnMappings,data:{columns:this.formGroup.controls.columns.value,type:this.formGroup.value.Type,types:this.formGroup.value.Types,colors:this.formGroup.controls.Colors.value},Flow:this.formGroup.value.Flow,legend:{show:this.formGroup.value.Legend},subchart:{show:this.formGroup.value.Subchart},zoom:{enabled:this.formGroup.value.Zoom},tooltip:{grouped:this.formGroup.value.Tooltip}},this.diagramModel=t,m.Observable.empty()},t.prototype.add=function(t){this.store.dispatch(new yt(this.formGroup.value))},t.decorators=[{type:h.Component,args:[{selector:"diagram-add",template:'<div fxLayout="column" fxFlex="100">\r\n  <div fxLayout="row" fxLayout.lt-md="column">\r\n    <mat-card fxFlex="60">\r\n      <form [formGroup]="formGroup" fxLayout=\'column\'>\r\n        <mat-card-header>\r\n          <mat-card-title>افزودن نمودار جدید</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <mat-form-field>\r\n            <input matInput placeholder="عنوان نمودار" formControlName="Name">\r\n          </mat-form-field>\r\n          <mat-form-field fxFlexFill>\r\n            <mat-select placeholder="نام مسیر" formControlName="Source" (selectionChange)="routeEntered($event)">\r\n              <mat-option *ngFor="let item of sources | async" [value]="item">\r\n                {{item.Endpoint}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field fxFlexFill>\r\n            <input matInput placeholder="sync time" formControlName="Sync">\r\n          </mat-form-field>\r\n          <div>\r\n            <mat-radio-group (change)="typeChanged()" formControlName="Type" fxFlexFill>\r\n              <label>نوع نمودار :</label>\r\n              <mat-radio-button (change)="typeChanged()" *ngFor="let item of diagramTypes" [value]="item" class="form-element-margin">\r\n                {{item}}\r\n              </mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n          <mat-form-field>\r\n            <mat-select placeholder="Groups" formControlName="Groups" multiple>\r\n              <mat-select-trigger>\r\n                {{formGroup.controls.Groups.value ? formGroup.controls.Groups.value[0] : \'\'}}\r\n                <span *ngIf="formGroup.controls.Groups.value?.length > 1">\r\n                  (+{{formGroup.controls.Groups.value.length - 1}} others)\r\n                </span>\r\n              </mat-select-trigger>\r\n              <mat-option *ngFor="let item of groups | async" [value]="item">{{item}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <div>\r\n            <mat-checkbox (change)="configChanged()" formControlName="IsActive" fxFlexFill>وضعیت</mat-checkbox>\r\n          </div>\r\n          <dynamic-config-component-selector (ConfigChanged)="configChanged()" [data]="diagramPartialConfig"></dynamic-config-component-selector>\r\n        </mat-card-content>\r\n      </form>\r\n    </mat-card>\r\n    <dynamic-component-selector id="modify-diagram" fxFlex="40" [data]="diagramModel"></dynamic-component-selector>\r\n  </div>\r\n\r\n  <div fxLayout="row" fxLayout.lt-md="column">\r\n    <mat-card fxFlex="25">\r\n      <mat-card-header>\r\n        <mat-card-title> ساختار دیتا </mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class="item-margin">\r\n          <data-mapper destination="value" [data]="data"></data-mapper>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card fxLayout="column" fxFlex="25">\r\n      <mat-card-header>\r\n        <mat-card-title>نگاشت داده</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div fxLayout="column" fxLayoutGap="5px">\r\n          <div *ngFor="let column of columnsMappings; let i=index" fxFlex="100" fxLayout="column">\r\n            <div fxLayout="column">\r\n              <div [formGroup]="columnsMappings[i]" fxLayout="row" fxLayout.xs="column">\r\n                <mat-form-field fxFlex="45" fxFlex.xs="100">\r\n                  <mat-select placeholder="نام مسیر" formControlName="NamePath">\r\n                    <mat-option>--</mat-option>\r\n                    <mat-option *ngFor="let item of pathOptions" [value]="item.path" [class]="\'mat-option depth_\' + item.depts">\r\n                      \x3c!-- <mat-option *ngFor="let item of pathOptions" [value]="item.path" [class]="\'mat-option depth_\' + item.depts" [disabled]="!item.isLastNode"> --\x3e\r\n                      {{item.path}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex="45" fxFlex.xs="100">\r\n                  <mat-select placeholder="مقدار مسیر" formControlName="ValuePath">\r\n                    <mat-option>--</mat-option>\r\n                    \x3c!-- <mat-option *ngFor="let item of pathOptions" [value]="item.path" [class]="\'mat-option depth_\' + item.depts" [disabled]="!item.isLastNode"> --\x3e\r\n                    <mat-option *ngFor="let item of pathOptions" [value]="item.path" [class]="\'mat-option depth_\' + item.depts">\r\n                      {{item.path}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <button (click)="removeColumn(i)" fxFlex mat-icon-button>\r\n                  <mat-icon>delete</mat-icon>\r\n                </button>\r\n              </div>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button (click)="addColumn()" fxFlex mat-raised-button color="primary" type="button">افزودن ستون</button>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <mat-card fxFlex="25">\r\n      <mat-card-header>\r\n        <mat-card-title>نتایج داده ها</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class="item-margin">\r\n          <div class="list-item" fxLayout="row" *ngFor="let item of formGroup.controls.columns.value; let i=index"\r\n            fxLayoutAlign="space-between center">\r\n            <span fxFlex="40">{{item[0]}} : {{item[1]}}</span>\r\n            <span fxFlex [formGroup]="formGroup.controls.Colors" *ngIf="$any(formGroup.controls.Colors).controls[item[0]]">\r\n              <input placeholder="رنگ نمودار" (change)="configChanged()" [formControlName]="item[0]" type="color">\r\n            </span>\r\n            <mat-form-field fxFlex="30" [formGroup]="formGroup.controls.Types" *ngIf="$any(formGroup.controls.Types).controls[item[0]]">\r\n              \x3c!-- <input placeholder="tipo" (change)="configChanged()" > --\x3e\r\n              <mat-select placeholder="tipo" [formControlName]="item[0]">\r\n                <mat-option>--</mat-option>\r\n                <mat-option *ngFor="let item of diagramTypes" [value]="item">\r\n                  {{item}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <mat-card fxLayout="column" fxFlex="25">\r\n      <mat-card-header>\r\n        <mat-card-title>تنظیمات ظاهری</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content [formGroup]="formGroup">\r\n        <mat-form-field>\r\n          <input matInput placeholder="تعداد سطر" formControlName="Cols">\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <input matInput placeholder="تعداد ستون" formControlName="Rows">\r\n        </mat-form-field>\r\n        <div fxLayout="row">\r\n          <label fxFlex="50">رنگ متن :</label>\r\n          <span>\r\n            <input (change)="configChanged()" formControlName="TextColor" type="color">\r\n          </span>\r\n        </div>\r\n        <div fxLayout="row">\r\n          <label fxFlex="50">رنگ پس زمینه :</label>\r\n          <span>\r\n            <input formControlName="BackgroundColor" type="color">\r\n          </span>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  <div>\r\n    <mat-card fxLayoutAlign="end center" fxLayout="row" fxFlex="100">\r\n      <mat-card-content>\r\n        <button (click)="add($event)" fxFlex mat-raised-button color="primary" type="submit">ثبت</button>\r\n        <button fxFlex=\'nogrow\' mat-button routerLink=\'/diagrams\'>انصراف</button>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>',styles:["#chart{width:300px;direction:ltr}.form-element-margin{margin:5px 10px}.item-margin{margin:10px 0;display:block}mat-option.depth_2{padding-right:30px}mat-option.depth_3{padding-right:50px}mat-option.depth_4{padding-right:70px}.mat-card{margin:12.5px}"]}]}],t.ctorParameters=function(){return[{type:tt},{type:i.FormBuilder},{type:u.Store},{type:f.ActivatedRoute}]},t}(),St=function(){function t(t){this.diagramService=t,this.width=100,this.diagrams=this.diagramService.getDiagrams()}return t.prototype.ngOnInit=function(){this.diagramData$=this.diagramService.getDiagram(this.diagramId)},t.decorators=[{type:h.Component,args:[{selector:"diagram-view",template:'<div *ngIf="diagramData$ | async" [style.color]="(diagramData$ | async)?.Box.Color">\r\n    <dynamic-component-selector class="diagram-box" [data]="(diagramData$ | async)"></dynamic-component-selector>\r\n</div>',styles:[":host{width:100%;margin:12.5px}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}.widget-title{font:1.3em IRANSans,tahoma}"]}]}],t.ctorParameters=function(){return[{type:tt}]},t.propDecorators={diagramId:[{type:h.Input,args:["id"]}]},t}(),jt=function(){function t(t){this.diagramService=t,this.width=100,this.diagrams=this.diagramService.getDiagrams()}return t.prototype.ngOnInit=function(){},t.decorators=[{type:h.Component,args:[{selector:"diagrams",template:'<mat-grid-list cols="12" rowHeight="100px">\r\n  <mat-grid-tile *ngFor="let diagram of (diagrams | async)?.Result" \r\n  [colspan]="diagram.Box.Cols" \r\n  [rowspan]="diagram.Box.Rows" \r\n  [style.color]="diagram.Box.Color">\r\n    <dynamic-component-selector class="diagram-box" [data]="diagram"></dynamic-component-selector>\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n<br />\r\n<div fxFlexLayout="row" fxLayoutWrap fxLayoutAlign="center center">\r\n</div>\r\n<div fxLayoutAlign=\'end center\'>\r\n  <button mat-fab routerLink="../diagrams/add" class="add-btn">\r\n    <mat-icon aria-label="Example icon-button with a heart icon">add</mat-icon>\r\n  </button>\r\n</div>\r\n',styles:[":host{width:100%}.diagram-box{margin:15px}.add-btn{position:fixed;bottom:50px;left:25px;z-index:1}"]}]}],t.ctorParameters=function(){return[{type:tt}]},t}(),Mt=function(){function t(t,e,r){var o=this;this.diagramService=t,this.route=e,this.store=r,this.formGroup=M.Request.formGroup;this.route.params.subscribe(function(t){var e=t.id;o.diagramService.getDiagram(e).subscribe(function(t){return o.formGroup.patchValue(t)})})}return t.prototype.ngOnInit=function(){},t.prototype.add=function(t){this.store.dispatch(new k(this.formGroup.value))},t.decorators=[{type:h.Component,args:[{selector:"diagram-edit",template:'<mat-card fxLayout="column" fxFlex="400px">\r\n    <form [formGroup]="formGroup" fxLayout=\'column\' (ngSubmit)="add($event)">\r\n\r\n        <mat-card-header>\r\n            <mat-card-title>افزودن نمودار جدید</mat-card-title>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n            <mat-form-field fxFlexFill>\r\n                <input matInput placeholder="عنوان نمودار" formControlName="Name">\r\n            </mat-form-field>\r\n            <mat-form-field fxFlexFill>\r\n                <input matInput placeholder="آدرس نمودار" formControlName="Route">\r\n            </mat-form-field>\r\n\r\n            <mat-checkbox formControlName="IsActive">وضعیت</mat-checkbox>\r\n\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button fxFlex mat-raised-button color="primary" type="submit">ثبت</button>\r\n            <button fxFlex=\'nogrow\' mat-button routerLink=\'/diagrams\'>انصراف</button>\r\n        </mat-card-actions>\r\n    </form>\r\n</mat-card>\r\n',styles:[""]}]}],t.ctorParameters=function(){return[{type:tt},{type:f.ActivatedRoute},{type:u.Store}]},t}(),Rt=function(){function t(t,e,r,o,n){var a=this;this.store=t,this.diagramService=e,this.http=r,this.injector=o,this.route=n,this.unsubscribe=new d.Subject,this.modelIsCorrect=new s.BehaviorSubject(!1),this.now=Date.now(),this.data=this.injector.get("data"),this.route.params.subscribe(function(t){var e=t.id;e&&a.diagramService.getDiagram(e).subscribe(function(t){console.log(t)})})}return Object.defineProperty(t.prototype,"data",{get:function(){return this._model},set:function(t){t.Chart&&t._id&&(this._model=t,this.modelIsCorrect.next(!0))},enumerable:!0,configurable:!0}),t.prototype.ngAfterViewInit=function(){var e=this;this.modelIsCorrect.delay(300).filter(function(t){return t}).subscribe(function(t){e.chart=c3.generate(x({},e.data.Chart,{bindto:"#diagram_"+e.data._id})),e.dataSubscribtion=e.diagramService.getData(e.data.Source,e.unsubscribe).pipe(g.filter(function(t){return t!=undefined}),g.takeUntil(e.unsubscribe)).subscribe(function(t){e.now=Date.now(),e.time=t.Time,e.data.Chart.Flow?e.chart.flow({columns:e.diagramService.extract_columns_from_data(t.Data,e.data.Chart.ColumnMappings),duration:1500}):e.chart.load({columns:e.diagramService.extract_columns_from_data(t.Data,e.data.Chart.ColumnMappings)})})})},t.prototype.ngOnDestroy=function(){this.unsubscribe.next(),this.unsubscribe.complete()},t.prototype.timeChange=function(t){var e=this;this.dataSubscribtion.unsubscribe(),this.dataSubscribtion=this.diagramService.getData(this.data.Source,this.unsubscribe,Date.now()-(1e3-t.value)*this.data.Source.Interval,!0).subscribe(function(t){e.time=t.Time,e.now=Date.now(),e.chart.load({columns:e.diagramService.extract_columns_from_data(t.Data,e.data.Chart.ColumnMappings)})})},t.decorators=[{type:h.Component,args:[{selector:"diagram",template:'<div class="over" fxlayout="row" fxLayoutAlign="space-between">\r\n    <div fxFlex="nogrow" fxFlexAlign="start" class="data-time">{{now | date : \'y/M/d h:m:s\'}}</div>\r\n    <div fxFlex="nogrow" fxFlexAlign="center" class="data-time">{{time | date : \'y/M/d h:m:s\'}}</div>\r\n    <div fxFlex="nogrow" fxFlexAlign="end" class="data-time">{{now | date : \'y/M/d h:m:s\'}}</div>\r\n</div>\r\n<div *ngIf="modelIsCorrect | async" class="diagram widget" [id]="\'diagram_\' + data._id"></div>',styles:[":host{width:100%}.diagram-box .c3{direction:ltr}mat-slider{width:100%}.data-time{direction:ltr;text-align:center}.over{visibility:hidden;opacity:0;position:absolute;top:35px;left:0;right:0;background:#fff;z-index:3;transition:.4s ease-in-out}"]}]}],t.ctorParameters=function(){return[{type:u.Store},{type:tt},{type:c.HttpClient},{type:h.Injector},{type:f.ActivatedRoute}]},t.propDecorators={data:[{type:h.Input}]},t}(),Tt=function(){function t(t){this.resolver=t,this.typeMapToDiagram={bar:Rt,donut:Rt,pie:Rt,scatter:Rt,line:Rt,area:Rt,"area-spline":Rt,numero:rt,tempo:X,booleano:H},this.currentComponent=null,this.backgroundColor=""}return Object.defineProperty(t.prototype,"data",{set:function(t){if(t&&0!=Object.keys(t).length){this.backgroundColor=t.Box.BackgroundColor;var e={data:this._data=t},r=this.typeMapToDiagram[t.Chart.data.type],o=Object.keys(e).map(function(t){return{provide:t,useValue:e[t]}}),n=h.ReflectiveInjector.resolve(o),a=h.ReflectiveInjector.fromResolvedProviders(n,this.dynamicComponentContainer.parentInjector),i=this.resolver.resolveComponentFactory(r).create(a);this.dynamicComponentContainer.insert(i.hostView),this.currentComponent&&this.currentComponent.destroy(),this.currentComponent=i}},enumerable:!0,configurable:!0}),t.prototype.ngAfterViewInit=function(){},t.prototype.timeChange=function(t){this.currentComponent._component.timeChange(t)},t.decorators=[{type:h.Component,args:[{selector:"dynamic-component-selector",template:'<mat-card class="diagram-box" [style.background]="backgroundColor" fxLayout="column" fxLayoutAlign="space-between stretch">\r\n    <div fxFlex="0 0 auto" *ngIf="_data" fxLayoutAlign="space-between center">\r\n        <span fxLayoutAlign="start center" class="widget-title">\r\n            {{_data.Name}}\r\n        </span>\r\n        <a [routerLink]="[\'../diagrams/edit\' ,  _data._id]" fxLayoutAlign="center center" mat-icon-button color="primary">\r\n            <mat-icon aria-label="edit diagram">edit</mat-icon>\r\n        </a>\r\n    </div>\r\n    \x3c!-- <mat-card-content> --\x3e\r\n    \x3c!-- <mat-slider invert [(ngModel)]="time" (change)="timeChange($event)"></mat-slider> --\x3e\r\n    <mat-slider class="over" fxFlex="0 0 auto" invert min=\'1\' max=\'1000\' value="1000" (change)="timeChange($event)"></mat-slider>\r\n    <div fxFlex="1 1 auto" class="widget-container">\r\n        <div #dynamicComponentContainer></div>\r\n    </div>\r\n    \x3c!-- </mat-card-content> --\x3e\r\n</mat-card>',entryComponents:[rt,X,H,Rt],styles:[":host{width:100%;margin:12.5px}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}.widget-title{font:1.3em IRANSans,tahoma}.over{visibility:hidden;opacity:0;position:absolute;top:60px;left:0;right:0;background:#fff;z-index:3;transition:.4s ease-in-out}"]}]}],t.ctorParameters=function(){return[{type:h.ComponentFactoryResolver}]},t.propDecorators={dynamicComponentContainer:[{type:h.ViewChild,args:["dynamicComponentContainer",{read:h.ViewContainerRef}]}],widgetComponent:[{type:h.ViewChild,args:[Rt]}],data:[{type:h.Input}]},t}(),Ot=function(){function t(t){this.resolver=t,this.typeMapToDiagram={bar:Z,area:J,"area-spline":J,donut:Z,pie:W,scatter:Z,line:J,booleano:K},this.ConfigChanged=new h.EventEmitter,this.currentComponent=null}return Object.defineProperty(t.prototype,"data",{set:function(e){var t=this;if(e&&0!=Object.keys(e).length)if(e.type in this.typeMapToDiagram){var r=this.typeMapToDiagram[e.type],o=Object.keys(e.inputs).map(function(t){return{provide:t,useValue:e.inputs[t]}}),n=h.ReflectiveInjector.resolve(o),a=h.ReflectiveInjector.fromResolvedProviders(n,this.dynamicComponentContainer.parentInjector),i=this.resolver.resolveComponentFactory(r).create(a);i.instance.ConfigChanged&&i.instance.ConfigChanged.subscribe(function(){t.ConfigChanged.emit()}),this.dynamicComponentContainer.insert(i.hostView),this.currentComponent&&this.currentComponent.destroy(),this.currentComponent=i}else this.currentComponent&&this.currentComponent.destroy()},enumerable:!0,configurable:!0}),t.prototype.ngAfterViewInit=function(){},t.decorators=[{type:h.Component,args:[{selector:"dynamic-config-component-selector",template:"<div #dynamicComponentContainer></div>",entryComponents:[Z,W,J,K],styles:[":host{width:100%}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}"]}]}],t.ctorParameters=function(){return[{type:h.ComponentFactoryResolver}]},t.propDecorators={dynamicComponentContainer:[{type:h.ViewChild,args:["dynamicComponentContainer",{read:h.ViewContainerRef}]}],ConfigChanged:[{type:h.Output}],data:[{type:h.Input}]},t}(),Lt=function(){function t(t,e,r){var o=this;this.actions$=t,this.router=e,this.diagramService=r,this.DiagramRequest$=this.actions$.ofType().pipe(g.map(function(t){return t.payload}),g.map(function(t){return new A})),this.getDiagram$=this.actions$.ofType().pipe(g.map(function(t){return t.payload}),g.switchMap(function(t){return o.diagramService.getDiagrams().pipe(g.map(function(t){return new S(t)}),g.catchError(function(){return d.of(new j)}))}))}return t.decorators=[{type:h.Injectable}],t.ctorParameters=function(){return[{type:p.Actions},{type:f.Router},{type:tt}]},C([p.Effect(),D("design:type",Object)],t.prototype,"DiagramRequest$",void 0),C([p.Effect(),D("design:type",Object)],t.prototype,"getDiagram$",void 0),t}(),Nt=function(){function t(t,e,r){var o=this;this.actions$=t,this.router=e,this.diagramService=r,this.addDiagramRequest$=this.actions$.ofType(it).pipe(g.map(function(t){return t.payload}),g.map(function(t){return new vt(t)})),this.addDiagram$=this.actions$.ofType(ct).pipe(g.map(function(t){return t.payload}),g.switchMap(function(t){return o.diagramService.addDiagram(t).pipe(g.map(function(t){return new bt(t)}),g.catchError(function(){return l.of(new xt)}))})),this.ADD_DIAGRAM_SUCCEED$=this.actions$.ofType(st).pipe(g.map(function(t){return t.payload}),g.map(function(t){return o.router.navigate(["diagrams"]),m.Observable.empty()})),this.HAVE_ENDPOINT$=this.actions$.ofType(pt).pipe(g.map(function(t){return t.payload}),g.map(function(t){return new wt(t)})),this.DATA_LOADED$=this.actions$.ofType(lt).pipe(g.map(function(t){return t.payload}),g.map(function(t){return new It(t)})),this.DIAGRAM_CONFIG_CHANGED$=this.actions$.ofType(ut).pipe(g.map(function(t){return t.payload}),g.map(function(t){return new _t(t)})),this.STRUCTURE_DEFINITION_START$=this.actions$.ofType(mt).pipe(g.map(function(t){return t.payload}),g.switchMap(function(t){return t.getDataStructure().map(function(){return new Gt(t)})})),this.COLUMNS_MAPPING_CHANGED$=this.actions$.ofType(ht).pipe(g.map(function(t){return t.payload}),g.switchMap(function(t){return t.calculateColumns().map(function(){return new Gt(t)})})),this.STRUCTURE_DEFINITION_END$=this.actions$.ofType(ft).pipe(g.map(function(t){return t.payload}),g.switchMap(function(t){return t.calculateColumns().map(function(){return new _t(t)})})),this.GenerateDiagram$=this.actions$.ofType(gt).pipe(g.map(function(t){return t.payload}),g.map(function(t){return t.generateDiagram()}))}return t.decorators=[{type:h.Injectable}],t.ctorParameters=function(){return[{type:p.Actions},{type:f.Router},{type:tt}]},C([p.Effect(),D("design:type",Object)],t.prototype,"addDiagramRequest$",void 0),C([p.Effect(),D("design:type",Object)],t.prototype,"addDiagram$",void 0),C([p.Effect({dispatch:!1}),D("design:type",Object)],t.prototype,"ADD_DIAGRAM_SUCCEED$",void 0),C([p.Effect(),D("design:type",Object)],t.prototype,"HAVE_ENDPOINT$",void 0),C([p.Effect(),D("design:type",Object)],t.prototype,"DATA_LOADED$",void 0),C([p.Effect(),D("design:type",Object)],t.prototype,"DIAGRAM_CONFIG_CHANGED$",void 0),C([p.Effect(),D("design:type",Object)],t.prototype,"STRUCTURE_DEFINITION_START$",void 0),C([p.Effect(),D("design:type",Object)],t.prototype,"COLUMNS_MAPPING_CHANGED$",void 0),C([p.Effect(),D("design:type",Object)],t.prototype,"STRUCTURE_DEFINITION_END$",void 0),C([p.Effect({dispatch:!1}),D("design:type",Object)],t.prototype,"GenerateDiagram$",void 0),t}(),Et=[{path:"diagrams",component:ot,children:[{path:"",component:jt},{path:"add",component:At},{path:"edit/:id",component:At},{path:"numero",component:rt},{path:"tempo",component:X},{path:"booleano",component:H}]}],kt=f.RouterModule.forChild(Et),Pt=function(){function t(t){this.diagramService=t,this.diagrams$=this.diagramService.getDiagrams().pipe(g.map(function(t){return t.Result}))}return Object.defineProperty(t.prototype,"valid",{get:function(){return this.config.diagramId!=undefined},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"config",{get:function(){return{diagramId:this.selectedDiagramId}},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.decorators=[{type:h.Component,args:[{template:'<div fxLayout="column wrap" fxLayoutGap="15px">\r\n<h4>لیست نمودارها</h4>\r\n      <mat-form-field fxFlex="100">\r\n  <mat-select placeholder="نمودار ها" [(ngModel)]="selectedDiagramId" name="selectedDiagramId">\r\n  <mat-option *ngFor="let item of (diagrams$ | async)" [value]="item._id">\r\n    {{item.Name}}\r\n  </mat-option>\r\n</mat-select>\r\n</mat-form-field>\r\n</div>'}]}],t.ctorParameters=function(){return[{type:tt}]},t}(),$t=function(){function t(){}return t.forRoot=function(t){return{ngModule:qt,providers:[{provide:b,useValue:t}]}},t.decorators=[{type:h.NgModule,args:[{imports:[c.HttpClientModule,i.FormsModule,f.RouterModule,e.CommonModule,n.MatExpansionModule,n.MatSnackBarModule,n.MatIconModule,n.MatButtonModule,n.MatCardModule,n.MatSelectModule,n.MatSliderModule,n.MatInputModule,n.MatCheckboxModule,n.MatFormFieldModule,n.MatTabsModule,r.FlexLayoutModule,n.MatRadioModule,n.MatTooltipModule,n.MatGridListModule,n.MatAutocompleteModule,i.ReactiveFormsModule,o.BrowserAnimationsModule],declarations:[At,jt,St,Mt,Ot,Rt,Tt,ot,nt,rt,H,Z,W,K,Q,X,et,J,Pt],entryComponents:[Pt,St],exports:[Pt],providers:[]}]}],t}(),qt=function(){function t(){}return t.decorators=[{type:h.NgModule,args:[{imports:[$t,u.StoreModule.forFeature("diagram",U),p.EffectsModule.forFeature([Lt,Nt]),kt],exports:[$t]}]}],t}();t.NgsDiagramModule=$t,t.DiagramSelectorComponent=Pt,t.diagramViewComponent=St,t.ɵbc=kt,t.ɵb=b,t.ɵa=qt,t.ɵm=K,t.ɵj=Z,t.ɵl=J,t.ɵp=rt,t.ɵv=et,t.ɵu=Q,t.ɵk=W,t.ɵq=X,t.ɵr=H,t.ɵbb=Nt,t.ɵba=Lt,t.ɵx=T,t.ɵy=$,t.ɵw=U,t.ɵz=V,t.ɵf=Y,t.ɵd=tt,t.ɵc=At,t.ɵt=nt,t.ɵs=ot,t.ɵn=Rt,t.ɵg=jt,t.ɵo=Tt,t.ɵi=Ot,t.ɵh=Mt,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=soushians-diagram.umd.min.js.map