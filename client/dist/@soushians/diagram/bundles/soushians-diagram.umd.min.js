!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/forms"),require("@ngrx/store"),require("rxjs"),require("rxjs/BehaviorSubject"),require("@angular/common/http"),require("rxjs/Rx"),require("rxjs/Observable"),require("@angular/router"),require("tslib"),require("@ngrx/effects"),require("rxjs/operators"),require("@angular/common"),require("@angular/flex-layout"),require("@angular/platform-browser/animations"),require("@angular/material")):"function"==typeof define&&define.amd?define("@soushians/diagram",["exports","@angular/core","@angular/forms","@ngrx/store","rxjs","rxjs/BehaviorSubject","@angular/common/http","rxjs/Rx","rxjs/Observable","@angular/router","tslib","@ngrx/effects","rxjs/operators","@angular/common","@angular/flex-layout","@angular/platform-browser/animations","@angular/material"],e):e((t.soushians=t.soushians||{},t.soushians.diagram={}),t.ng.core,t.ng.forms,null,null,t.Rx,t.ng.common.http,t.Rx,t.Rx,t.ng.router,t.tslib,null,t.Rx.Observable.prototype,t.ng.common,t.ng["flex-layout"],t.ng.platformBrowser.animations,t.ng.material)}(this,function(t,c,a,e,o,i,n,r,s,d,u,m,p,l,f,h,g){"use strict";var y,v,b,x={endpoints:{},env:{production:!1}},C=new c.InjectionToken("DiagramModuleConfig"),D="[DIAGRAM] GET_DIAGRAM",w="[DIAGRAM] GET_DIAGRAM_START",I="[DIAGRAM] GET_DIAGRAM_SUCCEED",G="[DIAGRAM] GET_DIAGRAM_FAILED",F=function(){this.type=w},A=function(t){this.payload=t,this.type=I},S=function(){this.type=G},M="[DIAGRAM][ADD] ADD_DIAGRAM",R="[DIAGRAM][ADD] ADD_DIAGRAM_START",T="[DIAGRAM][ADD] ADD_DIAGRAM_SUCCEED",j="[DIAGRAM][ADD] DIAGRAM_CONFIG_CHANGED",O="[DIAGRAM][ADD] ADD_DIAGRAM_FAILED",L="[DIAGRAM][ADD] STRUCTURE_DEFINITION_START",N="[DIAGRAM][ADD] HAVE_STRUCTURE",E="[DIAGRAM][ADD] DATA_LOADED",k="[DIAGRAM][ADD] STRUCTURE_DEFINITION_END",P="[DIAGRAM][ADD] COLUMNS_MAPPING_CHANGED",$="[DIAGRAM][ADD] GENERATE_DIAGRAM",q=function(t){this.payload=t,this.type=M},V=function(t){this.payload=t,this.type=R},B=function(t){this.payload=t,this.type=T},z=function(){this.type=O},U=function(t){this.payload=t,this.type=j},H=function(t){this.payload=t,this.type=N},Z=function(t){this.payload=t,this.type=E},W=function(t){this.payload=t,this.type=L},K=function(t){this.payload=t,this.type=k},Q=function(t){this.payload=t,this.type=P},J=function(t){this.payload=t,this.type=$},X="[DIAGRAM][EDIT] EDIT_DIAGRAM",Y="[DIAGRAM][EDIT] EDIT_DIAGRAM_START",tt="[DIAGRAM][EDIT] EDIT_DIAGRAM_SUCCEED",et="[DIAGRAM][EDIT] EDIT_DIAGRAM_FAILED",ot=function(t){this.payload=t,this.type=X},nt=function(){};!function(t){var e=function(){function t(e){void 0===e&&(e={});var o=this;Object.keys(e).forEach(function(t){return o[t]=e[t]})}return t.prototype.getRequestBody=function(){return{}},t}();t.Request=e;var o=function(){};t.Response=o}(y||(y={})),function(t){var e=function(){function t(e){void 0===e&&(e={});var o=this;Object.keys(e).forEach(function(t){return o[t]=e[t]})}return t.prototype.getRequestBody=function(){return{_id:this._id,Name:this.Name,IsActive:this.IsActive,Source:this.Source,Type:this.Type,Groups:this.Groups,Widget:{booleano:this.booleano},Chart:{data:{type:this.Type,columns:this.columns,colors:this.Colors,types:this.Types},ColumnMappings:this.ColumnMappings,Flow:this.Flow,legend:{show:this.Legend},subchart:{show:this.Subchart},zoom:{enabled:this.Zoom},tooltip:{grouped:this.Tooltip}},Box:{Cols:this.Cols,Rows:this.Rows,TextColor:this.TextColor,BackgroundColor:this.BackgroundColor}}},Object.defineProperty(t,"formGroup",{get:function(){return new a.FormGroup({_id:new a.FormControl("",[]),Name:new a.FormControl("",[a.Validators.required]),Sync:new a.FormControl(0,[a.Validators.required]),IsActive:new a.FormControl("true",[a.Validators.required]),Type:new a.FormControl("pie",[a.Validators.required]),Groups:new a.FormControl("",[a.Validators.required]),Legend:new a.FormControl("true",[a.Validators.required]),Subchart:new a.FormControl("false",[a.Validators.required]),Zoom:new a.FormControl("false",[a.Validators.required]),Tooltip:new a.FormControl("false",[a.Validators.required]),Route:new a.FormControl("",[a.Validators.required]),Source:new a.FormControl({},[a.Validators.required]),columns:new a.FormControl("",[a.Validators.required]),Cols:new a.FormControl(1,[a.Validators.required]),Rows:new a.FormControl(1,[a.Validators.required]),TextColor:new a.FormControl("#000000",[a.Validators.required]),BackgroundColor:new a.FormControl("#ffffff",[a.Validators.required]),Colors:new a.FormGroup({}),Types:new a.FormGroup({}),ColumnMappings:new a.FormArray([]),Flow:new a.FormControl(!0),donut:new a.FormGroup({title:new a.FormControl("Default Title")}),booleano:new a.FormGroup({SuccessMessage:new a.FormControl("SuccessMessage"),FailureMessage:new a.FormControl("FailureMessage")})})},enumerable:!0,configurable:!0}),t}();t.Request=e;var o=function(){};t.Response=o}(v||(v={})),function(t){var e=function(){function t(t){}return t.prototype.getRequestQueryParams=function(){return{}},Object.defineProperty(t,"formGroup",{get:function(){return new a.FormGroup({Name:new a.FormControl("",[a.Validators.required]),IsActive:new a.FormControl("true",[a.Validators.required]),Route:new a.FormControl("",[a.Validators.required])})},enumerable:!0,configurable:!0}),t}();t.Request=e;var o=function(){};t.Response=o}(b||(b={}));var rt={loaded:!1,diagram:new y.Response};var at={status:"pristine",data:new b.Response};var it={route:"",result:!1};var ct={diagrams:function(t,e){switch(void 0===t&&(t=rt),e.type){case D:case w:return Object.assign({},t,{loaded:!0});default:return t}},editDiagram:function(t,e){switch(void 0===t&&(t=at),e.type){case X:return Object.assign({},t,{status:"dirty",data:new b.Response});case Y:return Object.assign({},t,{status:"pending",data:new b.Response});case tt:return Object.assign({},t,{status:"succeed"});case et:return Object.assign({},t,{status:"failed"});default:return t}},parentGuard:function(t,e){return void 0===t&&(t=it),e.type,t}},st=e.createFeatureSelector("diagram"),dt=(e.createSelector(st,function(t){return t.editDiagram}),function(){function t(t){this.injector=t,this.dataLoaded=new o.BehaviorSubject(!1),this.data=this.injector.get("data")}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.timeChange=function(t){},t.prototype.ngOnInit=function(){},t}());dt.decorators=[{type:c.Component,args:[{selector:"diagram-server-status",template:'<div *ngIf="dataLoaded | async">\n  \x3c!-- <mat-icon [ngClass]="dataStatus$ ? \'connected\' : \'disconnected\'">\n    fiber_manual_record\n  </mat-icon> --\x3e\n  \x3c!-- <span *ngIf="dataStatus$">{{data.Widget.booleano.SuccessMessage}}</span>\n  <span *ngIf="!dataStatus$">{{data.Widget.booleano.FailureMessage}}</span> --\x3e\n</div>',styles:[".disconnected{color:#ba3030}.connected{color:#30ae1c}.numeric{font-size:2.4em;line-height:1.8}.numeric.title{font-family:iran-sans-bold,Tahoma;font-size:1.1em}"]}]}],dt.ctorParameters=function(){return[{type:c.Injector}]},dt.propDecorators={data:[{type:c.Input}]};var ut=function(){function t(t){this.injector=t,this.dataLoaded=new i.BehaviorSubject(!1),this.formGroup=this.injector.get("formGroup"),this.diagramService=this.injector.get("diagramService")}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.ngOnDestroy=function(){},t.prototype.configChanged=function(){},t}();ut.decorators=[{type:c.Component,args:[{selector:"diagram-partial-config-edit",template:'<form [formGroup]="formGroup" fxLayout=\'column\'>\n  <div>\n    <mat-checkbox (change)="configChanged()" formControlName="Legend" fxFlexFill>نمایش توضیحات</mat-checkbox>\n  </div>\n  <div>\n    <mat-checkbox (change)="configChanged()" formControlName="Zoom" fxFlexFill>بزرگنمایی</mat-checkbox>\n  </div>\n  <div>\n    <mat-checkbox (change)="configChanged()" formControlName="Subchart" fxFlexFill>نمایش بزرگنمایی در زیر نمودار</mat-checkbox>\n  </div>\n  <div>\n    <mat-checkbox (change)="configChanged()" formControlName="Tooltip" fxFlexFill>نمایش توضیحات به صورت گروهی</mat-checkbox>\n  </div>\n</form>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],ut.ctorParameters=function(){return[{type:c.Injector}]},ut.propDecorators={data:[{type:c.Input}]};var mt=function(){function t(t){this.injector=t,this.ConfigChanged=new c.EventEmitter,this.dataLoaded=new i.BehaviorSubject(!1),this.formGroup=this.injector.get("formGroup"),this.diagramService=this.injector.get("diagramService"),this.donutFormGroup=this.formGroup.controls.donut}return Object.defineProperty(t.prototype,"formGroup",{get:function(){return this._dataLoaded},set:function(t){t&&(this._dataLoaded=t,this.dataLoaded.next(!0))},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.ngOnDestroy=function(){},t.prototype.configChanged=function(){this.ConfigChanged.emit()},t}();mt.decorators=[{type:c.Component,args:[{selector:"pie-diagram-partial-config",template:'<div *ngIf="dataLoaded | async" class="diagram-box">\n  <form [formGroup]="formGroup" fxLayout=\'column\'>\n    <div>\n      <mat-checkbox (change)="configChanged()" formControlName="Legend" fxFlexFill>نمایش توضیحات</mat-checkbox>\n    </div>\n    <div>\n      <mat-checkbox (change)="configChanged()" formControlName="IsActive" fxFlexFill>وضعیت</mat-checkbox>\n    </div>\n    <div>\n      <mat-checkbox (change)="configChanged()" formControlName="Legend" fxFlexFill>نمایش توضیحات</mat-checkbox>\n    </div>\n    <div>\n      <mat-checkbox (change)="configChanged()" formControlName="IsActive" fxFlexFill>وضعیت</mat-checkbox>\n    </div>\n  </form>\n  <form [formGroup]="donutFormGroup">\n    <mat-form-field>\n      <input matInput placeholder="عنوان" formControlName="title">\n    </mat-form-field>\n  </form>\n</div>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],mt.ctorParameters=function(){return[{type:c.Injector}]},mt.propDecorators={ConfigChanged:[{type:c.Output}],formGroup:[{type:c.Input}]};var pt=function(){function t(t){this.injector=t,this.dataLoaded=new i.BehaviorSubject(!1),this.formGroup=this.injector.get("formGroup"),this.diagramService=this.injector.get("diagramService"),this.booleanoFormGroup=this.formGroup.controls.booleano}return Object.defineProperty(t.prototype,"formGroup",{get:function(){return this._dataLoaded},set:function(t){t&&(this._dataLoaded=t,this.dataLoaded.next(!0))},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.ngOnDestroy=function(){},t}();pt.decorators=[{type:c.Component,args:[{selector:"booleano-widget-partial-config",template:'<div *ngIf="dataLoaded | async" class="diagram-box">\n  <form [formGroup]="booleanoFormGroup">\n    <mat-form-field>\n      <input matInput placeholder="عنوان" formControlName="SuccessMessage">\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput placeholder="عنوان" formControlName="FailureMessage">\n    </mat-form-field>\n  </form>\n</div>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],pt.ctorParameters=function(){return[{type:c.Injector}]},pt.propDecorators={formGroup:[{type:c.Input}]};var lt=function(){function t(t){this.injector=t,this.dataLoaded=new i.BehaviorSubject(!1),this.formGroup=this.injector.get("formGroup"),this.diagramService=this.injector.get("diagramService"),this.donutFormGroup=this.formGroup.controls.donut}return Object.defineProperty(t.prototype,"formGroup",{get:function(){return this._dataLoaded},set:function(t){t&&(this._dataLoaded=t,this.dataLoaded.next(!0))},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.ngOnDestroy=function(){},t}();lt.decorators=[{type:c.Component,args:[{selector:"numeric-widget-partial-config",template:'<div *ngIf="dataLoaded | async" class="diagram-box">\n  <form [formGroup]="donutFormGroup">\n    <mat-form-field>\n      <input matInput placeholder="عنوان" formControlName="title">\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput placeholder="عنوان" formControlName="title">\n    </mat-form-field>\n  </form>\n</div>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],lt.ctorParameters=function(){return[{type:c.Injector}]},lt.propDecorators={formGroup:[{type:c.Input}]};var ft=function(){function t(t){this.injector=t,this.dataLoaded=new i.BehaviorSubject(!1),this.ConfigChanged=new c.EventEmitter,this.formGroup=this.injector.get("formGroup"),this.diagramService=this.injector.get("diagramService")}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.ngOnDestroy=function(){},t.prototype.configChanged=function(){this.ConfigChanged.emit()},t}();ft.decorators=[{type:c.Component,args:[{selector:"linear-diagram-partial-config",template:'<form [formGroup]="formGroup" fxLayout=\'column\'>\n  <div>\n    <mat-checkbox (change)="configChanged()" formControlName="Legend" fxFlexFill>نمایش توضیحات</mat-checkbox>\n  </div>\n  <div>\n    <mat-checkbox (change)="configChanged()" formControlName="Zoom" fxFlexFill>بزرگنمایی</mat-checkbox>\n  </div>\n  <div>\n    <mat-checkbox (change)="configChanged()" formControlName="Subchart" fxFlexFill>نمایش بزرگنمایی در زیر نمودار</mat-checkbox>\n  </div>\n  <div>\n    <mat-checkbox (change)="configChanged()" formControlName="Tooltip" fxFlexFill>نمایش توضیحات به صورت گروهی</mat-checkbox>\n  </div>\n  <div>\n    <mat-checkbox (change)="configChanged()" formControlName="Flow" fxFlexFill>Flow</mat-checkbox>\n  </div>\n</form>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],ft.ctorParameters=function(){return[{type:c.Injector}]},ft.propDecorators={data:[{type:c.Input}],ConfigChanged:[{type:c.Output}]};var ht=function(){function t(t){var e=this;this.injector=t,this.time=0,this.dataLoaded=new o.BehaviorSubject(!1),this.data=this.injector.get("data"),setInterval(function(){e.time=e.time+1},1e3)}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.timeChange=function(t){},t}();ht.decorators=[{type:c.Component,args:[{selector:"diagram-server-connecting-time",template:'<div *ngIf="dataLoaded | async">\n  <div fxLayoutAlign="center center" class="numeric title">{{data.Description}}</div>\n  \x3c!-- <div fxLayoutAlign="center center" class="numeric">{{time | timeCounter}}</div> --\x3e\n  <div [id]="\'diagram_\' + data._id"></div>\n</div>',styles:[".numeric{font-size:2.4em;line-height:1.8}.numeric.title{font-family:iran-sans-bold,Tahoma;font-size:1.1em}"]}]}],ht.ctorParameters=function(){return[{type:c.Injector}]},ht.propDecorators={time:[{type:c.Input}],data:[{type:c.Input}]};var gt=function(){function t(t){this._config=Object.assign({},x,t)}return Object.defineProperty(t.prototype,"config",{get:function(){return this._config},enumerable:!0,configurable:!0}),t}();gt.decorators=[{type:c.Injectable}],gt.ctorParameters=function(){return[{type:undefined,decorators:[{type:c.Inject,args:[C]}]}]};var yt=function(){function t(t,e,o){this.http=t,this.store=e,this.userConfigurationService=o,this.charts={}}return t.prototype.getDiagrams=function(){return this.http.get("http://localhost:3000/api/diagram").map(function(t){return t})["catch"](function(t){return r.Observable["throw"](t)})},t.prototype.getSources=function(){return this.http.get("http://localhost:3000/api/source").map(function(t){return t.Result})["catch"](function(t){return r.Observable["throw"](t)})},t.prototype.getGroups=function(){return this.http.get("http://localhost:3000/api/diagram/groups").map(function(t){return t.Result})["catch"](function(t){return r.Observable["throw"](t)})},t.prototype.getDiagram=function(t){return this.http.get("http://localhost:3000/api/diagram/"+t).map(function(t){return t})["catch"](function(t){return r.Observable["throw"](t)})},t.prototype.addDiagram=function(t){var e=new v.Request(t);return this.http.post("http://localhost:3000/api/diagram",e.getRequestBody()).map(function(t){return t})["catch"](function(t){return r.Observable["throw"](t)})},t.prototype.updateDiagram=function(t){return this.http.put("http://localhost:3000/api/diagram",t).map(function(t){return t})["catch"](function(t){return r.Observable["throw"](t)})},t.prototype.deleteDiagram=function(t){return this.http["delete"]("http://localhost:3000/api/diagram/"+t).map(function(t){return t})["catch"](function(t){return r.Observable["throw"](t)})},t.prototype.getData=function(e,o,t){var n=this;return void 0===o&&(o=0),void 0===t&&(t=!1),t&&0!==o?this.http.get("http://localhost:3000/api/data",{params:{sourceId:e._id,time:this.getFloorTime(e.Interval,o).toString()}}).map(function(t){return t.Result}):0==e.Interval?this.http.get("http://localhost:3000/api/data",{params:{sourceId:e._id,time:null}}).map(function(t){return t.Result}):(o=o||Date.now(),r.Observable.timer(0,e.Interval).switchMap(function(t){return n.http.get("http://localhost:3000/api/data",{params:{sourceId:e._id,time:n.getFloorTime(e.Interval,o).toString()}}).map(function(t){return t.Result})}))},t.prototype.extract_columns_from_data=function(n,t){var r=[];return t.forEach(function(t){var o=_.getValue(n,t.ValuePath);if(!t.NamePath)return r.push([t.ValuePath.split(".").pop()].concat(o));var e=_.getValue(n,t.NamePath);return _.is.array(e)?r=r.concat(e.map(function(t,e){return[t].concat(o[e])})):r.push([e].concat(o))}),r},t.prototype.get_data_report=function(t){return _.report(t)},t.prototype.get_last_node_of_data=function(t){return _.report(t).filter(function(t){return t.isLastNode})},t.prototype.buildChartConfig=function(t){return{data:{columns:t},legend:{show:!0}}},t.prototype.generateDiagram=function(e,o,t,n){var r=this;return this.charts[o]=c3.generate(Object.assign({},e,{bindto:"#diagram_"+o})),this.getData({},n).subscribe(function(t){r.charts[o].load({columns:r.extract_columns_from_data(t.Data,e.ColumnMappings)})})},t.prototype.getFloorTime=function(t,e){return void 0===t&&(t=6e4),void 0===e&&(e=0),Math.floor((e||Date.now())/t)},t}();yt.decorators=[{type:c.Injectable}],yt.ctorParameters=function(){return[{type:n.HttpClient},{type:e.Store},{type:gt}]};var vt=function(){function t(t,e){this.injector=t,this.diagramService=e,this.dataLoaded=new i.BehaviorSubject(!1),this.data=this.injector.get("data")}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.diagramService.getData(this.data.Source).subscribe(function(t){})},t}();vt.decorators=[{type:c.Component,args:[{selector:"numeric-edit-diagram",template:'<mat-card *ngIf="dataLoaded | async" class="diagram-box">\n  <mat-card-header>\n    <mat-card-title fxLayoutAlign="space-between center">\n    </mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n  </mat-card-content>\n</mat-card>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],vt.ctorParameters=function(){return[{type:c.Injector},{type:yt}]},vt.propDecorators={data:[{type:c.Input}]};var bt=function(){function t(t,e){this.injector=t,this.diagramService=e,this.dataLoaded=new i.BehaviorSubject(!1),this.data=this.injector.get("data"),this.counter=0}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){var o=this;this.dataSubscribtion=this.diagramService.getData(this.data.Source).subscribe(function(t){var e=o.diagramService.extract_columns_from_data(t.Data,o.data.Chart.ColumnMappings);o.counter=e[0][1]})},t.prototype.ngOnDestroy=function(){this.dataSubscribtion.unsubscribe()},t}();bt.decorators=[{type:c.Component,args:[{selector:"diagram-numeric",template:'<div *ngIf="dataLoaded | async">\n  \x3c!-- <div fxLayoutAlign="center center" class="numeric">{{data.Source.Data | json}}</div> --\x3e\n  <div fxLayoutAlign="center center" class="numeric">{{counter}}</div>\n  <div [id]="\'diagram_\' + data._id"></div>\n</div>',styles:[":host{width:100%}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}.mat-card{padding:0}"]}]}],bt.ctorParameters=function(){return[{type:c.Injector},{type:yt}]},bt.propDecorators={data:[{type:c.Input}]};var xt=function(){function t(t){this.service=t}return t.prototype.ngOnInit=function(){},t}();xt.decorators=[{type:c.Component,args:[{selector:"diagram-module-container",template:'<div fxflex="100" fxLayout="column">\n    <router-outlet></router-outlet>\n</div>\n'}]}],xt.ctorParameters=function(){return[{type:yt}]};var Ct=function(){function t(t,e){this.diagramService=t,this.store=e,this.dataReport=[]}return Object.defineProperty(t.prototype,"data",{set:function(t){t&&(this.dataReport=_.report(t),this._data=t)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t}();Ct.decorators=[{type:c.Component,args:[{selector:"data-mapper",template:'<div fxLayout="row">\n    <div fxFlex="grow">\n        <b>\n            Key\n        </b>\n    </div>\n    <div fxFlex="nogrow">\n        <b>\n            Type\n        </b>\n    </div>\n</div>\n<div *ngFor="let item of dataReport" [class]="\'depts_\' + item.depts" fxLayout="row">\n    <div fxFlex="grow">\n        {{item.name}}\n    </div>\n    <div fxFlex="nogrow">\n        {{item.type}}\n    </div>\n</div>\n',styles:["mat-radio-button{width:100%;display:block}div.depts_2{margin-right:25px}div.depts_3{margin-right:50px}"]}]}],Ct.ctorParameters=function(){return[{type:yt},{type:e.Store}]},Ct.propDecorators={destination:[{type:c.Input}],data:[{type:c.Input}]};var Dt=function(){function t(t,e,o,n){var r=this;this.diagramService=t,this.formBuilder=e,this.store=o,this.route=n,this.formGroup=v.Request.formGroup,this.sources=this.diagramService.getSources(),this.groups=this.diagramService.getGroups(),this.columnsMappings=this.formGroup.controls.ColumnMappings.controls,this.route.params.subscribe(function(t){var e=t.id;e&&r.diagramService.getDiagram(e).subscribe(function(e){r.formGroup.patchValue({_id:e._id,Name:e.Name,IsActive:e.IsActive,Groups:e.Groups,Type:e.Chart.data.type,Legend:e.Chart.legend.show,Subchart:e.Chart.subchart.show,Zoom:e.Chart.zoom.enabled,Tooltip:e.Chart.tooltip.grouped,Sync:e.Source.Interval,Source:e.Source,columns:e.Chart.data.columns,ColumnMappings:e.Chart.ColumnMappings,Cols:e.Box.Cols,Flow:e.Chart.Flow,Rows:e.Box.Rows,BackgroundColor:e.Box.BackgroundColor,TextColor:e.Box.TextColor});var o=r.formGroup.controls.Colors;Object.keys(e.Chart.data.colors||{}).forEach(function(t){t in o.controls||o.addControl(t,new a.FormControl(e.Chart.data.colors[t]))});var n=r.formGroup.controls.Types;Object.keys(e.Chart.data.types||{}).forEach(function(t){t in n.controls||n.addControl(t,new a.FormControl(e.Chart.data.types[t]))}),e.Chart.ColumnMappings.forEach(function(t){return r.addColumn(t.NamePath,t.ValuePath)}),r.source=e.Source,r.store.dispatch(new H(r)),r.diagramPartialConfig={type:r.formGroup.value.Type,inputs:{formGroup:r.formGroup,diagramService:r.diagramService}}}),r.diagramPartialConfig={type:r.formGroup.value.Type,inputs:{formGroup:r.formGroup,diagramService:r.diagramService}}}),this.diagramTypes=["bar","donut","pie","scatter","line","area","area-spline","numero","booleano","tempo"]}return t.prototype.ngOnInit=function(){var e=this;this.formGroup.controls.ColumnMappings.statusChanges.subscribe(function(t){"VALID"==t&&0<e.formGroup.controls.ColumnMappings.controls.length&&e.data&&e.store.dispatch(new Q(e))})},t.prototype.ngOnDestroy=function(){this.dataSubscription&&this.dataSubscription.unsubscribe()},t.prototype.getDataStructure=function(){var e=this,t=this.diagramService.getData(Object.assign({},this.source,{Interval:0}),Date.now()-1e4);return this.dataSubscription=t.subscribe(function(t){e.data=t.Data,e.pathOptions=e.diagramService.get_data_report(t.Data)}),t},t.prototype.configChanged=function(){this.store.dispatch(new U(this))},t.prototype.typeChanged=function(){var t=this.formGroup.controls.Types.controls;for(var e in t)t[e].setValue(this.formGroup.value.Type);this.diagramPartialConfig={type:this.formGroup.value.Type,inputs:{formGroup:this.formGroup,diagramService:this.diagramService}},this.store.dispatch(new U(this))},t.prototype.addColumn=function(t,e){void 0===t&&(t=""),void 0===e&&(e=""),this.formGroup.controls.ColumnMappings.push(this.formBuilder.group({NamePath:[t],ValuePath:[e,a.Validators.required]}))},t.prototype.routeEntered=function(t){this.source=t.value,this.formGroup.patchValue({Source:t.value}),this.store.dispatch(new H(this))},t.prototype.removeColumn=function(t){this.formGroup.controls.ColumnMappings.removeAt(t)},t.prototype.calculateColumns=function(){var r=this;return s.Observable.create(function(t){var e=r.diagramService.extract_columns_from_data(r.data,r.formGroup.controls.ColumnMappings.value);r.formGroup.controls.columns.setValue(e);var o=r.formGroup.controls.Colors;e.forEach(function(t){var e=t[0];e in o.controls||o.addControl(e,new a.FormControl("#123456"))});var n=r.formGroup.controls.Types;e.forEach(function(t){var e=t[0];e in n.controls||n.addControl(e,new a.FormControl(r.formGroup.value.Type))}),t.next()})},t.prototype.generateDiagram=function(){var t=new nt;return t._id="template_id",t.Name=this.formGroup.value.Name,t.Source=this.source,t.Box={NumberOfColumns:1,Order:1,BackgroundColor:this.formGroup.value.BackgroundColor},t.Widget={booleano:this.formGroup.value.booleano},t.Chart={ColumnMappings:this.formGroup.value.ColumnMappings,data:{columns:this.formGroup.controls.columns.value,type:this.formGroup.value.Type,types:this.formGroup.value.Types,colors:this.formGroup.controls.Colors.value},Flow:this.formGroup.value.Flow,legend:{show:this.formGroup.value.Legend},subchart:{show:this.formGroup.value.Subchart},zoom:{enabled:this.formGroup.value.Zoom},tooltip:{grouped:this.formGroup.value.Tooltip}},this.diagramModel=t,s.Observable.empty()},t.prototype.add=function(t){this.store.dispatch(new q(this.formGroup.value))},t}();Dt.decorators=[{type:c.Component,args:[{selector:"diagram-add",template:'<div fxLayout="column" fxFlex="100">\n  <div fxLayout="row" fxLayout.lt-md="column">\n    <mat-card fxFlex="60">\n      <form [formGroup]="formGroup" fxLayout=\'column\'>\n        <mat-card-header>\n          <mat-card-title>افزودن نمودار جدید</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <mat-form-field>\n            <input matInput placeholder="عنوان نمودار" formControlName="Name">\n          </mat-form-field>\n          <mat-form-field fxFlexFill>\n            <mat-select placeholder="نام مسیر" formControlName="Source" (change)="routeEntered($event)">\n              <mat-option *ngFor="let item of sources | async" [value]="item">\n                {{item.Endpoint}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field fxFlexFill>\n            <input matInput placeholder="sync time" formControlName="Sync">\n          </mat-form-field>\n          <div>\n            <mat-radio-group (change)="typeChanged()" formControlName="Type" fxFlexFill>\n              <label>نوع نمودار :</label>\n              <mat-radio-button (change)="typeChanged()" *ngFor="let item of diagramTypes" [value]="item" class="form-element-margin">\n                {{item}}\n              </mat-radio-button>\n            </mat-radio-group>\n          </div>\n          <mat-form-field>\n            <mat-select placeholder="Groups" formControlName="Groups" multiple>\n              <mat-select-trigger>\n                {{formGroup.controls.Groups.value ? formGroup.controls.Groups.value[0] : \'\'}}\n                <span *ngIf="formGroup.controls.Groups.value?.length > 1">\n                  (+{{formGroup.controls.Groups.value.length - 1}} others)\n                </span>\n              </mat-select-trigger>\n              <mat-option *ngFor="let item of groups | async" [value]="item">{{item}}</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <div>\n            <mat-checkbox (change)="configChanged()" formControlName="IsActive" fxFlexFill>وضعیت</mat-checkbox>\n          </div>\n          <dynamic-config-component-selector (ConfigChanged)="configChanged()" [data]="diagramPartialConfig"></dynamic-config-component-selector>\n        </mat-card-content>\n      </form>\n    </mat-card>\n    <dynamic-component-selector id="modify-diagram" fxFlex="40" [data]="diagramModel"></dynamic-component-selector>\n  </div>\n\n  <div fxLayout="row" fxLayout.lt-md="column">\n    <mat-card fxFlex="25">\n      <mat-card-header>\n        <mat-card-title> ساختار دیتا </mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <div class="item-margin">\n          <data-mapper destination="value" [data]="data"></data-mapper>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n    <mat-card fxLayout="column" fxFlex="25">\n      <mat-card-header>\n        <mat-card-title>نگاشت داده</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <div fxLayout="column" fxLayoutGap="5px">\n          <div *ngFor="let column of columnsMappings; let i=index" fxFlex="100" fxLayout="column">\n            <div fxLayout="column">\n              <div [formGroup]="columnsMappings[i]" fxLayout="row" fxLayout.xs="column">\n                <mat-form-field fxFlex="50" fxFlex.xs="100">\n                  <mat-select placeholder="نام مسیر" formControlName="NamePath">\n                    <mat-option>--</mat-option>\n                    <mat-option *ngFor="let item of pathOptions" [value]="item.path" [class]="\'mat-option depth_\' + item.depts">\n                      \x3c!-- <mat-option *ngFor="let item of pathOptions" [value]="item.path" [class]="\'mat-option depth_\' + item.depts" [disabled]="!item.isLastNode"> --\x3e\n                      {{item.path}}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n                <mat-form-field fxFlex="50" fxFlex.xs="100">\n                  <mat-select placeholder="مقدار مسیر" formControlName="ValuePath">\n                    <mat-option>--</mat-option>\n                    \x3c!-- <mat-option *ngFor="let item of pathOptions" [value]="item.path" [class]="\'mat-option depth_\' + item.depts" [disabled]="!item.isLastNode"> --\x3e\n                    <mat-option *ngFor="let item of pathOptions" [value]="item.path" [class]="\'mat-option depth_\' + item.depts">\n                      {{item.path}}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n                <button (click)="removeColumn(i)" fxFlex mat-button color="primary" type="button">پاک کردن</button>\n              </div>\n              <br />\n            </div>\n          </div>\n        </div>\n        <div>\n          <button (click)="addColumn()" fxFlex mat-raised-button color="primary" type="button">افزودن ستون</button>\n        </div>\n      </mat-card-content>\n    </mat-card>\n    <mat-card fxFlex="25">\n      <mat-card-header>\n        <mat-card-title>نتایج داده ها</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <div class="item-margin">\n          <div class="list-item" *ngFor="let item of formGroup.controls.columns.value; let i=index" fxLayoutAlign="space-between center">\n            <span>{{item[0]}} : {{item[1]}}</span>\n            <span [formGroup]="formGroup.controls.Colors" *ngIf="$any(formGroup.controls.Colors).controls[item[0]]">\n              <input placeholder="رنگ نمودار" (change)="configChanged()" [formControlName]="item[0]" type="color">\n            </span>\n            <mat-form-field [formGroup]="formGroup.controls.Types" *ngIf="$any(formGroup.controls.Types).controls[item[0]]">\n              \x3c!-- <input placeholder="tipo" (change)="configChanged()" > --\x3e\n              <mat-select placeholder="tipo" [formControlName]="item[0]">\n                <mat-option>--</mat-option>\n                <mat-option *ngFor="let item of diagramTypes" [value]="item">\n                  {{item}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n    <mat-card fxLayout="column" fxFlex="25">\n      <mat-card-header>\n        <mat-card-title>تنظیمات ظاهری</mat-card-title>\n      </mat-card-header>\n      <mat-card-content [formGroup]="formGroup">\n        <mat-form-field>\n          <input matInput placeholder="تعداد سطر" formControlName="Cols">\n        </mat-form-field>\n        <mat-form-field>\n          <input matInput placeholder="تعداد ستون" formControlName="Rows">\n        </mat-form-field>\n        <div>\n          <label fxFlex="50">رنگ متن :</label>\n          <span>\n            <input (change)="configChanged()" formControlName="TextColor" type="color">\n          </span>\n        </div>\n        <div>\n          <label fxFlex="50">رنگ پس زمینه :</label>\n          <span>\n            <input formControlName="BackgroundColor" type="color">\n          </span>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n  <div>\n    <mat-card fxLayoutAlign="end center" fxLayout="row" fxFlex="100">\n      <mat-card-content>\n        <button (click)="add($event)" fxFlex mat-raised-button color="primary" type="submit">ثبت</button>\n        <button fxFlex=\'nogrow\' mat-button routerLink=\'/diagrams\'>انصراف</button>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>',styles:["#chart{width:300px;direction:ltr}.form-element-margin{margin:5px 10px}.item-margin{margin:10px 0;display:block}mat-option.depth_2{padding-right:30px}mat-option.depth_3{padding-right:50px}mat-option.depth_4{padding-right:70px}.mat-card{margin:12.5px}"]}]}],Dt.ctorParameters=function(){return[{type:yt},{type:a.FormBuilder},{type:e.Store},{type:d.ActivatedRoute}]};var _t=function(){function t(t){this.diagramService=t,this.width=100,this.diagrams=this.diagramService.getDiagrams()}return t.prototype.ngOnInit=function(){this.diagramData$=this.diagramService.getDiagram(this.diagramId)},t}();_t.decorators=[{type:c.Component,args:[{selector:"diagram-view",template:'<div *ngIf="diagramData$ | async" [style.color]="(diagramData$ | async)?.Box.Color">\n    <dynamic-component-selector class="diagram-box" [data]="(diagramData$ | async)"></dynamic-component-selector>\n</div>',styles:[":host{width:100%;margin:12.5px}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}.widget-title{font:1.3em IRANSans,tahoma}"]}]}],_t.ctorParameters=function(){return[{type:yt}]},_t.propDecorators={diagramId:[{type:c.Input,args:["id"]}]};var wt=function(){function t(t){this.diagramService=t,this.width=100,this.diagrams=this.diagramService.getDiagrams()}return t.prototype.ngOnInit=function(){},t}();wt.decorators=[{type:c.Component,args:[{selector:"diagrams",template:'<mat-grid-list cols="12" rowHeight="100px">\n  <mat-grid-tile *ngFor="let diagram of (diagrams | async)?.Result" \n  [colspan]="diagram.Box.Cols" \n  [rowspan]="diagram.Box.Rows" \n  [style.color]="diagram.Box.Color">\n    <dynamic-component-selector class="diagram-box" [data]="diagram"></dynamic-component-selector>\n  </mat-grid-tile>\n</mat-grid-list>\n<br />\n<div fxFlexLayout="row" fxLayoutWrap fxLayoutAlign="center center">\n</div>\n<div fxLayoutAlign=\'end center\'>\n  <button mat-fab routerLink="../diagrams/add" class="add-btn">\n    <mat-icon aria-label="Example icon-button with a heart icon">add</mat-icon>\n  </button>\n</div>\n',styles:[":host{width:100%}.diagram-box{margin:15px}.add-btn{position:fixed;bottom:50px;left:25px;z-index:1}"]}]}],wt.ctorParameters=function(){return[{type:yt}]};var It=function(){function t(t,e,o){var n=this;this.diagramService=t,this.route=e,this.store=o,this.formGroup=b.Request.formGroup;this.route.params.subscribe(function(t){var e=t.id;n.diagramService.getDiagram(e).subscribe(function(t){return n.formGroup.patchValue(t)})})}return t.prototype.ngOnInit=function(){},t.prototype.add=function(t){this.store.dispatch(new ot(this.formGroup.value))},t}();It.decorators=[{type:c.Component,args:[{selector:"diagram-edit",template:'<mat-card fxLayout="column" fxFlex="400px">\n    <form [formGroup]="formGroup" fxLayout=\'column\' (ngSubmit)="add($event)">\n\n        <mat-card-header>\n            <mat-card-title>افزودن نمودار جدید</mat-card-title>\n        </mat-card-header>\n\n        <mat-card-content>\n            <mat-form-field fxFlexFill>\n                <input matInput placeholder="عنوان نمودار" formControlName="Name">\n            </mat-form-field>\n            <mat-form-field fxFlexFill>\n                <input matInput placeholder="آدرس نمودار" formControlName="Route">\n            </mat-form-field>\n\n            <mat-checkbox formControlName="IsActive">وضعیت</mat-checkbox>\n\n        </mat-card-content>\n        <mat-card-actions>\n            <button fxFlex mat-raised-button color="primary" type="submit">ثبت</button>\n            <button fxFlex=\'nogrow\' mat-button routerLink=\'/diagrams\'>انصراف</button>\n        </mat-card-actions>\n    </form>\n</mat-card>\n',styles:[""]}]}],It.ctorParameters=function(){return[{type:yt},{type:d.ActivatedRoute},{type:e.Store}]};var Gt=function(){function t(t,e,o,n,r){var a=this;this.store=t,this.diagramService=e,this.http=o,this.injector=n,this.route=r,this.modelIsCorrect=new i.BehaviorSubject(!1),this.now=Date.now(),this.data=this.injector.get("data"),this.route.params.subscribe(function(t){var e=t.id;e&&a.diagramService.getDiagram(e).subscribe(function(t){console.log(t)})})}return Object.defineProperty(t.prototype,"data",{get:function(){return this._model},set:function(t){t.Chart&&t._id&&(this._model=t,this.modelIsCorrect.next(!0))},enumerable:!0,configurable:!0}),t.prototype.ngAfterViewInit=function(){var e=this;this.modelIsCorrect.delay(300).filter(function(t){return t}).subscribe(function(t){e.chart=c3.generate(Object.assign({},e.data.Chart,{bindto:"#diagram_"+e.data._id})),e.dataSubscribtion=e.diagramService.getData(e.data.Source).filter(function(t){return t!=undefined}).subscribe(function(t){e.now=Date.now(),e.time=t.Time,e.data.Chart.Flow?e.chart.flow({columns:e.diagramService.extract_columns_from_data(t.Data,e.data.Chart.ColumnMappings),duration:1500}):e.chart.load({columns:e.diagramService.extract_columns_from_data(t.Data,e.data.Chart.ColumnMappings)})})})},t.prototype.ngOnDestroy=function(){},t.prototype.timeChange=function(t){var e=this;this.dataSubscribtion.unsubscribe(),this.dataSubscribtion=this.diagramService.getData(this.data.Source,Date.now()-(1e3-t.value)*this.data.Source.Interval,!0).subscribe(function(t){e.time=t.Time,e.now=Date.now(),e.chart.load({columns:e.diagramService.extract_columns_from_data(t.Data,e.data.Chart.ColumnMappings)})})},t}();Gt.decorators=[{type:c.Component,args:[{selector:"diagram",template:'<div class="over" fxlayout="row" fxLayoutAlign="space-between">\n    <div fxFlex="nogrow" fxFlexAlign="start" class="data-time">{{now | date : \'y/M/d h:m:s\'}}</div>\n    <div fxFlex="nogrow" fxFlexAlign="center" class="data-time">{{time | date : \'y/M/d h:m:s\'}}</div>\n    <div fxFlex="nogrow" fxFlexAlign="end" class="data-time">{{now | date : \'y/M/d h:m:s\'}}</div>\n</div>\n<div *ngIf="modelIsCorrect | async" class="diagram widget" [id]="\'diagram_\' + data._id"></div>',styles:[":host{width:100%}.diagram-box .c3{direction:ltr}mat-slider{width:100%}.data-time{direction:ltr;text-align:center}.over{visibility:hidden;opacity:0;position:absolute;top:35px;left:0;right:0;background:#fff;z-index:3;transition:all .4s ease-in-out}"]}]}],Gt.ctorParameters=function(){return[{type:e.Store},{type:yt},{type:n.HttpClient},{type:c.Injector},{type:d.ActivatedRoute}]},Gt.propDecorators={data:[{type:c.Input}]};var Ft=function(){function t(t){this.resolver=t,this.typeMapToDiagram={bar:Gt,donut:Gt,pie:Gt,scatter:Gt,line:Gt,area:Gt,"area-spline":Gt,numero:bt,tempo:ht,booleano:dt},this.currentComponent=null,this.backgroundColor=""}return Object.defineProperty(t.prototype,"data",{set:function(t){if(t&&0!=Object.keys(t).length){this.backgroundColor=t.Box.BackgroundColor;var e={data:this._data=t},o=this.typeMapToDiagram[t.Chart.data.type],n=Object.keys(e).map(function(t){return{provide:t,useValue:e[t]}}),r=c.ReflectiveInjector.resolve(n),a=c.ReflectiveInjector.fromResolvedProviders(r,this.dynamicComponentContainer.parentInjector),i=this.resolver.resolveComponentFactory(o).create(a);this.dynamicComponentContainer.insert(i.hostView),this.currentComponent&&this.currentComponent.destroy(),this.currentComponent=i}},enumerable:!0,configurable:!0}),t.prototype.ngAfterViewInit=function(){},t.prototype.timeChange=function(t){this.currentComponent._component.timeChange(t)},t}();Ft.decorators=[{type:c.Component,args:[{selector:"dynamic-component-selector",template:'<mat-card class="diagram-box" [style.background]="backgroundColor" fxLayout="column" fxLayoutAlign="space-between stretch">\n    <div fxFlex="0 0 auto" *ngIf="_data" fxLayoutAlign="space-between center">\n        <span fxLayoutAlign="start center" class="widget-title">\n            {{_data.Name}}\n        </span>\n        <a [routerLink]="[\'edit\' ,  _data._id]" fxLayoutAlign="center center" mat-icon-button color="primary">\n            <mat-icon aria-label="edit diagram">edit</mat-icon>\n        </a>\n    </div>\n    \x3c!-- <mat-card-content> --\x3e\n    \x3c!-- <mat-slider invert [(ngModel)]="time" (change)="timeChange($event)"></mat-slider> --\x3e\n    <mat-slider class="over" fxFlex="0 0 auto" invert min=\'1\' max=\'1000\' value="1000" (change)="timeChange($event)"></mat-slider>\n    <div fxFlex="1 1 auto" class="widget-container">\n        <div #dynamicComponentContainer></div>\n    </div>\n    \x3c!-- </mat-card-content> --\x3e\n</mat-card>',styles:[":host{width:100%;margin:12.5px}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}.widget-title{font:1.3em IRANSans,tahoma}.over{visibility:hidden;opacity:0;position:absolute;top:60px;left:0;right:0;background:#fff;z-index:3;transition:all .4s ease-in-out}"],entryComponents:[bt,ht,dt,Gt]}]}],Ft.ctorParameters=function(){return[{type:c.ComponentFactoryResolver}]},Ft.propDecorators={dynamicComponentContainer:[{type:c.ViewChild,args:["dynamicComponentContainer",{read:c.ViewContainerRef}]}],widgetComponent:[{type:c.ViewChild,args:[Gt]}],data:[{type:c.Input}]};var At=function(){function t(t){this.resolver=t,this.typeMapToDiagram={bar:ut,area:ft,"area-spline":ft,donut:ut,pie:mt,scatter:ut,line:ft,booleano:pt},this.ConfigChanged=new c.EventEmitter,this.currentComponent=null}return Object.defineProperty(t.prototype,"data",{set:function(e){var t=this;if(e&&0!=Object.keys(e).length)if(e.type in this.typeMapToDiagram){var o=this.typeMapToDiagram[e.type],n=Object.keys(e.inputs).map(function(t){return{provide:t,useValue:e.inputs[t]}}),r=c.ReflectiveInjector.resolve(n),a=c.ReflectiveInjector.fromResolvedProviders(r,this.dynamicComponentContainer.parentInjector),i=this.resolver.resolveComponentFactory(o).create(a);i.instance.ConfigChanged&&i.instance.ConfigChanged.subscribe(function(){t.ConfigChanged.emit()}),this.dynamicComponentContainer.insert(i.hostView),this.currentComponent&&this.currentComponent.destroy(),this.currentComponent=i}else this.currentComponent&&this.currentComponent.destroy()},enumerable:!0,configurable:!0}),t.prototype.ngAfterViewInit=function(){},t}();At.decorators=[{type:c.Component,args:[{selector:"dynamic-config-component-selector",template:"<div #dynamicComponentContainer></div>",styles:[":host{width:100%}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}"],entryComponents:[ut,mt,ft,pt]}]}],At.ctorParameters=function(){return[{type:c.ComponentFactoryResolver}]},At.propDecorators={dynamicComponentContainer:[{type:c.ViewChild,args:["dynamicComponentContainer",{read:c.ViewContainerRef}]}],ConfigChanged:[{type:c.Output}],data:[{type:c.Input}]};var St=function(t,e,o){var n=this;this.actions$=t,this.router=e,this.diagramService=o,this.DiagramRequest$=this.actions$.ofType().pipe(p.map(function(t){return t.payload}),p.map(function(t){return new F})),this.getDiagram$=this.actions$.ofType().pipe(p.map(function(t){return t.payload}),p.switchMap(function(t){return n.diagramService.getDiagrams().pipe(p.map(function(t){return new A(t)}),p.catchError(function(){return s.Observable.of(new S)}))}))};St.decorators=[{type:c.Injectable}],St.ctorParameters=function(){return[{type:m.Actions},{type:d.Router},{type:yt}]},u.__decorate([m.Effect(),u.__metadata("design:type",Object)],St.prototype,"DiagramRequest$",void 0),u.__decorate([m.Effect(),u.__metadata("design:type",Object)],St.prototype,"getDiagram$",void 0);var Mt=function(t,e,o){var n=this;this.actions$=t,this.router=e,this.diagramService=o,this.addDiagramRequest$=this.actions$.ofType(M).pipe(p.map(function(t){return t.payload}),p.map(function(t){return new V(t)})),this.addDiagram$=this.actions$.ofType(R).pipe(p.map(function(t){return t.payload}),p.switchMap(function(t){return n.diagramService.addDiagram(t).pipe(p.map(function(t){return new B(t)}),p.catchError(function(){return s.Observable.of(new z)}))})),this.ADD_DIAGRAM_SUCCEED$=this.actions$.ofType(T).pipe(p.map(function(t){return t.payload}),p.map(function(t){return n.router.navigate(["diagrams"]),s.Observable.empty()})),this.HAVE_ENDPOINT$=this.actions$.ofType(N).pipe(p.map(function(t){return t.payload}),p.map(function(t){return new Z(t)})),this.DATA_LOADED$=this.actions$.ofType(E).pipe(p.map(function(t){return t.payload}),p.map(function(t){return new W(t)})),this.DIAGRAM_CONFIG_CHANGED$=this.actions$.ofType(j).pipe(p.map(function(t){return t.payload}),p.map(function(t){return new J(t)})),this.STRUCTURE_DEFINITION_START$=this.actions$.ofType(L).pipe(p.map(function(t){return t.payload}),p.switchMap(function(t){return t.getDataStructure().map(function(){return new K(t)})})),this.COLUMNS_MAPPING_CHANGED$=this.actions$.ofType(P).pipe(p.map(function(t){return t.payload}),p.switchMap(function(t){return t.calculateColumns().map(function(){return new K(t)})})),this.STRUCTURE_DEFINITION_END$=this.actions$.ofType(k).pipe(p.map(function(t){return t.payload}),p.switchMap(function(t){return t.calculateColumns().map(function(){return new J(t)})})),this.GenerateDiagram$=this.actions$.ofType($).pipe(p.map(function(t){return t.payload}),p.map(function(t){return t.generateDiagram()}))};Mt.decorators=[{type:c.Injectable}],Mt.ctorParameters=function(){return[{type:m.Actions},{type:d.Router},{type:yt}]},u.__decorate([m.Effect(),u.__metadata("design:type",Object)],Mt.prototype,"addDiagramRequest$",void 0),u.__decorate([m.Effect(),u.__metadata("design:type",Object)],Mt.prototype,"addDiagram$",void 0),u.__decorate([m.Effect({dispatch:!1}),u.__metadata("design:type",Object)],Mt.prototype,"ADD_DIAGRAM_SUCCEED$",void 0),u.__decorate([m.Effect(),u.__metadata("design:type",Object)],Mt.prototype,"HAVE_ENDPOINT$",void 0),u.__decorate([m.Effect(),u.__metadata("design:type",Object)],Mt.prototype,"DATA_LOADED$",void 0),u.__decorate([m.Effect(),u.__metadata("design:type",Object)],Mt.prototype,"DIAGRAM_CONFIG_CHANGED$",void 0),u.__decorate([m.Effect(),u.__metadata("design:type",Object)],Mt.prototype,"STRUCTURE_DEFINITION_START$",void 0),u.__decorate([m.Effect(),u.__metadata("design:type",Object)],Mt.prototype,"COLUMNS_MAPPING_CHANGED$",void 0),u.__decorate([m.Effect(),u.__metadata("design:type",Object)],Mt.prototype,"STRUCTURE_DEFINITION_END$",void 0),u.__decorate([m.Effect({dispatch:!1}),u.__metadata("design:type",Object)],Mt.prototype,"GenerateDiagram$",void 0);var Rt=[{path:"diagrams",component:xt,children:[{path:"",component:wt},{path:"add",component:Dt},{path:"edit/:id",component:Dt},{path:"numero",component:bt},{path:"tempo",component:ht},{path:"booleano",component:dt}]}],Tt=d.RouterModule.forChild(Rt),jt=function(){function t(){}return t.forRoot=function(t){return{ngModule:Ot,providers:[{provide:C,useValue:t}]}},t}();jt.decorators=[{type:c.NgModule,args:[{imports:[n.HttpClientModule,a.FormsModule,d.RouterModule,l.CommonModule,g.MatExpansionModule,g.MatSnackBarModule,g.MatIconModule,g.MatButtonModule,g.MatCardModule,g.MatSelectModule,g.MatSliderModule,g.MatInputModule,g.MatCheckboxModule,g.MatFormFieldModule,g.MatTabsModule,f.FlexLayoutModule,g.MatRadioModule,g.MatTooltipModule,g.MatGridListModule,g.MatAutocompleteModule,a.ReactiveFormsModule,h.BrowserAnimationsModule],declarations:[Dt,wt,_t,It,At,Gt,Ft,xt,Ct,bt,dt,ut,mt,pt,lt,ht,vt,ft],providers:[]}]}];var Ot=function(){};Ot.decorators=[{type:c.NgModule,args:[{imports:[jt,e.StoreModule.forFeature("diagram",ct),m.EffectsModule.forFeature([St,Mt]),Tt],exports:[jt]}]}],t.NgsDiagramModule=jt,t.RootNgsDiagramModule=Ot,t.ɵz=Tt,t.ɵe=C,t.ɵm=pt,t.ɵj=ut,t.ɵl=ft,t.ɵp=bt,t.ɵv=vt,t.ɵu=lt,t.ɵk=mt,t.ɵq=ht,t.ɵr=dt,t.ɵy=Mt,t.ɵx=St,t.ɵw=ct,t.ɵd=gt,t.ɵb=yt,t.ɵa=Dt,t.ɵt=Ct,t.ɵs=xt,t.ɵg=_t,t.ɵn=Gt,t.ɵf=wt,t.ɵo=Ft,t.ɵi=At,t.ɵh=It,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=soushians-diagram.umd.min.js.map
