!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("@angular/router"),require("@angular/forms"),require("@angular/common/http"),require("@angular/flex-layout"),require("@angular/platform-browser/animations"),require("@angular/material"),require("@ngrx/store"),require("@ngrx/effects"),require("rxjs"),require("rxjs/BehaviorSubject"),require("rxjs/Rx"),require("rxjs/operators"),require("rxjs/Observable"),require("rxjs/observable/of")):"function"==typeof define&&define.amd?define("@soushians/diagram",["exports","@angular/core","@angular/common","@angular/router","@angular/forms","@angular/common/http","@angular/flex-layout","@angular/platform-browser/animations","@angular/material","@ngrx/store","@ngrx/effects","rxjs","rxjs/BehaviorSubject","rxjs/Rx","rxjs/operators","rxjs/Observable","rxjs/observable/of"],e):e(((t=t||self).soushians=t.soushians||{},t.soushians.diagram={}),t.ng.core,t.ng.common,t.ng.router,t.ng.forms,t.ng.common.http,t.ng["flex-layout"],t.ng.platformBrowser.animations,t.ng.material,t.store,t.effects,t.rxjs,t.rxjs.BehaviorSubject,t.rxjs.Rx,t.rxjs.operators,t.rxjs.Observable,t.rxjs["observable/of"])}(this,(function(t,e,r,o,n,a,i,c,s,u,d,m,p,l,f,h,g){"use strict";var y=function(){return(y=Object.assign||function(t){for(var e,r=1,o=arguments.length;r<o;r++)for(var n in e=arguments[r])Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t}).apply(this,arguments)};function v(t,e,r,o){var n,a=arguments.length,i=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(n=t[c])&&(i=(a<3?n(i):a>3?n(e,r,i):n(e,r))||i);return a>3&&i&&Object.defineProperty(e,r,i),i}function b(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}var C,x={endpoints:{},env:{production:!1,frontend_server:"frontend/server/did/not/set"}},D=new e.InjectionToken("DiagramModuleConfig");!function(t){var e=function(){function t(t){var e=this;void 0===t&&(t={}),Object.keys(t).forEach((function(r){return e[r]=t[r]}))}return t.prototype.getRequestBody=function(){return{}},t}();t.Request=e;var r=function(){};t.Response=r}(C||(C={}));var A={GET_DIAGRAM:"[DIAGRAM] GET_DIAGRAM",GET_DIAGRAM_START:"[DIAGRAM] GET_DIAGRAM_START",GET_DIAGRAM_SUCCEED:"[DIAGRAM] GET_DIAGRAM_SUCCEED",GET_DIAGRAM_FAILED:"[DIAGRAM] GET_DIAGRAM_FAILED"};var I=function(){this.type=A.GET_DIAGRAM_START};var G=function(t){this.payload=t,this.type=A.GET_DIAGRAM_SUCCEED};var w=function(){this.type=A.GET_DIAGRAM_FAILED};console.log(C);var R={loaded:!1,diagram:{Result:[]}};function T(t,e){switch(void 0===t&&(t=R),e.type){case A.GET_DIAGRAM:case A.GET_DIAGRAM_START:return y({},t,{loaded:!0});default:return t}}var F;!function(t){var e=function(){function t(t){}return t.prototype.getRequestQueryParams=function(){return{}},Object.defineProperty(t,"formGroup",{get:function(){return new n.FormGroup({Name:new n.FormControl("",[n.Validators.required]),IsActive:new n.FormControl("true",[n.Validators.required]),Route:new n.FormControl("",[n.Validators.required])})},enumerable:!0,configurable:!0}),t}();t.Request=e;var r=function(){};t.Response=r}(F||(F={}));var M={EDIT_DIAGRAM:"[DIAGRAM][EDIT] EDIT_DIAGRAM",EDIT_DIAGRAM_START:"[DIAGRAM][EDIT] EDIT_DIAGRAM_START",EDIT_DIAGRAM_SUCCEED:"[DIAGRAM][EDIT] EDIT_DIAGRAM_SUCCEED",EDIT_DIAGRAM_FAILED:"[DIAGRAM][EDIT] EDIT_DIAGRAM_FAILED"},S=function(t){this.payload=t,this.type=M.EDIT_DIAGRAM};console.log(F);var E={status:"pristine",data:{Result:{}}};function j(t,e){switch(void 0===t&&(t=E),e.type){case M.EDIT_DIAGRAM:return y({},t,{status:"dirty",data:new F.Response});case M.EDIT_DIAGRAM_START:return y({},t,{status:"pending",data:new F.Response});case M.EDIT_DIAGRAM_SUCCEED:return y({},t,{status:"succeed"});case M.EDIT_DIAGRAM_FAILED:return y({},t,{status:"failed"});default:return t}}var N={route:"",result:!1};function O(t,e){return void 0===t&&(t=N),e.type,t}var L={diagrams:T,editDiagram:j,parentGuard:O};var k=u.createFeatureSelector("diagram"),P=(u.createSelector(k,(function(t){return t.editDiagram})),function(){function t(t){this.injector=t,this.dataLoaded=new m.BehaviorSubject(!1),this.data=this.injector.get("data")}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.timeChange=function(t){},t.prototype.ngOnInit=function(){},t.decorators=[{type:e.Component,args:[{selector:"diagram-server-status",template:'<div *ngIf="dataLoaded | async">\r\n  \x3c!-- <mat-icon [ngClass]="dataStatus$ ? \'connected\' : \'disconnected\'">\r\n    fiber_manual_record\r\n  </mat-icon> --\x3e\r\n  \x3c!-- <span *ngIf="dataStatus$">{{data.Widget.booleano.SuccessMessage}}</span>\r\n  <span *ngIf="!dataStatus$">{{data.Widget.booleano.FailureMessage}}</span> --\x3e\r\n</div>',styles:[".disconnected{color:#ba3030}.connected{color:#30ae1c}.numeric{font-size:2.4em;line-height:1.8}.numeric.title{font-family:iran-sans-bold,Tahoma;font-size:1.1em}"]}]}],t.ctorParameters=function(){return[{type:e.Injector}]},t.propDecorators={data:[{type:e.Input}]},t}());var $=function(){function t(t){this.injector=t,this.dataLoaded=new p.BehaviorSubject(!1),this.formGroup=this.injector.get("formGroup"),this.diagramService=this.injector.get("diagramService")}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.ngOnDestroy=function(){},t.prototype.configChanged=function(){},t.decorators=[{type:e.Component,args:[{selector:"diagram-partial-config-edit",template:'<form [formGroup]="formGroup" fxLayout=\'column\'>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Legend" fxFlexFill>نمایش توضیحات</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Zoom" fxFlexFill>بزرگنمایی</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Subchart" fxFlexFill>نمایش بزرگنمایی در زیر نمودار</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Tooltip" fxFlexFill>نمایش توضیحات به صورت گروهی</mat-checkbox>\r\n  </div>\r\n</form>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],t.ctorParameters=function(){return[{type:e.Injector}]},t.propDecorators={data:[{type:e.Input}]},t}();var V=function(){function t(t){this.injector=t,this.ConfigChanged=new e.EventEmitter,this.dataLoaded=new p.BehaviorSubject(!1),this.formGroup=this.injector.get("formGroup"),this.diagramService=this.injector.get("diagramService"),this.donutFormGroup=this.formGroup.controls.donut}return Object.defineProperty(t.prototype,"formGroup",{get:function(){return this._dataLoaded},set:function(t){t&&(this._dataLoaded=t,this.dataLoaded.next(!0))},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.ngOnDestroy=function(){},t.prototype.configChanged=function(){this.ConfigChanged.emit()},t.decorators=[{type:e.Component,args:[{selector:"pie-diagram-partial-config",template:'<div *ngIf="dataLoaded | async" class="diagram-box">\r\n  <form [formGroup]="formGroup" fxLayout=\'column\'>\r\n    <div>\r\n      <mat-checkbox (change)="configChanged()" formControlName="Legend" fxFlexFill>نمایش توضیحات</mat-checkbox>\r\n    </div>\r\n    <div>\r\n      <mat-checkbox (change)="configChanged()" formControlName="IsActive" fxFlexFill>وضعیت</mat-checkbox>\r\n    </div>\r\n    <div>\r\n      <mat-checkbox (change)="configChanged()" formControlName="Legend" fxFlexFill>نمایش توضیحات</mat-checkbox>\r\n    </div>\r\n    <div>\r\n      <mat-checkbox (change)="configChanged()" formControlName="IsActive" fxFlexFill>وضعیت</mat-checkbox>\r\n    </div>\r\n  </form>\r\n  <form [formGroup]="donutFormGroup">\r\n    <mat-form-field>\r\n      <input matInput placeholder="عنوان" formControlName="title">\r\n    </mat-form-field>\r\n  </form>\r\n</div>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],t.ctorParameters=function(){return[{type:e.Injector}]},t.propDecorators={ConfigChanged:[{type:e.Output}],formGroup:[{type:e.Input}]},t}();var U=function(){function t(t){this.injector=t,this.dataLoaded=new p.BehaviorSubject(!1),this.formGroup=this.injector.get("formGroup"),this.diagramService=this.injector.get("diagramService"),this.booleanoFormGroup=this.formGroup.controls.booleano}return Object.defineProperty(t.prototype,"formGroup",{get:function(){return this._dataLoaded},set:function(t){t&&(this._dataLoaded=t,this.dataLoaded.next(!0))},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.ngOnDestroy=function(){},t.decorators=[{type:e.Component,args:[{selector:"booleano-widget-partial-config",template:'<div *ngIf="dataLoaded | async" class="diagram-box">\r\n  <form [formGroup]="booleanoFormGroup">\r\n    <mat-form-field>\r\n      <input matInput placeholder="عنوان" formControlName="SuccessMessage">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input matInput placeholder="عنوان" formControlName="FailureMessage">\r\n    </mat-form-field>\r\n  </form>\r\n</div>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],t.ctorParameters=function(){return[{type:e.Injector}]},t.propDecorators={formGroup:[{type:e.Input}]},t}();var q=function(){function t(t){this.injector=t,this.dataLoaded=new p.BehaviorSubject(!1),this.formGroup=this.injector.get("formGroup"),this.diagramService=this.injector.get("diagramService"),this.donutFormGroup=this.formGroup.controls.donut}return Object.defineProperty(t.prototype,"formGroup",{get:function(){return this._dataLoaded},set:function(t){t&&(this._dataLoaded=t,this.dataLoaded.next(!0))},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.ngOnDestroy=function(){},t.decorators=[{type:e.Component,args:[{selector:"numeric-widget-partial-config",template:'<div *ngIf="dataLoaded | async" class="diagram-box">\r\n  <form [formGroup]="donutFormGroup">\r\n    <mat-form-field>\r\n      <input matInput placeholder="عنوان" formControlName="title">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input matInput placeholder="عنوان" formControlName="title">\r\n    </mat-form-field>\r\n  </form>\r\n</div>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],t.ctorParameters=function(){return[{type:e.Injector}]},t.propDecorators={formGroup:[{type:e.Input}]},t}();var B=function(){function t(t){this.injector=t,this.dataLoaded=new p.BehaviorSubject(!1),this.ConfigChanged=new e.EventEmitter,this.formGroup=this.injector.get("formGroup"),this.diagramService=this.injector.get("diagramService")}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.ngOnDestroy=function(){},t.prototype.configChanged=function(){this.ConfigChanged.emit()},t.decorators=[{type:e.Component,args:[{selector:"linear-diagram-partial-config",template:'<form [formGroup]="formGroup" fxLayout=\'column\'>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Legend" fxFlexFill>نمایش توضیحات</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Zoom" fxFlexFill>بزرگنمایی</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Subchart" fxFlexFill>نمایش بزرگنمایی در زیر نمودار</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Tooltip" fxFlexFill>نمایش توضیحات به صورت گروهی</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)="configChanged()" formControlName="Flow" fxFlexFill>Flow</mat-checkbox>\r\n  </div>\r\n</form>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],t.ctorParameters=function(){return[{type:e.Injector}]},t.propDecorators={data:[{type:e.Input}],ConfigChanged:[{type:e.Output}]},t}();var z=function(){function t(t){var e=this;this.injector=t,this.time=0,this.dataLoaded=new m.BehaviorSubject(!1),this.data=this.injector.get("data"),setInterval((function(){e.time=e.time+1}),1e3)}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.timeChange=function(t){},t.decorators=[{type:e.Component,args:[{selector:"diagram-server-connecting-time",template:'<div *ngIf="dataLoaded | async">\r\n  <div fxLayoutAlign="center center" class="numeric title">{{data.Description}}</div>\r\n  \x3c!-- <div fxLayoutAlign="center center" class="numeric">{{time | timeCounter}}</div> --\x3e\r\n  <div [id]="\'diagram_\' + data._id"></div>\r\n</div>',styles:[".numeric{font-size:2.4em;line-height:1.8}.numeric.title{font-family:iran-sans-bold,Tahoma;font-size:1.1em}"]}]}],t.ctorParameters=function(){return[{type:e.Injector}]},t.propDecorators={time:[{type:e.Input}],data:[{type:e.Input}]},t}();var H,Z=function(){function t(t){this._config=Object.assign({},x,t)}return Object.defineProperty(t.prototype,"config",{get:function(){return this._config},enumerable:!0,configurable:!0}),t.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:void 0,decorators:[{type:e.Inject,args:[D]}]}]},t.ngInjectableDef=e.ɵɵdefineInjectable({factory:function(){return new t(e.ɵɵinject(D))},token:t,providedIn:"root"}),t}();(function(t){var e=function(){function t(t){var e=this;void 0===t&&(t={}),Object.keys(t).forEach((function(r){return e[r]=t[r]}))}return t.prototype.getRequestBody=function(){return{_id:this._id,Name:this.Name,IsActive:this.IsActive,Source:this.Source,Type:this.Type,Groups:this.Groups,Widget:{booleano:this.booleano},Chart:{data:{type:this.Type,columns:this.columns,colors:this.Colors,types:this.Types},ColumnMappings:this.ColumnMappings,Flow:this.Flow,legend:{show:this.Legend},subchart:{show:this.Subchart},zoom:{enabled:this.Zoom},tooltip:{grouped:this.Tooltip}},Box:{Cols:this.Cols,Rows:this.Rows,TextColor:this.TextColor,BackgroundColor:this.BackgroundColor}}},Object.defineProperty(t,"formGroup",{get:function(){return new n.FormGroup({_id:new n.FormControl("",[]),Name:new n.FormControl("",[n.Validators.required]),Sync:new n.FormControl(0,[n.Validators.required]),IsActive:new n.FormControl("true",[n.Validators.required]),Type:new n.FormControl("pie",[n.Validators.required]),Groups:new n.FormControl("",[n.Validators.required]),Legend:new n.FormControl("true",[n.Validators.required]),Subchart:new n.FormControl("false",[n.Validators.required]),Zoom:new n.FormControl("false",[n.Validators.required]),Tooltip:new n.FormControl("false",[n.Validators.required]),Route:new n.FormControl("",[n.Validators.required]),Source:new n.FormControl({},[n.Validators.required]),columns:new n.FormControl("",[n.Validators.required]),Cols:new n.FormControl(1,[n.Validators.required]),Rows:new n.FormControl(1,[n.Validators.required]),TextColor:new n.FormControl("#000000",[n.Validators.required]),BackgroundColor:new n.FormControl("#ffffff",[n.Validators.required]),Colors:new n.FormGroup({}),Types:new n.FormGroup({}),ColumnMappings:new n.FormArray([]),Flow:new n.FormControl(!0),donut:new n.FormGroup({title:new n.FormControl("Default Title")}),booleano:new n.FormGroup({SuccessMessage:new n.FormControl("SuccessMessage"),FailureMessage:new n.FormControl("FailureMessage")})})},enumerable:!0,configurable:!0}),t}();t.Request=e;var r=function(){};t.Response=r})(H||(H={}));var W=function(){function t(t,e,r){this.http=t,this.store=e,this.configurationService=r,this.charts={},this.config=this.configurationService.config}return t.prototype.getDiagrams=function(){return this.http.get(this.config.env.frontend_server+"/api/diagram").map((function(t){return t})).catch((function(t){return l.Observable.throw(t)}))},t.prototype.getSources=function(){return this.http.get(this.config.env.frontend_server+"/api/source").map((function(t){return t.Result})).catch((function(t){return l.Observable.throw(t)}))},t.prototype.getGroups=function(){return this.http.get(this.config.env.frontend_server+"/api/diagram/groups").map((function(t){return t.Result})).catch((function(t){return l.Observable.throw(t)}))},t.prototype.getDiagram=function(t){return this.http.get(this.config.env.frontend_server+"/api/diagram/"+t).map((function(t){return t})).catch((function(t){return l.Observable.throw(t)}))},t.prototype.addDiagram=function(t){var e=new H.Request(t);return this.http.post(this.config.env.frontend_server+"/api/diagram",e.getRequestBody()).map((function(t){return t})).catch((function(t){return l.Observable.throw(t)}))},t.prototype.updateDiagram=function(t){return this.http.put(this.config.env.frontend_server+"/api/diagram",t).map((function(t){return t})).catch((function(t){return l.Observable.throw(t)}))},t.prototype.deleteDiagram=function(t){return this.http.delete(this.config.env.frontend_server+"/api/diagram/"+t).map((function(t){return t})).catch((function(t){return l.Observable.throw(t)}))},t.prototype.getData=function(t,e,r,o){var n=this;return void 0===r&&(r=0),void 0===o&&(o=!1),o&&0!==r?this.http.get(this.config.env.frontend_server+"/api/data",{params:{sourceId:t._id,time:this.getFloorTime(t.Interval,r).toString()}}).map((function(t){return t.Result})):0==t.Interval?this.http.get(this.config.env.frontend_server+"/api/data",{params:{sourceId:t._id,time:null}}).map((function(t){return t.Result})):(r=r||Date.now(),l.Observable.timer(0,t.Interval).pipe(f.takeUntil(e),f.switchMap((function(e){return n.http.get(n.config.env.frontend_server+"/api/data",{params:{sourceId:t._id,time:n.getFloorTime(t.Interval,r).toString()}}).pipe(f.map((function(t){return t.Result})))}))))},t.prototype.extract_columns_from_data=function(t,e){var r=[];return e.forEach((function(e){var o=_.getValue(t,e.ValuePath);if(!e.NamePath)return r.push([e.ValuePath.split(".").pop()].concat(o));var n=_.getValue(t,e.NamePath);return _.is.array(n)?r=r.concat(n.map((function(t,e){return[t].concat(o[e])}))):r.push([n].concat(o))})),r},t.prototype.get_data_report=function(t){return _.report(t)},t.prototype.get_last_node_of_data=function(t){return _.report(t).filter((function(t){return t.isLastNode}))},t.prototype.buildChartConfig=function(t){return{data:{columns:t},legend:{show:!0}}},t.prototype.generateDiagram=function(t,e,r,o){var n=this;return this.charts[e]=c3.generate(y({},t,{bindto:"#diagram_"+e})),this.getData({},new l.Subject,o).subscribe((function(r){n.charts[e].load({columns:n.extract_columns_from_data(r.Data,t.ColumnMappings)})}))},t.prototype.getFloorTime=function(t,e){return void 0===t&&(t=6e4),void 0===e&&(e=0),Math.floor((e||Date.now())/t)},t.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:a.HttpClient},{type:u.Store},{type:Z}]},t.ngInjectableDef=e.ɵɵdefineInjectable({factory:function(){return new t(e.ɵɵinject(a.HttpClient),e.ɵɵinject(u.Store),e.ɵɵinject(Z))},token:t,providedIn:"root"}),t}();var K=function(){function t(t,e){this.injector=t,this.diagramService=e,this.unsubscribe=new m.Subject,this.dataLoaded=new p.BehaviorSubject(!1),this.data=this.injector.get("data")}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.diagramService.getData(this.data.Source,this.unsubscribe).pipe(f.filter((function(t){return null!=t})),f.takeUntil(this.unsubscribe)).subscribe((function(t){}))},t.prototype.ngOnDestroy=function(){this.unsubscribe.next(),this.unsubscribe.complete()},t.decorators=[{type:e.Component,args:[{selector:"numeric-edit-diagram",template:'<mat-card *ngIf="dataLoaded | async" class="diagram-box">\r\n  <mat-card-header>\r\n    <mat-card-title fxLayoutAlign="space-between center">\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n  </mat-card-content>\r\n</mat-card>',styles:[":host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}"]}]}],t.ctorParameters=function(){return[{type:e.Injector},{type:W}]},t.propDecorators={data:[{type:e.Input}]},t}();var Q=function(){function t(t,e){this.injector=t,this.diagramService=e,this.unsubscribe=new m.Subject,this.dataLoaded=new p.BehaviorSubject(!1),this.data=this.injector.get("data"),this.counter=0}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){this._data=t,this.dataLoaded.next(!0)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){var t=this;this.dataSubscribtion=this.diagramService.getData(this.data.Source,this.unsubscribe).pipe(f.takeUntil(this.unsubscribe)).subscribe((function(e){var r=t.diagramService.extract_columns_from_data(e.Data,t.data.Chart.ColumnMappings);t.counter=r[0][1]}))},t.prototype.ngOnDestroy=function(){this.dataSubscribtion.unsubscribe(),this.unsubscribe.next(),this.unsubscribe.complete()},t.decorators=[{type:e.Component,args:[{selector:"diagram-numeric",template:'<div *ngIf="dataLoaded | async">\r\n  \x3c!-- <div fxLayoutAlign="center center" class="numeric">{{data.Source.Data | json}}</div> --\x3e\r\n  <div fxLayoutAlign="center center" class="numeric">{{counter}}</div>\r\n  <div [id]="\'diagram_\' + data._id"></div>\r\n</div>',styles:[":host{width:100%}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}.mat-card{padding:0}"]}]}],t.ctorParameters=function(){return[{type:e.Injector},{type:W}]},t.propDecorators={data:[{type:e.Input}]},t}();var J=function(){function t(t){this.service=t}return t.prototype.ngOnInit=function(){},t.decorators=[{type:e.Component,args:[{selector:"diagram-module-container",template:'<div fxflex="100" fxLayout="column">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n'}]}],t.ctorParameters=function(){return[{type:W}]},t}();var X=function(){function t(t,e){this.diagramService=t,this.store=e,this.dataReport=[]}return Object.defineProperty(t.prototype,"data",{set:function(t){t&&(this.dataReport=_.report(t),this._data=t)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.decorators=[{type:e.Component,args:[{selector:"data-mapper",template:'<div fxLayout="row">\r\n    <div fxFlex="grow">\r\n        <b>\r\n            Key\r\n        </b>\r\n    </div>\r\n    <div fxFlex="nogrow">\r\n        <b>\r\n            Type\r\n        </b>\r\n    </div>\r\n</div>\r\n<div *ngFor="let item of dataReport" [class]="\'depts_\' + item.depts" fxLayout="row">\r\n    <div fxFlex="grow">\r\n        {{item.name}}\r\n    </div>\r\n    <div fxFlex="nogrow">\r\n        {{item.type}}\r\n    </div>\r\n</div>\r\n',styles:["mat-radio-button{width:100%;display:block}div.depts_2{margin-right:25px}div.depts_3{margin-right:50px}"]}]}],t.ctorParameters=function(){return[{type:W},{type:u.Store}]},t.propDecorators={destination:[{type:e.Input}],data:[{type:e.Input}]},t}();var Y=function(){};var tt={ADD_DIAGRAM:"[DIAGRAM][ADD] ADD_DIAGRAM",ADD_DIAGRAM_START:"[DIAGRAM][ADD] ADD_DIAGRAM_START",ADD_DIAGRAM_SUCCEED:"[DIAGRAM][ADD] ADD_DIAGRAM_SUCCEED",DIAGRAM_CONFIG_CHANGED:"[DIAGRAM][ADD] DIAGRAM_CONFIG_CHANGED",ADD_DIAGRAM_FAILED:"[DIAGRAM][ADD] ADD_DIAGRAM_FAILED",STRUCTURE_DEFINITION_START:"[DIAGRAM][ADD] STRUCTURE_DEFINITION_START",HAVE_ENDPOINT:"[DIAGRAM][ADD] HAVE_STRUCTURE",DATA_LOADED:"[DIAGRAM][ADD] DATA_LOADED",STRUCTURE_DEFINITION_END:"[DIAGRAM][ADD] STRUCTURE_DEFINITION_END",COLUMNS_MAPPING_CHANGED:"[DIAGRAM][ADD] COLUMNS_MAPPING_CHANGED",DATA_CALCULATED:"[DIAGRAM][ADD] DATA_CALCULATED",COLUMN_ADDED:"[DIAGRAM][ADD] COLUMN_ADDED",GENERATE_DIAGRAM:"[DIAGRAM][ADD] GENERATE_DIAGRAM"},et=function(t){this.payload=t,this.type=tt.ADD_DIAGRAM};var rt=function(t){this.payload=t,this.type=tt.ADD_DIAGRAM_START};var ot=function(t){this.payload=t,this.type=tt.ADD_DIAGRAM_SUCCEED};var nt=function(){this.type=tt.ADD_DIAGRAM_FAILED};var at=function(t){this.payload=t,this.type=tt.DIAGRAM_CONFIG_CHANGED};var it=function(t){this.payload=t,this.type=tt.HAVE_ENDPOINT};var ct=function(t){this.payload=t,this.type=tt.DATA_LOADED};var st=function(t){this.payload=t,this.type=tt.STRUCTURE_DEFINITION_START};var ut=function(t){this.payload=t,this.type=tt.STRUCTURE_DEFINITION_END};var dt=function(t){this.payload=t,this.type=tt.COLUMNS_MAPPING_CHANGED};var mt=function(t){this.payload=t,this.type=tt.GENERATE_DIAGRAM};var pt=function(){function t(t,e,r,o){var a=this;this.diagramService=t,this.formBuilder=e,this.store=r,this.route=o,this.unsubscribe=new m.Subject,this.formGroup=H.Request.formGroup,this.sources=this.diagramService.getSources(),this.groups=this.diagramService.getGroups(),this.columnsMappings=this.formGroup.controls.ColumnMappings.controls,this.route.params.subscribe((function(t){var e=t.id;e&&a.diagramService.getDiagram(e).subscribe((function(t){a.formGroup.patchValue({_id:t._id,Name:t.Name,IsActive:t.IsActive,Groups:t.Groups,Type:t.Chart.data.type,Legend:t.Chart.legend.show,Subchart:t.Chart.subchart.show,Zoom:t.Chart.zoom.enabled,Tooltip:t.Chart.tooltip.grouped,Sync:t.Source.Interval,Source:t.Source,columns:t.Chart.data.columns,ColumnMappings:t.Chart.ColumnMappings,Cols:t.Box.Cols,Flow:t.Chart.Flow,Rows:t.Box.Rows,BackgroundColor:t.Box.BackgroundColor,TextColor:t.Box.TextColor});var e=a.formGroup.controls.Colors;Object.keys(t.Chart.data.colors||{}).forEach((function(r){r in e.controls||e.addControl(r,new n.FormControl(t.Chart.data.colors[r]))}));var r=a.formGroup.controls.Types;Object.keys(t.Chart.data.types||{}).forEach((function(e){e in r.controls||r.addControl(e,new n.FormControl(t.Chart.data.types[e]))})),t.Chart.ColumnMappings.forEach((function(t){return a.addColumn(t.NamePath,t.ValuePath)})),a.source=t.Source,a.store.dispatch(new it(a)),a.diagramPartialConfig={type:a.formGroup.value.Type,inputs:{formGroup:a.formGroup,diagramService:a.diagramService}}})),a.diagramPartialConfig={type:a.formGroup.value.Type,inputs:{formGroup:a.formGroup,diagramService:a.diagramService}}})),this.diagramTypes=["bar","donut","pie","scatter","line","area","area-spline","numero","booleano","tempo"]}return t.prototype.ngOnInit=function(){var t=this;this.formGroup.controls.ColumnMappings.statusChanges.subscribe((function(e){"VALID"==e&&t.formGroup.controls.ColumnMappings.controls.length>0&&t.data&&t.store.dispatch(new dt(t))}))},t.prototype.ngOnDestroy=function(){this.dataSubscription&&this.dataSubscription.unsubscribe(),this.unsubscribe.next(),this.unsubscribe.complete()},t.prototype.getDataStructure=function(){var t=this,e=this.diagramService.getData(y({},this.source,{Interval:0}),this.unsubscribe,Date.now()-1e4);return this.dataSubscription=e.subscribe((function(e){t.data=e.Data,t.pathOptions=t.diagramService.get_data_report(e.Data)})),e},t.prototype.configChanged=function(){this.store.dispatch(new at(this))},t.prototype.typeChanged=function(){var t=this.formGroup.controls.Types.controls;for(var e in t)t[e].setValue(this.formGroup.value.Type);this.diagramPartialConfig={type:this.formGroup.value.Type,inputs:{formGroup:this.formGroup,diagramService:this.diagramService}},this.store.dispatch(new at(this))},t.prototype.addColumn=function(t,e){void 0===t&&(t=""),void 0===e&&(e=""),this.formGroup.controls.ColumnMappings.push(this.formBuilder.group({NamePath:[t],ValuePath:[e,n.Validators.required]}))},t.prototype.routeEntered=function(t){this.source=t.value,this.formGroup.patchValue({Source:t.value}),this.store.dispatch(new it(this))},t.prototype.removeColumn=function(t){this.formGroup.controls.ColumnMappings.removeAt(t)},t.prototype.calculateColumns=function(){var t=this;return h.Observable.create((function(e){var r=t.diagramService.extract_columns_from_data(t.data,t.formGroup.controls.ColumnMappings.value);t.formGroup.controls.columns.setValue(r);var o=t.formGroup.controls.Colors;r.forEach((function(t){var e=t[0];e in o.controls||o.addControl(e,new n.FormControl("#123456"))}));var a=t.formGroup.controls.Types;r.forEach((function(e){var r=e[0];r in a.controls||a.addControl(r,new n.FormControl(t.formGroup.value.Type))})),e.next()}))},t.prototype.generateDiagram=function(){var t=new Y;return t._id="template_id",t.Name=this.formGroup.value.Name,t.Source=this.source,t.Box={NumberOfColumns:1,Order:1,BackgroundColor:this.formGroup.value.BackgroundColor},t.Widget={booleano:this.formGroup.value.booleano},t.Chart={ColumnMappings:this.formGroup.value.ColumnMappings,data:{columns:this.formGroup.controls.columns.value,type:this.formGroup.value.Type,types:this.formGroup.value.Types,colors:this.formGroup.controls.Colors.value},Flow:this.formGroup.value.Flow,legend:{show:this.formGroup.value.Legend},subchart:{show:this.formGroup.value.Subchart},zoom:{enabled:this.formGroup.value.Zoom},tooltip:{grouped:this.formGroup.value.Tooltip}},this.diagramModel=t,h.Observable.empty()},t.prototype.add=function(t){this.store.dispatch(new et(this.formGroup.value))},t.decorators=[{type:e.Component,args:[{selector:"diagram-add",template:'<div fxLayout="column" fxFlex="100">\r\n  <div fxLayout="row" fxLayout.lt-md="column">\r\n    <mat-card fxFlex="60">\r\n      <form [formGroup]="formGroup" fxLayout=\'column\'>\r\n        <mat-card-header>\r\n          <mat-card-title>افزودن نمودار جدید</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <mat-form-field>\r\n            <input matInput placeholder="عنوان نمودار" formControlName="Name">\r\n          </mat-form-field>\r\n          <mat-form-field fxFlexFill>\r\n            <mat-select placeholder="نام مسیر" formControlName="Source" (selectionChange)="routeEntered($event)">\r\n              <mat-option *ngFor="let item of sources | async" [value]="item">\r\n                {{item.Endpoint}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field fxFlexFill>\r\n            <input matInput placeholder="sync time" formControlName="Sync">\r\n          </mat-form-field>\r\n          <div>\r\n            <mat-radio-group (change)="typeChanged()" formControlName="Type" fxFlexFill>\r\n              <label>نوع نمودار :</label>\r\n              <mat-radio-button (change)="typeChanged()" *ngFor="let item of diagramTypes" [value]="item" class="form-element-margin">\r\n                {{item}}\r\n              </mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n          <mat-form-field>\r\n            <mat-select placeholder="Groups" formControlName="Groups" multiple>\r\n              <mat-select-trigger>\r\n                {{formGroup.controls.Groups.value ? formGroup.controls.Groups.value[0] : \'\'}}\r\n                <span *ngIf="formGroup.controls.Groups.value?.length > 1">\r\n                  (+{{formGroup.controls.Groups.value.length - 1}} others)\r\n                </span>\r\n              </mat-select-trigger>\r\n              <mat-option *ngFor="let item of groups | async" [value]="item">{{item}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <div>\r\n            <mat-checkbox (change)="configChanged()" formControlName="IsActive" fxFlexFill>وضعیت</mat-checkbox>\r\n          </div>\r\n          <dynamic-config-component-selector (ConfigChanged)="configChanged()" [data]="diagramPartialConfig"></dynamic-config-component-selector>\r\n        </mat-card-content>\r\n      </form>\r\n    </mat-card>\r\n    <dynamic-component-selector id="modify-diagram" fxFlex="40" [data]="diagramModel"></dynamic-component-selector>\r\n  </div>\r\n\r\n  <div fxLayout="row" fxLayout.lt-md="column">\r\n    <mat-card fxFlex="25">\r\n      <mat-card-header>\r\n        <mat-card-title> ساختار دیتا </mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class="item-margin">\r\n          <data-mapper destination="value" [data]="data"></data-mapper>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card fxLayout="column" fxFlex="25">\r\n      <mat-card-header>\r\n        <mat-card-title>نگاشت داده</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div fxLayout="column" fxLayoutGap="5px">\r\n          <div *ngFor="let column of columnsMappings; let i=index" fxFlex="100" fxLayout="column">\r\n            <div fxLayout="column">\r\n              <div [formGroup]="columnsMappings[i]" fxLayout="row" fxLayout.xs="column">\r\n                <mat-form-field fxFlex="45" fxFlex.xs="100">\r\n                  <mat-select placeholder="نام مسیر" formControlName="NamePath">\r\n                    <mat-option>--</mat-option>\r\n                    <mat-option *ngFor="let item of pathOptions" [value]="item.path" [class]="\'mat-option depth_\' + item.depts">\r\n                      \x3c!-- <mat-option *ngFor="let item of pathOptions" [value]="item.path" [class]="\'mat-option depth_\' + item.depts" [disabled]="!item.isLastNode"> --\x3e\r\n                      {{item.path}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex="45" fxFlex.xs="100">\r\n                  <mat-select placeholder="مقدار مسیر" formControlName="ValuePath">\r\n                    <mat-option>--</mat-option>\r\n                    \x3c!-- <mat-option *ngFor="let item of pathOptions" [value]="item.path" [class]="\'mat-option depth_\' + item.depts" [disabled]="!item.isLastNode"> --\x3e\r\n                    <mat-option *ngFor="let item of pathOptions" [value]="item.path" [class]="\'mat-option depth_\' + item.depts">\r\n                      {{item.path}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <button (click)="removeColumn(i)" fxFlex mat-icon-button>\r\n                  <mat-icon>delete</mat-icon>\r\n                </button>\r\n              </div>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button (click)="addColumn()" fxFlex mat-raised-button color="primary" type="button">افزودن ستون</button>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <mat-card fxFlex="25">\r\n      <mat-card-header>\r\n        <mat-card-title>نتایج داده ها</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class="item-margin">\r\n          <div class="list-item" fxLayout="row" *ngFor="let item of formGroup.controls.columns.value; let i=index"\r\n            fxLayoutAlign="space-between center">\r\n            <span fxFlex="40">{{item[0]}} : {{item[1]}}</span>\r\n            <span fxFlex [formGroup]="formGroup.controls.Colors" *ngIf="$any(formGroup.controls.Colors).controls[item[0]]">\r\n              <input placeholder="رنگ نمودار" (change)="configChanged()" [formControlName]="item[0]" type="color">\r\n            </span>\r\n            <mat-form-field fxFlex="30" [formGroup]="formGroup.controls.Types" *ngIf="$any(formGroup.controls.Types).controls[item[0]]">\r\n              \x3c!-- <input placeholder="tipo" (change)="configChanged()" > --\x3e\r\n              <mat-select placeholder="tipo" [formControlName]="item[0]">\r\n                <mat-option>--</mat-option>\r\n                <mat-option *ngFor="let item of diagramTypes" [value]="item">\r\n                  {{item}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <mat-card fxLayout="column" fxFlex="25">\r\n      <mat-card-header>\r\n        <mat-card-title>تنظیمات ظاهری</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content [formGroup]="formGroup">\r\n        <mat-form-field>\r\n          <input matInput placeholder="تعداد سطر" formControlName="Cols">\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <input matInput placeholder="تعداد ستون" formControlName="Rows">\r\n        </mat-form-field>\r\n        <div fxLayout="row">\r\n          <label fxFlex="50">رنگ متن :</label>\r\n          <span>\r\n            <input (change)="configChanged()" formControlName="TextColor" type="color">\r\n          </span>\r\n        </div>\r\n        <div fxLayout="row">\r\n          <label fxFlex="50">رنگ پس زمینه :</label>\r\n          <span>\r\n            <input formControlName="BackgroundColor" type="color">\r\n          </span>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  <div>\r\n    <mat-card fxLayoutAlign="end center" fxLayout="row" fxFlex="100">\r\n      <mat-card-content>\r\n        <button (click)="add($event)" fxFlex mat-raised-button color="primary" type="submit">ثبت</button>\r\n        <button fxFlex=\'nogrow\' mat-button routerLink=\'/diagrams\'>انصراف</button>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>',styles:["#chart{width:300px;direction:ltr}.form-element-margin{margin:5px 10px}.item-margin{margin:10px 0;display:block}mat-option.depth_2{padding-right:30px}mat-option.depth_3{padding-right:50px}mat-option.depth_4{padding-right:70px}.mat-card{margin:12.5px}"]}]}],t.ctorParameters=function(){return[{type:W},{type:n.FormBuilder},{type:u.Store},{type:o.ActivatedRoute}]},t}();var lt=function(){function t(t){this.diagramService=t,this.width=100,this.diagrams=this.diagramService.getDiagrams()}return t.prototype.ngOnInit=function(){this.diagramData$=this.diagramService.getDiagram(this.diagramId)},t.decorators=[{type:e.Component,args:[{selector:"diagram-view",template:'<div *ngIf="diagramData$ | async" [style.color]="(diagramData$ | async)?.Box.Color">\r\n    <dynamic-component-selector class="diagram-box" [data]="(diagramData$ | async)"></dynamic-component-selector>\r\n</div>',styles:[":host{width:100%;margin:12.5px}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}.widget-title{font:1.3em IRANSans,tahoma}"]}]}],t.ctorParameters=function(){return[{type:W}]},t.propDecorators={diagramId:[{type:e.Input,args:["id"]}]},t}();var ft=function(){function t(t){this.diagramService=t,this.width=100,this.diagrams=this.diagramService.getDiagrams()}return t.prototype.ngOnInit=function(){},t.decorators=[{type:e.Component,args:[{selector:"diagrams",template:'<mat-grid-list cols="12" rowHeight="100px">\r\n  <mat-grid-tile *ngFor="let diagram of (diagrams | async)?.Result" \r\n  [colspan]="diagram.Box.Cols" \r\n  [rowspan]="diagram.Box.Rows" \r\n  [style.color]="diagram.Box.Color">\r\n    <dynamic-component-selector class="diagram-box" [data]="diagram"></dynamic-component-selector>\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n<br />\r\n<div fxFlexLayout="row" fxLayoutWrap fxLayoutAlign="center center">\r\n</div>\r\n<div fxLayoutAlign=\'end center\'>\r\n  <button mat-fab routerLink="../diagrams/add" class="add-btn">\r\n    <mat-icon aria-label="Example icon-button with a heart icon">add</mat-icon>\r\n  </button>\r\n</div>\r\n',styles:[":host{width:100%}.diagram-box{margin:15px}.add-btn{position:fixed;bottom:50px;left:25px;z-index:1}"]}]}],t.ctorParameters=function(){return[{type:W}]},t}();var ht=function(){function t(t,e,r){var o=this;this.diagramService=t,this.route=e,this.store=r,this.formGroup=F.Request.formGroup;this.route.params.subscribe((function(t){var e=t.id;o.diagramService.getDiagram(e).subscribe((function(t){return o.formGroup.patchValue(t)}))}))}return t.prototype.ngOnInit=function(){},t.prototype.add=function(t){this.store.dispatch(new S(this.formGroup.value))},t.decorators=[{type:e.Component,args:[{selector:"diagram-edit",template:'<mat-card fxLayout="column" fxFlex="400px">\r\n    <form [formGroup]="formGroup" fxLayout=\'column\' (ngSubmit)="add($event)">\r\n\r\n        <mat-card-header>\r\n            <mat-card-title>افزودن نمودار جدید</mat-card-title>\r\n        </mat-card-header>\r\n\r\n        <mat-card-content>\r\n            <mat-form-field fxFlexFill>\r\n                <input matInput placeholder="عنوان نمودار" formControlName="Name">\r\n            </mat-form-field>\r\n            <mat-form-field fxFlexFill>\r\n                <input matInput placeholder="آدرس نمودار" formControlName="Route">\r\n            </mat-form-field>\r\n\r\n            <mat-checkbox formControlName="IsActive">وضعیت</mat-checkbox>\r\n\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n            <button fxFlex mat-raised-button color="primary" type="submit">ثبت</button>\r\n            <button fxFlex=\'nogrow\' mat-button routerLink=\'/diagrams\'>انصراف</button>\r\n        </mat-card-actions>\r\n    </form>\r\n</mat-card>\r\n',styles:[""]}]}],t.ctorParameters=function(){return[{type:W},{type:o.ActivatedRoute},{type:u.Store}]},t}();var gt=function(){function t(t,e,r,o,n){var a=this;this.store=t,this.diagramService=e,this.http=r,this.injector=o,this.route=n,this.unsubscribe=new m.Subject,this.modelIsCorrect=new p.BehaviorSubject(!1),this.now=Date.now(),this.data=this.injector.get("data"),this.route.params.subscribe((function(t){var e=t.id;e&&a.diagramService.getDiagram(e).subscribe((function(t){console.log(t)}))}))}return Object.defineProperty(t.prototype,"data",{get:function(){return this._model},set:function(t){t.Chart&&t._id&&(this._model=t,this.modelIsCorrect.next(!0))},enumerable:!0,configurable:!0}),t.prototype.ngAfterViewInit=function(){var t=this;this.modelIsCorrect.delay(300).filter((function(t){return t})).subscribe((function(e){t.chart=c3.generate(y({},t.data.Chart,{bindto:"#diagram_"+t.data._id})),t.dataSubscribtion=t.diagramService.getData(t.data.Source,t.unsubscribe).pipe(f.filter((function(t){return null!=t})),f.takeUntil(t.unsubscribe)).subscribe((function(e){t.now=Date.now(),t.time=e.Time,t.data.Chart.Flow?t.chart.flow({columns:t.diagramService.extract_columns_from_data(e.Data,t.data.Chart.ColumnMappings),duration:1500}):t.chart.load({columns:t.diagramService.extract_columns_from_data(e.Data,t.data.Chart.ColumnMappings)})}))}))},t.prototype.ngOnDestroy=function(){this.unsubscribe.next(),this.unsubscribe.complete()},t.prototype.timeChange=function(t){var e=this;this.dataSubscribtion.unsubscribe(),this.dataSubscribtion=this.diagramService.getData(this.data.Source,this.unsubscribe,Date.now()-(1e3-t.value)*this.data.Source.Interval,!0).subscribe((function(t){e.time=t.Time,e.now=Date.now(),e.chart.load({columns:e.diagramService.extract_columns_from_data(t.Data,e.data.Chart.ColumnMappings)})}))},t.decorators=[{type:e.Component,args:[{selector:"diagram",template:'<div class="over" fxlayout="row" fxLayoutAlign="space-between">\r\n    <div fxFlex="nogrow" fxFlexAlign="start" class="data-time">{{now | date : \'y/M/d h:m:s\'}}</div>\r\n    <div fxFlex="nogrow" fxFlexAlign="center" class="data-time">{{time | date : \'y/M/d h:m:s\'}}</div>\r\n    <div fxFlex="nogrow" fxFlexAlign="end" class="data-time">{{now | date : \'y/M/d h:m:s\'}}</div>\r\n</div>\r\n<div *ngIf="modelIsCorrect | async" class="diagram widget" [id]="\'diagram_\' + data._id"></div>',styles:[":host{width:100%}.diagram-box .c3{direction:ltr}mat-slider{width:100%}.data-time{direction:ltr;text-align:center}.over{visibility:hidden;opacity:0;position:absolute;top:35px;left:0;right:0;background:#fff;z-index:3;transition:.4s ease-in-out}"]}]}],t.ctorParameters=function(){return[{type:u.Store},{type:W},{type:a.HttpClient},{type:e.Injector},{type:o.ActivatedRoute}]},t.propDecorators={data:[{type:e.Input}]},t}();var yt=function(){function t(t){this.resolver=t,this.typeMapToDiagram={bar:gt,donut:gt,pie:gt,scatter:gt,line:gt,area:gt,"area-spline":gt,numero:Q,tempo:z,booleano:P},this.currentComponent=null,this.backgroundColor=""}return Object.defineProperty(t.prototype,"data",{set:function(t){if(t&&0!=Object.keys(t).length){this.backgroundColor=t.Box.BackgroundColor,this._data=t;var r={data:t},o=this.typeMapToDiagram[t.Chart.data.type],n=Object.keys(r).map((function(t){return{provide:t,useValue:r[t]}})),a=e.ReflectiveInjector.resolve(n),i=e.ReflectiveInjector.fromResolvedProviders(a,this.dynamicComponentContainer.parentInjector),c=this.resolver.resolveComponentFactory(o).create(i);this.dynamicComponentContainer.insert(c.hostView),this.currentComponent&&this.currentComponent.destroy(),this.currentComponent=c}},enumerable:!0,configurable:!0}),t.prototype.ngAfterViewInit=function(){},t.prototype.timeChange=function(t){this.currentComponent._component.timeChange(t)},t.decorators=[{type:e.Component,args:[{selector:"dynamic-component-selector",template:'<mat-card class="diagram-box" [style.background]="backgroundColor" fxLayout="column" fxLayoutAlign="space-between stretch">\r\n    <div fxFlex="0 0 auto" *ngIf="_data" fxLayoutAlign="space-between center">\r\n        <span fxLayoutAlign="start center" class="widget-title">\r\n            {{_data.Name}}\r\n        </span>\r\n        <a [routerLink]="[\'../diagrams/edit\' ,  _data._id]" fxLayoutAlign="center center" mat-icon-button color="primary">\r\n            <mat-icon aria-label="edit diagram">edit</mat-icon>\r\n        </a>\r\n    </div>\r\n    \x3c!-- <mat-card-content> --\x3e\r\n    \x3c!-- <mat-slider invert [(ngModel)]="time" (change)="timeChange($event)"></mat-slider> --\x3e\r\n    <mat-slider class="over" fxFlex="0 0 auto" invert min=\'1\' max=\'1000\' value="1000" (change)="timeChange($event)"></mat-slider>\r\n    <div fxFlex="1 1 auto" class="widget-container">\r\n        <div #dynamicComponentContainer></div>\r\n    </div>\r\n    \x3c!-- </mat-card-content> --\x3e\r\n</mat-card>',entryComponents:[Q,z,P,gt],styles:[":host{width:100%;margin:12.5px}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}.widget-title{font:1.3em IRANSans,tahoma}.over{visibility:hidden;opacity:0;position:absolute;top:60px;left:0;right:0;background:#fff;z-index:3;transition:.4s ease-in-out}"]}]}],t.ctorParameters=function(){return[{type:e.ComponentFactoryResolver}]},t.propDecorators={dynamicComponentContainer:[{type:e.ViewChild,args:["dynamicComponentContainer",{read:e.ViewContainerRef,static:!1}]}],widgetComponent:[{type:e.ViewChild,args:[gt,{static:!1}]}],data:[{type:e.Input}]},t}();var vt=function(){function t(t){this.resolver=t,this.typeMapToDiagram={bar:$,area:B,"area-spline":B,donut:$,pie:V,scatter:$,line:B,booleano:U},this.ConfigChanged=new e.EventEmitter,this.currentComponent=null}return Object.defineProperty(t.prototype,"data",{set:function(t){var r=this;if(t&&0!=Object.keys(t).length)if(t.type in this.typeMapToDiagram){var o=this.typeMapToDiagram[t.type],n=Object.keys(t.inputs).map((function(e){return{provide:e,useValue:t.inputs[e]}})),a=e.ReflectiveInjector.resolve(n),i=e.ReflectiveInjector.fromResolvedProviders(a,this.dynamicComponentContainer.parentInjector),c=this.resolver.resolveComponentFactory(o).create(i);c.instance.ConfigChanged&&c.instance.ConfigChanged.subscribe((function(){r.ConfigChanged.emit()})),this.dynamicComponentContainer.insert(c.hostView),this.currentComponent&&this.currentComponent.destroy(),this.currentComponent=c}else this.currentComponent&&this.currentComponent.destroy()},enumerable:!0,configurable:!0}),t.prototype.ngAfterViewInit=function(){},t.decorators=[{type:e.Component,args:[{selector:"dynamic-config-component-selector",template:"<div #dynamicComponentContainer></div>",entryComponents:[$,V,B,U],styles:[":host{width:100%}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}"]}]}],t.ctorParameters=function(){return[{type:e.ComponentFactoryResolver}]},t.propDecorators={dynamicComponentContainer:[{type:e.ViewChild,args:["dynamicComponentContainer",{read:e.ViewContainerRef,static:!1}]}],ConfigChanged:[{type:e.Output}],data:[{type:e.Input}]},t}();var bt=function(){function t(t,e,r){var o=this;this.actions$=t,this.router=e,this.diagramService=r,this.DiagramRequest$=this.actions$.pipe(d.ofType(),f.map((function(t){return t.payload})),f.map((function(t){return new I}))),this.getDiagram$=this.actions$.pipe(d.ofType(),f.map((function(t){return t.payload})),f.switchMap((function(t){return o.diagramService.getDiagrams().pipe(f.map((function(t){return new G(t)})),f.catchError((function(){return m.of(new w)})))})))}return t.decorators=[{type:e.Injectable}],t.ctorParameters=function(){return[{type:d.Actions},{type:o.Router},{type:W}]},v([d.Effect(),b("design:type",Object)],t.prototype,"DiagramRequest$",void 0),v([d.Effect(),b("design:type",Object)],t.prototype,"getDiagram$",void 0),t}();var Ct=function(){function t(t,e,r){var o=this;this.actions$=t,this.router=e,this.diagramService=r,this.addDiagramRequest$=this.actions$.pipe(d.ofType(tt.ADD_DIAGRAM),f.pluck("payload"),f.map((function(t){return new rt(t)}))),this.addDiagram$=this.actions$.pipe(d.ofType(tt.ADD_DIAGRAM_START),f.pluck("payload"),f.switchMap((function(t){return o.diagramService.addDiagram(t).pipe(f.map((function(t){return new ot(t)})),f.catchError((function(){return g.of(new nt)})))}))),this.ADD_DIAGRAM_SUCCEED$=this.actions$.pipe(d.ofType(tt.ADD_DIAGRAM_SUCCEED),f.pluck("payload"),f.map((function(t){return o.router.navigate(["diagrams"]),h.Observable.empty()}))),this.HAVE_ENDPOINT$=this.actions$.pipe(d.ofType(tt.HAVE_ENDPOINT),f.pluck("payload"),f.map((function(t){return new ct(t)}))),this.DATA_LOADED$=this.actions$.pipe(d.ofType(tt.DATA_LOADED),f.pluck("payload"),f.map((function(t){return new st(t)}))),this.DIAGRAM_CONFIG_CHANGED$=this.actions$.pipe(d.ofType(tt.DIAGRAM_CONFIG_CHANGED),f.pluck("payload"),f.map((function(t){return new mt(t)}))),this.STRUCTURE_DEFINITION_START$=this.actions$.pipe(d.ofType(tt.STRUCTURE_DEFINITION_START),f.pluck("payload"),f.switchMap((function(t){return t.getDataStructure().map((function(){return new ut(t)}))}))),this.COLUMNS_MAPPING_CHANGED$=this.actions$.pipe(d.ofType(tt.COLUMNS_MAPPING_CHANGED),f.pluck("payload"),f.switchMap((function(t){return t.calculateColumns().map((function(){return new ut(t)}))}))),this.STRUCTURE_DEFINITION_END$=this.actions$.pipe(d.ofType(tt.STRUCTURE_DEFINITION_END),f.pluck("payload"),f.switchMap((function(t){return t.calculateColumns().map((function(){return new mt(t)}))}))),this.GenerateDiagram$=this.actions$.pipe(d.ofType(tt.GENERATE_DIAGRAM),f.pluck("payload"),f.map((function(t){return t.generateDiagram()})))}return t.decorators=[{type:e.Injectable}],t.ctorParameters=function(){return[{type:d.Actions},{type:o.Router},{type:W}]},v([d.Effect(),b("design:type",Object)],t.prototype,"addDiagramRequest$",void 0),v([d.Effect(),b("design:type",Object)],t.prototype,"addDiagram$",void 0),v([d.Effect({dispatch:!1}),b("design:type",Object)],t.prototype,"ADD_DIAGRAM_SUCCEED$",void 0),v([d.Effect(),b("design:type",Object)],t.prototype,"HAVE_ENDPOINT$",void 0),v([d.Effect(),b("design:type",Object)],t.prototype,"DATA_LOADED$",void 0),v([d.Effect(),b("design:type",Object)],t.prototype,"DIAGRAM_CONFIG_CHANGED$",void 0),v([d.Effect(),b("design:type",Object)],t.prototype,"STRUCTURE_DEFINITION_START$",void 0),v([d.Effect(),b("design:type",Object)],t.prototype,"COLUMNS_MAPPING_CHANGED$",void 0),v([d.Effect(),b("design:type",Object)],t.prototype,"STRUCTURE_DEFINITION_END$",void 0),v([d.Effect({dispatch:!1}),b("design:type",Object)],t.prototype,"GenerateDiagram$",void 0),t}();var xt=[{path:"diagrams",component:J,children:[{path:"",component:ft},{path:"add",component:pt},{path:"edit/:id",component:pt},{path:"numero",component:Q},{path:"tempo",component:z},{path:"booleano",component:P}]}],Dt=o.RouterModule.forChild(xt),At=function(){function t(t){this.diagramService=t,this.diagrams$=this.diagramService.getDiagrams().pipe(f.map((function(t){return t.Result})))}return Object.defineProperty(t.prototype,"valid",{get:function(){return null!=this.config.diagramId},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"config",{get:function(){return{diagramId:this.selectedDiagramId}},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.decorators=[{type:e.Component,args:[{template:'<div fxLayout="column wrap" fxLayoutGap="15px">\r\n<h4>لیست نمودارها</h4>\r\n      <mat-form-field fxFlex="100">\r\n  <mat-select placeholder="نمودار ها" [(ngModel)]="selectedDiagramId" name="selectedDiagramId">\r\n  <mat-option *ngFor="let item of (diagrams$ | async)" [value]="item._id">\r\n    {{item.Name}}\r\n  </mat-option>\r\n</mat-select>\r\n</mat-form-field>\r\n</div>'}]}],t.ctorParameters=function(){return[{type:W}]},t}();var It=function(){function t(){}return t.forRoot=function(t){return{ngModule:_t,providers:[{provide:D,useValue:t}]}},t.decorators=[{type:e.NgModule,args:[{imports:[a.HttpClientModule,n.FormsModule,o.RouterModule,r.CommonModule,s.MatExpansionModule,s.MatSnackBarModule,s.MatIconModule,s.MatButtonModule,s.MatCardModule,s.MatSelectModule,s.MatSliderModule,s.MatInputModule,s.MatCheckboxModule,s.MatFormFieldModule,s.MatTabsModule,i.FlexLayoutModule,s.MatRadioModule,s.MatTooltipModule,s.MatGridListModule,s.MatAutocompleteModule,n.ReactiveFormsModule,c.BrowserAnimationsModule],declarations:[pt,ft,lt,ht,vt,gt,yt,J,X,Q,P,$,V,U,q,z,K,B,At],entryComponents:[At,lt],exports:[At],providers:[]}]}],t}(),_t=function(){function t(){window.___starter=window.___starter||{},window.___starter.diagram="8.0.10"}return t.decorators=[{type:e.NgModule,args:[{imports:[It,u.StoreModule.forFeature("diagram",L),d.EffectsModule.forFeature([bt,Ct]),Dt],exports:[It]}]}],t.ctorParameters=function(){return[]},t}();t.DiagramSelectorComponent=At,t.NgsDiagramModule=It,t.diagramViewComponent=lt,t.ɵa=_t,t.ɵb=D,t.ɵba=bt,t.ɵbb=Ct,t.ɵbc=Dt,t.ɵc=pt,t.ɵd=W,t.ɵf=Z,t.ɵg=ft,t.ɵh=ht,t.ɵi=vt,t.ɵj=$,t.ɵk=V,t.ɵl=B,t.ɵm=U,t.ɵn=gt,t.ɵo=yt,t.ɵp=Q,t.ɵq=z,t.ɵr=P,t.ɵs=J,t.ɵt=X,t.ɵu=q,t.ɵv=K,t.ɵw=L,t.ɵx=T,t.ɵy=j,t.ɵz=O,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=soushians-diagram.umd.min.js.map