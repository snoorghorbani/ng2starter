{"version":3,"sources":["../node_modules/tslib/tslib.es6.js","ng://@soushians/diagram/lib/diagram.config.ts","ng://@soushians/diagram/lib/models/get-diagrams-api.model.ts","ng://@soushians/diagram/lib/actions/diagrams.actions.ts","ng://@soushians/diagram/lib/reducers/diagrams.reducer.ts","ng://@soushians/diagram/lib/models/edit-diagram-api.model.ts","ng://@soushians/diagram/lib/actions/edit-diagram.actions.ts","ng://@soushians/diagram/lib/reducers/edit-diagram.reducer.ts","ng://@soushians/diagram/lib/reducers/parent-guard.reducer.ts","ng://@soushians/diagram/lib/reducers/index.ts","ng://@soushians/diagram/lib/dumb-components/server-status-diagram/server-status-diagram.component.ts","ng://@soushians/diagram/lib/dumb-components/diagram-partial-config-edit/diagram-partial-config-edit.component.ts","ng://@soushians/diagram/lib/dumb-components/pie-diagram-partial-config/pie-diagram-partial-config.component.ts","ng://@soushians/diagram/lib/dumb-components/booleano-widget-partial-config/booleano-widget-partial-config.component.ts","ng://@soushians/diagram/lib/dumb-components/numeric-widget-partial-config/numeric-widget-partial-config.component.ts","ng://@soushians/diagram/lib/dumb-components/linear-diagram-partial-config/linear-diagram-partial-config.component.ts","ng://@soushians/diagram/lib/dumb-components/server-connecting-time-diagram/server-connecting-time-diagram.component.ts","ng://@soushians/diagram/lib/services/diagram-configuration.service.ts","ng://@soushians/diagram/lib/models/add-diagram-api.model.ts","ng://@soushians/diagram/lib/services/diagram.service.ts","ng://@soushians/diagram/lib/dumb-components/numeric-edit-diagram/numeric-edit-diagram.component.ts","ng://@soushians/diagram/lib/dumb-components/numeric-diagram/numeric-diagram.component.ts","ng://@soushians/diagram/lib/smart-components/diagram-module-container/diagram-module-container.component.ts","ng://@soushians/diagram/lib/smart-components/data-mapper/data-mapper.component.ts","ng://@soushians/diagram/lib/models/diagram.model.ts","ng://@soushians/diagram/lib/actions/add-diagram.actions.ts","ng://@soushians/diagram/lib/smart-components/add-diagram/add-diagram.component.ts","ng://@soushians/diagram/lib/smart-components/diagram-view/diagram-view.component.ts","ng://@soushians/diagram/lib/smart-components/diagrams/diagrams.component.ts","ng://@soushians/diagram/lib/smart-components/edit-diagram/edit-diagram.component.ts","ng://@soushians/diagram/lib/smart-components/diagram/diagram.component.ts","ng://@soushians/diagram/lib/smart-components/dynamic-component-selector/dynamic-component-selector.component.ts","ng://@soushians/diagram/lib/smart-components/dynamic-config-component-selector/dynamic-config-component-selector.component.ts","ng://@soushians/diagram/lib/effects/diagrams.effects.ts","ng://@soushians/diagram/lib/effects/add-diagram.effects.ts","ng://@soushians/diagram/lib/diagram-routing.module.ts","ng://@soushians/diagram/lib/smart-components/diagram-selector/diagram-selector.component.ts","ng://@soushians/diagram/lib/diagram.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","GetDiagramsApiModel","MODULE_DEFAULT_CONFIG","endpoints","env","production","frontend_server","MODULE_CONFIG_TOKEN","InjectionToken","Request","initValue","_this","keys","forEach","getRequestBody","Response","GET_DIAGRAM","GET_DIAGRAM_START","GET_DIAGRAM_SUCCEED","GET_DIAGRAM_FAILED","GetDiagramsStart","type","DiagramsActionTypes","GetDiagramsSucceed","payload","GetDiagramsFailed","console","log","initialState","loaded","diagram","Result","diagramReducer","state","action","EditDiagramApiModel","params","getRequestQueryParams","FormGroup","Name","FormControl","Validators","required","IsActive","Route","EDIT_DIAGRAM","EDIT_DIAGRAM_START","EDIT_DIAGRAM_SUCCEED","EDIT_DIAGRAM_FAILED","EditDiagramAction","EditDiagramActionTypes","status","data","Reducer","initialState$1","route","result","ParentGuardReducer","initialState$2","DiagramReducers","diagrams","DiagramsReducer.diagramReducer","editDiagram","fromEditDiagram.Reducer","parentGuard","parentGuardReducer.ParentGuardReducer","selectFeatureState","createFeatureSelector","ServerStatusDiagramComponent","createSelector","injector","dataLoaded","BehaviorSubject","get","_data","next","timeChange","e","ngOnInit","Component","args","selector","template","Injector","Input","DiagramPartialConfigEditComponent","formGroup","diagramService","ngOnDestroy","configChanged","PieDiagramPartialConfigComponent","ConfigChanged","EventEmitter","donutFormGroup","controls","_dataLoaded","emit","Output","BooleanoWidgetPartialConfigComponent","booleanoFormGroup","NumericWidgetPartialConfigComponent","LinearDiagramPartialConfigComponent","ServerConnectingTimeDiagramComponent","time","setInterval","AddDiagramApiModel","DiagramConfigurationService","config","_config","Injectable","providedIn","Inject","_id","Source","Type","Groups","Widget","booleano","Chart","columns","colors","Colors","types","Types","ColumnMappings","Flow","legend","show","Legend","subchart","Subchart","zoom","enabled","Zoom","tooltip","grouped","Tooltip","Box","Cols","Rows","TextColor","BackgroundColor","Sync","FormArray","donut","title","SuccessMessage","FailureMessage","DiagramService","http","store","configurationService","charts","getDiagrams","map","response","catch","err","Observable","throw","getSources","getGroups","getDiagram","id","addDiagram","model","post","updateDiagram","body","put","deleteDiagram","delete","getData","source","unsubscribe","once","sourceId","getFloorTime","Interval","toString","res","Date","now","timer","pipe","takeUntil","switchMap","extract_columns_from_data","columnsMappings","item","ValueData","_","getValue","ValuePath","NamePath","push","split","pop","concat","NameData","is","array","_item","get_data_report","report","get_last_node_of_data","filter","isLastNode","buildChartConfig","generateDiagram","sync","c3","generate","bindto","Subject","subscribe","load","Data","precision","Math","floor","HttpClient","Store","NumericEditDiagramComponent","undefined","complete","NumericDiagramComponent","counter","dataSubscribtion","DiagramModuleContainerComponent","service","DataMapperComponent","dataReport","DiagramModel","ADD_DIAGRAM","ADD_DIAGRAM_START","ADD_DIAGRAM_SUCCEED","DIAGRAM_CONFIG_CHANGED","ADD_DIAGRAM_FAILED","STRUCTURE_DEFINITION_START","HAVE_ENDPOINT","DATA_LOADED","STRUCTURE_DEFINITION_END","COLUMNS_MAPPING_CHANGED","DATA_CALCULATED","COLUMN_ADDED","GENERATE_DIAGRAM","AddDiagramAction","AddDiagramActionTypes","AddDiagramActionStart","AddDiagramActionSucceed","AddDiagramActionFailed","DiagramConfigChangedAction","HaveEndpointAction","DataLoadedAction","StructureDefinitionStartAction","StructureDefinitionFinishedAction","ColumnsMappingChangedAction","GenerateDiagramAction","AddDiagramComponent","formBuilder","sources","groups","diagramId","patchValue","colorsControl","columnKey","addControl","typesControl","mapping","addColumn","dispatch","diagramPartialConfig","value","inputs","diagramTypes","statusChanges","dataSubscription","getDataStructure","observer","pathOptions","typeChanged","typesFormGroup","cb","setValue","group","routeEntered","event","removeColumn","removeAt","calculateColumns","create","obser","column","temp","NumberOfColumns","Order","diagramModel","empty","add","FormBuilder","ActivatedRoute","diagramViewComponent","width","diagramData$","DiagramsComponent","EditDiagramComponent","DiagramComponent","modelIsCorrect","_model","ngAfterViewInit","delay","chart","Time","flow","duration","DynamicComponentSelectorComponent","resolver","typeMapToDiagram","bar","pie","scatter","line","area","area-spline","numero","tempo","currentComponent","backgroundColor","raw","_component","inputProviders","inputName","provide","useValue","resolvedInputs","ReflectiveInjector","resolve","fromResolvedProviders","dynamicComponentContainer","parentInjector","component","resolveComponentFactory","insert","hostView","destroy","entryComponents","ComponentFactoryResolver","ViewChild","read","ViewContainerRef","static","DynamicConfigComponentSelectorComponent","DiagramEffects","actions$","router","DiagramRequest$","ofType","getDiagram$","catchError","of","Actions","Router","tslib_1.__decorate","Effect","AddDiagramEffects","addDiagramRequest$","pluck","addDiagram$","ADD_DIAGRAM_SUCCEED$","navigate","HAVE_ENDPOINT$","DATA_LOADED$","DIAGRAM_CONFIG_CHANGED$","STRUCTURE_DEFINITION_START$","COLUMNS_MAPPING_CHANGED$","STRUCTURE_DEFINITION_END$","GenerateDiagram$","routes","path","children","RoutingModule","RouterModule","forChild","DiagramSelectorComponent","diagrams$","selectedDiagramId","NgsDiagramModule","forRoot","ngModule","RootNgsDiagramModule","providers","NgModule","imports","HttpClientModule","FormsModule","CommonModule","MatExpansionModule","MatSnackBarModule","MatIconModule","MatButtonModule","MatCardModule","MatSelectModule","MatSliderModule","MatInputModule","MatCheckboxModule","MatFormFieldModule","MatTabsModule","FlexLayoutModule","MatRadioModule","MatTooltipModule","MatGridListModule","MatAutocompleteModule","ReactiveFormsModule","BrowserAnimationsModule","declarations","exports","___starter","StoreModule","forFeature","EffectsModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface DiagramModuleConfig {\r\n\tendpoints?: {};\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t};\r\n}\r\n\r\nexport const MODULE_DEFAULT_CONFIG: DiagramModuleConfig = {\r\n\tendpoints: {},\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"frontend/server/did/not/set\"\r\n\t}\r\n};\r\n\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<DiagramModuleConfig>(\"DiagramModuleConfig\");\r\n","import { DiagramModel } from \"./diagram.model\";\r\n\r\nexport namespace GetDiagramsApiModel {\r\n\texport class Request {\r\n\t\tdiagram: string;\r\n\r\n\t\tconstructor(initValue: GetDiagramsApiModel.Request = {} as GetDiagramsApiModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\t//static get formGroup() {\r\n\t\t// return new FormGroup({\r\n\t\t//   diagram: new FormControl('', [Validators.minLength(8), Validators.required])\r\n\t\t// })\r\n\t\t//}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: DiagramModel[];\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetDiagramsApiModel } from \"../models/get-diagrams-api.model\";\r\n\r\nexport enum DiagramsActionTypes {\r\n\tGET_DIAGRAM = \"[DIAGRAM] GET_DIAGRAM\",\r\n\tGET_DIAGRAM_START = \"[DIAGRAM] GET_DIAGRAM_START\",\r\n\tGET_DIAGRAM_SUCCEED = \"[DIAGRAM] GET_DIAGRAM_SUCCEED\",\r\n\tGET_DIAGRAM_FAILED = \"[DIAGRAM] GET_DIAGRAM_FAILED\"\r\n}\r\n\r\nexport class GetDiagrams implements Action {\r\n\treadonly type = DiagramsActionTypes.GET_DIAGRAM;\r\n}\r\nexport class GetDiagramsStart implements Action {\r\n\treadonly type = DiagramsActionTypes.GET_DIAGRAM_START;\r\n}\r\nexport class GetDiagramsSucceed implements Action {\r\n\treadonly type = DiagramsActionTypes.GET_DIAGRAM_SUCCEED;\r\n\tconstructor(public payload: GetDiagramsApiModel.Response) {}\r\n}\r\nexport class GetDiagramsFailed implements Action {\r\n\treadonly type = DiagramsActionTypes.GET_DIAGRAM_FAILED;\r\n}\r\n\r\nexport type DiagramsAction = GetDiagrams | GetDiagramsStart | GetDiagramsSucceed | GetDiagramsFailed;\r\n","import { GetDiagramsApiModel } from \"../models/get-diagrams-api.model\";\r\nimport { DiagramsActionTypes, DiagramsAction } from \"../actions/diagrams.actions\";\r\n\r\nconsole.log(GetDiagramsApiModel);\r\n\r\nexport interface State {\r\n\tloaded: boolean;\r\n\tdiagram: GetDiagramsApiModel.Response;\r\n}\r\nexport const initialState: State = {\r\n\tloaded: false,\r\n\tdiagram: {\r\n\t\tResult: []\r\n\t}\r\n};\r\n\r\nexport function diagramReducer(state = initialState, action: DiagramsAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase DiagramsActionTypes.GET_DIAGRAM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloaded: true\r\n\t\t\t\t// diagram: action.payload,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase DiagramsActionTypes.GET_DIAGRAM_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloaded: true\r\n\t\t\t\t//  diagram: action.payload,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const DiagramInfo = (state: State) => state.diagram;\r\n","import { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\n\r\nimport { DiagramModel } from \"./diagram.model\";\r\n\r\nexport namespace EditDiagramApiModel {\r\n\texport class Request {\r\n\t\tconstructor(params: Request) {}\r\n\t\tgetRequestQueryParams() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t\t// TODO:\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tName: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tIsActive: new FormControl(\"true\", [ Validators.required ]),\r\n\t\t\t\tRoute: new FormControl(\"\", [ Validators.required ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: DiagramModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { EditDiagramApiModel } from \"../models/edit-diagram-api.model\";\r\n\r\nexport enum EditDiagramActionTypes {\r\n\tEDIT_DIAGRAM = \"[DIAGRAM][EDIT] EDIT_DIAGRAM\",\r\n\tEDIT_DIAGRAM_START = \"[DIAGRAM][EDIT] EDIT_DIAGRAM_START\",\r\n\tEDIT_DIAGRAM_SUCCEED = \"[DIAGRAM][EDIT] EDIT_DIAGRAM_SUCCEED\",\r\n\tEDIT_DIAGRAM_FAILED = \"[DIAGRAM][EDIT] EDIT_DIAGRAM_FAILED\"\r\n}\r\n\r\nexport class EditDiagramAction implements Action {\r\n\treadonly type = EditDiagramActionTypes.EDIT_DIAGRAM;\r\n\tconstructor(public payload: EditDiagramApiModel.Response) {}\r\n}\r\nexport class EditDiagramActionStart implements Action {\r\n\treadonly type = EditDiagramActionTypes.EDIT_DIAGRAM_START;\r\n\tconstructor(public payload: EditDiagramApiModel.Response) {}\r\n}\r\nexport class EditDiagramActionSucceed implements Action {\r\n\treadonly type = EditDiagramActionTypes.EDIT_DIAGRAM_SUCCEED;\r\n\tconstructor(public payload: EditDiagramApiModel.Response) {}\r\n}\r\nexport class EditDiagramActionFailed implements Action {\r\n\treadonly type = EditDiagramActionTypes.EDIT_DIAGRAM_FAILED;\r\n}\r\n\r\nexport type EditDiagramActions =\r\n\t| EditDiagramAction\r\n\t| EditDiagramActionStart\r\n\t| EditDiagramActionSucceed\r\n\t| EditDiagramActionFailed;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\n\r\nimport { EditDiagramApiModel } from \"../models/edit-diagram-api.model\";\r\nimport { EditDiagramActionTypes, EditDiagramActions } from \"../actions/edit-diagram.actions\";\r\n\r\nconsole.log(EditDiagramApiModel);\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n\tdata: EditDiagramApiModel.Response;\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\",\r\n\tdata: { Result: {} } as EditDiagramApiModel.Response\r\n};\r\nexport function Reducer(state = initialState, action: EditDiagramActions): State {\r\n\tswitch (action.type) {\r\n\t\tcase EditDiagramActionTypes.EDIT_DIAGRAM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"dirty\",\r\n\t\t\t\tdata: new EditDiagramApiModel.Response()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditDiagramActionTypes.EDIT_DIAGRAM_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"pending\",\r\n\t\t\t\tdata: new EditDiagramApiModel.Response()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditDiagramActionTypes.EDIT_DIAGRAM_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"succeed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditDiagramActionTypes.EDIT_DIAGRAM_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const EditDiagramInfo = (state: State) => state.data;\r\n","import { ParentGuardAction } from \"../actions/parent-guard.actions\";\r\n\r\nexport interface State {\r\n\troute: string;\r\n\tresult: boolean;\r\n}\r\nexport const initialState: State = {\r\n\troute: \"\",\r\n\tresult: false\r\n};\r\n\r\nexport function ParentGuardReducer(state = initialState, action: ParentGuardAction): State {\r\n\tswitch (action.type) {\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getParentRoutingGuard = (state: State) => state;\r\n","import { createSelector, createFeatureSelector, MemoizedSelector } from \"@ngrx/store\";\r\n\r\nimport * as DiagramsReducer from \"./diagrams.reducer\";\r\nimport * as fromEditDiagram from \"./edit-diagram.reducer\";\r\nimport * as parentGuardReducer from \"./parent-guard.reducer\";\r\n\r\nexport interface DiagramState {\r\n\tdiagrams: DiagramsReducer.State;\r\n\teditDiagram: fromEditDiagram.State;\r\n\tparentGuard: parentGuardReducer.State;\r\n}\r\n\r\nexport const DiagramReducers = {\r\n\tdiagrams: DiagramsReducer.diagramReducer,\r\n\teditDiagram: fromEditDiagram.Reducer,\r\n\tparentGuard: parentGuardReducer.ParentGuardReducer\r\n};\r\n\r\nexport interface FeatureState {\r\n\t\"diagram\": DiagramState;\r\n}\r\n\r\n//#region selectors\r\n\r\nexport const selectFeatureState = createFeatureSelector<DiagramState>(\"diagram\");\r\n\r\n// export const getDiagramInformationStatus = createSelector(\r\n//   selectFeatureState,\r\n//   (state: DiagramState) => state.diagram\r\n// );\r\n\r\n//#region edit diagram\r\nexport const selectEditDiagramState = createSelector(selectFeatureState, (state: DiagramState) => state.editDiagram);\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject, Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: \"diagram-server-status\",\r\n\ttemplateUrl: \"./server-status-diagram.component.html\",\r\n\tstyleUrls: [ \"./server-status-diagram.component.scss\" ]\r\n})\r\nexport class ServerStatusDiagramComponent implements OnInit {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\t}\r\n\r\n\ttimeChange(e) {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source._id, this.data.Source.Interval)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger\r\n\t\t//     this.chart.load({\r\n\t\t//       columns: this.diagramService.extract_columns_from_data(data, this.data.Chart.ColumnMappings)\r\n\t\t//     });\r\n\t\t//   })\r\n\t}\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"diagram-partial-config-edit\",\r\n\ttemplateUrl: \"./diagram-partial-config-edit.component.html\",\r\n\tstyleUrls: [ \"./diagram-partial-config-edit.component.scss\" ]\r\n})\r\nexport class DiagramPartialConfigEditComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\tdiagramService: DiagramService;\r\n\tformGroup: FormGroup;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n\tconfigChanged() {}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"pie-diagram-partial-config\",\r\n\ttemplateUrl: \"./pie-diagram-partial-config.component.html\",\r\n\tstyleUrls: [ \"./pie-diagram-partial-config.component.scss\" ]\r\n})\r\nexport class PieDiagramPartialConfigComponent implements OnInit, OnDestroy {\r\n\t@Output() ConfigChanged = new EventEmitter();\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_dataLoaded;\r\n\t@Input()\r\n\tset formGroup(data: FormGroup) {\r\n\t\tif (!data) return;\r\n\t\tthis._dataLoaded = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget formGroup() {\r\n\t\treturn this._dataLoaded;\r\n\t}\r\n\tdonutFormGroup: FormGroup;\r\n\tdiagramService: DiagramService;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t\tthis.donutFormGroup = this.formGroup.controls.donut as FormGroup;\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n\tconfigChanged() {\r\n\t\tthis.ConfigChanged.emit();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"booleano-widget-partial-config\",\r\n\ttemplateUrl: \"./booleano-widget-partial-config.component.html\",\r\n\tstyleUrls: [ \"./booleano-widget-partial-config.component.scss\" ]\r\n})\r\nexport class BooleanoWidgetPartialConfigComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_dataLoaded;\r\n\t@Input()\r\n\tset formGroup(data: FormGroup) {\r\n\t\tif (!data) return;\r\n\t\tthis._dataLoaded = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget formGroup() {\r\n\t\treturn this._dataLoaded;\r\n\t}\r\n\tbooleanoFormGroup: FormGroup;\r\n\tdiagramService: DiagramService;\r\n\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t\tthis.booleanoFormGroup = this.formGroup.controls.booleano as FormGroup;\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"numeric-widget-partial-config\",\r\n\ttemplateUrl: \"./numeric-widget-partial-config.component.html\",\r\n\tstyleUrls: [ \"./numeric-widget-partial-config.component.scss\" ]\r\n})\r\nexport class NumericWidgetPartialConfigComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_dataLoaded;\r\n\t@Input()\r\n\tset formGroup(data: FormGroup) {\r\n\t\tif (!data) return;\r\n\t\tthis._dataLoaded = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget formGroup() {\r\n\t\treturn this._dataLoaded;\r\n\t}\r\n\tdonutFormGroup: FormGroup;\r\n\tdiagramService: DiagramService;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t\tthis.donutFormGroup = this.formGroup.controls.donut as FormGroup;\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"linear-diagram-partial-config\",\r\n\ttemplateUrl: \"./linear-diagram-partial-config.component.html\",\r\n\tstyleUrls: [ \"./linear-diagram-partial-config.component.scss\" ]\r\n})\r\nexport class LinearDiagramPartialConfigComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\t@Output() ConfigChanged = new EventEmitter();\r\n\tdiagramService: DiagramService;\r\n\tformGroup: FormGroup;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n\tconfigChanged() {\r\n\t\tthis.ConfigChanged.emit();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: \"diagram-server-connecting-time\",\r\n\ttemplateUrl: \"./server-connecting-time-diagram.component.html\",\r\n\tstyleUrls: [ \"./server-connecting-time-diagram.component.scss\" ]\r\n})\r\nexport class ServerConnectingTimeDiagramComponent implements OnInit {\r\n\t@Input() time: number = 0;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\t\tsetInterval(() => {\r\n\t\t\tthis.time = this.time + 1;\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\ttimeChange(e) {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route, this.data.Source.Sync)\r\n\t\t//         .subscribe(data => {\r\n\t\t//                 this.chart.load({\r\n\t\t//                         columns: this.diagramService.extract_columns_from_data(data, this.data.Chart.ColumnMappings)\r\n\t\t//                 });\r\n\t\t//         })\r\n\t}\r\n}\r\n","import { Injectable, Inject } from \"@angular/core\";\r\n\r\nimport { MODULE_CONFIG_TOKEN, DiagramModuleConfig, MODULE_DEFAULT_CONFIG } from \"../diagram.config\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class DiagramConfigurationService {\r\n\tprivate _config: DiagramModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) config) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, config);\r\n\t}\r\n}\r\n","import { FormGroup, FormControl, Validators, FormArray } from \"@angular/forms\";\r\n\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\n\r\nimport { DiagramModel } from \"./diagram.model\";\r\nimport { SourceModel } from \"./source.model\";\r\n\r\nexport namespace AddDiagramApiModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\t_id: string;\r\n\t\tName: string;\r\n\t\tIsActive: Boolean;\r\n\t\tType: string;\r\n\t\tTypes: { [columnLabel: string]: string };\r\n\t\tLegend: Boolean;\r\n\t\tSubchart: Boolean;\r\n\t\tZoom: Boolean;\r\n\t\tTooltip: Boolean;\r\n\t\tRoute: string;\r\n\t\tSync: number;\r\n\t\tColors: string[];\r\n\t\tColumnMappings: { NamePath: string; ValuePath: string }[];\r\n\t\tFlow: string;\r\n\t\tcolumns: any[];\r\n\t\tCols: number;\r\n\t\tRows: number;\r\n\t\tTextColor: String;\r\n\t\tBackgroundColor: string;\r\n\t\tbooleano: any;\r\n\t\tSource: SourceModel;\r\n\t\tGroups: string[];\r\n\t\tconstructor(initValue: AddDiagramApiModel.Request = {} as AddDiagramApiModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {\r\n\t\t\t\t_id: this._id,\r\n\t\t\t\tName: this.Name,\r\n\t\t\t\tIsActive: this.IsActive,\r\n\t\t\t\tSource: this.Source,\r\n\t\t\t\tType: this.Type,\r\n\t\t\t\tGroups: this.Groups,\r\n\t\t\t\tWidget: {\r\n\t\t\t\t\tbooleano: this.booleano\r\n\t\t\t\t},\r\n\t\t\t\tChart: {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\ttype: this.Type,\r\n\t\t\t\t\t\tcolumns: this.columns,\r\n\t\t\t\t\t\tcolors: this.Colors,\r\n\t\t\t\t\t\ttypes: this.Types\r\n\t\t\t\t\t},\r\n\t\t\t\t\tColumnMappings: this.ColumnMappings,\r\n\t\t\t\t\tFlow: this.Flow,\r\n\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\tshow: this.Legend\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsubchart: {\r\n\t\t\t\t\t\tshow: this.Subchart\r\n\t\t\t\t\t},\r\n\t\t\t\t\tzoom: {\r\n\t\t\t\t\t\tenabled: this.Zoom\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttooltip: {\r\n\t\t\t\t\t\tgrouped: this.Tooltip\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tBox: {\r\n\t\t\t\t\tCols: this.Cols,\r\n\t\t\t\t\tRows: this.Rows,\r\n\t\t\t\t\tTextColor: this.TextColor,\r\n\t\t\t\t\tBackgroundColor: this.BackgroundColor\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\t_id: new FormControl(\"\", []),\r\n\t\t\t\tName: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tSync: new FormControl(0, [ Validators.required ]),\r\n\t\t\t\tIsActive: new FormControl(\"true\", [ Validators.required ]),\r\n\t\t\t\tType: new FormControl(\"pie\", [ Validators.required ]),\r\n\t\t\t\tGroups: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tLegend: new FormControl(\"true\", [ Validators.required ]),\r\n\t\t\t\tSubchart: new FormControl(\"false\", [ Validators.required ]),\r\n\t\t\t\tZoom: new FormControl(\"false\", [ Validators.required ]),\r\n\t\t\t\tTooltip: new FormControl(\"false\", [ Validators.required ]),\r\n\t\t\t\tRoute: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tSource: new FormControl({}, [ Validators.required ]),\r\n\t\t\t\tcolumns: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tCols: new FormControl(1, [ Validators.required ]),\r\n\t\t\t\tRows: new FormControl(1, [ Validators.required ]),\r\n\t\t\t\tTextColor: new FormControl(\"#000000\", [ Validators.required ]),\r\n\t\t\t\tBackgroundColor: new FormControl(\"#ffffff\", [ Validators.required ]),\r\n\t\t\t\tColors: new FormGroup({}),\r\n\t\t\t\tTypes: new FormGroup({}),\r\n\t\t\t\tColumnMappings: new FormArray([]),\r\n\t\t\t\tFlow: new FormControl(true),\r\n\t\t\t\tdonut: new FormGroup({\r\n\t\t\t\t\ttitle: new FormControl(\"Default Title\")\r\n\t\t\t\t}),\r\n\t\t\t\tbooleano: new FormGroup({\r\n\t\t\t\t\tSuccessMessage: new FormControl(\"SuccessMessage\"),\r\n\t\t\t\t\tFailureMessage: new FormControl(\"FailureMessage\")\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\texport class Response {\r\n\t\tResult: DiagramModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, Subscription, Subject } from \"rxjs/Rx\";\r\nimport { Store } from \"@ngrx/store\";\r\ndeclare var c3: any;\r\n\r\nimport { DiagramConfigurationService } from \"./diagram-configuration.service\";\r\nimport { FeatureState } from \"../reducers\";\r\nimport { GetDiagramsApiModel } from \"../models/get-diagrams-api.model\";\r\nimport { SourceModel } from \"../models/source.model\";\r\nimport { AddDiagramApiModel } from \"../models/add-diagram-api.model\";\r\nimport { DiagramModuleConfig } from \"../diagram.config\";\r\nimport { switchMap, map, takeUntil } from \"rxjs/operators\";\r\n\r\ndeclare var _: any;\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class DiagramService {\r\n\tconfig: DiagramModuleConfig;\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<FeatureState>,\r\n\t\tprivate configurationService: DiagramConfigurationService\r\n\t) {\r\n\t\tthis.config = this.configurationService.config;\r\n\t}\r\n\r\n\tgetDiagrams(): Observable<GetDiagramsApiModel.Response> {\r\n\t\treturn this.http\r\n\t\t\t.get<GetDiagramsApiModel.Response>(this.config.env.frontend_server + \"/api/diagram\")\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetSources(): Observable<SourceModel[]> {\r\n\t\treturn this.http\r\n\t\t\t.get(this.config.env.frontend_server + \"/api/source\")\r\n\t\t\t.map((response) => (response as any).Result)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetGroups(): Observable<string[]> {\r\n\t\treturn this.http\r\n\t\t\t.get(this.config.env.frontend_server + \"/api/diagram/groups\")\r\n\t\t\t.map((response) => (response as any).Result)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetDiagram(id: string): Observable<any> {\r\n\t\tif (!id) debugger;\r\n\t\treturn this.http\r\n\t\t\t.get(this.config.env.frontend_server + `/api/diagram/${id}`)\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\taddDiagram(data: any): Observable<AddDiagramApiModel.Response> {\r\n\t\tconst model = new AddDiagramApiModel.Request(data);\r\n\t\treturn this.http\r\n\t\t\t.post<AddDiagramApiModel.Response>(this.config.env.frontend_server + \"/api/diagram\", model.getRequestBody())\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tupdateDiagram(body: any): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.put(this.config.env.frontend_server + \"/api/diagram\", body)\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tdeleteDiagram(id: string): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.delete(`${this.config.env.frontend_server}/api/diagram/${id}`)\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetData(source: SourceModel, unsubscribe: Subject<void>, time: number = 0, once: Boolean = false): Observable<any> {\r\n\t\tif (once && time !== 0) {\r\n\t\t\treturn this.http\r\n\t\t\t\t.get(`${this.config.env.frontend_server}/api/data`, {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tsourceId: source._id,\r\n\t\t\t\t\t\ttime: this.getFloorTime(source.Interval, time).toString()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.map((res: any) => res.Result);\r\n\t\t} else if (source.Interval == 0) {\r\n\t\t\treturn this.http\r\n\t\t\t\t.get(`${this.config.env.frontend_server}/api/data`, {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tsourceId: source._id,\r\n\t\t\t\t\t\ttime: null\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.map((res: any) => res.Result);\r\n\t\t} else {\r\n\t\t\ttime = time || Date.now();\r\n\t\t\treturn Observable.timer(0, source.Interval).pipe(\r\n\t\t\t\ttakeUntil(unsubscribe),\r\n\t\t\t\tswitchMap((i) =>\r\n\t\t\t\t\tthis.http\r\n\t\t\t\t\t\t.get(`${this.config.env.frontend_server}/api/data`, {\r\n\t\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\t\tsourceId: source._id,\r\n\t\t\t\t\t\t\t\ttime: this.getFloorTime(source.Interval, time).toString()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}).pipe(\r\n\t\t\t\t\t\t\tmap((res: any) => res.Result)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\textract_columns_from_data(data: any, columnsMappings) {\r\n\t\tlet res = [];\r\n\r\n\t\tcolumnsMappings.forEach((item) => {\r\n\t\t\tconst ValueData = _.getValue(data, item.ValuePath);\r\n\r\n\t\t\tif (!item.NamePath) {\r\n\t\t\t\treturn res.push([item.ValuePath.split(\".\").pop()].concat(ValueData));\r\n\t\t\t}\r\n\t\t\tconst NameData = _.getValue(data, item.NamePath);\r\n\r\n\t\t\tif (_.is.array(NameData)) {\r\n\t\t\t\treturn (res = res.concat(NameData.map((_item, i) => [_item].concat(ValueData[i]))));\r\n\t\t\t} else {\r\n\t\t\t\treturn res.push([NameData].concat(ValueData));\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn res;\r\n\t}\r\n\tget_data_report(data: any) {\r\n\t\treturn _.report(data);\r\n\t}\r\n\tget_last_node_of_data(data: any) {\r\n\t\treturn (_.report(data) as any[]).filter((item) => item.isLastNode);\r\n\t}\r\n\tbuildChartConfig(columns) {\r\n\t\treturn {\r\n\t\t\tdata: {\r\n\t\t\t\tcolumns\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tshow: true\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t// TODO: implement interface of c3 config\r\n\tcharts = {};\r\n\tgenerateDiagram(config: any, id: string, route: string, sync: number): Subscription {\r\n\t\tthis.charts[id] = c3.generate({\r\n\t\t\t...config,\r\n\t\t\tbindto: `#diagram_${id}`\r\n\t\t});\r\n\r\n\t\treturn this.getData({} as SourceModel, new Subject<void>(), sync).subscribe((data) => {\r\n\t\t\tthis.charts[id].load({\r\n\t\t\t\tcolumns: this.extract_columns_from_data(data.Data, config.ColumnMappings)\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tgetFloorTime(precision = 60 * 1000, time: number = 0) {\r\n\t\treturn Math.floor((time || Date.now()) / precision);\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { takeUntil, filter } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: \"numeric-edit-diagram\",\r\n\ttemplateUrl: \"./numeric-edit-diagram.component.html\",\r\n\tstyleUrls: [\"./numeric-edit-diagram.component.scss\"]\r\n})\r\nexport class NumericEditDiagramComponent implements OnInit, OnDestroy {\r\n\tunsubscribe = new Subject<void>();\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\tconstructor(private injector: Injector, private diagramService: DiagramService) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\tthis.diagramService.getData(this.data.Source, this.unsubscribe).pipe(\r\n\t\t\tfilter(data => data != undefined),\r\n\t\t\ttakeUntil(this.unsubscribe)\r\n\t\t).subscribe(data => {\r\n\t\t\tdebugger;\r\n\t\t});\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t\tdebugger;\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subscription, Subject } from \"rxjs\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\tselector: \"diagram-numeric\",\r\n\ttemplateUrl: \"./numeric-diagram.component.html\",\r\n\tstyleUrls: [\"./numeric-diagram.component.scss\"]\r\n})\r\nexport class NumericDiagramComponent implements OnInit, OnDestroy {\r\n\tunsubscribe = new Subject<void>();\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\tcounter: number;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\tdataSubscribtion: Subscription;\r\n\tconstructor(private injector: Injector, private diagramService: DiagramService) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\t\tthis.counter = 0;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.dataSubscribtion = this.diagramService.getData(this.data.Source, this.unsubscribe).pipe(\r\n\t\t\ttakeUntil(this.unsubscribe)\r\n\t\t).subscribe(data => {\r\n\t\t\tconst counter = this.diagramService.extract_columns_from_data(data.Data, this.data.Chart.ColumnMappings);\r\n\t\t\tthis.counter = counter[0][1];\r\n\t\t});\r\n\t}\r\n\tngOnDestroy() {\r\n\t\tthis.dataSubscribtion.unsubscribe();\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n// import { UserModel } from 'app/models/authentication';\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n// import * as appReducer from 'app/reducers';\r\n\r\n@Component({\r\n\tselector: \"diagram-module-container\",\r\n\ttemplateUrl: \"./diagram-module-container.component.html\"\r\n})\r\nexport class DiagramModuleContainerComponent implements OnInit {\r\n\tconstructor(private service: DiagramService) {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport * as FeatureReducer from \"../../reducers\";\r\n\r\ndeclare var _: any;\r\n\r\n@Component({\r\n\tselector: \"data-mapper\",\r\n\ttemplateUrl: \"./data-mapper.component.html\",\r\n\tstyleUrls: [ \"./data-mapper.component.scss\" ]\r\n})\r\nexport class DataMapperComponent implements OnInit {\r\n\t@Input() destination: string;\r\n\t_data: any;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tif (!data) return;\r\n\t\tthis.dataReport = _.report(data);\r\n\t\tthis._data = data;\r\n\t}\r\n\tdataReport: any[] = [];\r\n\tconstructor(private diagramService: DiagramService, private store: Store<FeatureReducer.FeatureState>) {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { SourceModel } from \"./source.model\";\r\n\r\nexport class DiagramModel {\r\n\t_id: string;\r\n\tName: string;\r\n\tIsActive: boolean;\r\n\tDescription: string;\r\n\tGroups: string[];\r\n\tBox: {\r\n\t\tNumberOfColumns: number;\r\n\t\tOrder: number;\r\n\t\tBackgroundColor: string;\r\n\t};\r\n\tSource: SourceModel;\r\n\tWidget: {\r\n\t\t\"booleano\": {\r\n\t\t\t\"SuccessMessage\": string;\r\n\t\t\t\"FailureMessage\": string;\r\n\t\t};\r\n\t};\r\n\r\n\tChart: {\r\n\t\tdata: {\r\n\t\t\ttype: \"pie\" | \"linear\" | \"scatter\" | \"bar\" | \"line\";\r\n\t\t\ttypes: { [key: string]: string };\r\n\t\t\tcolumns: any[];\r\n\t\t\tcolors: any[];\r\n\t\t};\r\n\t\tFlow: boolean;\r\n\t\tColumnMappings: {\r\n\t\t\tNamePath: string;\r\n\t\t\tValuePath: string;\r\n\t\t}[];\r\n\t\tlegend: {\r\n\t\t\tshow: boolean;\r\n\t\t};\r\n\t\tsubchart: {\r\n\t\t\tshow: boolean;\r\n\t\t};\r\n\t\tzoom: {\r\n\t\t\tenabled: boolean;\r\n\t\t};\r\n\t\ttooltip: {\r\n\t\t\tgrouped: boolean;\r\n\t\t};\r\n\t};\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { AddDiagramApiModel } from \"../models/add-diagram-api.model\";\r\n\r\nexport enum AddDiagramActionTypes {\r\n\tADD_DIAGRAM = \"[DIAGRAM][ADD] ADD_DIAGRAM\",\r\n\tADD_DIAGRAM_START = \"[DIAGRAM][ADD] ADD_DIAGRAM_START\",\r\n\tADD_DIAGRAM_SUCCEED = \"[DIAGRAM][ADD] ADD_DIAGRAM_SUCCEED\",\r\n\tDIAGRAM_CONFIG_CHANGED = \"[DIAGRAM][ADD] DIAGRAM_CONFIG_CHANGED\",\r\n\tADD_DIAGRAM_FAILED = \"[DIAGRAM][ADD] ADD_DIAGRAM_FAILED\",\r\n\tSTRUCTURE_DEFINITION_START = \"[DIAGRAM][ADD] STRUCTURE_DEFINITION_START\",\r\n\tHAVE_ENDPOINT = \"[DIAGRAM][ADD] HAVE_STRUCTURE\",\r\n\tDATA_LOADED = \"[DIAGRAM][ADD] DATA_LOADED\",\r\n\tSTRUCTURE_DEFINITION_END = \"[DIAGRAM][ADD] STRUCTURE_DEFINITION_END\",\r\n\tCOLUMNS_MAPPING_CHANGED = \"[DIAGRAM][ADD] COLUMNS_MAPPING_CHANGED\",\r\n\tDATA_CALCULATED = \"[DIAGRAM][ADD] DATA_CALCULATED\",\r\n\tCOLUMN_ADDED = \"[DIAGRAM][ADD] COLUMN_ADDED\",\r\n\tGENERATE_DIAGRAM = \"[DIAGRAM][ADD] GENERATE_DIAGRAM\"\r\n}\r\n\r\nexport class AddDiagramAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.ADD_DIAGRAM;\r\n\tconstructor(public payload: AddDiagramApiModel.Response) {}\r\n}\r\nexport class AddDiagramActionStart implements Action {\r\n\treadonly type = AddDiagramActionTypes.ADD_DIAGRAM_START;\r\n\tconstructor(public payload: AddDiagramApiModel.Response) {}\r\n}\r\nexport class AddDiagramActionSucceed implements Action {\r\n\treadonly type = AddDiagramActionTypes.ADD_DIAGRAM_SUCCEED;\r\n\tconstructor(public payload: AddDiagramApiModel.Response) {}\r\n}\r\nexport class AddDiagramActionFailed implements Action {\r\n\treadonly type = AddDiagramActionTypes.ADD_DIAGRAM_FAILED;\r\n}\r\nexport class DiagramConfigChangedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.DIAGRAM_CONFIG_CHANGED;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class HaveEndpointAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.HAVE_ENDPOINT;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class DataLoadedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.DATA_LOADED;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class StructureDefinitionStartAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.STRUCTURE_DEFINITION_START;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class StructureDefinitionFinishedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.STRUCTURE_DEFINITION_END;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class ColumnsMappingChangedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.COLUMNS_MAPPING_CHANGED;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class DataCalculatedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.DATA_CALCULATED;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class GenerateDiagramAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.GENERATE_DIAGRAM;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport class ColumnAdded implements Action {\r\n\treadonly type = AddDiagramActionTypes.COLUMN_ADDED;\r\n}\r\n\r\nexport type AddDiagramActions =\r\n\t| AddDiagramAction\r\n\t| AddDiagramActionStart\r\n\t| AddDiagramActionSucceed\r\n\t| AddDiagramActionFailed\r\n\t| HaveEndpointAction\r\n\t| DataLoadedAction\r\n\t| StructureDefinitionStartAction\r\n\t| StructureDefinitionFinishedAction\r\n\t| ColumnsMappingChangedAction\r\n\t| DataCalculatedAction\r\n\t| GenerateDiagramAction\r\n\t| DiagramConfigChangedAction;\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder, AbstractControl } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Route, ActivatedRoute } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { publish } from \"rxjs/operator/publish\";\r\nimport { Effect } from \"@ngrx/effects\";\r\ndeclare var c3: any;\r\n\r\nimport { addDiagramReducer } from \"../../reducers/add-diagram.reducer\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\nimport { FeatureState } from \"../../reducers\";\r\nimport { AddDiagramApiModel } from \"../../models/add-diagram-api.model\";\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { SourceModel } from \"../../models/source.model\";\r\nimport {\r\n\tHaveEndpointAction,\r\n\tColumnsMappingChangedAction,\r\n\tDiagramConfigChangedAction,\r\n\tAddDiagramAction\r\n} from \"../../actions/add-diagram.actions\";\r\nimport { filter, takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: \"diagram-add\",\r\n\ttemplateUrl: \"./add-diagram.component.html\",\r\n\tstyleUrls: [\"./add-diagram.component.scss\"]\r\n})\r\nexport class AddDiagramComponent implements OnInit, OnDestroy {\r\n\tunsubscribe = new Subject<void>();\r\n\tformGroup: FormGroup = AddDiagramApiModel.Request.formGroup;\r\n\tdata: any;\r\n\tcolumns: any;\r\n\tchart;\r\n\tdiagramTypes: string[];\r\n\tpathOptions: {\r\n\t\tpath: string;\r\n\t\tname: string;\r\n\t\ttype: string;\r\n\t\tcolor: string;\r\n\t}[];\r\n\tcolumnsMappings: AbstractControl[];\r\n\tdataSubscription: Subscription;\r\n\tdiagramModel: DiagramModel;\r\n\tcomponentModel: { component: any; inputs: object };\r\n\ttypeMapToDiagram: { [type: string]: any };\r\n\tdiagramPartialConfig: { type: string; inputs: { formGroup: FormGroup; diagramService: DiagramService } };\r\n\tsources: Observable<SourceModel[]>;\r\n\tgroups: Observable<string[]>;\r\n\tsource: SourceModel;\r\n\tconstructor(\r\n\t\tprivate diagramService: DiagramService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate store: Store<FeatureState>,\r\n\t\tprivate route: ActivatedRoute\r\n\t) {\r\n\t\tthis.sources = this.diagramService.getSources();\r\n\t\tthis.groups = this.diagramService.getGroups();\r\n\t\t// this.diagramModel = new DiagramModel();\r\n\t\tthis.columnsMappings = (this.formGroup.controls.ColumnMappings as FormArray).controls;\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tconst diagramId: string = params[\"id\"];\r\n\t\t\t// tslint:disable-next-line:no-unused-expression\r\n\t\t\tdiagramId &&\r\n\t\t\t\tthis.diagramService.getDiagram(diagramId).subscribe(data => {\r\n\t\t\t\t\tthis.formGroup.patchValue({\r\n\t\t\t\t\t\t_id: data._id,\r\n\t\t\t\t\t\tName: data.Name,\r\n\t\t\t\t\t\tIsActive: data.IsActive,\r\n\t\t\t\t\t\tGroups: data.Groups,\r\n\t\t\t\t\t\tType: data.Chart.data.type,\r\n\t\t\t\t\t\tLegend: data.Chart.legend.show,\r\n\t\t\t\t\t\tSubchart: data.Chart.subchart.show,\r\n\t\t\t\t\t\tZoom: data.Chart.zoom.enabled,\r\n\t\t\t\t\t\tTooltip: data.Chart.tooltip.grouped,\r\n\t\t\t\t\t\tSync: data.Source.Interval,\r\n\t\t\t\t\t\tSource: data.Source,\r\n\t\t\t\t\t\tcolumns: data.Chart.data.columns,\r\n\t\t\t\t\t\tColumnMappings: data.Chart.ColumnMappings,\r\n\t\t\t\t\t\tCols: data.Box.Cols,\r\n\t\t\t\t\t\tFlow: data.Chart.Flow,\r\n\t\t\t\t\t\tRows: data.Box.Rows,\r\n\t\t\t\t\t\tBackgroundColor: data.Box.BackgroundColor,\r\n\t\t\t\t\t\tTextColor: data.Box.TextColor\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst colorsControl = <FormGroup>this.formGroup.controls[\"Colors\"];\r\n\t\t\t\t\tObject.keys(data.Chart.data.colors || {}).forEach(columnKey => {\r\n\t\t\t\t\t\tif (!(columnKey in colorsControl.controls))\r\n\t\t\t\t\t\t\tcolorsControl.addControl(columnKey, new FormControl(data.Chart.data.colors[columnKey]));\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst typesControl = <FormGroup>this.formGroup.controls[\"Types\"];\r\n\t\t\t\t\tObject.keys(data.Chart.data.types || {}).forEach(key => {\r\n\t\t\t\t\t\tif (!(key in typesControl.controls))\r\n\t\t\t\t\t\t\ttypesControl.addControl(key, new FormControl(data.Chart.data.types[key]));\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdata.Chart.ColumnMappings.forEach(mapping => this.addColumn(mapping.NamePath, mapping.ValuePath));\r\n\t\t\t\t\tthis.source = data.Source;\r\n\t\t\t\t\tthis.store.dispatch(new HaveEndpointAction(this));\r\n\r\n\t\t\t\t\tthis.diagramPartialConfig = {\r\n\t\t\t\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\t\t\t\tinputs: {\r\n\t\t\t\t\t\t\tformGroup: this.formGroup,\r\n\t\t\t\t\t\t\tdiagramService: this.diagramService\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\tthis.diagramPartialConfig = {\r\n\t\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\t\tinputs: {\r\n\t\t\t\t\tformGroup: this.formGroup,\r\n\t\t\t\t\tdiagramService: this.diagramService\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tthis.diagramTypes = [\r\n\t\t\t\"bar\",\r\n\t\t\t\"donut\",\r\n\t\t\t\"pie\",\r\n\t\t\t\"scatter\",\r\n\t\t\t\"line\",\r\n\t\t\t\"area\",\r\n\t\t\t\"area-spline\",\r\n\t\t\t\"numero\",\r\n\t\t\t\"booleano\",\r\n\t\t\t\"tempo\"\r\n\t\t];\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.formGroup.controls.ColumnMappings.statusChanges.subscribe(status => {\r\n\t\t\tif (\r\n\t\t\t\tstatus == \"VALID\" &&\r\n\t\t\t\t(this.formGroup.controls.ColumnMappings as FormArray).controls.length > 0 &&\r\n\t\t\t\tthis.data\r\n\t\t\t)\r\n\t\t\t\tthis.store.dispatch(new ColumnsMappingChangedAction(this));\r\n\t\t});\r\n\t}\r\n\tngOnDestroy() {\r\n\t\tif (this.dataSubscription) this.dataSubscription.unsubscribe();\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t}\r\n\t// getData() {\r\n\t//   const o$ = this.diagramService.getData(this.source);\r\n\t//   this.dataSubscription = o$.subscribe(data => new DataLoadedAction(this))\r\n\t//   return o$;\r\n\t// }\r\n\tgetDataStructure() {\r\n\t\tdebugger;\r\n\t\tconst observer = this.diagramService.getData({ ...this.source, Interval: 0 }, this.unsubscribe, Date.now() - 10000);\r\n\t\tthis.dataSubscription = observer.subscribe(data => {\r\n\t\t\tthis.data = data.Data;\r\n\t\t\tthis.pathOptions = this.diagramService.get_data_report(data.Data);\r\n\t\t});\r\n\t\treturn observer;\r\n\t}\r\n\tconfigChanged() {\r\n\t\tthis.store.dispatch(new DiagramConfigChangedAction(this));\r\n\t}\r\n\ttypeChanged() {\r\n\t\tconst typesFormGroup = (this.formGroup.controls.Types as FormGroup).controls;\r\n\t\t// tslint:disable-next-line:forin\r\n\t\tfor (const cb in typesFormGroup) {\r\n\t\t\ttypesFormGroup[cb].setValue(this.formGroup.value.Type);\r\n\t\t}\r\n\t\tthis.diagramPartialConfig = {\r\n\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\tinputs: {\r\n\t\t\t\tformGroup: this.formGroup,\r\n\t\t\t\tdiagramService: this.diagramService\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.store.dispatch(new DiagramConfigChangedAction(this));\r\n\t}\r\n\taddColumn(NamePath: string = \"\", ValuePath: string = \"\") {\r\n\t\tconst control = <FormArray>this.formGroup.controls[\"ColumnMappings\"];\r\n\t\tcontrol.push(\r\n\t\t\tthis.formBuilder.group({\r\n\t\t\t\tNamePath: [NamePath],\r\n\t\t\t\tValuePath: [ValuePath, Validators.required]\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\trouteEntered(event) {\r\n\t\tdebugger;\r\n\t\tthis.source = event.value;\r\n\t\tthis.formGroup.patchValue({ Source: event.value });\r\n\t\tthis.store.dispatch(new HaveEndpointAction(this));\r\n\t}\r\n\tremoveColumn(i: number) {\r\n\t\tconst control = <FormArray>this.formGroup.controls[\"ColumnMappings\"];\r\n\t\tcontrol.removeAt(i);\r\n\t}\r\n\tcalculateColumns(): Observable<void> {\r\n\t\treturn Observable.create(obser => {\r\n\t\t\tconst columnsMApping = {\r\n\t\t\t\t// NameVAlue:  (this.formGroup.controls.ColumnMappings as FormArray).controls.values\r\n\t\t\t};\r\n\t\t\tconst columns = this.diagramService.extract_columns_from_data(\r\n\t\t\t\tthis.data,\r\n\t\t\t\t(this.formGroup.controls.ColumnMappings as FormArray).value\r\n\t\t\t);\r\n\t\t\tthis.formGroup.controls.columns.setValue(columns);\r\n\t\t\t// add new item to this.formGroup.controls.colors form control\r\n\t\t\tconst colorsControl = <FormGroup>this.formGroup.controls[\"Colors\"];\r\n\t\t\tcolumns.forEach(column => {\r\n\t\t\t\tconst columnKey = column[0];\r\n\t\t\t\tif (!(columnKey in colorsControl.controls))\r\n\t\t\t\t\tcolorsControl.addControl(columnKey, new FormControl(\"#123456\"));\r\n\t\t\t});\r\n\r\n\t\t\tconst typesControl = <FormGroup>this.formGroup.controls[\"Types\"];\r\n\t\t\tcolumns.forEach(column => {\r\n\t\t\t\tconst key = column[0];\r\n\t\t\t\tif (!(key in typesControl.controls))\r\n\t\t\t\t\ttypesControl.addControl(key, new FormControl(this.formGroup.value.Type));\r\n\t\t\t});\r\n\t\t\tobser.next();\r\n\t\t});\r\n\t}\r\n\tgenerateDiagram(): Observable<any> {\r\n\t\tconst temp = new DiagramModel();\r\n\t\ttemp._id = \"template_id\";\r\n\t\ttemp.Name = this.formGroup.value.Name;\r\n\t\tdebugger;\r\n\t\ttemp.Source = this.source;\r\n\t\ttemp.Box = {\r\n\t\t\tNumberOfColumns: 1,\r\n\t\t\tOrder: 1,\r\n\t\t\tBackgroundColor: this.formGroup.value.BackgroundColor\r\n\t\t};\r\n\t\ttemp.Widget = {\r\n\t\t\tbooleano: this.formGroup.value.booleano\r\n\t\t};\r\n\t\ttemp.Chart = {\r\n\t\t\tColumnMappings: this.formGroup.value.ColumnMappings,\r\n\t\t\tdata: {\r\n\t\t\t\tcolumns: this.formGroup.controls.columns.value,\r\n\t\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\t\ttypes: this.formGroup.value.Types,\r\n\t\t\t\tcolors: this.formGroup.controls.Colors.value\r\n\t\t\t},\r\n\t\t\tFlow: this.formGroup.value.Flow,\r\n\t\t\tlegend: {\r\n\t\t\t\tshow: this.formGroup.value.Legend\r\n\t\t\t},\r\n\t\t\tsubchart: {\r\n\t\t\t\tshow: this.formGroup.value.Subchart\r\n\t\t\t},\r\n\t\t\tzoom: {\r\n\t\t\t\tenabled: this.formGroup.value.Zoom\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tgrouped: this.formGroup.value.Tooltip\r\n\t\t\t}\r\n\t\t\t// tooltip: {\r\n\t\t\t//         format: {\r\n\t\t\t//                 value: function (value) {\r\n\t\t\t//                         return value + \"%\";\r\n\t\t\t//                 }\r\n\t\t\t//         }\r\n\t\t\t// },\r\n\t\t\t// color: {\r\n\t\t\t//         pattern: ['#60B044', '#F6C600', '#F97600', '#FF0000'],\r\n\t\t\t//         threshold: {\r\n\t\t\t//                 //  unit: 'value', // percentage is default\r\n\t\t\t//                 values: [30, 60, 90, 100]\r\n\t\t\t//         }\r\n\t\t\t// },\r\n\t\t};\r\n\t\t// this.componentModel = {\r\n\t\t//   component: this.typeMapToDiagram[temp.Chart.data.type],\r\n\t\t//   inputs: { data: temp }\r\n\t\t// }\r\n\t\tthis.diagramModel = temp;\r\n\t\treturn Observable.empty();\r\n\t}\r\n\tadd(event) {\r\n\t\tthis.store.dispatch(new AddDiagramAction(this.formGroup.value));\r\n\t}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { GetDiagramsApiModel } from \"../../models/get-diagrams-api.model\";\r\n\r\n@Component({\r\n\tselector: \"diagram-view\",\r\n\ttemplateUrl: \"./diagram-view.component.html\",\r\n\tstyleUrls: [\"./diagram-view.component.scss\"]\r\n})\r\nexport class diagramViewComponent implements OnInit {\r\n\tdiagrams: Observable<GetDiagramsApiModel.Response>;\r\n\twidth = 100;\r\n\r\n\tdiagramData$: any;\r\n\t@Input(\"id\") diagramId: string;\r\n\r\n\tconstructor(private diagramService: DiagramService) {\r\n\t\tthis.diagrams = this.diagramService.getDiagrams();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.diagramData$ = this.diagramService.getDiagram(this.diagramId);\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { GetDiagramsApiModel } from \"../../models/get-diagrams-api.model\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n@Component({\r\n\tselector: \"diagrams\",\r\n\ttemplateUrl: \"./diagrams.component.html\",\r\n\tstyleUrls: [\"./diagrams.component.scss\"]\r\n})\r\nexport class DiagramsComponent implements OnInit {\r\n\tdiagrams: Observable<GetDiagramsApiModel.Response>;\r\n\twidth = 100;\r\n\tconstructor(private diagramService: DiagramService) {\r\n\t\tthis.diagrams = this.diagramService.getDiagrams();\r\n\r\n\t\t// this.diagrams\r\n\t\t//         .delay(100)\r\n\t\t//         .subscribe(diagrams =>\r\n\t\t//                 diagrams.Result.forEach(diagram =>\r\n\t\t//                         this.diagramService.generateDiagram(diagram.Chart, diagram._id, diagram.Source.Route, diagram.Source.Sync)));\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\t// this.socketService.initSocket();\r\n\t\t// this.socketService.send(\"add-message\");\r\n\t\t// this.socketService.onMessage().subscribe(msg=>{\r\n\t\t//         debugger\r\n\t\t// });\r\n\t}\r\n}\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { FeatureState } from \"../../reducers\";\r\nimport { EditDiagramApiModel } from \"../../models/edit-diagram-api.model\";\r\nimport { EditDiagramAction } from \"../../actions/edit-diagram.actions\";\r\n\r\n@Component({\r\n\tselector: \"diagram-edit\",\r\n\ttemplateUrl: \"./edit-diagram.component.html\",\r\n\tstyleUrls: [ \"./edit-diagram.component.scss\" ]\r\n})\r\nexport class EditDiagramComponent implements OnInit {\r\n\tformGroup: FormGroup = EditDiagramApiModel.Request.formGroup;\r\n\tconstructor(\r\n\t\tprivate diagramService: DiagramService,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate store: Store<FeatureState>\r\n\t) {\r\n\t\tlet Route = this.route.params.subscribe(params => {\r\n\t\t\tconst diagramId: string = params[\"id\"];\r\n\t\t\tthis.diagramService.getDiagram(diagramId).subscribe(data => this.formGroup.patchValue(data));\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\r\n\tadd(event) {\r\n\t\tthis.store.dispatch(new EditDiagramAction(this.formGroup.value));\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, AfterViewInit, OnDestroy, Injector } from \"@angular/core\";\r\nimport { Subscription, Subject } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { MatSliderChange } from \"@angular/material\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { FeatureState } from \"../../reducers\";\r\nimport { filter, takeUntil } from \"rxjs/operators\";\r\n\r\ndeclare var c3: any;\r\n\r\n@Component({\r\n\tselector: \"diagram\",\r\n\ttemplateUrl: \"./diagram.component.html\",\r\n\tstyleUrls: [ \"./diagram.component.scss\" ]\r\n})\r\nexport class DiagramComponent implements AfterViewInit, OnDestroy {\r\n\tunsubscribe = new Subject<void>();\r\n\tmodelIsCorrect: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\t_model: DiagramModel;\r\n\t@Input()\r\n\tset data(value: DiagramModel) {\r\n\t\tif (!(value.Chart && value._id)) return;\r\n\t\tthis._model = value;\r\n\t\tthis.modelIsCorrect.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._model;\r\n\t}\r\n\tdataSubscribtion: Subscription;\r\n\tchart: any;\r\n\ttime: number;\r\n\tnow: number = Date.now();\r\n\tconstructor(\r\n\t\tprivate store: Store<FeatureState>,\r\n\t\tprivate diagramService: DiagramService,\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate injector: Injector,\r\n\t\tprivate route: ActivatedRoute\r\n\t) {\r\n\t\tdebugger;\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tconst diagramId: string = params[\"id\"];\r\n\t\t\t// tslint:disable-next-line:no-unused-expression\r\n\t\t\tdiagramId &&\r\n\t\t\t\tthis.diagramService.getDiagram(diagramId).subscribe(data => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n\tngAfterViewInit() {\r\n\t\t// this.dataSubscribtion = IntervalObservable\r\n\t\t//         // .create(this.model.Source.Sync)\r\n\t\t//         .create(999)\r\n\t\t//         .switchMap(i =>\r\n\t\t//                 this.http.get(`http://localhost:3000/api/data`, {\r\n\t\t//                         params: {\r\n\t\t//                                 route: this.model.Source.Route,\r\n\t\t//                                 time: '0'\r\n\t\t//                         }\r\n\t\t//                 })\r\n\t\t//         )\r\n\t\t//         // .switchMap((res: any) => of(res.Result.Data))\r\n\t\t//         .map((res: any) => res.Result.Data)\r\n\t\tthis.modelIsCorrect.delay(300).filter(data => data).subscribe(state => {\r\n\t\t\tthis.chart = c3.generate({\r\n\t\t\t\t...this.data.Chart,\r\n\t\t\t\tbindto: `#diagram_${this.data._id}`\r\n\t\t\t\t// size: {\r\n\t\t\t\t//         height: 150\r\n\t\t\t\t// }\r\n\t\t\t});\r\n\t\t\tthis.dataSubscribtion = this.diagramService\r\n\t\t\t\t.getData(this.data.Source, this.unsubscribe)\r\n\t\t\t\t.pipe(filter(data => data != undefined), takeUntil(this.unsubscribe))\r\n\t\t\t\t.subscribe(data => {\r\n\t\t\t\t\tthis.now = Date.now();\r\n\t\t\t\t\tthis.time = data.Time;\r\n\t\t\t\t\tif (this.data.Chart.Flow) {\r\n\t\t\t\t\t\tthis.chart.flow({\r\n\t\t\t\t\t\t\tcolumns: this.diagramService.extract_columns_from_data(\r\n\t\t\t\t\t\t\t\tdata.Data,\r\n\t\t\t\t\t\t\t\tthis.data.Chart.ColumnMappings\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tduration: 1500\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.chart.load({\r\n\t\t\t\t\t\t\tcolumns: this.diagramService.extract_columns_from_data(\r\n\t\t\t\t\t\t\t\tdata.Data,\r\n\t\t\t\t\t\t\t\tthis.data.Chart.ColumnMappings\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t});\r\n\r\n\t\t// this.dataSubscribtion = this.diagramService.generateDiagram(\r\n\t\t//         this.model.Chart,\r\n\t\t//         this.model._id,\r\n\t\t//         this.model.Source.Route,\r\n\t\t//         this.model.Source.Sync\r\n\t\t// );\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t\tdebugger;\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t}\r\n\ttimeChange(e: MatSliderChange) {\r\n\t\tthis.dataSubscribtion.unsubscribe();\r\n\t\t// this.diagramService.getData(this.data.Source, Date.now() - ((1000 - e.value) * this.data.Source.Interval), true)\r\n\t\tthis.dataSubscribtion = this.diagramService\r\n\t\t\t.getData(\r\n\t\t\t\tthis.data.Source,\r\n\t\t\t\tthis.unsubscribe,\r\n\t\t\t\tDate.now() - (1000 - e.value) * this.data.Source.Interval,\r\n\t\t\t\ttrue\r\n\t\t\t)\r\n\t\t\t.subscribe(data => {\r\n\t\t\t\tthis.time = data.Time;\r\n\t\t\t\tthis.now = Date.now();\r\n\t\t\t\t// const columns = this.diagramService\r\n\t\t\t\t//         .extract_columns_from_data(data.Data, this.data.Chart.ColumnMappings)\r\n\t\t\t\t//         .map(column => {\r\n\t\t\t\t//                 debugger;\r\n\t\t\t\t//                 column[0] += '_historic';\r\n\t\t\t\t//                 return column;\r\n\t\t\t\t//         });\r\n\t\t\t\tthis.chart.load({\r\n\t\t\t\t\tcolumns: this.diagramService.extract_columns_from_data(data.Data, this.data.Chart.ColumnMappings)\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tInput,\r\n\tAfterViewInit,\r\n\tComponentFactoryResolver,\r\n\tViewChild,\r\n\tViewContainerRef,\r\n\tReflectiveInjector,\r\n\tOnDestroy\r\n} from \"@angular/core\";\r\n\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { NumericDiagramComponent } from \"../../dumb-components/numeric-diagram/numeric-diagram.component\";\r\nimport { ServerStatusDiagramComponent } from \"../../dumb-components/server-status-diagram/server-status-diagram.component\";\r\nimport { ServerConnectingTimeDiagramComponent } from \"../../dumb-components/server-connecting-time-diagram/server-connecting-time-diagram.component\";\r\nimport { DiagramComponent } from \"../../smart-components/diagram/diagram.component\";\r\n\r\n@Component({\r\n\tselector: \"dynamic-component-selector\",\r\n\ttemplateUrl: \"./dynamic-component-selector.component.html\",\r\n\tstyleUrls: [\"./dynamic-component-selector.component.scss\"],\r\n\tentryComponents: [\r\n\t\tNumericDiagramComponent,\r\n\t\tServerConnectingTimeDiagramComponent,\r\n\t\tServerStatusDiagramComponent,\r\n\t\tDiagramComponent\r\n\t]\r\n})\r\nexport class DynamicComponentSelectorComponent implements AfterViewInit {\r\n\ttypeMapToDiagram = {\r\n\t\tbar: DiagramComponent,\r\n\t\tdonut: DiagramComponent,\r\n\t\tpie: DiagramComponent,\r\n\t\tscatter: DiagramComponent,\r\n\t\tline: DiagramComponent,\r\n\t\tarea: DiagramComponent,\r\n\t\t\"area-spline\": DiagramComponent,\r\n\t\tnumero: NumericDiagramComponent,\r\n\t\ttempo: ServerConnectingTimeDiagramComponent,\r\n\t\tbooleano: ServerStatusDiagramComponent\r\n\t};\r\n\t@ViewChild(\"dynamicComponentContainer\", { read: ViewContainerRef, static: false })\r\n\tdynamicComponentContainer: ViewContainerRef;\r\n\t@ViewChild(DiagramComponent, { static: false }) widgetComponent: DiagramComponent;\r\n\tcurrentComponent: any = null;\r\n\t_data: any;\r\n\t@Input()\r\n\tset data(data: any) {\r\n\t\tif (!data || Object.keys(data).length == 0) return;\r\n\t\tthis.backgroundColor = data.Box.BackgroundColor;\r\n\t\tthis._data = data;\r\n\t\tlet raw = { data };\r\n\t\tlet _component = this.typeMapToDiagram[data.Chart.data.type];\r\n\t\tlet inputProviders = Object.keys(raw).map(inputName => {\r\n\t\t\treturn { provide: inputName, useValue: raw[inputName] };\r\n\t\t});\r\n\t\tlet resolvedInputs = ReflectiveInjector.resolve(inputProviders);\r\n\r\n\t\tlet injector = ReflectiveInjector.fromResolvedProviders(\r\n\t\t\tresolvedInputs,\r\n\t\t\tthis.dynamicComponentContainer.parentInjector\r\n\t\t);\r\n\t\tlet factory = this.resolver.resolveComponentFactory(_component);\r\n\r\n\t\tlet component = factory.create(injector);\r\n\r\n\t\tthis.dynamicComponentContainer.insert(component.hostView);\r\n\r\n\t\tif (this.currentComponent) {\r\n\t\t\tthis.currentComponent.destroy();\r\n\t\t}\r\n\r\n\t\tthis.currentComponent = component;\r\n\t}\r\n\tbackgroundColor: String = \"\";\r\n\tconstructor(private resolver: ComponentFactoryResolver) { }\r\n\tngAfterViewInit() { }\r\n\ttimeChange(e) {\r\n\t\tthis.currentComponent._component.timeChange(e);\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tInput,\r\n\tAfterViewInit,\r\n\tComponentFactoryResolver,\r\n\tViewChild,\r\n\tViewContainerRef,\r\n\tReflectiveInjector,\r\n\tOnDestroy,\r\n\tOutput,\r\n\tEventEmitter\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { DiagramPartialConfigEditComponent } from \"../../dumb-components/diagram-partial-config-edit/diagram-partial-config-edit.component\";\r\nimport { PieDiagramPartialConfigComponent } from \"../../dumb-components/pie-diagram-partial-config/pie-diagram-partial-config.component\";\r\nimport { BooleanoWidgetPartialConfigComponent } from \"../../dumb-components/booleano-widget-partial-config/booleano-widget-partial-config.component\";\r\nimport { LinearDiagramPartialConfigComponent } from \"../../dumb-components/linear-diagram-partial-config/linear-diagram-partial-config.component\";\r\n\r\ndeclare var c3: any;\r\n\r\n@Component({\r\n\tselector: \"dynamic-config-component-selector\",\r\n\ttemplateUrl: \"./dynamic-config-component-selector.component.html\",\r\n\tstyleUrls: [\"./dynamic-config-component-selector.component.scss\"],\r\n\tentryComponents: [\r\n\t\tDiagramPartialConfigEditComponent,\r\n\t\tPieDiagramPartialConfigComponent,\r\n\t\tLinearDiagramPartialConfigComponent,\r\n\t\tBooleanoWidgetPartialConfigComponent\r\n\t]\r\n})\r\nexport class DynamicConfigComponentSelectorComponent implements AfterViewInit {\r\n\ttypeMapToDiagram = {\r\n\t\tbar: DiagramPartialConfigEditComponent,\r\n\t\tarea: LinearDiagramPartialConfigComponent,\r\n\t\t\"area-spline\": LinearDiagramPartialConfigComponent,\r\n\t\tdonut: DiagramPartialConfigEditComponent,\r\n\t\tpie: PieDiagramPartialConfigComponent,\r\n\t\tscatter: DiagramPartialConfigEditComponent,\r\n\t\tline: LinearDiagramPartialConfigComponent,\r\n\t\tbooleano: BooleanoWidgetPartialConfigComponent\r\n\t};\r\n\t@ViewChild(\"dynamicComponentContainer\", { read: ViewContainerRef, static: false })\r\n\tdynamicComponentContainer: ViewContainerRef;\r\n\t@Output() ConfigChanged = new EventEmitter();\r\n\tcurrentComponent: any = null;\r\n\t@Input()\r\n\tset data(data: any) {\r\n\t\tif (!data || Object.keys(data).length == 0) return;\r\n\t\tif (!(data.type in this.typeMapToDiagram)) {\r\n\t\t\tif (this.currentComponent) this.currentComponent.destroy();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet _component = this.typeMapToDiagram[data.type];\r\n\t\tlet inputProviders = Object.keys(data.inputs).map(inputName => {\r\n\t\t\treturn { provide: inputName, useValue: data.inputs[inputName] };\r\n\t\t});\r\n\t\tlet resolvedInputs = ReflectiveInjector.resolve(inputProviders);\r\n\r\n\t\tlet injector = ReflectiveInjector.fromResolvedProviders(\r\n\t\t\tresolvedInputs,\r\n\t\t\tthis.dynamicComponentContainer.parentInjector\r\n\t\t);\r\n\t\tlet factory = this.resolver.resolveComponentFactory(_component);\r\n\t\tlet component = factory.create(injector);\r\n\t\tif ((<any>component.instance).ConfigChanged)\r\n\t\t\t(<any>component.instance).ConfigChanged.subscribe(() => {\r\n\t\t\t\tthis.ConfigChanged.emit();\r\n\t\t\t});\r\n\r\n\t\tthis.dynamicComponentContainer.insert(component.hostView);\r\n\r\n\t\tif (this.currentComponent) {\r\n\t\t\tthis.currentComponent.destroy();\r\n\t\t}\r\n\r\n\t\tthis.currentComponent = component;\r\n\t}\r\n\tconstructor(private resolver: ComponentFactoryResolver) { }\r\n\tngAfterViewInit() { }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\n\r\nimport { DiagramService } from \"../services/diagram.service\";\r\nimport { GetDiagramsApiModel } from \"../models/get-diagrams-api.model\";\r\nimport { GetDiagramsSucceed, GetDiagramsFailed, GetDiagramsStart } from \"../actions/diagrams.actions\";\r\nimport { of } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class DiagramEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private diagramService: DiagramService) {}\r\n\r\n\t@Effect()\r\n\tDiagramRequest$ = this.actions$.pipe(\r\n\t\tofType<any>(),\r\n\t\tmap(action => action.payload),\r\n\t\tmap(data => new GetDiagramsStart())\r\n\t);\r\n\r\n\t@Effect()\r\n\tgetDiagram$ = this.actions$.pipe(\r\n\t\tofType<any>(),\r\n\t\tmap(action => action.payload),\r\n\t\tswitchMap((data: GetDiagramsApiModel.Request) =>\r\n\t\t\tthis.diagramService\r\n\t\t\t\t.getDiagrams()\r\n\t\t\t\t.pipe(map(res => new GetDiagramsSucceed(res)), catchError(() => of(new GetDiagramsFailed())))\r\n\t\t)\r\n\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map, switchMap, catchError, pluck } from \"rxjs/operators\";\r\n\r\nimport { DiagramService } from \"../services/diagram.service\";\r\nimport { AddDiagramApiModel } from \"../models/add-diagram-api.model\";\r\nimport {\r\n\tAddDiagramActionTypes,\r\n\tAddDiagramActionStart,\r\n\tAddDiagramActionSucceed,\r\n\tAddDiagramActionFailed,\r\n\tDataLoadedAction,\r\n\tStructureDefinitionStartAction,\r\n\tGenerateDiagramAction,\r\n\tStructureDefinitionFinishedAction\r\n} from \"../actions/add-diagram.actions\";\r\n\r\n@Injectable()\r\nexport class AddDiagramEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private diagramService: DiagramService) {}\r\n\r\n\t@Effect()\r\n\taddDiagramRequest$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.ADD_DIAGRAM),\r\n\t\tpluck<any, any>(\"payload\"),\r\n\t\tmap(data => new AddDiagramActionStart(data))\r\n\t);\r\n\r\n\t@Effect()\r\n\taddDiagram$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.ADD_DIAGRAM_START),\r\n\t\tpluck<any, any>(\"payload\"),\r\n\t\tswitchMap((data: AddDiagramApiModel.Request) =>\r\n\t\t\tthis.diagramService\r\n\t\t\t\t.addDiagram(data)\r\n\t\t\t\t.pipe(map(res => new AddDiagramActionSucceed(res)), catchError(() => of(new AddDiagramActionFailed())))\r\n\t\t)\r\n\t);\r\n\r\n\t@Effect({ dispatch: false })\r\n\tADD_DIAGRAM_SUCCEED$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.ADD_DIAGRAM_SUCCEED),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap(data => {\r\n\t\t\tthis.router.navigate([ \"diagrams\" ]);\r\n\t\t\treturn Observable.empty();\r\n\t\t})\r\n\t);\r\n\r\n\t@Effect()\r\n\tHAVE_ENDPOINT$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.HAVE_ENDPOINT),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap(data => new DataLoadedAction(data))\r\n\t);\r\n\r\n\t@Effect()\r\n\tDATA_LOADED$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.DATA_LOADED),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap(data => new StructureDefinitionStartAction(data))\r\n\t);\r\n\r\n\t@Effect()\r\n\tDIAGRAM_CONFIG_CHANGED$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.DIAGRAM_CONFIG_CHANGED),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap(data => new GenerateDiagramAction(data))\r\n\t);\r\n\r\n\t@Effect()\r\n\tSTRUCTURE_DEFINITION_START$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.STRUCTURE_DEFINITION_START),\r\n\t\tpluck<any, any>(\"payload\"),\r\n\t\tswitchMap(data => data.getDataStructure().map(() => new StructureDefinitionFinishedAction(data)))\r\n\t);\r\n\r\n\t@Effect()\r\n\tCOLUMNS_MAPPING_CHANGED$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.COLUMNS_MAPPING_CHANGED),\r\n\t\tpluck<any, any>(\"payload\"),\r\n\t\tswitchMap(data => data.calculateColumns().map(() => new StructureDefinitionFinishedAction(data)))\r\n\t);\r\n\r\n\t@Effect()\r\n\tSTRUCTURE_DEFINITION_END$ = this.actions$\r\n\t\t// .skipUntil(this.actions$.ofType(AddDiagramActionTypes.DATA_LOADED))\r\n\t\t.pipe(\r\n\t\t\tofType(AddDiagramActionTypes.STRUCTURE_DEFINITION_END),\r\n\t\t\tpluck<any, any>(\"payload\"),\r\n\t\t\tswitchMap(data => data.calculateColumns().map(() => new GenerateDiagramAction(data)))\r\n\t\t);\r\n\r\n\t@Effect({ dispatch: false })\r\n\tGenerateDiagram$ = this.actions$.pipe(\r\n\t\tofType(AddDiagramActionTypes.GENERATE_DIAGRAM),\r\n\t\tpluck<any, any>(\"payload\"),\r\n\t\tmap(data => data.generateDiagram())\r\n\t);\r\n}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { DiagramModuleContainerComponent } from \"./smart-components/diagram-module-container/diagram-module-container.component\";\r\nimport { DiagramsComponent } from \"./smart-components/diagrams/diagrams.component\";\r\nimport { AddDiagramComponent } from \"./smart-components/add-diagram/add-diagram.component\";\r\nimport { NumericDiagramComponent } from \"./dumb-components/numeric-diagram/numeric-diagram.component\";\r\nimport { ServerConnectingTimeDiagramComponent } from \"./dumb-components/server-connecting-time-diagram/server-connecting-time-diagram.component\";\r\nimport { ServerStatusDiagramComponent } from \"./dumb-components/server-status-diagram/server-status-diagram.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"diagrams\",\r\n\t\tcomponent: DiagramModuleContainerComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"\",\r\n\t\t\t\tcomponent: DiagramsComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"add\",\r\n\t\t\t\tcomponent: AddDiagramComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"edit/:id\",\r\n\t\t\t\tcomponent: AddDiagramComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"numero\",\r\n\t\t\t\tcomponent: NumericDiagramComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"tempo\",\r\n\t\t\t\tcomponent: ServerConnectingTimeDiagramComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"booleano\",\r\n\t\t\t\tcomponent: ServerStatusDiagramComponent\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const RoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { IGridItemComponent } from \"@soushians/grid\";\r\n\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\ttemplateUrl: \"diagram-selector.component.html\"\r\n})\r\nexport class DiagramSelectorComponent implements OnInit, IGridItemComponent<{ diagramId: string }> {\r\n\tdiagrams$: Observable<DiagramModel[]>;\r\n\tselectedDiagramId: string;\r\n\tget valid() {\r\n\t\treturn this.config.diagramId != undefined;\r\n\t}\r\n\tget config() {\r\n\t\treturn {\r\n\t\t\tdiagramId: this.selectedDiagramId\r\n\t\t};\r\n\t}\r\n\tconstructor(private diagramService: DiagramService) {\r\n\t\tthis.diagrams$ = this.diagramService.getDiagrams().pipe(map(res => res.Result));\r\n\t}\r\n\tngOnInit() {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatTooltipModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule,\r\n\tMatCheckboxModule,\r\n\tMatGridListModule,\r\n\tMatSliderModule,\r\n\tMatAutocompleteModule\r\n} from \"@angular/material\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { EffectsModule, mergeEffects } from \"@ngrx/effects\";\r\n\r\nimport { SharedModule } from \"@soushians/shared\";\r\n\r\nimport { DiagramModuleConfig, MODULE_CONFIG_TOKEN } from \"./diagram.config\";\r\n\r\nimport { DiagramReducers } from \"./reducers/index\";\r\n\r\nimport { ServerStatusDiagramComponent } from \"./dumb-components/server-status-diagram/server-status-diagram.component\";\r\nimport { DiagramPartialConfigEditComponent } from \"./dumb-components/diagram-partial-config-edit/diagram-partial-config-edit.component\";\r\nimport { PieDiagramPartialConfigComponent } from \"./dumb-components/pie-diagram-partial-config/pie-diagram-partial-config.component\";\r\nimport { BooleanoWidgetPartialConfigComponent } from \"./dumb-components/booleano-widget-partial-config/booleano-widget-partial-config.component\";\r\nimport { NumericWidgetPartialConfigComponent } from \"./dumb-components/numeric-widget-partial-config/numeric-widget-partial-config.component\";\r\nimport { LinearDiagramPartialConfigComponent } from \"./dumb-components/linear-diagram-partial-config/linear-diagram-partial-config.component\";\r\nimport { ServerConnectingTimeDiagramComponent } from \"./dumb-components/server-connecting-time-diagram/server-connecting-time-diagram.component\";\r\nimport { NumericEditDiagramComponent } from \"./dumb-components/numeric-edit-diagram/numeric-edit-diagram.component\";\r\nimport { NumericDiagramComponent } from \"./dumb-components/numeric-diagram/numeric-diagram.component\";\r\n\r\nimport { DiagramModuleContainerComponent } from \"./smart-components/diagram-module-container/diagram-module-container.component\";\r\nimport { DataMapperComponent } from \"./smart-components/data-mapper/data-mapper.component\";\r\n\r\nimport { AddDiagramComponent } from \"./smart-components/add-diagram/add-diagram.component\";\r\nimport { diagramViewComponent } from \"./smart-components/diagram-view/diagram-view.component\";\r\nimport { DiagramsComponent } from \"./smart-components/diagrams/diagrams.component\";\r\nimport { EditDiagramComponent } from \"./smart-components/edit-diagram/edit-diagram.component\";\r\nimport { DiagramComponent } from \"./smart-components/diagram/diagram.component\";\r\nimport { DynamicComponentSelectorComponent } from \"./smart-components/dynamic-component-selector/dynamic-component-selector.component\";\r\nimport { DynamicConfigComponentSelectorComponent } from \"./smart-components/dynamic-config-component-selector/dynamic-config-component-selector.component\";\r\n\r\nimport { DiagramEffects } from \"./effects/diagrams.effects\";\r\nimport { AddDiagramEffects } from \"./effects/add-diagram.effects\";\r\n\r\nimport { RoutingModule } from \"./diagram-routing.module\";\r\nimport { DiagramSelectorComponent } from \"./smart-components/diagram-selector/diagram-selector.component\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tRouterModule,\r\n\t\tCommonModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSelectModule,\r\n\t\tMatSliderModule,\r\n\t\tMatInputModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatRadioModule,\r\n\t\tMatTooltipModule,\r\n\t\tMatGridListModule,\r\n\t\tMatAutocompleteModule,\r\n\t\tReactiveFormsModule,\r\n\t\tBrowserAnimationsModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tAddDiagramComponent,\r\n\t\tDiagramsComponent,\r\n\t\tdiagramViewComponent,\r\n\t\tEditDiagramComponent,\r\n\t\tDynamicConfigComponentSelectorComponent,\r\n\t\tDiagramComponent,\r\n\t\tDynamicComponentSelectorComponent,\r\n\t\tDiagramModuleContainerComponent,\r\n\t\tDataMapperComponent,\r\n\t\tNumericDiagramComponent,\r\n\t\tServerStatusDiagramComponent,\r\n\t\tDiagramPartialConfigEditComponent,\r\n\t\tPieDiagramPartialConfigComponent,\r\n\t\tBooleanoWidgetPartialConfigComponent,\r\n\t\tNumericWidgetPartialConfigComponent,\r\n\t\tServerConnectingTimeDiagramComponent,\r\n\t\tNumericEditDiagramComponent,\r\n\t\tLinearDiagramPartialConfigComponent,\r\n\t\tDiagramSelectorComponent\r\n\t],\r\n\tentryComponents: [DiagramSelectorComponent, diagramViewComponent],\r\n\texports: [DiagramSelectorComponent],\r\n\tproviders: []\r\n})\r\nexport class NgsDiagramModule {\r\n\tstatic forRoot(config?: DiagramModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: RootNgsDiagramModule,\r\n\t\t\tproviders: [{ provide: MODULE_CONFIG_TOKEN, useValue: config }]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsDiagramModule,\r\n\t\tStoreModule.forFeature(\"diagram\", DiagramReducers),\r\n\t\tEffectsModule.forFeature([DiagramEffects, AddDiagramEffects]),\r\n\t\tRoutingModule\r\n\t],\r\n\texports: [NgsDiagramModule]\r\n})\r\nexport class RootNgsDiagramModule {\r\n\tconstructor() {\r\n\t\t(<any>window).___starter = (<any>window).___starter || {};\r\n\t\t(<any>window).___starter.diagram = \"8.0.10\";\r\n\t}\r\n}\r\n"]}