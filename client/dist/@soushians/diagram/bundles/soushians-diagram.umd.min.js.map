{"version":3,"sources":["ng://@soushians/diagram/lib/diagram.config.ts","ng://@soushians/diagram/lib/models/get-diagrams-api.model.ts","dist/@soushians/diagram/node_modules/tslib/tslib.es6.js","ng://@soushians/diagram/lib/actions/diagrams.actions.ts","ng://@soushians/diagram/lib/reducers/diagrams.reducer.ts","ng://@soushians/diagram/lib/models/edit-diagram-api.model.ts","ng://@soushians/diagram/lib/actions/edit-diagram.actions.ts","ng://@soushians/diagram/lib/reducers/edit-diagram.reducer.ts","ng://@soushians/diagram/lib/reducers/parent-guard.reducer.ts","ng://@soushians/diagram/lib/reducers/index.ts","ng://@soushians/diagram/lib/models/add-diagram-api.model.ts","ng://@soushians/diagram/lib/dumb-components/server-status-diagram/server-status-diagram.component.ts","ng://@soushians/diagram/lib/dumb-components/diagram-partial-config-edit/diagram-partial-config-edit.component.ts","ng://@soushians/diagram/lib/dumb-components/pie-diagram-partial-config/pie-diagram-partial-config.component.ts","ng://@soushians/diagram/lib/dumb-components/booleano-widget-partial-config/booleano-widget-partial-config.component.ts","ng://@soushians/diagram/lib/dumb-components/numeric-widget-partial-config/numeric-widget-partial-config.component.ts","ng://@soushians/diagram/lib/dumb-components/linear-diagram-partial-config/linear-diagram-partial-config.component.ts","ng://@soushians/diagram/lib/dumb-components/server-connecting-time-diagram/server-connecting-time-diagram.component.ts","ng://@soushians/diagram/lib/services/diagram-configuration.service.ts","ng://@soushians/diagram/lib/services/diagram.service.ts","ng://@soushians/diagram/lib/dumb-components/numeric-edit-diagram/numeric-edit-diagram.component.ts","ng://@soushians/diagram/lib/dumb-components/numeric-diagram/numeric-diagram.component.ts","ng://@soushians/diagram/lib/smart-components/diagram-module-container/diagram-module-container.component.ts","ng://@soushians/diagram/lib/smart-components/data-mapper/data-mapper.component.ts","ng://@soushians/diagram/lib/models/diagram.model.ts","ng://@soushians/diagram/lib/actions/add-diagram.actions.ts","ng://@soushians/diagram/lib/smart-components/add-diagram/add-diagram.component.ts","ng://@soushians/diagram/lib/smart-components/diagram-view/diagram-view.component.ts","ng://@soushians/diagram/lib/smart-components/diagrams/diagrams.component.ts","ng://@soushians/diagram/lib/smart-components/edit-diagram/edit-diagram.component.ts","ng://@soushians/diagram/lib/smart-components/diagram/diagram.component.ts","ng://@soushians/diagram/lib/smart-components/dynamic-component-selector/dynamic-component-selector.component.ts","ng://@soushians/diagram/lib/smart-components/dynamic-config-component-selector/dynamic-config-component-selector.component.ts","ng://@soushians/diagram/lib/effects/diagrams.effects.ts","ng://@soushians/diagram/lib/effects/add-diagram.effects.ts","ng://@soushians/diagram/lib/diagram-routing.module.ts","ng://@soushians/diagram/lib/smart-components/diagram-selector/diagram-selector.component.ts","ng://@soushians/diagram/lib/diagram.module.ts"],"names":["GetDiagramsApiModel","MODULE_DEFAULT_CONFIG","endpoints","env","production","frontend_server","MODULE_CONFIG_TOKEN","InjectionToken","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","Request","initValue","_this","keys","forEach","getRequestBody","Response","GetDiagramsStart","type","DiagramsActionTypes","GetDiagramsSucceed","payload","GetDiagramsFailed","console","log","EditDiagramApiModel","initialState","loaded","diagram","Result","diagramReducer","state","action","params","getRequestQueryParams","FormGroup","Name","FormControl","Validators","required","IsActive","Route","EditDiagramAction","EditDiagramActionTypes","status","data","Reducer","initialState$1","route","result","ParentGuardReducer","initialState$2","AddDiagramApiModel","DiagramReducers","diagrams","DiagramsReducer.diagramReducer","editDiagram","fromEditDiagram.Reducer","parentGuard","parentGuardReducer.ParentGuardReducer","selectFeatureState","createFeatureSelector","ServerStatusDiagramComponent","createSelector","injector","dataLoaded","BehaviorSubject","get","_data","next","timeChange","e","ngOnInit","Component","args","selector","template","Injector","Input","DiagramPartialConfigEditComponent","formGroup","diagramService","ngOnDestroy","configChanged","PieDiagramPartialConfigComponent","ConfigChanged","EventEmitter","donutFormGroup","controls","_dataLoaded","emit","Output","BooleanoWidgetPartialConfigComponent","booleanoFormGroup","NumericWidgetPartialConfigComponent","LinearDiagramPartialConfigComponent","ServerConnectingTimeDiagramComponent","time","setInterval","DiagramConfigurationService","config","_config","Injectable","providedIn","Inject","_id","Source","Type","Groups","Widget","booleano","Chart","columns","colors","Colors","types","Types","ColumnMappings","Flow","legend","show","Legend","subchart","Subchart","zoom","enabled","Zoom","tooltip","grouped","Tooltip","Box","Cols","Rows","TextColor","BackgroundColor","Sync","FormArray","donut","title","SuccessMessage","FailureMessage","DiagramService","http","store","configurationService","charts","getDiagrams","map","response","catch","err","Observable","throw","getSources","getGroups","getDiagram","id","addDiagram","model","post","updateDiagram","body","put","deleteDiagram","delete","getData","source","unsubscribe","once","sourceId","getFloorTime","Interval","toString","res","Date","now","timer","pipe","takeUntil","switchMap","extract_columns_from_data","columnsMappings","item","ValueData","_","getValue","ValuePath","NamePath","push","split","pop","concat","NameData","is","array","_item","get_data_report","report","get_last_node_of_data","filter","isLastNode","buildChartConfig","generateDiagram","sync","c3","generate","bindto","Subject","subscribe","load","Data","precision","Math","floor","HttpClient","Store","NumericEditDiagramComponent","undefined","complete","NumericDiagramComponent","counter","dataSubscribtion","DiagramModuleContainerComponent","service","DataMapperComponent","dataReport","DiagramModel","AddDiagramAction","AddDiagramActionTypes","AddDiagramActionStart","AddDiagramActionSucceed","AddDiagramActionFailed","DiagramConfigChangedAction","HaveEndpointAction","DataLoadedAction","StructureDefinitionStartAction","StructureDefinitionFinishedAction","ColumnsMappingChangedAction","GenerateDiagramAction","AddDiagramComponent","formBuilder","sources","groups","diagramId","patchValue","colorsControl","columnKey","addControl","typesControl","mapping","addColumn","dispatch","diagramPartialConfig","value","inputs","diagramTypes","statusChanges","dataSubscription","getDataStructure","observer","pathOptions","typeChanged","typesFormGroup","cb","setValue","group","routeEntered","event","removeColumn","removeAt","calculateColumns","create","obser","column","temp","NumberOfColumns","Order","diagramModel","empty","add","FormBuilder","ActivatedRoute","diagramViewComponent","width","diagramData$","DiagramsComponent","EditDiagramComponent","DiagramComponent","modelIsCorrect","_model","ngAfterViewInit","delay","chart","Time","flow","duration","DynamicComponentSelectorComponent","resolver","typeMapToDiagram","bar","pie","scatter","line","area","area-spline","numero","tempo","currentComponent","backgroundColor","raw","_component","inputProviders","inputName","provide","useValue","resolvedInputs","ReflectiveInjector","resolve","fromResolvedProviders","dynamicComponentContainer","parentInjector","component","resolveComponentFactory","insert","hostView","destroy","entryComponents","ComponentFactoryResolver","ViewChild","read","ViewContainerRef","DynamicConfigComponentSelectorComponent","DiagramEffects","actions$","router","DiagramRequest$","ofType","getDiagram$","catchError","of","Actions","Router","Effect","AddDiagramEffects","addDiagramRequest$","addDiagram$","ADD_DIAGRAM_SUCCEED$","navigate","HAVE_ENDPOINT$","DATA_LOADED$","DIAGRAM_CONFIG_CHANGED$","STRUCTURE_DEFINITION_START$","COLUMNS_MAPPING_CHANGED$","STRUCTURE_DEFINITION_END$","GenerateDiagram$","routes","path","children","RoutingModule","RouterModule","forChild","DiagramSelectorComponent","diagrams$","selectedDiagramId","NgsDiagramModule","forRoot","ngModule","RootNgsDiagramModule","providers","NgModule","imports","HttpClientModule","FormsModule","CommonModule","MatExpansionModule","MatSnackBarModule","MatIconModule","MatButtonModule","MatCardModule","MatSelectModule","MatSliderModule","MatInputModule","MatCheckboxModule","MatFormFieldModule","MatTabsModule","FlexLayoutModule","MatRadioModule","MatTooltipModule","MatGridListModule","MatAutocompleteModule","ReactiveFormsModule","BrowserAnimationsModule","declarations","exports","StoreModule","forFeature","EffectsModule"],"mappings":"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","sourcesContent":["import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface DiagramModuleConfig {\r\n\tendpoints?: {};\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t};\r\n}\r\n\r\nexport const MODULE_DEFAULT_CONFIG: DiagramModuleConfig = {\r\n\tendpoints: {},\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"frontend/server/did/not/set\"\r\n\t}\r\n};\r\n\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<DiagramModuleConfig>(\"DiagramModuleConfig\");\r\n","import { DiagramModel } from \"./diagram.model\";\r\n\r\nexport namespace GetDiagramsApiModel {\r\n\texport class Request {\r\n\t\tdiagram: string;\r\n\r\n\t\tconstructor(initValue: GetDiagramsApiModel.Request = {} as GetDiagramsApiModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\t//static get formGroup() {\r\n\t\t// return new FormGroup({\r\n\t\t//   diagram: new FormControl('', [Validators.minLength(8), Validators.required])\r\n\t\t// })\r\n\t\t//}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: DiagramModel[];\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GetDiagramsApiModel } from \"../models/get-diagrams-api.model\";\r\n\r\nexport enum DiagramsActionTypes {\r\n\tGET_DIAGRAM = \"[DIAGRAM] GET_DIAGRAM\",\r\n\tGET_DIAGRAM_START = \"[DIAGRAM] GET_DIAGRAM_START\",\r\n\tGET_DIAGRAM_SUCCEED = \"[DIAGRAM] GET_DIAGRAM_SUCCEED\",\r\n\tGET_DIAGRAM_FAILED = \"[DIAGRAM] GET_DIAGRAM_FAILED\"\r\n}\r\n\r\nexport class GetDiagrams implements Action {\r\n\treadonly type = DiagramsActionTypes.GET_DIAGRAM;\r\n}\r\nexport class GetDiagramsStart implements Action {\r\n\treadonly type = DiagramsActionTypes.GET_DIAGRAM_START;\r\n}\r\nexport class GetDiagramsSucceed implements Action {\r\n\treadonly type = DiagramsActionTypes.GET_DIAGRAM_SUCCEED;\r\n\tconstructor(public payload: GetDiagramsApiModel.Response) {}\r\n}\r\nexport class GetDiagramsFailed implements Action {\r\n\treadonly type = DiagramsActionTypes.GET_DIAGRAM_FAILED;\r\n}\r\n\r\nexport type DiagramsAction = GetDiagrams | GetDiagramsStart | GetDiagramsSucceed | GetDiagramsFailed;\r\n","import { GetDiagramsApiModel } from \"../models/get-diagrams-api.model\";\r\nimport { DiagramsActionTypes, DiagramsAction } from \"../actions/diagrams.actions\";\r\n\r\nconsole.log(GetDiagramsApiModel);\r\n\r\nexport interface State {\r\n\tloaded: boolean;\r\n\tdiagram: GetDiagramsApiModel.Response;\r\n}\r\nexport const initialState: State = {\r\n\tloaded: false,\r\n\tdiagram: {\r\n\t\tResult: []\r\n\t}\r\n};\r\n\r\nexport function diagramReducer(state = initialState, action: DiagramsAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase DiagramsActionTypes.GET_DIAGRAM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloaded: true\r\n\t\t\t\t// diagram: action.payload,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase DiagramsActionTypes.GET_DIAGRAM_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloaded: true\r\n\t\t\t\t//  diagram: action.payload,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const DiagramInfo = (state: State) => state.diagram;\r\n","import { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\n\r\nimport { DiagramModel } from \"./diagram.model\";\r\n\r\nexport namespace EditDiagramApiModel {\r\n\texport class Request {\r\n\t\tconstructor(params: Request) {}\r\n\t\tgetRequestQueryParams() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t\t// TODO:\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tName: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tIsActive: new FormControl(\"true\", [ Validators.required ]),\r\n\t\t\t\tRoute: new FormControl(\"\", [ Validators.required ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: DiagramModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { EditDiagramApiModel } from \"../models/edit-diagram-api.model\";\r\n\r\nexport enum EditDiagramActionTypes {\r\n\tEDIT_DIAGRAM = \"[DIAGRAM][EDIT] EDIT_DIAGRAM\",\r\n\tEDIT_DIAGRAM_START = \"[DIAGRAM][EDIT] EDIT_DIAGRAM_START\",\r\n\tEDIT_DIAGRAM_SUCCEED = \"[DIAGRAM][EDIT] EDIT_DIAGRAM_SUCCEED\",\r\n\tEDIT_DIAGRAM_FAILED = \"[DIAGRAM][EDIT] EDIT_DIAGRAM_FAILED\"\r\n}\r\n\r\nexport class EditDiagramAction implements Action {\r\n\treadonly type = EditDiagramActionTypes.EDIT_DIAGRAM;\r\n\tconstructor(public payload: EditDiagramApiModel.Response) {}\r\n}\r\nexport class EditDiagramActionStart implements Action {\r\n\treadonly type = EditDiagramActionTypes.EDIT_DIAGRAM_START;\r\n\tconstructor(public payload: EditDiagramApiModel.Response) {}\r\n}\r\nexport class EditDiagramActionSucceed implements Action {\r\n\treadonly type = EditDiagramActionTypes.EDIT_DIAGRAM_SUCCEED;\r\n\tconstructor(public payload: EditDiagramApiModel.Response) {}\r\n}\r\nexport class EditDiagramActionFailed implements Action {\r\n\treadonly type = EditDiagramActionTypes.EDIT_DIAGRAM_FAILED;\r\n}\r\n\r\nexport type EditDiagramActions =\r\n\t| EditDiagramAction\r\n\t| EditDiagramActionStart\r\n\t| EditDiagramActionSucceed\r\n\t| EditDiagramActionFailed;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\n\r\nimport { EditDiagramApiModel } from \"../models/edit-diagram-api.model\";\r\nimport { EditDiagramActionTypes, EditDiagramActions } from \"../actions/edit-diagram.actions\";\r\n\r\nconsole.log(EditDiagramApiModel);\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n\tdata: EditDiagramApiModel.Response;\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\",\r\n\tdata: { Result: {} } as EditDiagramApiModel.Response\r\n};\r\nexport function Reducer(state = initialState, action: EditDiagramActions): State {\r\n\tswitch (action.type) {\r\n\t\tcase EditDiagramActionTypes.EDIT_DIAGRAM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"dirty\",\r\n\t\t\t\tdata: new EditDiagramApiModel.Response()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditDiagramActionTypes.EDIT_DIAGRAM_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"pending\",\r\n\t\t\t\tdata: new EditDiagramApiModel.Response()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditDiagramActionTypes.EDIT_DIAGRAM_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"succeed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditDiagramActionTypes.EDIT_DIAGRAM_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const EditDiagramInfo = (state: State) => state.data;\r\n","import { ParentGuardAction } from \"../actions/parent-guard.actions\";\r\n\r\nexport interface State {\r\n\troute: string;\r\n\tresult: boolean;\r\n}\r\nexport const initialState: State = {\r\n\troute: \"\",\r\n\tresult: false\r\n};\r\n\r\nexport function ParentGuardReducer(state = initialState, action: ParentGuardAction): State {\r\n\tswitch (action.type) {\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getParentRoutingGuard = (state: State) => state;\r\n","import { createSelector, createFeatureSelector, MemoizedSelector } from \"@ngrx/store\";\r\n\r\nimport * as DiagramsReducer from \"./diagrams.reducer\";\r\nimport * as fromEditDiagram from \"./edit-diagram.reducer\";\r\nimport * as parentGuardReducer from \"./parent-guard.reducer\";\r\n\r\nexport interface DiagramState {\r\n\tdiagrams: DiagramsReducer.State;\r\n\teditDiagram: fromEditDiagram.State;\r\n\tparentGuard: parentGuardReducer.State;\r\n}\r\n\r\nexport const DiagramReducers = {\r\n\tdiagrams: DiagramsReducer.diagramReducer,\r\n\teditDiagram: fromEditDiagram.Reducer,\r\n\tparentGuard: parentGuardReducer.ParentGuardReducer\r\n};\r\n\r\nexport interface FeatureState {\r\n\t\"diagram\": DiagramState;\r\n}\r\n\r\n//#region selectors\r\n\r\nexport const selectFeatureState = createFeatureSelector<DiagramState>(\"diagram\");\r\n\r\n// export const getDiagramInformationStatus = createSelector(\r\n//   selectFeatureState,\r\n//   (state: DiagramState) => state.diagram\r\n// );\r\n\r\n//#region edit diagram\r\nexport const selectEditDiagramState = createSelector(selectFeatureState, (state: DiagramState) => state.editDiagram);\r\n","import { FormGroup, FormControl, Validators, FormArray } from \"@angular/forms\";\r\n\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\n\r\nimport { DiagramModel } from \"./diagram.model\";\r\nimport { SourceModel } from \"./source.model\";\r\n\r\nexport namespace AddDiagramApiModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\t_id: string;\r\n\t\tName: string;\r\n\t\tIsActive: Boolean;\r\n\t\tType: string;\r\n\t\tTypes: { [columnLabel: string]: string };\r\n\t\tLegend: Boolean;\r\n\t\tSubchart: Boolean;\r\n\t\tZoom: Boolean;\r\n\t\tTooltip: Boolean;\r\n\t\tRoute: string;\r\n\t\tSync: number;\r\n\t\tColors: string[];\r\n\t\tColumnMappings: { NamePath: string; ValuePath: string }[];\r\n\t\tFlow: string;\r\n\t\tcolumns: any[];\r\n\t\tCols: number;\r\n\t\tRows: number;\r\n\t\tTextColor: String;\r\n\t\tBackgroundColor: string;\r\n\t\tbooleano: any;\r\n\t\tSource: SourceModel;\r\n\t\tGroups: string[];\r\n\t\tconstructor(initValue: AddDiagramApiModel.Request = {} as AddDiagramApiModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {\r\n\t\t\t\t_id: this._id,\r\n\t\t\t\tName: this.Name,\r\n\t\t\t\tIsActive: this.IsActive,\r\n\t\t\t\tSource: this.Source,\r\n\t\t\t\tType: this.Type,\r\n\t\t\t\tGroups: this.Groups,\r\n\t\t\t\tWidget: {\r\n\t\t\t\t\tbooleano: this.booleano\r\n\t\t\t\t},\r\n\t\t\t\tChart: {\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\ttype: this.Type,\r\n\t\t\t\t\t\tcolumns: this.columns,\r\n\t\t\t\t\t\tcolors: this.Colors,\r\n\t\t\t\t\t\ttypes: this.Types\r\n\t\t\t\t\t},\r\n\t\t\t\t\tColumnMappings: this.ColumnMappings,\r\n\t\t\t\t\tFlow: this.Flow,\r\n\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\tshow: this.Legend\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsubchart: {\r\n\t\t\t\t\t\tshow: this.Subchart\r\n\t\t\t\t\t},\r\n\t\t\t\t\tzoom: {\r\n\t\t\t\t\t\tenabled: this.Zoom\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttooltip: {\r\n\t\t\t\t\t\tgrouped: this.Tooltip\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tBox: {\r\n\t\t\t\t\tCols: this.Cols,\r\n\t\t\t\t\tRows: this.Rows,\r\n\t\t\t\t\tTextColor: this.TextColor,\r\n\t\t\t\t\tBackgroundColor: this.BackgroundColor\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\t_id: new FormControl(\"\", []),\r\n\t\t\t\tName: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tSync: new FormControl(0, [ Validators.required ]),\r\n\t\t\t\tIsActive: new FormControl(\"true\", [ Validators.required ]),\r\n\t\t\t\tType: new FormControl(\"pie\", [ Validators.required ]),\r\n\t\t\t\tGroups: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tLegend: new FormControl(\"true\", [ Validators.required ]),\r\n\t\t\t\tSubchart: new FormControl(\"false\", [ Validators.required ]),\r\n\t\t\t\tZoom: new FormControl(\"false\", [ Validators.required ]),\r\n\t\t\t\tTooltip: new FormControl(\"false\", [ Validators.required ]),\r\n\t\t\t\tRoute: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tSource: new FormControl({}, [ Validators.required ]),\r\n\t\t\t\tcolumns: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tCols: new FormControl(1, [ Validators.required ]),\r\n\t\t\t\tRows: new FormControl(1, [ Validators.required ]),\r\n\t\t\t\tTextColor: new FormControl(\"#000000\", [ Validators.required ]),\r\n\t\t\t\tBackgroundColor: new FormControl(\"#ffffff\", [ Validators.required ]),\r\n\t\t\t\tColors: new FormGroup({}),\r\n\t\t\t\tTypes: new FormGroup({}),\r\n\t\t\t\tColumnMappings: new FormArray([]),\r\n\t\t\t\tFlow: new FormControl(true),\r\n\t\t\t\tdonut: new FormGroup({\r\n\t\t\t\t\ttitle: new FormControl(\"Default Title\")\r\n\t\t\t\t}),\r\n\t\t\t\tbooleano: new FormGroup({\r\n\t\t\t\t\tSuccessMessage: new FormControl(\"SuccessMessage\"),\r\n\t\t\t\t\tFailureMessage: new FormControl(\"FailureMessage\")\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\texport class Response {\r\n\t\tResult: DiagramModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject, Subscription } from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: \"diagram-server-status\",\r\n\ttemplateUrl: \"./server-status-diagram.component.html\",\r\n\tstyleUrls: [ \"./server-status-diagram.component.scss\" ]\r\n})\r\nexport class ServerStatusDiagramComponent implements OnInit {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\t}\r\n\r\n\ttimeChange(e) {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source._id, this.data.Source.Interval)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger\r\n\t\t//     this.chart.load({\r\n\t\t//       columns: this.diagramService.extract_columns_from_data(data, this.data.Chart.ColumnMappings)\r\n\t\t//     });\r\n\t\t//   })\r\n\t}\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"diagram-partial-config-edit\",\r\n\ttemplateUrl: \"./diagram-partial-config-edit.component.html\",\r\n\tstyleUrls: [ \"./diagram-partial-config-edit.component.scss\" ]\r\n})\r\nexport class DiagramPartialConfigEditComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\tdiagramService: DiagramService;\r\n\tformGroup: FormGroup;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n\tconfigChanged() {}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"pie-diagram-partial-config\",\r\n\ttemplateUrl: \"./pie-diagram-partial-config.component.html\",\r\n\tstyleUrls: [ \"./pie-diagram-partial-config.component.scss\" ]\r\n})\r\nexport class PieDiagramPartialConfigComponent implements OnInit, OnDestroy {\r\n\t@Output() ConfigChanged = new EventEmitter();\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_dataLoaded;\r\n\t@Input()\r\n\tset formGroup(data: FormGroup) {\r\n\t\tif (!data) return;\r\n\t\tthis._dataLoaded = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget formGroup() {\r\n\t\treturn this._dataLoaded;\r\n\t}\r\n\tdonutFormGroup: FormGroup;\r\n\tdiagramService: DiagramService;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t\tthis.donutFormGroup = this.formGroup.controls.donut as FormGroup;\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n\tconfigChanged() {\r\n\t\tthis.ConfigChanged.emit();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"booleano-widget-partial-config\",\r\n\ttemplateUrl: \"./booleano-widget-partial-config.component.html\",\r\n\tstyleUrls: [ \"./booleano-widget-partial-config.component.scss\" ]\r\n})\r\nexport class BooleanoWidgetPartialConfigComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_dataLoaded;\r\n\t@Input()\r\n\tset formGroup(data: FormGroup) {\r\n\t\tif (!data) return;\r\n\t\tthis._dataLoaded = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget formGroup() {\r\n\t\treturn this._dataLoaded;\r\n\t}\r\n\tbooleanoFormGroup: FormGroup;\r\n\tdiagramService: DiagramService;\r\n\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t\tthis.booleanoFormGroup = this.formGroup.controls.booleano as FormGroup;\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { FormGroup } from \"@angular/forms\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"numeric-widget-partial-config\",\r\n\ttemplateUrl: \"./numeric-widget-partial-config.component.html\",\r\n\tstyleUrls: [ \"./numeric-widget-partial-config.component.scss\" ]\r\n})\r\nexport class NumericWidgetPartialConfigComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_dataLoaded;\r\n\t@Input()\r\n\tset formGroup(data: FormGroup) {\r\n\t\tif (!data) return;\r\n\t\tthis._dataLoaded = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget formGroup() {\r\n\t\treturn this._dataLoaded;\r\n\t}\r\n\tdonutFormGroup: FormGroup;\r\n\tdiagramService: DiagramService;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t\tthis.donutFormGroup = this.formGroup.controls.donut as FormGroup;\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"linear-diagram-partial-config\",\r\n\ttemplateUrl: \"./linear-diagram-partial-config.component.html\",\r\n\tstyleUrls: [ \"./linear-diagram-partial-config.component.scss\" ]\r\n})\r\nexport class LinearDiagramPartialConfigComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\t@Output() ConfigChanged = new EventEmitter();\r\n\tdiagramService: DiagramService;\r\n\tformGroup: FormGroup;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n\tconfigChanged() {\r\n\t\tthis.ConfigChanged.emit();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: \"diagram-server-connecting-time\",\r\n\ttemplateUrl: \"./server-connecting-time-diagram.component.html\",\r\n\tstyleUrls: [ \"./server-connecting-time-diagram.component.scss\" ]\r\n})\r\nexport class ServerConnectingTimeDiagramComponent implements OnInit {\r\n\t@Input() time: number = 0;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\t\tsetInterval(() => {\r\n\t\t\tthis.time = this.time + 1;\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\ttimeChange(e) {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route, this.data.Source.Sync)\r\n\t\t//         .subscribe(data => {\r\n\t\t//                 this.chart.load({\r\n\t\t//                         columns: this.diagramService.extract_columns_from_data(data, this.data.Chart.ColumnMappings)\r\n\t\t//                 });\r\n\t\t//         })\r\n\t}\r\n}\r\n","import { Injectable, Inject } from \"@angular/core\";\r\n\r\nimport { MODULE_CONFIG_TOKEN, DiagramModuleConfig, MODULE_DEFAULT_CONFIG } from \"../diagram.config\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class DiagramConfigurationService {\r\n\tprivate _config: DiagramModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) config) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, config);\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, Subscription, Subject } from \"rxjs/Rx\";\r\nimport { Store } from \"@ngrx/store\";\r\ndeclare var c3: any;\r\n\r\nimport { DiagramConfigurationService } from \"./diagram-configuration.service\";\r\nimport { FeatureState } from \"../reducers\";\r\nimport { GetDiagramsApiModel } from \"../models/get-diagrams-api.model\";\r\nimport { SourceModel } from \"../models/source.model\";\r\nimport { AddDiagramApiModel } from \"../models/add-diagram-api.model\";\r\nimport { DiagramModuleConfig } from \"../diagram.config\";\r\nimport { switchMap, map, takeUntil } from \"rxjs/operators\";\r\n\r\ndeclare var _: any;\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class DiagramService {\r\n\tconfig: DiagramModuleConfig;\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<FeatureState>,\r\n\t\tprivate configurationService: DiagramConfigurationService\r\n\t) {\r\n\t\tthis.config = this.configurationService.config;\r\n\t}\r\n\r\n\tgetDiagrams(): Observable<GetDiagramsApiModel.Response> {\r\n\t\treturn this.http\r\n\t\t\t.get<GetDiagramsApiModel.Response>(this.config.env.frontend_server + \"/api/diagram\")\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetSources(): Observable<SourceModel[]> {\r\n\t\treturn this.http\r\n\t\t\t.get(this.config.env.frontend_server + \"/api/source\")\r\n\t\t\t.map((response) => (response as any).Result)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetGroups(): Observable<string[]> {\r\n\t\treturn this.http\r\n\t\t\t.get(this.config.env.frontend_server + \"/api/diagram/groups\")\r\n\t\t\t.map((response) => (response as any).Result)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetDiagram(id: string): Observable<any> {\r\n\t\tif (!id) debugger;\r\n\t\treturn this.http\r\n\t\t\t.get(this.config.env.frontend_server + `/api/diagram/${id}`)\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\taddDiagram(data: any): Observable<AddDiagramApiModel.Response> {\r\n\t\tconst model = new AddDiagramApiModel.Request(data);\r\n\t\treturn this.http\r\n\t\t\t.post<AddDiagramApiModel.Response>(this.config.env.frontend_server + \"/api/diagram\", model.getRequestBody())\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tupdateDiagram(body: any): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.put(this.config.env.frontend_server + \"/api/diagram\", body)\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tdeleteDiagram(id: string): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.delete(`${this.config.env.frontend_server}/api/diagram/${id}`)\r\n\t\t\t.map((response) => response)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetData(source: SourceModel, unsubscribe: Subject<void>, time: number = 0, once: Boolean = false): Observable<any> {\r\n\t\tif (once && time !== 0) {\r\n\t\t\treturn this.http\r\n\t\t\t\t.get(`${this.config.env.frontend_server}/api/data`, {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tsourceId: source._id,\r\n\t\t\t\t\t\ttime: this.getFloorTime(source.Interval, time).toString()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.map((res: any) => res.Result);\r\n\t\t} else if (source.Interval == 0) {\r\n\t\t\treturn this.http\r\n\t\t\t\t.get(`${this.config.env.frontend_server}/api/data`, {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tsourceId: source._id,\r\n\t\t\t\t\t\ttime: null\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.map((res: any) => res.Result);\r\n\t\t} else {\r\n\t\t\ttime = time || Date.now();\r\n\t\t\treturn Observable.timer(0, source.Interval).pipe(\r\n\t\t\t\ttakeUntil(unsubscribe),\r\n\t\t\t\tswitchMap((i) =>\r\n\t\t\t\t\tthis.http\r\n\t\t\t\t\t\t.get(`${this.config.env.frontend_server}/api/data`, {\r\n\t\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\t\tsourceId: source._id,\r\n\t\t\t\t\t\t\t\ttime: this.getFloorTime(source.Interval, time).toString()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}).pipe(\r\n\t\t\t\t\t\t\tmap((res: any) => res.Result)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\textract_columns_from_data(data: any, columnsMappings) {\r\n\t\tlet res = [];\r\n\r\n\t\tcolumnsMappings.forEach((item) => {\r\n\t\t\tconst ValueData = _.getValue(data, item.ValuePath);\r\n\r\n\t\t\tif (!item.NamePath) {\r\n\t\t\t\treturn res.push([item.ValuePath.split(\".\").pop()].concat(ValueData));\r\n\t\t\t}\r\n\t\t\tconst NameData = _.getValue(data, item.NamePath);\r\n\r\n\t\t\tif (_.is.array(NameData)) {\r\n\t\t\t\treturn (res = res.concat(NameData.map((_item, i) => [_item].concat(ValueData[i]))));\r\n\t\t\t} else {\r\n\t\t\t\treturn res.push([NameData].concat(ValueData));\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn res;\r\n\t}\r\n\tget_data_report(data: any) {\r\n\t\treturn _.report(data);\r\n\t}\r\n\tget_last_node_of_data(data: any) {\r\n\t\treturn (_.report(data) as any[]).filter((item) => item.isLastNode);\r\n\t}\r\n\tbuildChartConfig(columns) {\r\n\t\treturn {\r\n\t\t\tdata: {\r\n\t\t\t\tcolumns\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tshow: true\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t// TODO: implement interface of c3 config\r\n\tcharts = {};\r\n\tgenerateDiagram(config: any, id: string, route: string, sync: number): Subscription {\r\n\t\tthis.charts[id] = c3.generate({\r\n\t\t\t...config,\r\n\t\t\tbindto: `#diagram_${id}`\r\n\t\t});\r\n\r\n\t\treturn this.getData({} as SourceModel, new Subject<void>(), sync).subscribe((data) => {\r\n\t\t\tthis.charts[id].load({\r\n\t\t\t\tcolumns: this.extract_columns_from_data(data.Data, config.ColumnMappings)\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tgetFloorTime(precision = 60 * 1000, time: number = 0) {\r\n\t\treturn Math.floor((time || Date.now()) / precision);\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { takeUntil, filter } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: \"numeric-edit-diagram\",\r\n\ttemplateUrl: \"./numeric-edit-diagram.component.html\",\r\n\tstyleUrls: [\"./numeric-edit-diagram.component.scss\"]\r\n})\r\nexport class NumericEditDiagramComponent implements OnInit, OnDestroy {\r\n\tunsubscribe = new Subject<void>();\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\tconstructor(private injector: Injector, private diagramService: DiagramService) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\tthis.diagramService.getData(this.data.Source, this.unsubscribe).pipe(\r\n\t\t\tfilter(data => data != undefined),\r\n\t\t\ttakeUntil(this.unsubscribe)\r\n\t\t).subscribe(data => {\r\n\t\t\tdebugger;\r\n\t\t});\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t\tdebugger;\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Subscription, Subject } from \"rxjs\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\tselector: \"diagram-numeric\",\r\n\ttemplateUrl: \"./numeric-diagram.component.html\",\r\n\tstyleUrls: [\"./numeric-diagram.component.scss\"]\r\n})\r\nexport class NumericDiagramComponent implements OnInit, OnDestroy {\r\n\tunsubscribe = new Subject<void>();\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\tcounter: number;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\tdataSubscribtion: Subscription;\r\n\tconstructor(private injector: Injector, private diagramService: DiagramService) {\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\t\tthis.counter = 0;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.dataSubscribtion = this.diagramService.getData(this.data.Source, this.unsubscribe).pipe(\r\n\t\t\ttakeUntil(this.unsubscribe)\r\n\t\t).subscribe(data => {\r\n\t\t\tconst counter = this.diagramService.extract_columns_from_data(data.Data, this.data.Chart.ColumnMappings);\r\n\t\t\tthis.counter = counter[0][1];\r\n\t\t});\r\n\t}\r\n\tngOnDestroy() {\r\n\t\tthis.dataSubscribtion.unsubscribe();\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n// import { UserModel } from 'app/models/authentication';\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n// import * as appReducer from 'app/reducers';\r\n\r\n@Component({\r\n\tselector: \"diagram-module-container\",\r\n\ttemplateUrl: \"./diagram-module-container.component.html\"\r\n})\r\nexport class DiagramModuleContainerComponent implements OnInit {\r\n\tconstructor(private service: DiagramService) {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport * as FeatureReducer from \"../../reducers\";\r\n\r\ndeclare var _: any;\r\n\r\n@Component({\r\n\tselector: \"data-mapper\",\r\n\ttemplateUrl: \"./data-mapper.component.html\",\r\n\tstyleUrls: [ \"./data-mapper.component.scss\" ]\r\n})\r\nexport class DataMapperComponent implements OnInit {\r\n\t@Input() destination: string;\r\n\t_data: any;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tif (!data) return;\r\n\t\tthis.dataReport = _.report(data);\r\n\t\tthis._data = data;\r\n\t}\r\n\tdataReport: any[] = [];\r\n\tconstructor(private diagramService: DiagramService, private store: Store<FeatureReducer.FeatureState>) {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { SourceModel } from \"./source.model\";\r\n\r\nexport class DiagramModel {\r\n\t_id: string;\r\n\tName: string;\r\n\tIsActive: boolean;\r\n\tDescription: string;\r\n\tGroups: string[];\r\n\tBox: {\r\n\t\tNumberOfColumns: number;\r\n\t\tOrder: number;\r\n\t\tBackgroundColor: string;\r\n\t};\r\n\tSource: SourceModel;\r\n\tWidget: {\r\n\t\t\"booleano\": {\r\n\t\t\t\"SuccessMessage\": string;\r\n\t\t\t\"FailureMessage\": string;\r\n\t\t};\r\n\t};\r\n\r\n\tChart: {\r\n\t\tdata: {\r\n\t\t\ttype: \"pie\" | \"linear\" | \"scatter\" | \"bar\" | \"line\";\r\n\t\t\ttypes: { [key: string]: string };\r\n\t\t\tcolumns: any[];\r\n\t\t\tcolors: any[];\r\n\t\t};\r\n\t\tFlow: boolean;\r\n\t\tColumnMappings: {\r\n\t\t\tNamePath: string;\r\n\t\t\tValuePath: string;\r\n\t\t}[];\r\n\t\tlegend: {\r\n\t\t\tshow: boolean;\r\n\t\t};\r\n\t\tsubchart: {\r\n\t\t\tshow: boolean;\r\n\t\t};\r\n\t\tzoom: {\r\n\t\t\tenabled: boolean;\r\n\t\t};\r\n\t\ttooltip: {\r\n\t\t\tgrouped: boolean;\r\n\t\t};\r\n\t};\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { AddDiagramApiModel } from \"../models/add-diagram-api.model\";\r\n\r\nexport enum AddDiagramActionTypes {\r\n\tADD_DIAGRAM = \"[DIAGRAM][ADD] ADD_DIAGRAM\",\r\n\tADD_DIAGRAM_START = \"[DIAGRAM][ADD] ADD_DIAGRAM_START\",\r\n\tADD_DIAGRAM_SUCCEED = \"[DIAGRAM][ADD] ADD_DIAGRAM_SUCCEED\",\r\n\tDIAGRAM_CONFIG_CHANGED = \"[DIAGRAM][ADD] DIAGRAM_CONFIG_CHANGED\",\r\n\tADD_DIAGRAM_FAILED = \"[DIAGRAM][ADD] ADD_DIAGRAM_FAILED\",\r\n\tSTRUCTURE_DEFINITION_START = \"[DIAGRAM][ADD] STRUCTURE_DEFINITION_START\",\r\n\tHAVE_ENDPOINT = \"[DIAGRAM][ADD] HAVE_STRUCTURE\",\r\n\tDATA_LOADED = \"[DIAGRAM][ADD] DATA_LOADED\",\r\n\tSTRUCTURE_DEFINITION_END = \"[DIAGRAM][ADD] STRUCTURE_DEFINITION_END\",\r\n\tCOLUMNS_MAPPING_CHANGED = \"[DIAGRAM][ADD] COLUMNS_MAPPING_CHANGED\",\r\n\tDATA_CALCULATED = \"[DIAGRAM][ADD] DATA_CALCULATED\",\r\n\tCOLUMN_ADDED = \"[DIAGRAM][ADD] COLUMN_ADDED\",\r\n\tGENERATE_DIAGRAM = \"[DIAGRAM][ADD] GENERATE_DIAGRAM\"\r\n}\r\n\r\nexport class AddDiagramAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.ADD_DIAGRAM;\r\n\tconstructor(public payload: AddDiagramApiModel.Response) {}\r\n}\r\nexport class AddDiagramActionStart implements Action {\r\n\treadonly type = AddDiagramActionTypes.ADD_DIAGRAM_START;\r\n\tconstructor(public payload: AddDiagramApiModel.Response) {}\r\n}\r\nexport class AddDiagramActionSucceed implements Action {\r\n\treadonly type = AddDiagramActionTypes.ADD_DIAGRAM_SUCCEED;\r\n\tconstructor(public payload: AddDiagramApiModel.Response) {}\r\n}\r\nexport class AddDiagramActionFailed implements Action {\r\n\treadonly type = AddDiagramActionTypes.ADD_DIAGRAM_FAILED;\r\n}\r\nexport class DiagramConfigChangedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.DIAGRAM_CONFIG_CHANGED;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class HaveEndpointAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.HAVE_ENDPOINT;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class DataLoadedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.DATA_LOADED;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class StructureDefinitionStartAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.STRUCTURE_DEFINITION_START;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class StructureDefinitionFinishedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.STRUCTURE_DEFINITION_END;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class ColumnsMappingChangedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.COLUMNS_MAPPING_CHANGED;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class DataCalculatedAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.DATA_CALCULATED;\r\n\tconstructor(public payload: any) {}\r\n}\r\nexport class GenerateDiagramAction implements Action {\r\n\treadonly type = AddDiagramActionTypes.GENERATE_DIAGRAM;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport class ColumnAdded implements Action {\r\n\treadonly type = AddDiagramActionTypes.COLUMN_ADDED;\r\n}\r\n\r\nexport type AddDiagramActions =\r\n\t| AddDiagramAction\r\n\t| AddDiagramActionStart\r\n\t| AddDiagramActionSucceed\r\n\t| AddDiagramActionFailed\r\n\t| HaveEndpointAction\r\n\t| DataLoadedAction\r\n\t| StructureDefinitionStartAction\r\n\t| StructureDefinitionFinishedAction\r\n\t| ColumnsMappingChangedAction\r\n\t| DataCalculatedAction\r\n\t| GenerateDiagramAction\r\n\t| DiagramConfigChangedAction;\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder, AbstractControl } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Route, ActivatedRoute } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { publish } from \"rxjs/operator/publish\";\r\nimport { Effect } from \"@ngrx/effects\";\r\ndeclare var c3: any;\r\n\r\nimport { addDiagramReducer } from \"../../reducers/add-diagram.reducer\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\nimport { FeatureState } from \"../../reducers\";\r\nimport { AddDiagramApiModel } from \"../../models/add-diagram-api.model\";\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { SourceModel } from \"../../models/source.model\";\r\nimport {\r\n\tHaveEndpointAction,\r\n\tColumnsMappingChangedAction,\r\n\tDiagramConfigChangedAction,\r\n\tAddDiagramAction\r\n} from \"../../actions/add-diagram.actions\";\r\nimport { filter, takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: \"diagram-add\",\r\n\ttemplateUrl: \"./add-diagram.component.html\",\r\n\tstyleUrls: [\"./add-diagram.component.scss\"]\r\n})\r\nexport class AddDiagramComponent implements OnInit, OnDestroy {\r\n\tunsubscribe = new Subject<void>();\r\n\tformGroup: FormGroup = AddDiagramApiModel.Request.formGroup;\r\n\tdata: any;\r\n\tcolumns: any;\r\n\tchart;\r\n\tdiagramTypes: string[];\r\n\tpathOptions: {\r\n\t\tpath: string;\r\n\t\tname: string;\r\n\t\ttype: string;\r\n\t\tcolor: string;\r\n\t}[];\r\n\tcolumnsMappings: AbstractControl[];\r\n\tdataSubscription: Subscription;\r\n\tdiagramModel: DiagramModel;\r\n\tcomponentModel: { component: any; inputs: object };\r\n\ttypeMapToDiagram: { [type: string]: any };\r\n\tdiagramPartialConfig: { type: string; inputs: { formGroup: FormGroup; diagramService: DiagramService } };\r\n\tsources: Observable<SourceModel[]>;\r\n\tgroups: Observable<string[]>;\r\n\tsource: SourceModel;\r\n\tconstructor(\r\n\t\tprivate diagramService: DiagramService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate store: Store<FeatureState>,\r\n\t\tprivate route: ActivatedRoute\r\n\t) {\r\n\t\tthis.sources = this.diagramService.getSources();\r\n\t\tthis.groups = this.diagramService.getGroups();\r\n\t\t// this.diagramModel = new DiagramModel();\r\n\t\tthis.columnsMappings = (this.formGroup.controls.ColumnMappings as FormArray).controls;\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tconst diagramId: string = params[\"id\"];\r\n\t\t\t// tslint:disable-next-line:no-unused-expression\r\n\t\t\tdiagramId &&\r\n\t\t\t\tthis.diagramService.getDiagram(diagramId).subscribe(data => {\r\n\t\t\t\t\tthis.formGroup.patchValue({\r\n\t\t\t\t\t\t_id: data._id,\r\n\t\t\t\t\t\tName: data.Name,\r\n\t\t\t\t\t\tIsActive: data.IsActive,\r\n\t\t\t\t\t\tGroups: data.Groups,\r\n\t\t\t\t\t\tType: data.Chart.data.type,\r\n\t\t\t\t\t\tLegend: data.Chart.legend.show,\r\n\t\t\t\t\t\tSubchart: data.Chart.subchart.show,\r\n\t\t\t\t\t\tZoom: data.Chart.zoom.enabled,\r\n\t\t\t\t\t\tTooltip: data.Chart.tooltip.grouped,\r\n\t\t\t\t\t\tSync: data.Source.Interval,\r\n\t\t\t\t\t\tSource: data.Source,\r\n\t\t\t\t\t\tcolumns: data.Chart.data.columns,\r\n\t\t\t\t\t\tColumnMappings: data.Chart.ColumnMappings,\r\n\t\t\t\t\t\tCols: data.Box.Cols,\r\n\t\t\t\t\t\tFlow: data.Chart.Flow,\r\n\t\t\t\t\t\tRows: data.Box.Rows,\r\n\t\t\t\t\t\tBackgroundColor: data.Box.BackgroundColor,\r\n\t\t\t\t\t\tTextColor: data.Box.TextColor\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst colorsControl = <FormGroup>this.formGroup.controls[\"Colors\"];\r\n\t\t\t\t\tObject.keys(data.Chart.data.colors || {}).forEach(columnKey => {\r\n\t\t\t\t\t\tif (!(columnKey in colorsControl.controls))\r\n\t\t\t\t\t\t\tcolorsControl.addControl(columnKey, new FormControl(data.Chart.data.colors[columnKey]));\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst typesControl = <FormGroup>this.formGroup.controls[\"Types\"];\r\n\t\t\t\t\tObject.keys(data.Chart.data.types || {}).forEach(key => {\r\n\t\t\t\t\t\tif (!(key in typesControl.controls))\r\n\t\t\t\t\t\t\ttypesControl.addControl(key, new FormControl(data.Chart.data.types[key]));\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdata.Chart.ColumnMappings.forEach(mapping => this.addColumn(mapping.NamePath, mapping.ValuePath));\r\n\t\t\t\t\tthis.source = data.Source;\r\n\t\t\t\t\tthis.store.dispatch(new HaveEndpointAction(this));\r\n\r\n\t\t\t\t\tthis.diagramPartialConfig = {\r\n\t\t\t\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\t\t\t\tinputs: {\r\n\t\t\t\t\t\t\tformGroup: this.formGroup,\r\n\t\t\t\t\t\t\tdiagramService: this.diagramService\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\tthis.diagramPartialConfig = {\r\n\t\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\t\tinputs: {\r\n\t\t\t\t\tformGroup: this.formGroup,\r\n\t\t\t\t\tdiagramService: this.diagramService\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tthis.diagramTypes = [\r\n\t\t\t\"bar\",\r\n\t\t\t\"donut\",\r\n\t\t\t\"pie\",\r\n\t\t\t\"scatter\",\r\n\t\t\t\"line\",\r\n\t\t\t\"area\",\r\n\t\t\t\"area-spline\",\r\n\t\t\t\"numero\",\r\n\t\t\t\"booleano\",\r\n\t\t\t\"tempo\"\r\n\t\t];\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.formGroup.controls.ColumnMappings.statusChanges.subscribe(status => {\r\n\t\t\tif (\r\n\t\t\t\tstatus == \"VALID\" &&\r\n\t\t\t\t(this.formGroup.controls.ColumnMappings as FormArray).controls.length > 0 &&\r\n\t\t\t\tthis.data\r\n\t\t\t)\r\n\t\t\t\tthis.store.dispatch(new ColumnsMappingChangedAction(this));\r\n\t\t});\r\n\t}\r\n\tngOnDestroy() {\r\n\t\tif (this.dataSubscription) this.dataSubscription.unsubscribe();\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t}\r\n\t// getData() {\r\n\t//   const o$ = this.diagramService.getData(this.source);\r\n\t//   this.dataSubscription = o$.subscribe(data => new DataLoadedAction(this))\r\n\t//   return o$;\r\n\t// }\r\n\tgetDataStructure() {\r\n\t\tdebugger;\r\n\t\tconst observer = this.diagramService.getData({ ...this.source, Interval: 0 }, this.unsubscribe, Date.now() - 10000);\r\n\t\tthis.dataSubscription = observer.subscribe(data => {\r\n\t\t\tthis.data = data.Data;\r\n\t\t\tthis.pathOptions = this.diagramService.get_data_report(data.Data);\r\n\t\t});\r\n\t\treturn observer;\r\n\t}\r\n\tconfigChanged() {\r\n\t\tthis.store.dispatch(new DiagramConfigChangedAction(this));\r\n\t}\r\n\ttypeChanged() {\r\n\t\tconst typesFormGroup = (this.formGroup.controls.Types as FormGroup).controls;\r\n\t\t// tslint:disable-next-line:forin\r\n\t\tfor (const cb in typesFormGroup) {\r\n\t\t\ttypesFormGroup[cb].setValue(this.formGroup.value.Type);\r\n\t\t}\r\n\t\tthis.diagramPartialConfig = {\r\n\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\tinputs: {\r\n\t\t\t\tformGroup: this.formGroup,\r\n\t\t\t\tdiagramService: this.diagramService\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.store.dispatch(new DiagramConfigChangedAction(this));\r\n\t}\r\n\taddColumn(NamePath: string = \"\", ValuePath: string = \"\") {\r\n\t\tconst control = <FormArray>this.formGroup.controls[\"ColumnMappings\"];\r\n\t\tcontrol.push(\r\n\t\t\tthis.formBuilder.group({\r\n\t\t\t\tNamePath: [NamePath],\r\n\t\t\t\tValuePath: [ValuePath, Validators.required]\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\trouteEntered(event) {\r\n\t\tdebugger;\r\n\t\tthis.source = event.value;\r\n\t\tthis.formGroup.patchValue({ Source: event.value });\r\n\t\tthis.store.dispatch(new HaveEndpointAction(this));\r\n\t}\r\n\tremoveColumn(i: number) {\r\n\t\tconst control = <FormArray>this.formGroup.controls[\"ColumnMappings\"];\r\n\t\tcontrol.removeAt(i);\r\n\t}\r\n\tcalculateColumns(): Observable<void> {\r\n\t\treturn Observable.create(obser => {\r\n\t\t\tconst columnsMApping = {\r\n\t\t\t\t// NameVAlue:  (this.formGroup.controls.ColumnMappings as FormArray).controls.values\r\n\t\t\t};\r\n\t\t\tconst columns = this.diagramService.extract_columns_from_data(\r\n\t\t\t\tthis.data,\r\n\t\t\t\t(this.formGroup.controls.ColumnMappings as FormArray).value\r\n\t\t\t);\r\n\t\t\tthis.formGroup.controls.columns.setValue(columns);\r\n\t\t\t// add new item to this.formGroup.controls.colors form control\r\n\t\t\tconst colorsControl = <FormGroup>this.formGroup.controls[\"Colors\"];\r\n\t\t\tcolumns.forEach(column => {\r\n\t\t\t\tconst columnKey = column[0];\r\n\t\t\t\tif (!(columnKey in colorsControl.controls))\r\n\t\t\t\t\tcolorsControl.addControl(columnKey, new FormControl(\"#123456\"));\r\n\t\t\t});\r\n\r\n\t\t\tconst typesControl = <FormGroup>this.formGroup.controls[\"Types\"];\r\n\t\t\tcolumns.forEach(column => {\r\n\t\t\t\tconst key = column[0];\r\n\t\t\t\tif (!(key in typesControl.controls))\r\n\t\t\t\t\ttypesControl.addControl(key, new FormControl(this.formGroup.value.Type));\r\n\t\t\t});\r\n\t\t\tobser.next();\r\n\t\t});\r\n\t}\r\n\tgenerateDiagram(): Observable<any> {\r\n\t\tconst temp = new DiagramModel();\r\n\t\ttemp._id = \"template_id\";\r\n\t\ttemp.Name = this.formGroup.value.Name;\r\n\t\tdebugger;\r\n\t\ttemp.Source = this.source;\r\n\t\ttemp.Box = {\r\n\t\t\tNumberOfColumns: 1,\r\n\t\t\tOrder: 1,\r\n\t\t\tBackgroundColor: this.formGroup.value.BackgroundColor\r\n\t\t};\r\n\t\ttemp.Widget = {\r\n\t\t\tbooleano: this.formGroup.value.booleano\r\n\t\t};\r\n\t\ttemp.Chart = {\r\n\t\t\tColumnMappings: this.formGroup.value.ColumnMappings,\r\n\t\t\tdata: {\r\n\t\t\t\tcolumns: this.formGroup.controls.columns.value,\r\n\t\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\t\ttypes: this.formGroup.value.Types,\r\n\t\t\t\tcolors: this.formGroup.controls.Colors.value\r\n\t\t\t},\r\n\t\t\tFlow: this.formGroup.value.Flow,\r\n\t\t\tlegend: {\r\n\t\t\t\tshow: this.formGroup.value.Legend\r\n\t\t\t},\r\n\t\t\tsubchart: {\r\n\t\t\t\tshow: this.formGroup.value.Subchart\r\n\t\t\t},\r\n\t\t\tzoom: {\r\n\t\t\t\tenabled: this.formGroup.value.Zoom\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tgrouped: this.formGroup.value.Tooltip\r\n\t\t\t}\r\n\t\t\t// tooltip: {\r\n\t\t\t//         format: {\r\n\t\t\t//                 value: function (value) {\r\n\t\t\t//                         return value + \"%\";\r\n\t\t\t//                 }\r\n\t\t\t//         }\r\n\t\t\t// },\r\n\t\t\t// color: {\r\n\t\t\t//         pattern: ['#60B044', '#F6C600', '#F97600', '#FF0000'],\r\n\t\t\t//         threshold: {\r\n\t\t\t//                 //  unit: 'value', // percentage is default\r\n\t\t\t//                 values: [30, 60, 90, 100]\r\n\t\t\t//         }\r\n\t\t\t// },\r\n\t\t};\r\n\t\t// this.componentModel = {\r\n\t\t//   component: this.typeMapToDiagram[temp.Chart.data.type],\r\n\t\t//   inputs: { data: temp }\r\n\t\t// }\r\n\t\tthis.diagramModel = temp;\r\n\t\treturn Observable.empty();\r\n\t}\r\n\tadd(event) {\r\n\t\tthis.store.dispatch(new AddDiagramAction(this.formGroup.value));\r\n\t}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { GetDiagramsApiModel } from \"../../models/get-diagrams-api.model\";\r\n\r\n@Component({\r\n\tselector: \"diagram-view\",\r\n\ttemplateUrl: \"./diagram-view.component.html\",\r\n\tstyleUrls: [\"./diagram-view.component.scss\"]\r\n})\r\nexport class diagramViewComponent implements OnInit {\r\n\tdiagrams: Observable<GetDiagramsApiModel.Response>;\r\n\twidth = 100;\r\n\r\n\tdiagramData$: any;\r\n\t@Input(\"id\") diagramId: string;\r\n\r\n\tconstructor(private diagramService: DiagramService) {\r\n\t\tthis.diagrams = this.diagramService.getDiagrams();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.diagramData$ = this.diagramService.getDiagram(this.diagramId);\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { GetDiagramsApiModel } from \"../../models/get-diagrams-api.model\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n@Component({\r\n\tselector: \"diagrams\",\r\n\ttemplateUrl: \"./diagrams.component.html\",\r\n\tstyleUrls: [\"./diagrams.component.scss\"]\r\n})\r\nexport class DiagramsComponent implements OnInit {\r\n\tdiagrams: Observable<GetDiagramsApiModel.Response>;\r\n\twidth = 100;\r\n\tconstructor(private diagramService: DiagramService) {\r\n\t\tthis.diagrams = this.diagramService.getDiagrams();\r\n\r\n\t\t// this.diagrams\r\n\t\t//         .delay(100)\r\n\t\t//         .subscribe(diagrams =>\r\n\t\t//                 diagrams.Result.forEach(diagram =>\r\n\t\t//                         this.diagramService.generateDiagram(diagram.Chart, diagram._id, diagram.Source.Route, diagram.Source.Sync)));\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\t// this.socketService.initSocket();\r\n\t\t// this.socketService.send(\"add-message\");\r\n\t\t// this.socketService.onMessage().subscribe(msg=>{\r\n\t\t//         debugger\r\n\t\t// });\r\n\t}\r\n}\r\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { FeatureState } from \"../../reducers\";\r\nimport { EditDiagramApiModel } from \"../../models/edit-diagram-api.model\";\r\nimport { EditDiagramAction } from \"../../actions/edit-diagram.actions\";\r\n\r\n@Component({\r\n\tselector: \"diagram-edit\",\r\n\ttemplateUrl: \"./edit-diagram.component.html\",\r\n\tstyleUrls: [ \"./edit-diagram.component.scss\" ]\r\n})\r\nexport class EditDiagramComponent implements OnInit {\r\n\tformGroup: FormGroup = EditDiagramApiModel.Request.formGroup;\r\n\tconstructor(\r\n\t\tprivate diagramService: DiagramService,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate store: Store<FeatureState>\r\n\t) {\r\n\t\tlet Route = this.route.params.subscribe(params => {\r\n\t\t\tconst diagramId: string = params[\"id\"];\r\n\t\t\tthis.diagramService.getDiagram(diagramId).subscribe(data => this.formGroup.patchValue(data));\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\r\n\tadd(event) {\r\n\t\tthis.store.dispatch(new EditDiagramAction(this.formGroup.value));\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, AfterViewInit, OnDestroy, Injector } from \"@angular/core\";\r\nimport { Subscription, Subject } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { MatSliderChange } from \"@angular/material\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { FeatureState } from \"../../reducers\";\r\nimport { filter, takeUntil } from \"rxjs/operators\";\r\n\r\ndeclare var c3: any;\r\n\r\n@Component({\r\n\tselector: \"diagram\",\r\n\ttemplateUrl: \"./diagram.component.html\",\r\n\tstyleUrls: [ \"./diagram.component.scss\" ]\r\n})\r\nexport class DiagramComponent implements AfterViewInit, OnDestroy {\r\n\tunsubscribe = new Subject<void>();\r\n\tmodelIsCorrect: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\t_model: DiagramModel;\r\n\t@Input()\r\n\tset data(value: DiagramModel) {\r\n\t\tif (!(value.Chart && value._id)) return;\r\n\t\tthis._model = value;\r\n\t\tthis.modelIsCorrect.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._model;\r\n\t}\r\n\tdataSubscribtion: Subscription;\r\n\tchart: any;\r\n\ttime: number;\r\n\tnow: number = Date.now();\r\n\tconstructor(\r\n\t\tprivate store: Store<FeatureState>,\r\n\t\tprivate diagramService: DiagramService,\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate injector: Injector,\r\n\t\tprivate route: ActivatedRoute\r\n\t) {\r\n\t\tdebugger;\r\n\t\tthis.data = this.injector.get(\"data\");\r\n\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tconst diagramId: string = params[\"id\"];\r\n\t\t\t// tslint:disable-next-line:no-unused-expression\r\n\t\t\tdiagramId &&\r\n\t\t\t\tthis.diagramService.getDiagram(diagramId).subscribe(data => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n\tngAfterViewInit() {\r\n\t\t// this.dataSubscribtion = IntervalObservable\r\n\t\t//         // .create(this.model.Source.Sync)\r\n\t\t//         .create(999)\r\n\t\t//         .switchMap(i =>\r\n\t\t//                 this.http.get(`http://localhost:3000/api/data`, {\r\n\t\t//                         params: {\r\n\t\t//                                 route: this.model.Source.Route,\r\n\t\t//                                 time: '0'\r\n\t\t//                         }\r\n\t\t//                 })\r\n\t\t//         )\r\n\t\t//         // .switchMap((res: any) => of(res.Result.Data))\r\n\t\t//         .map((res: any) => res.Result.Data)\r\n\t\tthis.modelIsCorrect.delay(300).filter(data => data).subscribe(state => {\r\n\t\t\tthis.chart = c3.generate({\r\n\t\t\t\t...this.data.Chart,\r\n\t\t\t\tbindto: `#diagram_${this.data._id}`\r\n\t\t\t\t// size: {\r\n\t\t\t\t//         height: 150\r\n\t\t\t\t// }\r\n\t\t\t});\r\n\t\t\tthis.dataSubscribtion = this.diagramService\r\n\t\t\t\t.getData(this.data.Source, this.unsubscribe)\r\n\t\t\t\t.pipe(filter(data => data != undefined), takeUntil(this.unsubscribe))\r\n\t\t\t\t.subscribe(data => {\r\n\t\t\t\t\tthis.now = Date.now();\r\n\t\t\t\t\tthis.time = data.Time;\r\n\t\t\t\t\tif (this.data.Chart.Flow) {\r\n\t\t\t\t\t\tthis.chart.flow({\r\n\t\t\t\t\t\t\tcolumns: this.diagramService.extract_columns_from_data(\r\n\t\t\t\t\t\t\t\tdata.Data,\r\n\t\t\t\t\t\t\t\tthis.data.Chart.ColumnMappings\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tduration: 1500\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.chart.load({\r\n\t\t\t\t\t\t\tcolumns: this.diagramService.extract_columns_from_data(\r\n\t\t\t\t\t\t\t\tdata.Data,\r\n\t\t\t\t\t\t\t\tthis.data.Chart.ColumnMappings\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t});\r\n\r\n\t\t// this.dataSubscribtion = this.diagramService.generateDiagram(\r\n\t\t//         this.model.Chart,\r\n\t\t//         this.model._id,\r\n\t\t//         this.model.Source.Route,\r\n\t\t//         this.model.Source.Sync\r\n\t\t// );\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t\tdebugger;\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t}\r\n\ttimeChange(e: MatSliderChange) {\r\n\t\tthis.dataSubscribtion.unsubscribe();\r\n\t\t// this.diagramService.getData(this.data.Source, Date.now() - ((1000 - e.value) * this.data.Source.Interval), true)\r\n\t\tthis.dataSubscribtion = this.diagramService\r\n\t\t\t.getData(\r\n\t\t\t\tthis.data.Source,\r\n\t\t\t\tthis.unsubscribe,\r\n\t\t\t\tDate.now() - (1000 - e.value) * this.data.Source.Interval,\r\n\t\t\t\ttrue\r\n\t\t\t)\r\n\t\t\t.subscribe(data => {\r\n\t\t\t\tthis.time = data.Time;\r\n\t\t\t\tthis.now = Date.now();\r\n\t\t\t\t// const columns = this.diagramService\r\n\t\t\t\t//         .extract_columns_from_data(data.Data, this.data.Chart.ColumnMappings)\r\n\t\t\t\t//         .map(column => {\r\n\t\t\t\t//                 debugger;\r\n\t\t\t\t//                 column[0] += '_historic';\r\n\t\t\t\t//                 return column;\r\n\t\t\t\t//         });\r\n\t\t\t\tthis.chart.load({\r\n\t\t\t\t\tcolumns: this.diagramService.extract_columns_from_data(data.Data, this.data.Chart.ColumnMappings)\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tInput,\r\n\tAfterViewInit,\r\n\tComponentFactoryResolver,\r\n\tViewChild,\r\n\tViewContainerRef,\r\n\tReflectiveInjector,\r\n\tOnDestroy\r\n} from \"@angular/core\";\r\n\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { NumericDiagramComponent } from \"../../dumb-components/numeric-diagram/numeric-diagram.component\";\r\nimport { ServerStatusDiagramComponent } from \"../../dumb-components/server-status-diagram/server-status-diagram.component\";\r\nimport { ServerConnectingTimeDiagramComponent } from \"../../dumb-components/server-connecting-time-diagram/server-connecting-time-diagram.component\";\r\nimport { DiagramComponent } from \"../../smart-components/diagram/diagram.component\";\r\n\r\n@Component({\r\n\tselector: \"dynamic-component-selector\",\r\n\ttemplateUrl: \"./dynamic-component-selector.component.html\",\r\n\tstyleUrls: [ \"./dynamic-component-selector.component.scss\" ],\r\n\tentryComponents: [\r\n\t\tNumericDiagramComponent,\r\n\t\tServerConnectingTimeDiagramComponent,\r\n\t\tServerStatusDiagramComponent,\r\n\t\tDiagramComponent\r\n\t]\r\n})\r\nexport class DynamicComponentSelectorComponent implements AfterViewInit {\r\n\ttypeMapToDiagram = {\r\n\t\tbar: DiagramComponent,\r\n\t\tdonut: DiagramComponent,\r\n\t\tpie: DiagramComponent,\r\n\t\tscatter: DiagramComponent,\r\n\t\tline: DiagramComponent,\r\n\t\tarea: DiagramComponent,\r\n\t\t\"area-spline\": DiagramComponent,\r\n\t\tnumero: NumericDiagramComponent,\r\n\t\ttempo: ServerConnectingTimeDiagramComponent,\r\n\t\tbooleano: ServerStatusDiagramComponent\r\n\t};\r\n\t@ViewChild(\"dynamicComponentContainer\", { read: ViewContainerRef })\r\n\tdynamicComponentContainer: ViewContainerRef;\r\n\t@ViewChild(DiagramComponent) widgetComponent: DiagramComponent;\r\n\tcurrentComponent: any = null;\r\n\t_data: any;\r\n\t@Input()\r\n\tset data(data: any) {\r\n\t\tif (!data || Object.keys(data).length == 0) return;\r\n\t\tthis.backgroundColor = data.Box.BackgroundColor;\r\n\t\tthis._data = data;\r\n\t\tlet raw = { data };\r\n\t\tlet _component = this.typeMapToDiagram[data.Chart.data.type];\r\n\t\tlet inputProviders = Object.keys(raw).map(inputName => {\r\n\t\t\treturn { provide: inputName, useValue: raw[inputName] };\r\n\t\t});\r\n\t\tlet resolvedInputs = ReflectiveInjector.resolve(inputProviders);\r\n\r\n\t\tlet injector = ReflectiveInjector.fromResolvedProviders(\r\n\t\t\tresolvedInputs,\r\n\t\t\tthis.dynamicComponentContainer.parentInjector\r\n\t\t);\r\n\t\tlet factory = this.resolver.resolveComponentFactory(_component);\r\n\r\n\t\tlet component = factory.create(injector);\r\n\r\n\t\tthis.dynamicComponentContainer.insert(component.hostView);\r\n\r\n\t\tif (this.currentComponent) {\r\n\t\t\tthis.currentComponent.destroy();\r\n\t\t}\r\n\r\n\t\tthis.currentComponent = component;\r\n\t}\r\n\tbackgroundColor: String = \"\";\r\n\tconstructor(private resolver: ComponentFactoryResolver) {}\r\n\tngAfterViewInit() {}\r\n\ttimeChange(e) {\r\n\t\tthis.currentComponent._component.timeChange(e);\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tInput,\r\n\tAfterViewInit,\r\n\tComponentFactoryResolver,\r\n\tViewChild,\r\n\tViewContainerRef,\r\n\tReflectiveInjector,\r\n\tOnDestroy,\r\n\tOutput,\r\n\tEventEmitter\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { DiagramPartialConfigEditComponent } from \"../../dumb-components/diagram-partial-config-edit/diagram-partial-config-edit.component\";\r\nimport { PieDiagramPartialConfigComponent } from \"../../dumb-components/pie-diagram-partial-config/pie-diagram-partial-config.component\";\r\nimport { BooleanoWidgetPartialConfigComponent } from \"../../dumb-components/booleano-widget-partial-config/booleano-widget-partial-config.component\";\r\nimport { LinearDiagramPartialConfigComponent } from \"../../dumb-components/linear-diagram-partial-config/linear-diagram-partial-config.component\";\r\n\r\ndeclare var c3: any;\r\n\r\n@Component({\r\n\tselector: \"dynamic-config-component-selector\",\r\n\ttemplateUrl: \"./dynamic-config-component-selector.component.html\",\r\n\tstyleUrls: [ \"./dynamic-config-component-selector.component.scss\" ],\r\n\tentryComponents: [\r\n\t\tDiagramPartialConfigEditComponent,\r\n\t\tPieDiagramPartialConfigComponent,\r\n\t\tLinearDiagramPartialConfigComponent,\r\n\t\tBooleanoWidgetPartialConfigComponent\r\n\t]\r\n})\r\nexport class DynamicConfigComponentSelectorComponent implements AfterViewInit {\r\n\ttypeMapToDiagram = {\r\n\t\tbar: DiagramPartialConfigEditComponent,\r\n\t\tarea: LinearDiagramPartialConfigComponent,\r\n\t\t\"area-spline\": LinearDiagramPartialConfigComponent,\r\n\t\tdonut: DiagramPartialConfigEditComponent,\r\n\t\tpie: PieDiagramPartialConfigComponent,\r\n\t\tscatter: DiagramPartialConfigEditComponent,\r\n\t\tline: LinearDiagramPartialConfigComponent,\r\n\t\tbooleano: BooleanoWidgetPartialConfigComponent\r\n\t};\r\n\t@ViewChild(\"dynamicComponentContainer\", { read: ViewContainerRef })\r\n\tdynamicComponentContainer: ViewContainerRef;\r\n\t@Output() ConfigChanged = new EventEmitter();\r\n\tcurrentComponent: any = null;\r\n\t@Input()\r\n\tset data(data: any) {\r\n\t\tif (!data || Object.keys(data).length == 0) return;\r\n\t\tif (!(data.type in this.typeMapToDiagram)) {\r\n\t\t\tif (this.currentComponent) this.currentComponent.destroy();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet _component = this.typeMapToDiagram[data.type];\r\n\t\tlet inputProviders = Object.keys(data.inputs).map(inputName => {\r\n\t\t\treturn { provide: inputName, useValue: data.inputs[inputName] };\r\n\t\t});\r\n\t\tlet resolvedInputs = ReflectiveInjector.resolve(inputProviders);\r\n\r\n\t\tlet injector = ReflectiveInjector.fromResolvedProviders(\r\n\t\t\tresolvedInputs,\r\n\t\t\tthis.dynamicComponentContainer.parentInjector\r\n\t\t);\r\n\t\tlet factory = this.resolver.resolveComponentFactory(_component);\r\n\t\tlet component = factory.create(injector);\r\n\t\tif ((<any>component.instance).ConfigChanged)\r\n\t\t\t(<any>component.instance).ConfigChanged.subscribe(() => {\r\n\t\t\t\tthis.ConfigChanged.emit();\r\n\t\t\t});\r\n\r\n\t\tthis.dynamicComponentContainer.insert(component.hostView);\r\n\r\n\t\tif (this.currentComponent) {\r\n\t\t\tthis.currentComponent.destroy();\r\n\t\t}\r\n\r\n\t\tthis.currentComponent = component;\r\n\t}\r\n\tconstructor(private resolver: ComponentFactoryResolver) {}\r\n\tngAfterViewInit() {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\n\r\nimport { DiagramService } from \"../services/diagram.service\";\r\nimport { GetDiagramsApiModel } from \"../models/get-diagrams-api.model\";\r\nimport { GetDiagramsSucceed, GetDiagramsFailed, GetDiagramsStart } from \"../actions/diagrams.actions\";\r\nimport { of } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class DiagramEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private diagramService: DiagramService) {}\r\n\r\n\t@Effect()\r\n\tDiagramRequest$ = this.actions$.ofType().pipe(map(action => action.payload), map(data => new GetDiagramsStart()));\r\n\r\n\t@Effect()\r\n\tgetDiagram$ = this.actions$\r\n\t\t.ofType()\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap((data: GetDiagramsApiModel.Request) =>\r\n\t\t\t\tthis.diagramService\r\n\t\t\t\t\t.getDiagrams()\r\n\t\t\t\t\t.pipe(map(res => new GetDiagramsSucceed(res)), catchError(() => of(new GetDiagramsFailed())))\r\n\t\t\t)\r\n\t\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\n\r\nimport { DiagramService } from \"../services/diagram.service\";\r\nimport { AddDiagramApiModel } from \"../models/add-diagram-api.model\";\r\nimport {\r\n\tAddDiagramActionTypes,\r\n\tAddDiagramActionStart,\r\n\tAddDiagramActionSucceed,\r\n\tAddDiagramActionFailed,\r\n\tDataLoadedAction,\r\n\tStructureDefinitionStartAction,\r\n\tGenerateDiagramAction,\r\n\tStructureDefinitionFinishedAction\r\n} from \"../actions/add-diagram.actions\";\r\n\r\n@Injectable()\r\nexport class AddDiagramEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private diagramService: DiagramService) {}\r\n\r\n\t@Effect()\r\n\taddDiagramRequest$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.ADD_DIAGRAM)\r\n\t\t.pipe(map(action => action.payload), map(data => new AddDiagramActionStart(data)));\r\n\r\n\t@Effect()\r\n\taddDiagram$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.ADD_DIAGRAM_START)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap((data: AddDiagramApiModel.Request) =>\r\n\t\t\t\tthis.diagramService\r\n\t\t\t\t\t.addDiagram(data)\r\n\t\t\t\t\t.pipe(\r\n\t\t\t\t\t\tmap(res => new AddDiagramActionSucceed(res)),\r\n\t\t\t\t\t\tcatchError(() => of(new AddDiagramActionFailed()))\r\n\t\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t@Effect({ dispatch: false })\r\n\tADD_DIAGRAM_SUCCEED$ = this.actions$.ofType(AddDiagramActionTypes.ADD_DIAGRAM_SUCCEED).pipe(\r\n\t\tmap(action => action.payload),\r\n\t\tmap(data => {\r\n\t\t\tthis.router.navigate([ \"diagrams\" ]);\r\n\t\t\treturn Observable.empty();\r\n\t\t})\r\n\t);\r\n\r\n\t@Effect()\r\n\tHAVE_ENDPOINT$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.HAVE_ENDPOINT)\r\n\t\t.pipe(map(action => action.payload), map(data => new DataLoadedAction(data)));\r\n\r\n\t@Effect()\r\n\tDATA_LOADED$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.DATA_LOADED)\r\n\t\t.pipe(map(action => action.payload), map(data => new StructureDefinitionStartAction(data)));\r\n\r\n\t@Effect()\r\n\tDIAGRAM_CONFIG_CHANGED$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.DIAGRAM_CONFIG_CHANGED)\r\n\t\t.pipe(map(action => action.payload), map(data => new GenerateDiagramAction(data)));\r\n\r\n\t@Effect()\r\n\tSTRUCTURE_DEFINITION_START$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.STRUCTURE_DEFINITION_START)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap(data => data.getDataStructure().map(() => new StructureDefinitionFinishedAction(data)))\r\n\t\t);\r\n\r\n\t@Effect()\r\n\tCOLUMNS_MAPPING_CHANGED$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.COLUMNS_MAPPING_CHANGED)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap(data => data.calculateColumns().map(() => new StructureDefinitionFinishedAction(data)))\r\n\t\t);\r\n\r\n\t@Effect()\r\n\tSTRUCTURE_DEFINITION_END$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.STRUCTURE_DEFINITION_END)\r\n\t\t// .skipUntil(this.actions$.ofType(AddDiagramActionTypes.DATA_LOADED))\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap(data => data.calculateColumns().map(() => new GenerateDiagramAction(data)))\r\n\t\t);\r\n\r\n\t@Effect({ dispatch: false })\r\n\tGenerateDiagram$ = this.actions$\r\n\t\t.ofType(AddDiagramActionTypes.GENERATE_DIAGRAM)\r\n\t\t.pipe(map(action => action.payload), map(data => data.generateDiagram()));\r\n}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { DiagramModuleContainerComponent } from \"./smart-components/diagram-module-container/diagram-module-container.component\";\r\nimport { DiagramsComponent } from \"./smart-components/diagrams/diagrams.component\";\r\nimport { AddDiagramComponent } from \"./smart-components/add-diagram/add-diagram.component\";\r\nimport { NumericDiagramComponent } from \"./dumb-components/numeric-diagram/numeric-diagram.component\";\r\nimport { ServerConnectingTimeDiagramComponent } from \"./dumb-components/server-connecting-time-diagram/server-connecting-time-diagram.component\";\r\nimport { ServerStatusDiagramComponent } from \"./dumb-components/server-status-diagram/server-status-diagram.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"diagrams\",\r\n\t\tcomponent: DiagramModuleContainerComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"\",\r\n\t\t\t\tcomponent: DiagramsComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"add\",\r\n\t\t\t\tcomponent: AddDiagramComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"edit/:id\",\r\n\t\t\t\tcomponent: AddDiagramComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"numero\",\r\n\t\t\t\tcomponent: NumericDiagramComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"tempo\",\r\n\t\t\t\tcomponent: ServerConnectingTimeDiagramComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"booleano\",\r\n\t\t\t\tcomponent: ServerStatusDiagramComponent\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const RoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { IGridItemComponent } from \"@soushians/grid\";\r\n\r\nimport { DiagramModel } from \"../../models/diagram.model\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\ttemplateUrl: \"diagram-selector.component.html\"\r\n})\r\nexport class DiagramSelectorComponent implements OnInit, IGridItemComponent<{ diagramId: string }> {\r\n\tdiagrams$: Observable<DiagramModel[]>;\r\n\tselectedDiagramId: string;\r\n\tget valid() {\r\n\t\treturn this.config.diagramId != undefined;\r\n\t}\r\n\tget config() {\r\n\t\treturn {\r\n\t\t\tdiagramId: this.selectedDiagramId\r\n\t\t};\r\n\t}\r\n\tconstructor(private diagramService: DiagramService) {\r\n\t\tthis.diagrams$ = this.diagramService.getDiagrams().pipe(map(res => res.Result));\r\n\t}\r\n\tngOnInit() {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatTooltipModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule,\r\n\tMatCheckboxModule,\r\n\tMatGridListModule,\r\n\tMatSliderModule,\r\n\tMatAutocompleteModule\r\n} from \"@angular/material\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\nimport { EffectsModule, mergeEffects } from \"@ngrx/effects\";\r\n\r\nimport { SharedModule } from \"@soushians/shared\";\r\n\r\nimport { DiagramModuleConfig, MODULE_CONFIG_TOKEN } from \"./diagram.config\";\r\n\r\nimport { DiagramReducers } from \"./reducers/index\";\r\n\r\nimport { ServerStatusDiagramComponent } from \"./dumb-components/server-status-diagram/server-status-diagram.component\";\r\nimport { DiagramPartialConfigEditComponent } from \"./dumb-components/diagram-partial-config-edit/diagram-partial-config-edit.component\";\r\nimport { PieDiagramPartialConfigComponent } from \"./dumb-components/pie-diagram-partial-config/pie-diagram-partial-config.component\";\r\nimport { BooleanoWidgetPartialConfigComponent } from \"./dumb-components/booleano-widget-partial-config/booleano-widget-partial-config.component\";\r\nimport { NumericWidgetPartialConfigComponent } from \"./dumb-components/numeric-widget-partial-config/numeric-widget-partial-config.component\";\r\nimport { LinearDiagramPartialConfigComponent } from \"./dumb-components/linear-diagram-partial-config/linear-diagram-partial-config.component\";\r\nimport { ServerConnectingTimeDiagramComponent } from \"./dumb-components/server-connecting-time-diagram/server-connecting-time-diagram.component\";\r\nimport { NumericEditDiagramComponent } from \"./dumb-components/numeric-edit-diagram/numeric-edit-diagram.component\";\r\nimport { NumericDiagramComponent } from \"./dumb-components/numeric-diagram/numeric-diagram.component\";\r\n\r\nimport { DiagramModuleContainerComponent } from \"./smart-components/diagram-module-container/diagram-module-container.component\";\r\nimport { DataMapperComponent } from \"./smart-components/data-mapper/data-mapper.component\";\r\n\r\nimport { AddDiagramComponent } from \"./smart-components/add-diagram/add-diagram.component\";\r\nimport { diagramViewComponent } from \"./smart-components/diagram-view/diagram-view.component\";\r\nimport { DiagramsComponent } from \"./smart-components/diagrams/diagrams.component\";\r\nimport { EditDiagramComponent } from \"./smart-components/edit-diagram/edit-diagram.component\";\r\nimport { DiagramComponent } from \"./smart-components/diagram/diagram.component\";\r\nimport { DynamicComponentSelectorComponent } from \"./smart-components/dynamic-component-selector/dynamic-component-selector.component\";\r\nimport { DynamicConfigComponentSelectorComponent } from \"./smart-components/dynamic-config-component-selector/dynamic-config-component-selector.component\";\r\n\r\nimport { DiagramEffects } from \"./effects/diagrams.effects\";\r\nimport { AddDiagramEffects } from \"./effects/add-diagram.effects\";\r\n\r\nimport { RoutingModule } from \"./diagram-routing.module\";\r\nimport { DiagramSelectorComponent } from \"./smart-components/diagram-selector/diagram-selector.component\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tRouterModule,\r\n\t\tCommonModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSelectModule,\r\n\t\tMatSliderModule,\r\n\t\tMatInputModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatRadioModule,\r\n\t\tMatTooltipModule,\r\n\t\tMatGridListModule,\r\n\t\tMatAutocompleteModule,\r\n\t\tReactiveFormsModule,\r\n\t\tBrowserAnimationsModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tAddDiagramComponent,\r\n\t\tDiagramsComponent,\r\n\t\tdiagramViewComponent,\r\n\t\tEditDiagramComponent,\r\n\t\tDynamicConfigComponentSelectorComponent,\r\n\t\tDiagramComponent,\r\n\t\tDynamicComponentSelectorComponent,\r\n\t\tDiagramModuleContainerComponent,\r\n\t\tDataMapperComponent,\r\n\t\tNumericDiagramComponent,\r\n\t\tServerStatusDiagramComponent,\r\n\t\tDiagramPartialConfigEditComponent,\r\n\t\tPieDiagramPartialConfigComponent,\r\n\t\tBooleanoWidgetPartialConfigComponent,\r\n\t\tNumericWidgetPartialConfigComponent,\r\n\t\tServerConnectingTimeDiagramComponent,\r\n\t\tNumericEditDiagramComponent,\r\n\t\tLinearDiagramPartialConfigComponent,\r\n\t\tDiagramSelectorComponent\r\n\t],\r\n\tentryComponents: [ DiagramSelectorComponent, diagramViewComponent ],\r\n\texports: [ DiagramSelectorComponent ],\r\n\tproviders: []\r\n})\r\nexport class NgsDiagramModule {\r\n\tstatic forRoot(config?: DiagramModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: RootNgsDiagramModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config } ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsDiagramModule,\r\n\t\tStoreModule.forFeature(\"diagram\", DiagramReducers),\r\n\t\tEffectsModule.forFeature([ DiagramEffects, AddDiagramEffects ]),\r\n\t\tRoutingModule\r\n\t],\r\n\texports: [ NgsDiagramModule ]\r\n})\r\nexport class RootNgsDiagramModule {}\r\n"]}