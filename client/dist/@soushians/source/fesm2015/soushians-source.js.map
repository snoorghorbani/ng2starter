{"version":3,"file":"soushians-source.js.map","sources":["ng://@soushians/source/lib/actions/source.action.ts","ng://@soushians/source/lib/reducers/source-list.reducer.ts","ng://@soushians/source/lib/reducers/index.ts","ng://@soushians/source/lib/models/get-sources-api.model.ts","ng://@soushians/source/lib/models/upsert-source-api.model.ts","ng://@soushians/source/lib/services/source.service.ts","ng://@soushians/source/lib/smart-components/source-module-container/source-module-container.component.ts","ng://@soushians/source/lib/smart-components/source-list/source-list.component.ts","ng://@soushians/source/lib/smart-components/source-upsert/source-upsert.component.ts","ng://@soushians/source/lib/source.routing-module.ts","ng://@soushians/source/lib/effects/source.effects.ts","ng://@soushians/source/lib/source.module.ts"],"sourcesContent":["import { Action } from \"@ngrx/store\";\r\nimport { SourceModel, UpsertSourceApiModel } from \"../models\";\r\n\r\nexport enum SourceActionTypes {\r\n\tSOURCE_SUBMIT = \"[SOURCE] source submit\",\r\n\tSOURCE_SUBMIT_SUCCEED = \"[SOURCE] source submit succeed\",\r\n\tSOURCE_SUBMIT_FAILED = \"[SOURCE] source submit failed\"\r\n}\r\n\r\nexport class SourceSubmit implements Action {\r\n\treadonly type = SourceActionTypes.SOURCE_SUBMIT;\r\n\tconstructor(public payload: UpsertSourceApiModel.Request) {}\r\n}\r\nexport class SourceSubmitSucceed implements Action {\r\n\treadonly type = SourceActionTypes.SOURCE_SUBMIT_SUCCEED;\r\n}\r\nexport class SourceSubmitFailed implements Action {\r\n\treadonly type = SourceActionTypes.SOURCE_SUBMIT_FAILED;\r\n}\r\nexport type Actions = SourceSubmit | SourceSubmitSucceed | SourceSubmitFailed;\r\n","import * as source from \"../actions/source.action\";\r\nimport { SourceModel, UpsertSourceApiModel } from \"../models\";\r\n\r\nexport interface State {\r\n\tdata: SourceModel[];\r\n}\r\n\r\nconst initialState: State = {\r\n\tdata: []\r\n};\r\n\r\nexport function Reducer(state = initialState, action: source.Actions): State {\r\n\tswitch (action.type) {\r\n\t\tcase source.SourceActionTypes.SOURCE_SUBMIT:\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\tcase source.SourceActionTypes.SOURCE_SUBMIT_SUCCEED:\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\tcase source.SourceActionTypes.SOURCE_SUBMIT_FAILED:\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const getSourceListData = (state: State) => state.data;\r\n","import { createSelector, createFeatureSelector, MemoizedSelector } from '@ngrx/store';\r\n\r\nimport * as sourceList from './source-list.reducer';\r\n\r\nexport interface SourceState {\r\n        list: sourceList.State\r\n}\r\n\r\nexport const SourceReducers = {\r\n      sources: sourceList.Reducer\r\n};\r\n\r\nexport interface FeatureState {\r\n        'sources': SourceState;\r\n}\r\n\r\n\r\n\r\n//#region selectors\r\n\r\nexport const selectSourceState = createFeatureSelector<SourceState>(\"source\");\r\n\r\n//#endregion\r\n\r\nexport const getSourceList = createSelector(\r\n        selectSourceState,\r\n        (state: SourceState) => state.list\r\n);\r\n//export const getSourceListData = createSelector(\r\n//        getSourceList,\r\n//        sourceList.getSourceListData\r\n//);\r\n","import { Injectable } from \"@angular/core\";\r\n// import { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { SourceModel } from \"./source.model\";\r\n\r\nexport namespace GetSourcesApiModel {\r\n\t// export class Request implements HttpRequestBaseModel<Request> {\r\n\texport class Request {\r\n\t\tconstructor(initValue: GetSourcesApiModel.Request = {} as GetSourcesApiModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: SourceModel[];\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n// import { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators, FormArray } from \"@angular/forms\";\r\nimport { SourceModel } from \"../models\";\r\n\r\nexport namespace UpsertSourceApiModel {\r\n\t// export class Request implements HttpRequestBaseModel<Request> {\r\n\texport class Request {\r\n\t\t_id: string;\r\n\t\tEndpoint: string;\r\n\t\tInterval: number;\r\n\t\tIsActive: boolean;\r\n\t\tThresholds: {\r\n\t\t\tName: string;\r\n\t\t\tFormula: string;\r\n\t\t\tMessage: string;\r\n\t\t\tType: boolean;\r\n\t\t}[];\r\n\t\tconstructor(initValue = {} as UpsertSourceApiModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {\r\n\t\t\t\t_id: this._id,\r\n\t\t\t\tEndpoint: this.Endpoint,\r\n\t\t\t\tInterval: this.Interval,\r\n\t\t\t\tIsActive: this.IsActive,\r\n\t\t\t\tThresholds: this.Thresholds\r\n\t\t\t};\r\n\t\t}\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\t_id: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tEndpoint: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tInterval: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tIsActive: new FormControl(\"false\", [ Validators.required ]),\r\n\t\t\t\tThresholds: new FormArray([])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: SourceModel;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Rx\";\r\n\r\nimport { UpsertSourceApiModel, GetSourcesApiModel, SourceModel } from \"../models\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class SourceService {\r\n\tresponseCache: any;\r\n\r\n\tconstructor(private http: HttpClient) {}\r\n\r\n\tgetSources(): Observable<GetSourcesApiModel.Response> {\r\n\t\treturn this.http\r\n\t\t\t.get<GetSourcesApiModel.Response>(\"http://localhost:3000/api/source\")\r\n\t\t\t.map(response => {\r\n\t\t\t\treturn response;\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tgetSourceById(id: string): Observable<SourceModel> {\r\n\t\treturn this.http\r\n\t\t\t.get(`http://localhost:3000/api/source/${id}`)\r\n\t\t\t.map((response: UpsertSourceApiModel.Response) => response.Result)\r\n\t\t\t.catch(err => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\tupsertSource(body: UpsertSourceApiModel.Request): Observable<any> {\r\n\t\tvar model = new UpsertSourceApiModel.Request(body);\r\n\t\treturn this.http\r\n\t\t\t.put(\"http://localhost:3000/api/source\", model.getRequestBody(), { withCredentials: false })\r\n\t\t\t.map(response => response)\r\n\t\t\t.catch(err => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\tgetData(source: SourceModel, time: number = 0): Observable<any> {\r\n\t\treturn this.http\r\n\t\t\t.get(`http://localhost:3000/api/data`, {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tsourceId: source._id,\r\n\t\t\t\t\ttime: null\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.map((res: any) => res.Result);\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { SourceService } from \"../../services/source.service\";\r\n\r\n@Component({\r\n\tselector: \"source-module-container\",\r\n\ttemplate: `<div fxLayoutAlign=\"\" fxflex=\"100\" fxLayout=\"column\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n`\r\n})\r\nexport class SourceModuleContainerComponent implements OnInit {\r\n\tconstructor(private service: SourceService) {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { SourceService } from \"../../services/source.service\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { GetSourcesApiModel } from \"../../models\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport * as FeatureReducer from \"../../reducers\";\r\n//import { SourceUpsertAction } from 'app/actions';\r\n\r\n@Component({\r\n\tselector: \"source-list\",\r\n\ttemplate: `<div fxFlexLayout=\"row\" fxLayoutWrap fxLayoutAlign=\"start center\">\r\n  <mat-card class=\"source-box\" *ngFor=\"let source of (sources | async)?.Result\" [fxFlex]=\"32\">\r\n      <mat-card-title fxFlexLayout=\"row\" flexLayoutAlign=\"space-between center\">\r\n        \r\n        <a [routerLink]=\"['edit' ,  source._id]\" fxFlex=\"40px\">\r\n          <mat-icon fxLayoutAlign=\"start center\" aria-label=\"edit source\">edit</mat-icon>\r\n        </a>\r\n        <span fxFlex fxLayoutAlign=\"end center\" fxFlexAlign=\"center\">{{source.Endpoint}}</span>\r\n      </mat-card-title>\r\n    \r\n  </mat-card>\r\n\r\n  <div fxLayoutAlign='end center'>\r\n    <button mat-fab routerLink=\"../source/add\" class=\"add-btn\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n\r\n`,\r\n\tstyles: [`:host{width:100%}.source-box{margin:5px}.source-box a{text-decoration:none}.add-btn{position:fixed;bottom:50px;left:25px;z-index:1}`]\r\n})\r\nexport class SourceListComponent implements OnInit {\r\n\tsources: Observable<GetSourcesApiModel.Response>;\r\n\r\n\tconstructor(\r\n\t\tprivate sourceService: SourceService // private store: Store<FeatureReducer.FeatureState>\r\n\t) {\r\n\t\tthis.sources = this.sourceService.getSources();\r\n\t\t// this.sources.subscribe(data => { debugger})\r\n\t\t//this.configs.subscribe(data => {\r\n\t\t//        debugger;\r\n\t\t//        this.store.dispatch(new ConfigLoaded(data.Result));\r\n\t\t//});\r\n\t}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { NgModule, Component, OnInit, Output, EventEmitter, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\r\n\r\nimport { FormGroup, FormBuilder, FormControl, AbstractControl, FormArray, Validators } from \"@angular/forms\";\r\nimport { UpsertSourceApiModel, SourceModel } from \"../../models\";\r\nimport { SourceService } from \"../../services/source.service\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { SourceSubmit } from \"../../actions\";\r\nimport * as FeatureReducer from \"../../reducers\";\r\nimport { Subscription } from \"rxjs/Rx\";\r\n\r\n@Component({\r\n\tselector: \"source-source-upsert\",\r\n\ttemplate: `<div fxLayout=\"column\">\r\n  <div fxFlex=\"100\">\r\n    <mat-card fxLayout=\"column\" fxFlex=\"50\">\r\n      <form [formGroup]=\"formGroup\" fxLayout='column'>\r\n\r\n        <mat-card-header>\r\n          <mat-card-title>Ø§ÙØ²ÙØ¯Ù ÙÙÙØ¯Ø§Ø± Ø¬Ø¯ÛØ¯</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <mat-form-field fxFlexFill>\r\n            <input matInput placeholder=\"Ø¢Ø¯Ø±Ø³\" formControlName=\"Endpoint\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field fxFlexFill>\r\n            <input matInput placeholder=\"ÙØ¯Øª Ø²ÙØ§Ù Ø¨Ù Ø±ÙØ² Ø±Ø³Ø§ÙÛ Ø¯Ø§Ø¯Ù\" formControlName=\"Interval\">\r\n          </mat-form-field>\r\n          <div>\r\n            <mat-checkbox formControlName=\"IsActive\" fxFlexFill>ÙØ¶Ø¹ÛØª</mat-checkbox>\r\n          </div>\r\n        </mat-card-content>\r\n      </form>\r\n    </mat-card>\r\n\r\n    <mat-card fxLayout=\"column\" fxFlex=\"20\">\r\n      <mat-card-content fxLayout=\"column\">\r\n        <div>\r\n          <button fxFlex mat-raised-button color=\"primary\" (click)=\"getData()\">Ø³Ø§Ø®ØªØ§Ø± Ø¯ÛØªØ§</button>\r\n        </div>\r\n        <div class=\"item-margin\">\r\n          <!-- TODO: -->\r\n          <!-- <data-mapper destination=\"value\" [data]=\"data\"></data-mapper> -->\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card fxLayout=\"column\" fxFlex=\"30\">\r\n      <mat-card-content fxLayout=\"column\">\r\n        <div fxLayout=\"column\" fxLayoutGap=\"5px\">\r\n          <div *ngFor=\"let threshold of thresholds; let i=index\" fxFlex=\"100\" class=\"add-item\">\r\n            <div fxLayout=\"column\">\r\n              <div [formGroup]=\"thresholds[i]\" fxLayout=\"column\">\r\n                <mat-form-field fxFlexFill>\r\n                  <input matInput placeholder=\"ÙØ§Ù\" formControlName=\"Name\">\r\n                </mat-form-field>\r\n                <mat-form-field fxFlexFill>\r\n                  <input class=\"ltr\" matInput placeholder=\"ÙØ±ÙÙÙ\" formControlName=\"Formula\">\r\n                </mat-form-field>\r\n                <mat-form-field fxFlexFill>\r\n                  <input matInput placeholder=\"ØªÙØ¶ÛØ­\" formControlName=\"Message\">\r\n                </mat-form-field>\r\n                <mat-radio-group formControlName=\"Type\" fxFlexFill>\r\n                  <label>ÙÙØ¹ :</label>\r\n                  <mat-radio-button *ngFor=\"let item of types\" [value]=\"item\" class=\"form-element-margin\">\r\n                    {{item}}\r\n                  </mat-radio-button>\r\n                </mat-radio-group>\r\n\r\n                <button (click)=\"removeItem(i)\" fxFlex mat-button color=\"primary\" type=\"button\">Ù¾Ø§Ú© Ú©Ø±Ø¯Ù</button>\r\n              </div>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"item-margin\">\r\n          <button (click)=\"addItem()\" fxFlex mat-raised-button color=\"primary\" type=\"button\">Ø§ÙØ²ÙØ¯Ù Ø¢Ø³ØªØ§ÙÙ</button>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  <div fxFlex=\"100\">\r\n    <mat-card fxLayoutAlign=\"end center\" fxLayout=\"row\" fxFlex=\"100\">\r\n      <mat-card-content>\r\n        <button mat-raised-button fxFlex color=\"primary\" (click)=\"add($event)\">Ø«Ø¨Øª</button>\r\n        <button fxFlex mat-raised-button routerLink='/source'  fxLayoutGap=\"5px\">Ø§ÙØµØ±Ø§Ù</button>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n`,\r\n\tstyles: [`mat-card{margin:5px}.add-item{border:1px solid #eaeaea;padding:10px;margin:5px 0}.item-margin{margin-top:10px}button[type=submit]{margin-left:5px}.ltr{direction:ltr}.form-element-margin{margin:5px 10px}`]\r\n})\r\nexport class SourceUpsertComponent implements OnInit {\r\n\t//configInforamation;\r\n\tformGroup: FormGroup = UpsertSourceApiModel.Request.formGroup;\r\n\tsources: Observable<SourceModel[]>;\r\n\tthresholds: AbstractControl[];\r\n\tdata: any;\r\n\ttypes = [ \"critical\", \"goal\" ];\r\n\tconstructor(\r\n\t\tprivate sourceService: SourceService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate store: Store<FeatureReducer.FeatureState>\r\n\t) {\r\n\t\t// this.sources = this.sourceService.getSources();\r\n\t\tthis.thresholds = (this.formGroup.controls.Thresholds as FormArray).controls;\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tconst sourceId: string = params[\"id\"];\r\n\t\t\tsourceId &&\r\n\t\t\t\tthis.sourceService.getSourceById(sourceId).subscribe(data => {\r\n\t\t\t\t\tthis.formGroup.patchValue({\r\n\t\t\t\t\t\t_id: data._id,\r\n\t\t\t\t\t\tEndpoint: data.Endpoint,\r\n\t\t\t\t\t\tInterval: data.Interval,\r\n\t\t\t\t\t\tIsActive: data.IsActive || false,\r\n\t\t\t\t\t\tThresholds: data.Thresholds\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tdata.Thresholds.forEach(mapping =>\r\n\t\t\t\t\t\tthis.addItem(mapping.Name, mapping.Formula, mapping.Message, mapping.Type)\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\r\n\taddItem(Name: string = \"\", Formula: string = \"\", Message: string = \"\", Type: string = \"critical\") {\r\n\t\tconst control = <FormArray>this.formGroup.controls[\"Thresholds\"];\r\n\t\tcontrol.push(\r\n\t\t\tnew FormGroup({\r\n\t\t\t\tName: new FormControl(Name, [ Validators.required ]),\r\n\t\t\t\tFormula: new FormControl(Formula, [ Validators.required ]),\r\n\t\t\t\tMessage: new FormControl(Message, [ Validators.required ]),\r\n\t\t\t\tType: new FormControl(Type, [ Validators.required ])\r\n\t\t\t})\r\n\t\t);\r\n\t\t//    control.push(this.formBuilder.group({\r\n\t\t//      Name: [Name],\r\n\t\t//      Formula: [Formula],\r\n\t\t//      Message: [Message]\r\n\t\t//    }));\r\n\t}\r\n\r\n\tremoveItem(i: number) {\r\n\t\tconst control = <FormArray>this.formGroup.controls[\"Thresholds\"];\r\n\t\tcontrol.removeAt(i);\r\n\t}\r\n\r\n\tgetData() {\r\n\t\tconst o$ = this.sourceService.getData(this.formGroup.value);\r\n\t\to$.subscribe(data => {\r\n\t\t\tthis.data = data.Data;\r\n\t\t});\r\n\t\treturn o$;\r\n\t}\r\n\r\n\tadd(data) {\r\n\t\t//if (!this.formGroup.valid) return;\r\n\t\tthis.store.dispatch(new SourceSubmit(this.formGroup.value));\r\n\t}\r\n}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { SourceModuleContainerComponent } from \"./smart-components/source-module-container/source-module-container.component\";\r\nimport { SourceListComponent } from \"./smart-components/source-list/source-list.component\";\r\nimport { SourceUpsertComponent } from \"./smart-components/source-upsert/source-upsert.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"source\",\r\n\t\tcomponent: SourceModuleContainerComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"\",\r\n\t\t\t\tcomponent: SourceListComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"edit/:id\",\r\n\t\t\t\tcomponent: SourceUpsertComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"add\",\r\n\t\t\t\tcomponent: SourceUpsertComponent\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const RoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { SourceActionTypes, SourceSubmit, SourceSubmitSucceed, SourceSubmitFailed } from \"../actions\";\r\nimport { SourceModel, UpsertSourceApiModel } from \"../models\";\r\nimport { SourceService } from \"../services/source.service\";\r\n\r\n@Injectable()\r\nexport class SourceEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private sourceService: SourceService) {}\r\n\r\n\t@Effect()\r\n\tafterSubmitSource$ = this.actions$.ofType(SourceActionTypes.SOURCE_SUBMIT).pipe(\r\n\t\tmap(action => action.payload),\r\n\t\tswitchMap((data: UpsertSourceApiModel.Request) => {\r\n\t\t\treturn this.sourceService\r\n\t\t\t\t.upsertSource(data)\r\n\t\t\t\t.pipe(map(res => new SourceSubmitSucceed()), catchError(() => Observable.of(new SourceSubmitFailed())));\r\n\t\t})\r\n\t);\r\n\r\n\t@Effect()\r\n\tSigninSucceed$ = this.actions$.ofType(SourceActionTypes.SOURCE_SUBMIT_SUCCEED).pipe(\r\n\t\tswitchMap(() => {\r\n\t\t\tthis.router.navigate([ \"source\" ]);\r\n\t\t\treturn Observable.empty();\r\n\t\t})\r\n\t);\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { StoreModule, Store } from \"@ngrx/store\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport {\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSnackBarModule,\r\n\tMatSidenavModule,\r\n\tMatExpansionModule,\r\n\tMatSelectModule,\r\n\tMatFormFieldModule,\r\n\tMatListModule,\r\n\tMatMenuModule,\r\n\tMatRadioModule,\r\n\tMatInputModule,\r\n\tMatCheckboxModule,\r\n\tMatToolbarModule,\r\n\tMatDatepickerModule,\r\n\tMatProgressBarModule\r\n} from \"@angular/material\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\nimport { SharedModule } from \"@soushians/shared\";\r\n\r\nimport { SourceReducers } from \"./reducers/index\";\r\nimport { RoutingModule } from \"./source.routing-module\";\r\nimport { SourceEffects } from \"./effects/source.effects\";\r\nimport { SourceListComponent } from \"./smart-components/source-list/source-list.component\";\r\nimport { SourceUpsertComponent } from \"./smart-components/source-upsert/source-upsert.component\";\r\nimport { SourceModuleContainerComponent } from \"./smart-components/source-module-container/source-module-container.component\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tRouterModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tHttpClientModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatSidenavModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSelectModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatListModule,\r\n\t\tMatMenuModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatRadioModule,\r\n\t\tMatInputModule,\r\n\t\tMatToolbarModule,\r\n\t\tMatDatepickerModule,\r\n\t\tMatProgressBarModule,\r\n\t\tBrowserModule,\r\n\t\tStoreModule.forFeature(\"source\", SourceReducers),\r\n\t\tBrowserAnimationsModule,\r\n\t\tRoutingModule,\r\n\t\tEffectsModule.forFeature([ SourceEffects ]),\r\n\t\tSharedModule\r\n\t],\r\n\tdeclarations: [ SourceListComponent, SourceUpsertComponent, SourceModuleContainerComponent ],\r\n\texports: []\r\n})\r\nexport class SourceModule {}\r\n"],"names":["source.SourceActionTypes","sourceList.Reducer","Observable"],"mappings":"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"}
