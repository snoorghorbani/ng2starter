{"version":3,"sources":["ng://@soushians/user/lib/models/user.model.ts","ng://@soushians/user/lib/user.config.ts","dist/@soushians/user/node_modules/tslib/tslib.es6.js","ng://@soushians/user/lib/services/user-configuration.service.ts","ng://@soushians/user/lib/profile-view/profile-view.actions.ts","ng://@soushians/user/lib/dashboard/user.actions.ts","ng://@soushians/user/lib/dashboard/account.reducer.ts","ng://@soushians/user/lib/models/profile-view.model.ts","ng://@soushians/user/lib/models/profile-edit.model.ts","ng://@soushians/user/lib/services/user.service.ts","ng://@soushians/user/lib/profile-edit/edit-profile.actions.ts","ng://@soushians/user/lib/profile-edit/edit-profile.effects.ts","ng://@soushians/user/lib/profile-view/profile-view.effects.ts","ng://@soushians/user/lib/feature/feature.effects.ts","ng://@soushians/user/lib/reset-password/reset-password-request.actions.ts","ng://@soushians/user/lib/reset-password/reset-password-request.reducer.ts","ng://@soushians/user/lib/change-password/change-password.actions.ts","ng://@soushians/user/lib/change-password/change-password.reducer.ts","ng://@soushians/user/lib/profile-edit/edit-profile.reducer.ts","ng://@soushians/user/lib/search-account/search.actions.ts","ng://@soushians/user/lib/search-account/search.reducer.ts","ng://@soushians/user/lib/models/change-password.model.ts","ng://@soushians/user/lib/user.reducers.ts","ng://@soushians/user/lib/search-account/search/search.component.ts","ng://@soushians/user/lib/change-password/change-password/change-password.component.ts","ng://@soushians/user/lib/profile-edit/profile-edit/profile-edit.component.ts","ng://@soushians/user/lib/dashboard/dashboard-links/dashboard-links.component.ts","ng://@soushians/user/lib/reset-password/reset-password-request/reset-password-request.component.ts","ng://@soushians/user/lib/feature/feature-container/feature-container.component.ts","ng://@soushians/user/lib/change-password/change-password-container/change-password-container.component.ts","ng://@soushians/user/lib/profile-edit/profile-edit-container/profile-edit-container.component.ts","ng://@soushians/user/lib/dashboard/dashboard-container/dashboard.component.ts","ng://@soushians/user/lib/profile-view/profile/profile.component.ts","ng://@soushians/user/lib/profile-view/profile-container/profile-container.component.ts","ng://@soushians/user/lib/user.module.ts","ng://@soushians/user/lib/user.routing-module.ts","ng://@soushians/user/lib/services/user.facade-service.ts","ng://@soushians/user/lib/models/user-outlets.enum.ts"],"names":["UserModel","this","Roles","Groups","MODULE_DEFAULT_CONFIG","server","env","production","frontend_server","endpoints","changePassword","editProfile","getAccountInfo","profileInformation","forms","profile_edit","dashboardLinks","responseToUserInfo","user$","mapUserDisplayName","pipe","map","user","Username","MODULE_CONFIG_TOKEN","InjectionToken","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","UserConfigurationService","configFile","store","_this","config$","BehaviorSubject","_config","select","getUserModuleConfig","subscribe","userConfig","Config","Injectable","args","providedIn","Inject","Store","GetProfile","type","ProfileViewActionTypes","GetProfileStart","GetProfileSucceed","payload","GetProfileFailed","USER_SELECTED","REFRESH_USER_INFO","RefreshUserInfoAction","UserActionTypes","initialState","loaded","data","userReducer","state","action","ProfileViewModel","EditProfile_ApiModel","Request","initValue","keys","forEach","getRequestBody","FormGroup","FormControl","Validators","minLength","required","Response","_super","__extends","__","constructor","create","tslib_1.__extends","Email","extractData","Result","User","UserService","http","configurationService","config","setTimeout","dispatch","filter","take","combineLatest","getUser","_a","_b","undefined","switchMap","get","stringTemplate","let","response","_user","Role","catchError","err","of","model","put","getInfo","is_role","role","indexOf","HttpClient","EditProfile","EditProfileActionTypes","EditProfileStart","EditProfileSucceed","EditProfileFailed","EditProfileEffects","actions$","router","service","EditProfileRequest$","ofType","RequestEditProfileLink$","res","goToView$","navigate","Actions","Router","Effect","ProfileViewEffects","userService","ProfileRequest$","getProfile$","refreshUserInfo$","UserEffects","getAccountInfo$","SignInActionTypes","SIGNIN_SUCCEED","signout$","SIGNOUT","numberOfRequested","lastRequestedTime","disable","reducer","initialState$1","ResetPasswordRequestActionTypes","Date","now","toString","ChangePassword","ChangePasswordActionTypes","status","initialState$2","initialState$3","Search","SearchActionTypes","initialState$4","ChangePasswordModel","UserReducers","userReducer.userReducer","resetPasswordRequest","resetPasswordRequestReducer.reducer","changePassword.reducer","searchView","searchReducer.reducer","editProfileReducer.reducer","selectFeatureState","createFeatureSelector","getUserInforamtionStatus","createSelector","selectResetPasswordRequestState","selectUserInformaionState","_getAccountInfo","selectSearchState","getSearchStatus","SearchComponent","formGroup","userDataLoaded$","userNotFound$","FeatureReducer.getAccountInfo","userStatus$","FeatureReducer.getSearchStatus","ngOnInit","includes","search","valid","Component","selector","template","ChangePasswordComponent","submited","EventEmitter","submit","emit","Input","Output","ProfileEditComponent","form","goback","DashboardLinksComponent","userConfigurationService","links$","links","title","route","icon","ngAfterViewInit","ResetPasswordRequestComponent","snackBar","submitted","maximumResendingHappend$","timer$","Observable","timer","takeWhile","isPending","enable","message","getValue","open","duration","MatSnackBar","FeatureContainerComponent","params","ActivatedRoute","Password","Confirm","MatchValidator","ChangePasswordContainerComponent","userInfo","event","ProfileEditContainerComponent","configService","userInforamation$","roles$","getAppConfig","groups","updateProfile","DashboardContainerComponent","ProfileComponent","info","information","k","ProfileContainerComponent","data$","dataStatus$","FeatureReducer.getUserInforamtionStatus","NgsUserModule","forRoot","ngModule","RootNgsUserModule","providers","provide","useValue","NgModule","imports","HttpClientModule","FormsModule","RouterModule","CommonModule","MatExpansionModule","MatSnackBarModule","MatIconModule","MatButtonModule","MatCardModule","MatSelectModule","MatInputModule","MatFormFieldModule","MatTabsModule","FlexLayoutModule","MatRadioModule","ReactiveFormsModule","BrowserAnimationsModule","NgsFormModule","declarations","exports","StoreModule","forFeature","EffectsModule","routes","path","component","children","NgsUserRoutingModule","forChild","UserFacadeService","getDisplayName","ngs_user_profile_view"],"mappings":"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","sourcesContent":["export class UserModel {\r\n\t_id: string;\r\n\t// FirstName: string;\r\n\t// LastName: string;\r\n\t// Username: string;\r\n\tDisplayName: string;\r\n\t// Username: string;\r\n\t// MobileNumber: string;\r\n\t// Sex: string;\r\n\t// Birthdate: string;\r\n\tEmail: string;\r\n\t// IdentificationNo: string;\r\n\t// IdentifierType: string;\r\n\t// RegisterDate: string;\r\n\t// UserType: string;\r\n\tRoles: string[];\r\n\tGroups: string[];\r\n\tconstructor() {\r\n\t\tthis.Roles = [];\r\n\t\tthis.Groups = [];\r\n\t}\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { UserModel } from \"./models/user.model\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nexport interface UserModuleConfig {\r\n\tserver?: string;\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t\tserver: string;\r\n\t};\r\n\tendpoints?: {\r\n\t\t// resetPasswordRequest: string;\r\n\t\tchangePassword?: string;\r\n\t\teditProfile?: string;\r\n\t\tgetAccountInfo?: string;\r\n\t\tprofileInformation?: string;\r\n\t\t// resetPassword: string;\r\n\t};\r\n\tforms?: {\r\n\t\tprofile_edit: string;\r\n\t};\r\n\tdashboardLinks?: {\r\n\t\troute: string;\r\n\t\ticon: string;\r\n\t\ttitle: string;\r\n\t}[];\r\n\tresponseToUserInfo?: (user: Observable<any>) => Observable<UserModel>;\r\n\tmapUserDisplayName?: (user: Observable<any>) => Observable<string>;\r\n}\r\n\r\nexport const MODULE_DEFAULT_CONFIG: UserModuleConfig = {\r\n\tserver: \"frontend_server\",\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"user/module/frontend/server/did/not/set\",\r\n\t\tserver: \"user/module/server/did/not/set\"\r\n\t},\r\n\tendpoints: {\r\n\t\t// resetPasswordRequest: '',\r\n\t\tchangePassword: \"\",\r\n\t\teditProfile: \"\",\r\n\t\tgetAccountInfo: \"\",\r\n\t\tprofileInformation: \"\"\r\n\t\t// resetPassword: '',\r\n\t},\r\n\tforms: {\r\n\t\tprofile_edit: \"\"\r\n\t},\r\n\tdashboardLinks: [],\r\n\tresponseToUserInfo: user$ => user$,\r\n\tmapUserDisplayName: user$ => user$.pipe(map(user => user.Username))\r\n};\r\n\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<UserModuleConfig>(\"UserModuleConfig\");\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, Inject } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\nimport { getUserModuleConfig } from \"@soushians/config\";\r\n\r\nimport { UserModuleConfig, MODULE_CONFIG_TOKEN, MODULE_DEFAULT_CONFIG } from \"../user.config\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class UserConfigurationService {\r\n\tprivate _config: UserModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(this._config);\r\n\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<any>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\tthis.store.select(getUserModuleConfig).subscribe(userConfig => {\r\n\t\t\tif (!userConfig) return;\r\n\t\t\tthis._config = Object.assign({}, this._config, userConfig.Config);\r\n\t\t\tthis.config$.next(this._config);\r\n\t\t});\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { ProfileViewModel } from \"../models/profile-view.model\";\r\n\r\nexport enum ProfileViewActionTypes {\r\n\tGET_PROFILE = \"[USER][PROFILE] GET_PROFILE\",\r\n\tGET_PROFILE_START = \"[USER][PROFILE] GET_PROFILE_START\",\r\n\tGET_PROFILE_SUCCEED = \"[USER][PROFILE] GET_PROFILE_SUCCEED\",\r\n\tGET_PROFILE_FAILED = \"[USER][PROFILE] GET_PROFILE_FAILED\"\r\n}\r\n\r\nexport class GetProfile implements Action {\r\n\treadonly type = ProfileViewActionTypes.GET_PROFILE;\r\n}\r\nexport class GetProfileStart implements Action {\r\n\treadonly type = ProfileViewActionTypes.GET_PROFILE_START;\r\n}\r\nexport class GetProfileSucceed implements Action {\r\n\treadonly type = ProfileViewActionTypes.GET_PROFILE_SUCCEED;\r\n\tconstructor(public payload: ProfileViewModel.Response) {}\r\n}\r\nexport class GetProfileFailed implements Action {\r\n\treadonly type = ProfileViewActionTypes.GET_PROFILE_FAILED;\r\n}\r\n\r\nexport type ProfileViewAction = GetProfile | GetProfileStart | GetProfileSucceed | GetProfileFailed;\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { UserModel } from \"../models/user.model\";\r\n\r\nexport enum UserActionTypes {\r\n\tUSER_SELECTED = \"[USER] USER_SELECTED\",\r\n\tREFRESH_USER_INFO = \"[USER] REFRESH_USER_INFO\"\r\n}\r\n\r\nexport class UserSelectedAction implements Action {\r\n\treadonly type = UserActionTypes.USER_SELECTED;\r\n\tconstructor(public payload: UserModel) {}\r\n}\r\n\r\nexport class RefreshUserInfoAction implements Action {\r\n\treadonly type = UserActionTypes.REFRESH_USER_INFO;\r\n\tconstructor(public payload: UserModel) {}\r\n}\r\n\r\nexport type UserAction = UserSelectedAction | RefreshUserInfoAction;\r\n","import { UserModel } from \"../models/user.model\";\r\nimport { UserAction, UserActionTypes } from \"./user.actions\";\r\n\r\nexport interface State {\r\n\tloaded: boolean;\r\n\tdata: UserModel;\r\n}\r\nexport const initialState: State = {\r\n\tloaded: false,\r\n\tdata: new UserModel()\r\n};\r\n\r\nexport function userReducer(state = initialState, action: UserAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase UserActionTypes.USER_SELECTED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloaded: true,\r\n\t\t\t\tdata: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase UserActionTypes.REFRESH_USER_INFO: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloaded: true,\r\n\t\t\t\tdata: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const getAccountInfo = (state: State) => state.data;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { UserModel } from \"./user.model\";\r\n\r\nexport namespace ProfileViewModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tEmail: string;\r\n\r\n\t\tconstructor(initValue?: ProfileViewModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tUsername: new FormControl(\"\", [ Validators.minLength(8), Validators.required ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response extends UserModel {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t}\r\n\t}\r\n}\r\n","import { HttpRequestBaseModel, HttpResponseBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { UserModel } from \"./user.model\";\r\n\r\nexport namespace EditProfile_ApiModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tEmail: string;\r\n\t\tRoles: string[];\r\n\t\tGroups: string[];\r\n\r\n\t\tconstructor(initValue: Partial<Request> = {} as Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tEmail: new FormControl(null, [ Validators.required ]),\r\n\t\t\t\tRoles: new FormControl(null, [ Validators.required ]),\r\n\t\t\t\tGroups: new FormControl(null, [ Validators.required ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response implements HttpResponseBaseModel<Response> {\r\n\t\tResult: { User: UserModel };\r\n\t\tconstructor(initValue: Response = {} as Response) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\t\textractData() {\r\n\t\t\treturn this.Result.User;\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, filter, take, switchMap, combineLatest, catchError } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { stringTemplate } from \"@soushians/shared\";\r\nimport { getUser } from \"@soushians/authentication\";\r\n\r\nimport { UserConfigurationService } from \"./user-configuration.service\";\r\nimport { GetProfile } from \"../profile-view/profile-view.actions\";\r\nimport { getAccountInfo } from \"../dashboard/account.reducer\";\r\nimport { UserModuleConfig } from \"../user.config\";\r\nimport { ProfileViewModel } from \"../models/profile-view.model\";\r\nimport { UserModel } from \"../models/user.model\";\r\nimport { EditProfile_ApiModel } from \"../models/profile-edit.model\";\r\nimport { of } from \"rxjs\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class UserService {\r\n\tconfig: UserModuleConfig;\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<any>,\r\n\t\tprivate configurationService: UserConfigurationService\r\n\t) {\r\n\t\tthis.configurationService.config$.subscribe(config => (this.config = config));\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.store.dispatch(new GetProfile());\r\n\t\t}, 999);\r\n\t}\r\n\r\n\tgetAccountInfo(): Observable<ProfileViewModel.Response> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter(config => config.endpoints.profileInformation != \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tcombineLatest(this.store.select(getUser)),\r\n\t\t\tfilter(([config, user]: [UserModuleConfig, any]) => user != undefined),\r\n\t\t\tswitchMap(([config, user]: [UserModuleConfig, any]) => {\r\n\t\t\t\treturn this.http\r\n\t\t\t\t\t.get<any>(\r\n\t\t\t\t\t\tstringTemplate(config.env[config.server] + config.endpoints.profileInformation, {\r\n\t\t\t\t\t\t\tuser: user || {}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.let(config.responseToUserInfo)\r\n\t\t\t\t\t.pipe(\r\n\t\t\t\t\t\tmap((response: UserModel) => {\r\n\t\t\t\t\t\t\tconst _user: any = Object.assign({}, response);\r\n\t\t\t\t\t\t\tif (_user.Role) {\r\n\t\t\t\t\t\t\t\t_user.Roles = [_user.Role];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn _user;\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tcatchError(err => of(false))\r\n\t\t\t\t\t);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\teditProfile(data: EditProfile_ApiModel.Request): Observable<UserModel> {\r\n\t\tconst model = new EditProfile_ApiModel.Request(data);\r\n\t\treturn this.http\r\n\t\t\t.put<EditProfile_ApiModel.Response>(\r\n\t\t\t\tstringTemplate(this.config.env[this.config.server] + this.config.endpoints.editProfile, model),\r\n\t\t\t\tmodel.getRequestBody()\r\n\t\t\t)\r\n\t\t\t.pipe(map(response => new EditProfile_ApiModel.Response(response).extractData()));\r\n\t}\r\n\t// TODO: remove\r\n\tgetInfo(data: ProfileViewModel.Request): Observable<any> {\r\n\t\tconst model = new ProfileViewModel.Request(data);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ProfileViewModel.Response>(\r\n\t\t\t\tstringTemplate(this.config.env[this.config.server] + this.config.endpoints.getAccountInfo, model)\r\n\t\t\t)\r\n\t\t\t.pipe(map(response => response));\r\n\t}\r\n\r\n\tis_role(role: string): Observable<boolean> {\r\n\t\treturn this.store\r\n\t\t\t.select(getAccountInfo)\r\n\t\t\t.pipe(filter(user => user && user.Roles != undefined), take(1), map(user => user.Roles.indexOf(role) > -1));\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { UserModel } from \"../models/user.model\";\r\nimport { EditProfile_ApiModel } from \"../models/profile-edit.model\";\r\n\r\nexport enum EditProfileActionTypes {\r\n\tEDIT_PROFILE = \"[USER][PASSWORD] EDIT_PROFILE\",\r\n\tEDIT_PROFILE_START = \"[USER][PASSWORD] EDIT_PROFILE_START\",\r\n\tEDIT_PROFILE_SUCCEED = \"[USER][PASSWORD] EDIT_PROFILE_SUCCEED\",\r\n\tEDIT_PROFILE_FAILED = \"[USER][PASSWORD] EDIT_PROFILE_FAILED\"\r\n}\r\n\r\nexport class EditProfile implements Action {\r\n\treadonly type = EditProfileActionTypes.EDIT_PROFILE;\r\n\tconstructor(public payload: EditProfile_ApiModel.Request) {}\r\n}\r\nexport class EditProfileStart implements Action {\r\n\treadonly type = EditProfileActionTypes.EDIT_PROFILE_START;\r\n\tconstructor(public payload: EditProfile_ApiModel.Request) {}\r\n}\r\nexport class EditProfileSucceed implements Action {\r\n\treadonly type = EditProfileActionTypes.EDIT_PROFILE_SUCCEED;\r\n\tconstructor(public payload: UserModel) {}\r\n}\r\nexport class EditProfileFailed implements Action {\r\n\treadonly type = EditProfileActionTypes.EDIT_PROFILE_FAILED;\r\n}\r\n\r\nexport type EditProfileAction = EditProfile | EditProfileStart | EditProfileSucceed | EditProfileFailed;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { map, catchError, switchMap } from \"rxjs/operators\";\r\n\r\nimport { UserService } from \"../services/user.service\";\r\nimport { EditProfile_ApiModel } from \"../models/profile-edit.model\";\r\nimport {\r\n\tEditProfileActionTypes,\r\n\tEditProfileStart,\r\n\tEditProfileSucceed,\r\n\tEditProfileFailed\r\n} from \"./edit-profile.actions\";\r\nimport { GetProfile } from \"../profile-view/profile-view.actions\";\r\n\r\n@Injectable()\r\nexport class EditProfileEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private service: UserService) {}\r\n\r\n\t@Effect()\r\n\tEditProfileRequest$ = this.actions$\r\n\t\t.ofType(EditProfileActionTypes.EDIT_PROFILE)\r\n\t\t.pipe(map(action => action.payload), map(data => new EditProfileStart(data)));\r\n\r\n\t@Effect()\r\n\tRequestEditProfileLink$ = this.actions$\r\n\t\t.ofType(EditProfileActionTypes.EDIT_PROFILE_START)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap((data: EditProfile_ApiModel.Request) => this.service.editProfile(data)),\r\n\t\t\tmap(res => new EditProfileSucceed(res)),\r\n\t\t\tcatchError(() => of(new EditProfileFailed()))\r\n\t\t);\r\n\t// .switchMap((data: EditProfile_ApiModel.Request) => {\r\n\t// \treturn this.service\r\n\t// \t\t.editProfile(data)\r\n\t// \t\t.map((res) => new EditProfileSucceed(res))\r\n\t// \t\t.catch(() => of(new EditProfileFailed()));\r\n\t// });\r\n\r\n\t@Effect()\r\n\tgoToView$ = this.actions$.ofType(EditProfileActionTypes.EDIT_PROFILE_SUCCEED).pipe(\r\n\t\tmap(() => {\r\n\t\t\tthis.router.navigate([ \"/user/profile\" ]);\r\n\t\t\treturn new GetProfile();\r\n\t\t})\r\n\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\n\r\nimport { UserService } from \"../services/user.service\";\r\nimport { EditProfile_ApiModel } from \"../models/profile-edit.model\";\r\nimport { ProfileViewActionTypes, GetProfileStart, GetProfileSucceed, GetProfileFailed } from \"./profile-view.actions\";\r\nimport { RefreshUserInfoAction } from \"../dashboard/user.actions\";\r\n\r\n@Injectable()\r\nexport class ProfileViewEffects {\r\n\tconstructor(private actions$: Actions<any>, private userService: UserService) { }\r\n\r\n\t@Effect()\r\n\tProfileRequest$ = this.actions$\r\n\t\t.ofType(ProfileViewActionTypes.GET_PROFILE)\r\n\t\t.pipe(map(action => action.payload), map(data => new GetProfileStart()));\r\n\r\n\t@Effect()\r\n\tgetProfile$ = this.actions$\r\n\t\t.ofType(ProfileViewActionTypes.GET_PROFILE_START)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap((data: EditProfile_ApiModel.Request) =>\r\n\t\t\t\tthis.userService\r\n\t\t\t\t\t.getAccountInfo()\r\n\t\t\t\t\t.pipe(map(res => new GetProfileSucceed(res)), catchError(() => of(new GetProfileFailed())))\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t@Effect()\r\n\trefreshUserInfo$ = this.actions$\r\n\t\t.ofType(ProfileViewActionTypes.GET_PROFILE_SUCCEED)\r\n\t\t.pipe(map(action => action.payload), map(data => new RefreshUserInfoAction(data)));\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { of } from \"rxjs\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { SignInActionTypes } from \"@soushians/authentication\";\r\n\r\nimport { UserService } from \"../services/user.service\";\r\nimport { GetProfile, GetProfileSucceed } from \"../profile-view/profile-view.actions\";\r\nimport { RefreshUserInfoAction } from \"../dashboard/user.actions\";\r\nimport { UserModel } from \"../models/user.model\";\r\n\r\n@Injectable()\r\nexport class UserEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private service: UserService) {}\r\n\r\n\t// @Effect()\r\n\t// updateProfileInformation$ = this.actions$.ofType(SignInActionTypes.SIGNIN_SUCCEED).pipe(\r\n\t// \tmap(action => action.payload),\r\n\t// \tmap(user => {\r\n\t// \t\treturn new GetProfileSucceed(user);\r\n\t// \t})\r\n\t// );\r\n\t@Effect()\r\n\tgetAccountInfo$ = this.actions$.ofType(SignInActionTypes.SIGNIN_SUCCEED).pipe(\r\n\t\tmap(() => {\r\n\t\t\treturn new GetProfile();\r\n\t\t})\r\n\t);\r\n\t@Effect()\r\n\tsignout$ = this.actions$\r\n\t\t.ofType(SignInActionTypes.SIGNOUT)\r\n\t\t.pipe(map(() => new RefreshUserInfoAction({} as UserModel)));\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { ResetPasswordRequestModel } from \"../models/reset-password-request.model\";\r\n\r\nexport enum ResetPasswordRequestActionTypes {\r\n\tGET_RESET_PASSWORD_LINK = \"[USER][PASSWORD] GET_RESET_PASSWORD_LINK\",\r\n\tRESET_PASSWORD_LINK_REQUEST_START = \"[USER][PASSWORD] RESET_PASSWORD_LINK_REQUEST_START\",\r\n\tRESET_PASSWORD_LINK_REQUEST_SUCCEED = \"[USER][PASSWORD] RESET_PASSWORD_LINK_REQUEST_SUCCEED\",\r\n\tRESET_PASSWORD_LINK_REQUEST_FAILED = \"[USER][PASSWORD] RESET_PASSWORD_LINK_REQUEST_FAILED\",\r\n\tDISABLE_GET_LINK = \"[USER][PASSWORD] DISABLE_GET_LINK\",\r\n\tENABLE_GET_LINK = \"[USER][PASSWORD] ENABLE_GET_LINK\",\r\n\tMAXIMUM_TRY_HAPPEND = \"[USER][PASSWORD] MAXIMUM_TRY_HAPPEND\",\r\n\tPASSWORD_CHANGED_SUCCEED = \"[USER][PASSWORD] PASSWORD_CHANGED_SUCCEED\",\r\n\tPASSWORD_CHANGED_FAILED = \"[USER][PASSWORD] PASSWORD_CHANGED_FAILED\"\r\n}\r\n\r\nexport class GetResetPasswordLink implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.GET_RESET_PASSWORD_LINK;\r\n\tconstructor(public payload: ResetPasswordRequestModel.Request) {}\r\n}\r\nexport class ResetPasswordLinkRequestStart implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_START;\r\n\tconstructor(public payload: ResetPasswordRequestModel.Request) {}\r\n}\r\nexport class ResetPasswordLinkRequestSucceed implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_SUCCEED;\r\n\tconstructor() {}\r\n}\r\nexport class ResetPasswordLinkRequestFailed implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_FAILED;\r\n\tconstructor() {}\r\n}\r\nexport class DisableGetLink implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.DISABLE_GET_LINK;\r\n}\r\nexport class EnableGetLink implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.ENABLE_GET_LINK;\r\n}\r\nexport class MaximumTryHappend implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.MAXIMUM_TRY_HAPPEND;\r\n}\r\nexport class PasswordChangedSucceed implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.PASSWORD_CHANGED_SUCCEED;\r\n}\r\nexport class PasswordChangedFailed implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.PASSWORD_CHANGED_FAILED;\r\n\tconstructor(public payload: string) {}\r\n}\r\n\r\nexport type ResetPasswordRequestAction =\r\n\t| GetResetPasswordLink\r\n\t| ResetPasswordLinkRequestStart\r\n\t| ResetPasswordLinkRequestFailed\r\n\t| DisableGetLink\r\n\t| ResetPasswordLinkRequestSucceed\r\n\t| EnableGetLink\r\n\t| MaximumTryHappend\r\n\t| PasswordChangedSucceed\r\n\t| PasswordChangedFailed;\r\n","import { ResetPasswordRequestAction, ResetPasswordRequestActionTypes } from \"./reset-password-request.actions\";\r\n\r\nexport interface State {\r\n\tnumberOfRequested: number;\r\n\tlastRequestedTime: string;\r\n\tdisable: boolean;\r\n}\r\nexport const initialState: State = {\r\n\tnumberOfRequested: 0,\r\n\tlastRequestedTime: null,\r\n\tdisable: false\r\n};\r\nexport function reducer(state = initialState, action: ResetPasswordRequestAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase ResetPasswordRequestActionTypes.GET_RESET_PASSWORD_LINK: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnumberOfRequested: state.numberOfRequested + 1,\r\n\t\t\t\tlastRequestedTime: Date.now().toString()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ResetPasswordRequestActionTypes.DISABLE_GET_LINK: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdisable: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ResetPasswordRequestActionTypes.ENABLE_GET_LINK: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdisable: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getNumberOfRequeseted = (state: State) => state.numberOfRequested;\r\nexport var getStatus = (state: State) => state.disable;\r\n","import { Action } from \"@ngrx/store\";\r\nimport { ChangePasswordModel } from \"../models/change-password.model\";\r\n\r\nexport enum ChangePasswordActionTypes {\r\n\tCHANGE_PASSWORD = \"[USER][PASSWORD] CHANGE_PASSWORD\",\r\n\tPASSWORD_CHANGED_START = \"[USER][PASSWORD] PASSWORD_CHANGED_START\",\r\n\tPASSWORD_CHANGED_SUCCEED = \"[USER][PASSWORD] PASSWORD_CHANGED_SUCCEED\",\r\n\tPASSWORD_CHANGED_FAILED = \"[USER][PASSWORD] PASSWORD_CHANGED_FAILED\"\r\n}\r\n\r\nexport class ChangePassword implements Action {\r\n\treadonly type = ChangePasswordActionTypes.CHANGE_PASSWORD;\r\n\tconstructor(public payload: ChangePasswordModel.Request) {}\r\n}\r\nexport class ChangePasswordStart implements Action {\r\n\treadonly type = ChangePasswordActionTypes.PASSWORD_CHANGED_START;\r\n\tconstructor(public payload: ChangePasswordModel.Request) {}\r\n}\r\nexport class ChangePasswordSucceed implements Action {\r\n\treadonly type = ChangePasswordActionTypes.PASSWORD_CHANGED_SUCCEED;\r\n\tconstructor(public payload: ChangePasswordModel.Response) {}\r\n}\r\nexport class ChangePasswordFailed implements Action {\r\n\treadonly type = ChangePasswordActionTypes.PASSWORD_CHANGED_FAILED;\r\n}\r\n\r\nexport type ChangePasswordAction = ChangePassword | ChangePasswordStart | ChangePasswordSucceed | ChangePasswordFailed;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\nimport { ChangePasswordAction, ChangePasswordActionTypes } from \"./change-password.actions\";\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\"\r\n};\r\nexport function reducer(state = initialState, action: ChangePasswordAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase ChangePasswordActionTypes.CHANGE_PASSWORD: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"dirty\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ChangePasswordActionTypes.PASSWORD_CHANGED_START: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ChangePasswordActionTypes.PASSWORD_CHANGED_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"succeed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ChangePasswordActionTypes.PASSWORD_CHANGED_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn initialState;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getStatus = (state: State) => state.status;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\nimport { EditProfileAction, EditProfileActionTypes } from \"./edit-profile.actions\";\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\"\r\n};\r\nexport function reducer(state = initialState, action: EditProfileAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase EditProfileActionTypes.EDIT_PROFILE: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"dirty\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditProfileActionTypes.EDIT_PROFILE_START: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditProfileActionTypes.EDIT_PROFILE_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"succeed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditProfileActionTypes.EDIT_PROFILE_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport let getStatus = (state: State) => state.status;\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { ProfileViewModel } from \"../models/profile-view.model\";\r\n\r\nexport enum SearchActionTypes {\r\n\tSEARCH = \"[USER][SEARCH] SEARCH\",\r\n\tSEARCH_START = \"[USER][SEARCH] SEARCH_START\",\r\n\tSEARCH_SUCCEED = \"[USER][SEARCH] SEARCH_SUCCEED\",\r\n\tSEARCH_FAILED = \"[USER][SEARCH] SEARCH_FAILED\",\r\n\tCLEAR_SEARCHED_USER = \"[USER][SEARCH] CLEAR_SEARCHED_USER\"\r\n}\r\n\r\nexport class Search implements Action {\r\n\treadonly type = SearchActionTypes.SEARCH;\r\n\tconstructor(public payload: ProfileViewModel.Request) {}\r\n}\r\nexport class SearchStartAction implements Action {\r\n\treadonly type = SearchActionTypes.SEARCH_START;\r\n\tconstructor(public payload: ProfileViewModel.Request) {}\r\n}\r\nexport class SearchSucceed implements Action {\r\n\treadonly type = SearchActionTypes.SEARCH_SUCCEED;\r\n\tconstructor(public payload: ProfileViewModel.Response) {}\r\n}\r\nexport class SearchFailed implements Action {\r\n\treadonly type = SearchActionTypes.SEARCH_FAILED;\r\n}\r\nexport class ClearSearchedUser implements Action {\r\n\treadonly type = SearchActionTypes.CLEAR_SEARCHED_USER;\r\n}\r\n\r\nexport type SearchAction = Search | SearchStartAction | SearchSucceed | SearchFailed | ClearSearchedUser;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\nimport { ProfileViewModel } from \"../models/profile-view.model\";\r\nimport { SearchActionTypes, SearchAction } from \"./search.actions\";\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n\tdata: ProfileViewModel.Response;\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\",\r\n\tdata: {} as ProfileViewModel.Response\r\n};\r\nexport function reducer(state = initialState, action: SearchAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase SearchActionTypes.SEARCH: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"dirty\",\r\n\t\t\t\tdata: new ProfileViewModel.Response()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SearchActionTypes.SEARCH_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SearchActionTypes.SEARCH_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"succeed\",\r\n\t\t\t\tdata: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SearchActionTypes.SEARCH_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SearchActionTypes.CLEAR_SEARCHED_USER: {\r\n\t\t\treturn initialState;\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getStatus = (state: State) => state.status;\r\nexport var getAccountInfo = (state: State) => state.data;\r\n","import { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { MatchValidator } from \"@soushians/shared\";\r\n\r\nexport namespace ChangePasswordModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tUsername: string;\r\n\t\tPassword: string;\r\n\r\n\t\tconstructor(initValue: ChangePasswordModel.Request = {} as ChangePasswordModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {\r\n\t\t\t\tPassword: this.Password\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tPassword: new FormControl(null, [ Validators.required, Validators.minLength(7) ]),\r\n\t\t\t\tConfirm: new FormControl(null, [ Validators.required, MatchValidator(\"Password\") ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { createSelector, createFeatureSelector, MemoizedSelector } from \"@ngrx/store\";\r\nimport * as userReducer from \"./dashboard/account.reducer\";\r\nimport { getAccountInfo as _getAccountInfo } from \"./dashboard/account.reducer\";\r\nimport * as resetPasswordRequestReducer from \"./reset-password/reset-password-request.reducer\";\r\nimport * as changePassword from \"./change-password/change-password.reducer\";\r\nimport * as editProfileReducer from \"./profile-edit/edit-profile.reducer\";\r\nimport * as searchReducer from \"./search-account/search.reducer\";\r\nimport { UserModel } from \"./models/user.model\";\r\nimport { responseStatusTypes } from \"@soushians/shared\";\r\n\r\nexport interface UserState {\r\n\tuser: userReducer.State;\r\n\tresetPasswordRequest: resetPasswordRequestReducer.State;\r\n\tsearchView: searchReducer.State;\r\n\tchangePassword: changePassword.State;\r\n\teditProfile: editProfileReducer.State;\r\n}\r\n\r\nexport const UserReducers = {\r\n\tuser: userReducer.userReducer,\r\n\tresetPasswordRequest: resetPasswordRequestReducer.reducer,\r\n\tchangePassword: changePassword.reducer,\r\n\tsearchView: searchReducer.reducer,\r\n\teditProfile: editProfileReducer.reducer\r\n};\r\n\r\nexport interface AppState {\r\n\t\"user\": UserState;\r\n}\r\n\r\n//#region selectors\r\n\r\nexport const selectFeatureState = createFeatureSelector<UserState>(\"user\");\r\n\r\nexport const getUserInforamtionStatus = createSelector(selectFeatureState, (state: UserState) => state.user.loaded);\r\nexport const isSignedIn = createSelector(selectFeatureState, (state: UserState) => state.user.loaded);\r\n\r\nexport const selectResetPasswordRequestState = createSelector(\r\n\tselectFeatureState,\r\n\t(state: UserState) => state.resetPasswordRequest\r\n);\r\nexport const getNumberOfRequeseted = createSelector(\r\n\tselectResetPasswordRequestState,\r\n\tresetPasswordRequestReducer.getNumberOfRequeseted\r\n);\r\nexport const getResetPasswordRequestStatus = createSelector(\r\n\tselectResetPasswordRequestState,\r\n\tresetPasswordRequestReducer.getStatus\r\n);\r\n\r\n//#region user\r\nexport const selectUserInformaionState = createSelector(selectFeatureState, (state: UserState) => state.user);\r\nexport const getAccountInfo = createSelector(selectUserInformaionState, _getAccountInfo);\r\n//#endregion\r\n\r\n//#region search\r\nexport const selectSearchState = createSelector(selectFeatureState, (state: UserState) => state.searchView);\r\nexport const getSearchStatus = createSelector(selectSearchState, searchReducer.getStatus);\r\n//#endregion\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { responseStatusTypes } from \"@soushians/shared\";\r\n\r\nimport { ProfileViewModel } from \"../../models/profile-view.model\";\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { Search } from \"../search.actions\";\r\n\r\n@Component({\r\n\tselector: \"search\",\r\n\ttemplateUrl: \"./search.component.html\",\r\n\tstyleUrls: [ \"./search.component.scss\" ]\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\tuser: Observable<ProfileViewModel.Response>;\r\n\tuserStatus$: Observable<responseStatusTypes>;\r\n\tformGroup = ProfileViewModel.Request.formGroup;\r\n\tuserDataLoaded$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\tuserNotFound$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\tconstructor(private store: Store<FeatureReducer.AppState>) {\r\n\t\tthis.user = this.store.select(FeatureReducer.getAccountInfo);\r\n\t\tthis.userStatus$ = this.store.select(FeatureReducer.getSearchStatus);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.userStatus$.subscribe(value => this.userDataLoaded$.next(!\"pristine|dirty|pending\".includes(value)));\r\n\t}\r\n\tsearch() {\r\n\t\tif (!this.formGroup.valid) return;\r\n\t\tthis.store.dispatch(new Search(this.formGroup.value));\r\n\t}\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Component({\r\n\tselector: \"user-change-password\",\r\n\ttemplateUrl: \"./change-password.component.html\",\r\n\tstyleUrls: [ \"./change-password.component.scss\" ]\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\t@Input() formGroup: FormGroup;\r\n\t@Output() submited = new EventEmitter();\r\n\r\n\tngOnInit() {}\r\n\r\n\tsubmit() {}\r\n\r\n\tconstructor() {}\r\n\r\n\tchangePassword() {\r\n\t\tif (!this.formGroup.valid) return;\r\n\t\tthis.submited.emit(this.formGroup.value);\r\n\t}\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\r\n\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { ConfigModel } from \"@soushians/config\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\n\r\n@Component({\r\n\tselector: \"profile-edit\",\r\n\ttemplateUrl: \"./profile-edit.component.html\"\r\n})\r\nexport class ProfileEditComponent implements OnInit {\r\n\t@Output() submited = new EventEmitter();\r\n\t@Input() userInfo: any;\r\n\t@Input() formId: string;\r\n\t@Input(\"roles\") roles$: Observable<string[]>;\r\n\t@Input() groups: string[];\r\n\tconstructor(private router: Router) {}\r\n\r\n\tngOnInit() {}\r\n\teditProfile(form: FormGroup) {\r\n\t\tif (!form.valid) return;\r\n\t\tthis.submited.emit(form.value);\r\n\t}\r\n\tgoback() {\r\n\t\tthis.router.navigate([ \"..\" ]);\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, AfterViewInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { UserConfigurationService } from \"../../services/user-configuration.service\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\tselector: \"user-dashboard-links\",\r\n\ttemplateUrl: \"./dashboard-links.component.html\",\r\n\tstyleUrls: [ \"./dashboard-links.component.scss\" ]\r\n})\r\nexport class DashboardLinksComponent implements AfterViewInit {\r\n\tlinks: any[];\r\n\tlinks$: Observable<any[]>;\r\n\tconstructor(private userConfigurationService: UserConfigurationService, private store: Store<any>) {\r\n\t\tthis.links$ = this.userConfigurationService.config$.pipe(map(data => data.dashboardLinks));\r\n\t\tthis.links = [\r\n\t\t\t{\r\n\t\t\t\ttitle: \"ÙØ´Ø§ÙØ¯Ù Ø­Ø³Ø§Ø¨ Ú©Ø§Ø±Ø¨Ø±Û\",\r\n\t\t\t\troute: \"/user/panel/profile\",\r\n\t\t\t\t// description: \"ÙÙØ±Ù Ø§ÛÙ¾Ø³ÙÙ ÙØªÙ Ø³Ø§Ø®ØªÚ¯Û Ø¨Ø§ ØªÙÙÛØ¯ Ø³Ø§Ø¯Ú¯Û ÙØ§ÙÙÙÙÙ\",\r\n\t\t\t\ticon: \"person\"\r\n\t\t\t}\r\n\t\t\t// ,\r\n\t\t\t// {\r\n\t\t\t// \troute: \"/user/panel/password/change\",\r\n\t\t\t// \ttitle: \"ØªØºÛÛØ± Ú©ÙÙÙ Ø¹Ø¨ÙØ±\",\r\n\t\t\t// \t// description: \"ÙÙØ±Ù Ø§ÛÙ¾Ø³ÙÙ ÙØªÙ Ø³Ø§Ø®ØªÚ¯Û Ø¨Ø§ ØªÙÙÛØ¯ Ø³Ø§Ø¯Ú¯Û ÙØ§ÙÙÙÙÙ\",\r\n\t\t\t// \ticon: \"security\"\r\n\t\t\t// }\r\n\t\t];\r\n\t}\r\n\r\n\tngAfterViewInit() {}\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { ResetPasswordRequestModel } from \"../../models/reset-password-request.model\";\r\nimport { MatSnackBar } from \"@angular/material\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { map, takeWhile } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\tselector: \"user-reset-password-request\",\r\n\ttemplateUrl: \"./reset-password-request.component.html\",\r\n\tstyleUrls: [ \"./reset-password-request.component.scss\" ]\r\n})\r\nexport class ResetPasswordRequestComponent implements OnInit {\r\n\t@Output() submitted = new EventEmitter<ResetPasswordRequestModel.Request>();\r\n\r\n\t@Input() formGroup: FormGroup;\r\n\t@Input() numberOfRequested: Observable<number>;\r\n\t@Input() canRequestPin: Observable<boolean>;\r\n\t@Input()\r\n\tset pending(isPending: boolean) {\r\n\t\tif (isPending) {\r\n\t\t\tthis.formGroup.disable();\r\n\t\t}\r\n\r\n\t\tthis.formGroup.enable();\r\n\t}\r\n\r\n\ttimer$: Observable<number>;\r\n\tmaximumResendingHappend$ = new BehaviorSubject(false);\r\n\r\n\tconstructor(public snackBar: MatSnackBar) {\r\n\t\tthis.timer$ = Observable.timer(0, 100).pipe(\r\n\t\t\tmap(i => i + 1),\r\n\t\t\ttakeWhile(i => i * 100 <= 3000),\r\n\t\t\tmap(i => 3000 - i * 100)\r\n\t\t);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.numberOfRequested.subscribe(data => {\r\n\t\t\tif (data > 2) {\r\n\t\t\t\tthis.maximumResendingHappend$.next(true);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tif (this.formGroup.valid) {\r\n\t\t\tthis.submitted.emit(this.formGroup.value);\r\n\t\t\tlet message = this.maximumResendingHappend$.getValue()\r\n\t\t\t\t? \"Ø¹Ø¯Ù Ø§ÙÚ©Ø§Ù ...\"\r\n\t\t\t\t: \"Ù¾ÛØ§ÙÚ© Ø¬Ø¯ÛØ¯ Ø¨Ø±Ø§Û Ø´ÙØ§ Ø§Ø±Ø³Ø§Ù Ú¯Ø±Ø¯ÛØ¯.\";\r\n\t\t\tthis.snackBar.open(message, \"\", {\r\n\t\t\t\tduration: 3000\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { ProfileViewModel } from \"../../models/profile-view.model\";\r\nimport { Search } from \"../../search-account/search.actions\";\r\n\r\n@Component({\r\n\ttemplate: \"<router-outlet></router-outlet>\"\r\n})\r\nexport class FeatureContainerComponent {\r\n\tconstructor(private route: ActivatedRoute, private store: Store<FeatureReducer.AppState>) {\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tlet model = new ProfileViewModel.Request({ Email: params.Email } as ProfileViewModel.Request);\r\n\t\t\tthis.store.dispatch(new Search(model));\r\n\t\t});\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { ChangePasswordModel } from \"../../models/change-password.model\";\r\n\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { ChangePassword } from \"../change-password.actions\";\r\n\r\n@Component({\r\n\ttemplate: `<user-change-password\r\n                (submited)='changePassword($event)'\r\n                [formGroup]=\"formGroup\"\r\n              ></user-change-password>`\r\n})\r\nexport class ChangePasswordContainerComponent implements OnInit {\r\n\tformGroup = ChangePasswordModel.Request.formGroup;\r\n\tChangePasswordModel = new ChangePasswordModel.Request();\r\n\tconstructor(private route: ActivatedRoute, private store: Store<FeatureReducer.AppState>) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.store.select(FeatureReducer.getAccountInfo).subscribe(userInfo => {\r\n\t\t\tif (!userInfo) return;\r\n\t\t\t// TODO:\r\n\t\t\t// this.ChangePasswordModel.Username = userInfo.Username;\r\n\t\t});\r\n\t}\r\n\tchangePassword(event) {\r\n\t\tthis.ChangePasswordModel.Password = this.formGroup.get(\"Password\").value;\r\n\r\n\t\tthis.store.dispatch(new ChangePassword(this.ChangePasswordModel));\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { getAppConfig } from \"@soushians/config\";\r\n\r\nimport { UserModel } from \"../../models/user.model\";\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { EditProfile } from \"../edit-profile.actions\";\r\nimport { UserConfigurationService } from \"../../services/user-configuration.service\";\r\nimport { UserModuleConfig } from \"../../user.config\";\r\nimport { map, filter } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\tselector: \"profile-edit-contianer\",\r\n\ttemplate: `<profile-edit\r\n                (submited)='updateProfile($event)'\r\n                [userInfo]=\"userInforamation$ | async\"\r\n                [roles]=\"roles$\"\r\n\t\t\t\t[groups]=\"groups | async\"\r\n\t\t\t\t[formId]=\"(config$|async)?.forms.profile_edit\"\r\n              ></profile-edit>`\r\n})\r\nexport class ProfileEditContainerComponent implements OnInit {\r\n\tuserInforamation$: Observable<UserModel>;\r\n\troles$: Observable<string[]>;\r\n\tgroups: Observable<string[]>;\r\n\tconfig$: Observable<UserModuleConfig>;\r\n\r\n\tconstructor(private store: Store<FeatureReducer.AppState>, private configService: UserConfigurationService) {\r\n\t\tthis.userInforamation$ = this.store.select(FeatureReducer.getAccountInfo);\r\n\t\tthis.roles$ = this.store\r\n\t\t\t.select(getAppConfig)\r\n\t\t\t.pipe(filter(config => config != undefined), map(config => config.Config.Roles));\r\n\t\t// TODO:\r\n\t\t// this.groups = this.diagramService.getGroups();\r\n\t\tthis.groups = of([ \"test1\", \"test2\" ]);\r\n\r\n\t\tthis.config$ = this.configService.config$;\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\r\n\tupdateProfile(data) {\r\n\t\tthis.store.dispatch(new EditProfile(data));\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { UserModel } from \"../../models/user.model\";\r\nimport { getAccountInfo } from \"../account.reducer\";\r\n\r\n@Component({\r\n\tselector: \"user-dashboard-container\",\r\n\ttemplateUrl: \"./dashboard.component.html\",\r\n\tstyleUrls: [ \"./dashboard.component.css\" ]\r\n})\r\nexport class DashboardContainerComponent implements OnInit {\r\n\tuser$: Observable<UserModel>;\r\n\t// is_agent : Observable<boolean>;\r\n\tconstructor(private store: Store<any>) {\r\n\t\tthis.user$ = this.store.select(getAccountInfo);\r\n\t\t// this.is_agent = signinService.is_agent();\r\n\t}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { UserModel } from \"../../models/user.model\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\n@Component({\r\n\tselector: \"user-profile\",\r\n\ttemplateUrl: \"./profile.component.html\",\r\n\tstyleUrls: [ \"./profile.component.css\" ]\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\t@Input()\r\n\tset information(information: UserModel) {\r\n\t\tif (!information) return;\r\n\r\n\t\tObject.keys(information).forEach(k => this.info.push([ k, information[k] ]));\r\n\t}\r\n\t@Input() dataStatus$: BehaviorSubject<boolean>;\r\n\tinfo: any[] = [];\r\n\tconstructor() {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { UserModel } from \"../../models/user.model\";\r\n\r\n@Component({\r\n\ttemplate: `<user-profile\r\n                [information]=\"data$ | async\"\r\n                [dataStatus$]='dataStatus$'\r\n            ></user-profile>`\r\n})\r\nexport class ProfileContainerComponent implements OnInit {\r\n\tdata$: Observable<UserModel>;\r\n\tdataStatus$: Observable<boolean>;\r\n\r\n\tconstructor(private store: Store<FeatureReducer.AppState>) {\r\n\t\tthis.data$ = this.store.select(FeatureReducer.getAccountInfo);\r\n\t\tthis.dataStatus$ = this.store.select(FeatureReducer.getUserInforamtionStatus);\r\n\t}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule\r\n} from \"@angular/material\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\n\r\nimport { NgsFormModule } from \"@soushians/form\";\r\n\r\nimport { UserModuleConfig, MODULE_CONFIG_TOKEN } from \"./user.config\";\r\nimport { EditProfileEffects } from \"./profile-edit/edit-profile.effects\";\r\nimport { ProfileViewEffects } from \"./profile-view/profile-view.effects\";\r\nimport { UserEffects } from \"./feature/feature.effects\";\r\nimport { SearchComponent } from \"./search-account/search/search.component\";\r\nimport { ChangePasswordComponent } from \"./change-password/change-password/change-password.component\";\r\nimport { ProfileEditComponent } from \"./profile-edit/profile-edit/profile-edit.component\";\r\nimport { DashboardLinksComponent } from \"./dashboard/dashboard-links/dashboard-links.component\";\r\nimport { ResetPasswordRequestComponent } from \"./reset-password/reset-password-request/reset-password-request.component\";\r\nimport { FeatureContainerComponent } from \"./feature/feature-container/feature-container.component\";\r\nimport { ChangePasswordContainerComponent } from \"./change-password/change-password-container/change-password-container.component\";\r\nimport { ProfileEditContainerComponent } from \"./profile-edit/profile-edit-container/profile-edit-container.component\";\r\nimport { DashboardContainerComponent } from \"./dashboard/dashboard-container/dashboard.component\";\r\nimport { ProfileComponent } from \"./profile-view/profile/profile.component\";\r\nimport { ProfileContainerComponent } from \"./profile-view/profile-container/profile-container.component\";\r\nimport { UserReducers } from \"./user.reducers\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tRouterModule,\r\n\t\tCommonModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSelectModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatRadioModule,\r\n\t\tReactiveFormsModule,\r\n\t\tBrowserAnimationsModule,\r\n\t\tNgsFormModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tSearchComponent,\r\n\t\tProfileComponent,\r\n\t\tChangePasswordComponent,\r\n\t\tProfileEditComponent,\r\n\t\tProfileContainerComponent,\r\n\t\tDashboardLinksComponent,\r\n\t\tResetPasswordRequestComponent,\r\n\t\tFeatureContainerComponent,\r\n\t\tDashboardContainerComponent,\r\n\t\tChangePasswordContainerComponent,\r\n\t\tProfileEditContainerComponent\r\n\t],\r\n\texports: []\r\n})\r\nexport class NgsUserModule {\r\n\tstatic forRoot(config?: UserModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: RootNgsUserModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config } ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsUserModule,\r\n\t\tStoreModule.forFeature(\"user\", UserReducers),\r\n\t\tEffectsModule.forFeature([\r\n\t\t\t// ResetPasswordRequestEffects,\r\n\t\t\tEditProfileEffects,\r\n\t\t\t// ChangePasswordEffects,\r\n\t\t\tProfileViewEffects,\r\n\t\t\t// SearchEffects,\r\n\t\t\tUserEffects\r\n\t\t])\r\n\t]\r\n})\r\nexport class RootNgsUserModule {}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { DashboardContainerComponent } from \"./dashboard/dashboard-container/dashboard.component\";\r\nimport { ProfileContainerComponent } from \"./profile-view/profile-container/profile-container.component\";\r\nimport { ProfileEditContainerComponent } from \"./profile-edit/profile-edit-container/profile-edit-container.component\";\r\n// import { ChangePasswordContainerComponent } from \"./change-password/change-password-container/change-password-container.component\";\r\n// import { SearchComponent } from \"./search-account/search/search.component\";\r\nimport { FeatureContainerComponent } from \"./feature/feature-container/feature-container.component\";\r\nimport { DashboardLinksComponent } from \"./dashboard/dashboard-links/dashboard-links.component\";\r\n\r\nexport const routes: Routes = [\r\n\t{\r\n\t\tpath: \"user/panel\",\r\n\t\tcomponent: DashboardContainerComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"\",\r\n\t\t\t\tcomponent: DashboardLinksComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"profile\",\r\n\t\t\t\tcomponent: ProfileContainerComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"profile/edit\",\r\n\t\t\t\tcomponent: ProfileEditContainerComponent\r\n\t\t\t}\r\n\t\t\t// {\r\n\t\t\t// \tpath: \"password/change\",\r\n\t\t\t// \tcomponent: ChangePasswordContainerComponent\r\n\t\t\t// }\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tpath: \"admin/user\",\r\n\t\tchildren: [\r\n\t\t\t// { path: \"managment\", component: SearchComponent },\r\n\t\t\t{\r\n\t\t\t\tpath: \":Email\",\r\n\t\t\t\tcomponent: FeatureContainerComponent,\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: \"profile-edit\",\r\n\t\t\t\t\t\tcomponent: ProfileEditContainerComponent\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// {\r\n\t\t\t\t\t// \tpath: \"change-password\",\r\n\t\t\t\t\t// \tcomponent: ChangePasswordContainerComponent\r\n\t\t\t\t\t// }\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const NgsUserRoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { getAccountInfo, AppState } from \"../user.reducers\";\r\nimport { UserConfigurationService } from \"./user-configuration.service\";\r\nimport { UserModel } from \"../models/user.model\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class UserFacadeService {\r\n\tconstructor(private store: Store<AppState>, private configService: UserConfigurationService) {}\r\n\tgetDisplayName(): Observable<string> {\r\n\t\treturn this.store.select(getAccountInfo).let(this.configService.config$.getValue().mapUserDisplayName);\r\n\t\t// .pipe(filter(displayName => displayName !== undefined));\r\n\t}\r\n\tgetInfo(): Observable<UserModel> {\r\n\t\treturn this.store.select(getAccountInfo);\r\n\t}\r\n}\r\n","export enum NgsUserModuleOutlets {\r\n\tngs_user_profile_view = \"ngs-user-profile-view\"\r\n}\r\n"]}