{"version":3,"sources":["ng://@soushians/user/lib/models/user.model.ts","ng://@soushians/user/lib/user.config.ts","null","ng://@soushians/user/lib/services/user-configuration.service.ts","ng://@soushians/user/lib/profile-view/profile-view.actions.ts","ng://@soushians/user/lib/dashboard/user.actions.ts","ng://@soushians/user/lib/dashboard/account.reducer.ts","ng://@soushians/user/lib/models/profile-view.model.ts","ng://@soushians/user/lib/models/profile-edit.model.ts","ng://@soushians/user/lib/services/user.service.ts","ng://@soushians/user/lib/profile-edit/edit-profile.actions.ts","ng://@soushians/user/lib/profile-edit/edit-profile.effects.ts","ng://@soushians/user/lib/profile-view/profile-view.effects.ts","ng://@soushians/user/lib/feature/feature.effects.ts","ng://@soushians/user/lib/reset-password/reset-password-request.actions.ts","ng://@soushians/user/lib/reset-password/reset-password-request.reducer.ts","ng://@soushians/user/lib/change-password/change-password.actions.ts","ng://@soushians/user/lib/change-password/change-password.reducer.ts","ng://@soushians/user/lib/profile-edit/edit-profile.reducer.ts","ng://@soushians/user/lib/search-account/search.actions.ts","ng://@soushians/user/lib/search-account/search.reducer.ts","ng://@soushians/user/lib/models/change-password.model.ts","ng://@soushians/user/lib/user.reducers.ts","ng://@soushians/user/lib/search-account/search/search.component.ts","ng://@soushians/user/lib/change-password/change-password/change-password.component.ts","ng://@soushians/user/lib/profile-edit/profile-edit/profile-edit.component.ts","ng://@soushians/user/lib/dashboard/dashboard-links/dashboard-links.component.ts","ng://@soushians/user/lib/reset-password/reset-password-request/reset-password-request.component.ts","ng://@soushians/user/lib/feature/feature-container/feature-container.component.ts","ng://@soushians/user/lib/change-password/change-password-container/change-password-container.component.ts","ng://@soushians/user/lib/profile-edit/profile-edit-container/profile-edit-container.component.ts","ng://@soushians/user/lib/dashboard/dashboard-container/dashboard.component.ts","ng://@soushians/user/lib/profile-view/profile/profile.component.ts","ng://@soushians/user/lib/profile-view/profile-container/profile-container.component.ts","ng://@soushians/user/lib/user.module.ts","ng://@soushians/user/lib/user.routing-module.ts","ng://@soushians/user/lib/services/user.facade-service.ts","ng://@soushians/user/lib/models/user-outlets.enum.ts"],"names":["UserModel","this","Roles","Groups","MODULE_DEFAULT_CONFIG","server","env","production","frontend_server","endpoints","changePassword","editProfile","getAccountInfo","profileInformation","forms","profile_edit","dashboardLinks","responseToUserInfo","user$","mapUserDisplayName","pipe","map","user","Username","MODULE_CONFIG_TOKEN","InjectionToken","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","UserConfigurationService","configFile","store","_this","BehaviorSubject","_config","config$","select","getUserModuleConfig","subscribe","userConfig","Config","Injectable","args","providedIn","Inject","Store","GetProfile","ProfileViewActionTypes","GetProfileStart","GetProfileSucceed","payload","GetProfileFailed","RefreshUserInfoAction","UserActionTypes","REFRESH_USER_INFO","initialState","loaded","data","userReducer","state","action","type","USER_SELECTED","ProfileViewModel","EditProfile_ApiModel","Request","initValue","keys","forEach","getRequestBody","FormGroup","FormControl","Validators","minLength","required","Response","_super","__","constructor","create","tslib_1.__extends","Email","extractData","Result","User","UserService","http","configurationService","config","setTimeout","dispatch","filter","take","combineLatest","getUser","_a","_b","undefined","switchMap","get","stringTemplate","let","response","_user","Role","catchError","err","of","model","put","getInfo","is_role","role","indexOf","HttpClient","EditProfile","EditProfileActionTypes","EditProfileStart","EditProfileSucceed","EditProfileFailed","EditProfileEffects","actions$","router","service","ofType","res","navigate","Actions","Router","Effect","ProfileViewEffects","userService","UserEffects","SignInActionTypes","SIGNIN_SUCCEED","SIGNOUT","numberOfRequested","lastRequestedTime","disable","reducer","initialState$1","ResetPasswordRequestActionTypes","Date","now","toString","ChangePassword","ChangePasswordActionTypes","status","reducer$1","initialState$2","reducer$2","initialState$3","Search","SearchActionTypes","reducer$3","initialState$4","ChangePasswordModel","UserReducers","userReducer.userReducer","resetPasswordRequest","resetPasswordRequestReducer.reducer","changePassword.reducer","searchView","searchReducer.reducer","editProfileReducer.reducer","selectFeatureState","createFeatureSelector","getUserInforamtionStatus","createSelector","selectResetPasswordRequestState","selectUserInformaionState","_getAccountInfo","selectSearchState","getSearchStatus","SearchComponent","formGroup","FeatureReducer.getAccountInfo","userStatus$","FeatureReducer.getSearchStatus","ngOnInit","userDataLoaded$","includes","search","valid","Component","selector","template","styles","ChangePasswordComponent","EventEmitter","submit","submited","emit","Input","Output","ProfileEditComponent","form","goback","DashboardLinksComponent","userConfigurationService","links$","links","title","route","icon","ngAfterViewInit","ResetPasswordRequestComponent","snackBar","timer$","Observable","timer","takeWhile","isPending","enable","maximumResendingHappend$","submitted","message","getValue","open","duration","MatSnackBar","FeatureContainerComponent","params","ActivatedRoute","Password","Confirm","MatchValidator","ChangePasswordContainerComponent","userInfo","event","ProfileEditContainerComponent","configService","userInforamation$","roles$","getAppConfig","groups","updateProfile","DashboardContainerComponent","ProfileComponent","information","k","info","ProfileContainerComponent","data$","dataStatus$","FeatureReducer.getUserInforamtionStatus","NgsUserModule","forRoot","ngModule","RootNgsUserModule","providers","provide","useValue","NgModule","imports","HttpClientModule","FormsModule","RouterModule","CommonModule","MatExpansionModule","MatSnackBarModule","MatIconModule","MatButtonModule","MatCardModule","MatSelectModule","MatInputModule","MatFormFieldModule","MatTabsModule","FlexLayoutModule","MatRadioModule","ReactiveFormsModule","BrowserAnimationsModule","NgsFormModule","declarations","exports","StoreModule","forFeature","EffectsModule","routes","path","component","children","NgsUserRoutingModule","forChild","UserFacadeService","getDisplayName"],"mappings":"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","sourcesContent":["export class UserModel {\r\n\t_id: string;\r\n\t// FirstName: string;\r\n\t// LastName: string;\r\n\t// Username: string;\r\n\tDisplayName: string;\r\n\t// Username: string;\r\n\t// MobileNumber: string;\r\n\t// Sex: string;\r\n\t// Birthdate: string;\r\n\tEmail: string;\r\n\t// IdentificationNo: string;\r\n\t// IdentifierType: string;\r\n\t// RegisterDate: string;\r\n\t// UserType: string;\r\n\tRoles: string[];\r\n\tGroups: string[];\r\n\tconstructor() {\r\n\t\tthis.Roles = [];\r\n\t\tthis.Groups = [];\r\n\t}\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { UserModel } from \"./models/user.model\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nexport interface UserModuleConfig {\r\n\tserver?: string;\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t\tserver: string;\r\n\t};\r\n\tendpoints?: {\r\n\t\t// resetPasswordRequest: string;\r\n\t\tchangePassword?: string;\r\n\t\teditProfile?: string;\r\n\t\tgetAccountInfo?: string;\r\n\t\tprofileInformation?: string;\r\n\t\t// resetPassword: string;\r\n\t};\r\n\tforms?: {\r\n\t\tprofile_edit: string;\r\n\t};\r\n\tdashboardLinks?: {\r\n\t\troute: string;\r\n\t\ticon: string;\r\n\t\ttitle: string;\r\n\t}[];\r\n\tresponseToUserInfo?: (user: Observable<any>) => Observable<UserModel>;\r\n\tmapUserDisplayName?: (user: Observable<any>) => Observable<string>;\r\n}\r\n\r\nexport const MODULE_DEFAULT_CONFIG: UserModuleConfig = {\r\n\tserver: \"frontend_server\",\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"user/module/frontend/server/did/not/set\",\r\n\t\tserver: \"user/module/server/did/not/set\"\r\n\t},\r\n\tendpoints: {\r\n\t\t// resetPasswordRequest: '',\r\n\t\tchangePassword: \"\",\r\n\t\teditProfile: \"\",\r\n\t\tgetAccountInfo: \"\",\r\n\t\tprofileInformation: \"\"\r\n\t\t// resetPassword: '',\r\n\t},\r\n\tforms: {\r\n\t\tprofile_edit: \"\"\r\n\t},\r\n\tdashboardLinks: [],\r\n\tresponseToUserInfo: user$ => user$,\r\n\tmapUserDisplayName: user$ => user$.pipe(map(user => user.Username))\r\n};\r\n\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<UserModuleConfig>(\"UserModuleConfig\");\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, Inject } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\nimport { getUserModuleConfig } from \"@soushians/config\";\r\n\r\nimport { UserModuleConfig, MODULE_CONFIG_TOKEN, MODULE_DEFAULT_CONFIG } from \"../user.config\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class UserConfigurationService {\r\n\tprivate _config: UserModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(this._config);\r\n\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<any>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\tthis.store.select(getUserModuleConfig).subscribe(userConfig => {\r\n\t\t\tif (!userConfig) return;\r\n\t\t\tthis._config = Object.assign({}, this._config, userConfig.Config);\r\n\t\t\tthis.config$.next(this._config);\r\n\t\t});\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { ProfileViewModel } from \"../models/profile-view.model\";\r\n\r\nexport enum ProfileViewActionTypes {\r\n\tGET_PROFILE = \"[USER][PROFILE] GET_PROFILE\",\r\n\tGET_PROFILE_START = \"[USER][PROFILE] GET_PROFILE_START\",\r\n\tGET_PROFILE_SUCCEED = \"[USER][PROFILE] GET_PROFILE_SUCCEED\",\r\n\tGET_PROFILE_FAILED = \"[USER][PROFILE] GET_PROFILE_FAILED\"\r\n}\r\n\r\nexport class GetProfile implements Action {\r\n\treadonly type = ProfileViewActionTypes.GET_PROFILE;\r\n}\r\nexport class GetProfileStart implements Action {\r\n\treadonly type = ProfileViewActionTypes.GET_PROFILE_START;\r\n}\r\nexport class GetProfileSucceed implements Action {\r\n\treadonly type = ProfileViewActionTypes.GET_PROFILE_SUCCEED;\r\n\tconstructor(public payload: ProfileViewModel.Response) {}\r\n}\r\nexport class GetProfileFailed implements Action {\r\n\treadonly type = ProfileViewActionTypes.GET_PROFILE_FAILED;\r\n}\r\n\r\nexport type ProfileViewAction = GetProfile | GetProfileStart | GetProfileSucceed | GetProfileFailed;\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { UserModel } from \"../models/user.model\";\r\n\r\nexport enum UserActionTypes {\r\n\tUSER_SELECTED = \"[USER] USER_SELECTED\",\r\n\tREFRESH_USER_INFO = \"[USER] REFRESH_USER_INFO\"\r\n}\r\n\r\nexport class UserSelectedAction implements Action {\r\n\treadonly type = UserActionTypes.USER_SELECTED;\r\n\tconstructor(public payload: UserModel) {}\r\n}\r\n\r\nexport class RefreshUserInfoAction implements Action {\r\n\treadonly type = UserActionTypes.REFRESH_USER_INFO;\r\n\tconstructor(public payload: UserModel) {}\r\n}\r\n\r\nexport type UserAction = UserSelectedAction | RefreshUserInfoAction;\r\n","import { UserModel } from \"../models/user.model\";\r\nimport { UserAction, UserActionTypes } from \"./user.actions\";\r\n\r\nexport interface State {\r\n\tloaded: boolean;\r\n\tdata: UserModel;\r\n}\r\nexport const initialState: State = {\r\n\tloaded: false,\r\n\tdata: new UserModel()\r\n};\r\n\r\nexport function userReducer(state = initialState, action: UserAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase UserActionTypes.USER_SELECTED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloaded: true,\r\n\t\t\t\tdata: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase UserActionTypes.REFRESH_USER_INFO: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloaded: true,\r\n\t\t\t\tdata: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const getAccountInfo = (state: State) => state.data;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { UserModel } from \"./user.model\";\r\n\r\nexport namespace ProfileViewModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tEmail: string;\r\n\r\n\t\tconstructor(initValue?: ProfileViewModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tUsername: new FormControl(\"\", [ Validators.minLength(8), Validators.required ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response extends UserModel {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t}\r\n\t}\r\n}\r\n","import { HttpRequestBaseModel, HttpResponseBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { UserModel } from \"./user.model\";\r\n\r\nexport namespace EditProfile_ApiModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tEmail: string;\r\n\t\tRoles: string[];\r\n\t\tGroups: string[];\r\n\r\n\t\tconstructor(initValue: Partial<Request> = {} as Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tEmail: new FormControl(null, [ Validators.required ]),\r\n\t\t\t\tRoles: new FormControl(null, [ Validators.required ]),\r\n\t\t\t\tGroups: new FormControl(null, [ Validators.required ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response implements HttpResponseBaseModel<Response> {\r\n\t\tResult: { User: UserModel };\r\n\t\tconstructor(initValue: Response = {} as Response) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\t\textractData() {\r\n\t\t\treturn this.Result.User;\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, filter, take, switchMap, combineLatest, catchError } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { stringTemplate } from \"@soushians/shared\";\r\nimport { getUser } from \"@soushians/authentication\";\r\n\r\nimport { UserConfigurationService } from \"./user-configuration.service\";\r\nimport { GetProfile } from \"../profile-view/profile-view.actions\";\r\nimport { getAccountInfo } from \"../dashboard/account.reducer\";\r\nimport { UserModuleConfig } from \"../user.config\";\r\nimport { ProfileViewModel } from \"../models/profile-view.model\";\r\nimport { UserModel } from \"../models/user.model\";\r\nimport { EditProfile_ApiModel } from \"../models/profile-edit.model\";\r\nimport { of } from \"rxjs\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class UserService {\r\n\tconfig: UserModuleConfig;\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<any>,\r\n\t\tprivate configurationService: UserConfigurationService\r\n\t) {\r\n\t\tthis.configurationService.config$.subscribe(config => (this.config = config));\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.store.dispatch(new GetProfile());\r\n\t\t}, 999);\r\n\t}\r\n\r\n\tgetAccountInfo(): Observable<ProfileViewModel.Response> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter(config => config.endpoints.profileInformation != \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tcombineLatest(this.store.select(s => {\r\n\t\t\t\tdebugger;\r\n\t\t\t\treturn getUser(s);\r\n\t\t\t})),\r\n\t\t\tfilter(([config, user]: [UserModuleConfig, any]) => user != undefined),\r\n\t\t\tswitchMap(([config, user]: [UserModuleConfig, any]) => {\r\n\t\t\t\tdebugger;\r\n\t\t\t\treturn this.http\r\n\t\t\t\t\t.get<any>(\r\n\t\t\t\t\t\tstringTemplate(config.env[config.server] + config.endpoints.profileInformation, {\r\n\t\t\t\t\t\t\tuser: user || {}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.let(config.responseToUserInfo)\r\n\t\t\t\t\t.pipe(\r\n\t\t\t\t\t\tmap((response: UserModel) => {\r\n\t\t\t\t\t\t\tconst _user: any = Object.assign({}, response);\r\n\t\t\t\t\t\t\tif (_user.Role) {\r\n\t\t\t\t\t\t\t\t_user.Roles = [_user.Role];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn _user;\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tcatchError(err => of(false))\r\n\t\t\t\t\t);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\teditProfile(data: EditProfile_ApiModel.Request): Observable<UserModel> {\r\n\t\tconst model = new EditProfile_ApiModel.Request(data);\r\n\t\treturn this.http\r\n\t\t\t.put<EditProfile_ApiModel.Response>(\r\n\t\t\t\tstringTemplate(this.config.env[this.config.server] + this.config.endpoints.editProfile, model),\r\n\t\t\t\tmodel.getRequestBody()\r\n\t\t\t)\r\n\t\t\t.pipe(map(response => new EditProfile_ApiModel.Response(response).extractData()));\r\n\t}\r\n\t// TODO: remove\r\n\tgetInfo(data: ProfileViewModel.Request): Observable<any> {\r\n\t\tconst model = new ProfileViewModel.Request(data);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ProfileViewModel.Response>(\r\n\t\t\t\tstringTemplate(this.config.env[this.config.server] + this.config.endpoints.getAccountInfo, model)\r\n\t\t\t)\r\n\t\t\t.pipe(map(response => response));\r\n\t}\r\n\r\n\tis_role(role: string): Observable<boolean> {\r\n\t\treturn this.store\r\n\t\t\t.select(getAccountInfo)\r\n\t\t\t.pipe(filter(user => user && user.Roles != undefined), take(1), map(user => user.Roles.indexOf(role) > -1));\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { UserModel } from \"../models/user.model\";\r\nimport { EditProfile_ApiModel } from \"../models/profile-edit.model\";\r\n\r\nexport enum EditProfileActionTypes {\r\n\tEDIT_PROFILE = \"[USER][PASSWORD] EDIT_PROFILE\",\r\n\tEDIT_PROFILE_START = \"[USER][PASSWORD] EDIT_PROFILE_START\",\r\n\tEDIT_PROFILE_SUCCEED = \"[USER][PASSWORD] EDIT_PROFILE_SUCCEED\",\r\n\tEDIT_PROFILE_FAILED = \"[USER][PASSWORD] EDIT_PROFILE_FAILED\"\r\n}\r\n\r\nexport class EditProfile implements Action {\r\n\treadonly type = EditProfileActionTypes.EDIT_PROFILE;\r\n\tconstructor(public payload: EditProfile_ApiModel.Request) {}\r\n}\r\nexport class EditProfileStart implements Action {\r\n\treadonly type = EditProfileActionTypes.EDIT_PROFILE_START;\r\n\tconstructor(public payload: EditProfile_ApiModel.Request) {}\r\n}\r\nexport class EditProfileSucceed implements Action {\r\n\treadonly type = EditProfileActionTypes.EDIT_PROFILE_SUCCEED;\r\n\tconstructor(public payload: UserModel) {}\r\n}\r\nexport class EditProfileFailed implements Action {\r\n\treadonly type = EditProfileActionTypes.EDIT_PROFILE_FAILED;\r\n}\r\n\r\nexport type EditProfileAction = EditProfile | EditProfileStart | EditProfileSucceed | EditProfileFailed;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { map, catchError, switchMap } from \"rxjs/operators\";\r\n\r\nimport { UserService } from \"../services/user.service\";\r\nimport { EditProfile_ApiModel } from \"../models/profile-edit.model\";\r\nimport {\r\n\tEditProfileActionTypes,\r\n\tEditProfileStart,\r\n\tEditProfileSucceed,\r\n\tEditProfileFailed\r\n} from \"./edit-profile.actions\";\r\nimport { GetProfile } from \"../profile-view/profile-view.actions\";\r\n\r\n@Injectable()\r\nexport class EditProfileEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private service: UserService) {}\r\n\r\n\t@Effect()\r\n\tEditProfileRequest$ = this.actions$\r\n\t\t.ofType(EditProfileActionTypes.EDIT_PROFILE)\r\n\t\t.pipe(map(action => action.payload), map(data => new EditProfileStart(data)));\r\n\r\n\t@Effect()\r\n\tRequestEditProfileLink$ = this.actions$\r\n\t\t.ofType(EditProfileActionTypes.EDIT_PROFILE_START)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap((data: EditProfile_ApiModel.Request) => this.service.editProfile(data)),\r\n\t\t\tmap(res => new EditProfileSucceed(res)),\r\n\t\t\tcatchError(() => of(new EditProfileFailed()))\r\n\t\t);\r\n\t// .switchMap((data: EditProfile_ApiModel.Request) => {\r\n\t// \treturn this.service\r\n\t// \t\t.editProfile(data)\r\n\t// \t\t.map((res) => new EditProfileSucceed(res))\r\n\t// \t\t.catch(() => of(new EditProfileFailed()));\r\n\t// });\r\n\r\n\t@Effect()\r\n\tgoToView$ = this.actions$.ofType(EditProfileActionTypes.EDIT_PROFILE_SUCCEED).pipe(\r\n\t\tmap(() => {\r\n\t\t\tthis.router.navigate([ \"/user/profile\" ]);\r\n\t\t\treturn new GetProfile();\r\n\t\t})\r\n\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\n\r\nimport { UserService } from \"../services/user.service\";\r\nimport { EditProfile_ApiModel } from \"../models/profile-edit.model\";\r\nimport { ProfileViewActionTypes, GetProfileStart, GetProfileSucceed, GetProfileFailed } from \"./profile-view.actions\";\r\nimport { RefreshUserInfoAction } from \"../dashboard/user.actions\";\r\n\r\n@Injectable()\r\nexport class ProfileViewEffects {\r\n\tconstructor(private actions$: Actions<any>, private userService: UserService) { }\r\n\r\n\t@Effect()\r\n\tProfileRequest$ = this.actions$\r\n\t\t.ofType(ProfileViewActionTypes.GET_PROFILE)\r\n\t\t.pipe(map(action => action.payload), map(data => new GetProfileStart()));\r\n\r\n\t@Effect()\r\n\tgetProfile$ = this.actions$\r\n\t\t.ofType(ProfileViewActionTypes.GET_PROFILE_START)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap((data: EditProfile_ApiModel.Request) =>\r\n\t\t\t\tthis.userService\r\n\t\t\t\t\t.getAccountInfo()\r\n\t\t\t\t\t.pipe(map(res => new GetProfileSucceed(res)), catchError(() => of(new GetProfileFailed())))\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t@Effect()\r\n\trefreshUserInfo$ = this.actions$\r\n\t\t.ofType(ProfileViewActionTypes.GET_PROFILE_SUCCEED)\r\n\t\t.pipe(map(action => action.payload), map(data => new RefreshUserInfoAction(data)));\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { of } from \"rxjs\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { SignInActionTypes } from \"@soushians/authentication\";\r\n\r\nimport { UserService } from \"../services/user.service\";\r\nimport { GetProfile, GetProfileSucceed } from \"../profile-view/profile-view.actions\";\r\nimport { RefreshUserInfoAction } from \"../dashboard/user.actions\";\r\nimport { UserModel } from \"../models/user.model\";\r\n\r\n@Injectable()\r\nexport class UserEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private service: UserService) {}\r\n\r\n\t// @Effect()\r\n\t// updateProfileInformation$ = this.actions$.ofType(SignInActionTypes.SIGNIN_SUCCEED).pipe(\r\n\t// \tmap(action => action.payload),\r\n\t// \tmap(user => {\r\n\t// \t\treturn new GetProfileSucceed(user);\r\n\t// \t})\r\n\t// );\r\n\t@Effect()\r\n\tgetAccountInfo$ = this.actions$.ofType(SignInActionTypes.SIGNIN_SUCCEED).pipe(\r\n\t\tmap(() => {\r\n\t\t\treturn new GetProfile();\r\n\t\t})\r\n\t);\r\n\t@Effect()\r\n\tsignout$ = this.actions$\r\n\t\t.ofType(SignInActionTypes.SIGNOUT)\r\n\t\t.pipe(map(() => new RefreshUserInfoAction({} as UserModel)));\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { ResetPasswordRequestModel } from \"../models/reset-password-request.model\";\r\n\r\nexport enum ResetPasswordRequestActionTypes {\r\n\tGET_RESET_PASSWORD_LINK = \"[USER][PASSWORD] GET_RESET_PASSWORD_LINK\",\r\n\tRESET_PASSWORD_LINK_REQUEST_START = \"[USER][PASSWORD] RESET_PASSWORD_LINK_REQUEST_START\",\r\n\tRESET_PASSWORD_LINK_REQUEST_SUCCEED = \"[USER][PASSWORD] RESET_PASSWORD_LINK_REQUEST_SUCCEED\",\r\n\tRESET_PASSWORD_LINK_REQUEST_FAILED = \"[USER][PASSWORD] RESET_PASSWORD_LINK_REQUEST_FAILED\",\r\n\tDISABLE_GET_LINK = \"[USER][PASSWORD] DISABLE_GET_LINK\",\r\n\tENABLE_GET_LINK = \"[USER][PASSWORD] ENABLE_GET_LINK\",\r\n\tMAXIMUM_TRY_HAPPEND = \"[USER][PASSWORD] MAXIMUM_TRY_HAPPEND\",\r\n\tPASSWORD_CHANGED_SUCCEED = \"[USER][PASSWORD] PASSWORD_CHANGED_SUCCEED\",\r\n\tPASSWORD_CHANGED_FAILED = \"[USER][PASSWORD] PASSWORD_CHANGED_FAILED\"\r\n}\r\n\r\nexport class GetResetPasswordLink implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.GET_RESET_PASSWORD_LINK;\r\n\tconstructor(public payload: ResetPasswordRequestModel.Request) {}\r\n}\r\nexport class ResetPasswordLinkRequestStart implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_START;\r\n\tconstructor(public payload: ResetPasswordRequestModel.Request) {}\r\n}\r\nexport class ResetPasswordLinkRequestSucceed implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_SUCCEED;\r\n\tconstructor() {}\r\n}\r\nexport class ResetPasswordLinkRequestFailed implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_FAILED;\r\n\tconstructor() {}\r\n}\r\nexport class DisableGetLink implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.DISABLE_GET_LINK;\r\n}\r\nexport class EnableGetLink implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.ENABLE_GET_LINK;\r\n}\r\nexport class MaximumTryHappend implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.MAXIMUM_TRY_HAPPEND;\r\n}\r\nexport class PasswordChangedSucceed implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.PASSWORD_CHANGED_SUCCEED;\r\n}\r\nexport class PasswordChangedFailed implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.PASSWORD_CHANGED_FAILED;\r\n\tconstructor(public payload: string) {}\r\n}\r\n\r\nexport type ResetPasswordRequestAction =\r\n\t| GetResetPasswordLink\r\n\t| ResetPasswordLinkRequestStart\r\n\t| ResetPasswordLinkRequestFailed\r\n\t| DisableGetLink\r\n\t| ResetPasswordLinkRequestSucceed\r\n\t| EnableGetLink\r\n\t| MaximumTryHappend\r\n\t| PasswordChangedSucceed\r\n\t| PasswordChangedFailed;\r\n","import { ResetPasswordRequestAction, ResetPasswordRequestActionTypes } from \"./reset-password-request.actions\";\r\n\r\nexport interface State {\r\n\tnumberOfRequested: number;\r\n\tlastRequestedTime: string;\r\n\tdisable: boolean;\r\n}\r\nexport const initialState: State = {\r\n\tnumberOfRequested: 0,\r\n\tlastRequestedTime: null,\r\n\tdisable: false\r\n};\r\nexport function reducer(state = initialState, action: ResetPasswordRequestAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase ResetPasswordRequestActionTypes.GET_RESET_PASSWORD_LINK: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnumberOfRequested: state.numberOfRequested + 1,\r\n\t\t\t\tlastRequestedTime: Date.now().toString()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ResetPasswordRequestActionTypes.DISABLE_GET_LINK: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdisable: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ResetPasswordRequestActionTypes.ENABLE_GET_LINK: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdisable: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getNumberOfRequeseted = (state: State) => state.numberOfRequested;\r\nexport var getStatus = (state: State) => state.disable;\r\n","import { Action } from \"@ngrx/store\";\r\nimport { ChangePasswordModel } from \"../models/change-password.model\";\r\n\r\nexport enum ChangePasswordActionTypes {\r\n\tCHANGE_PASSWORD = \"[USER][PASSWORD] CHANGE_PASSWORD\",\r\n\tPASSWORD_CHANGED_START = \"[USER][PASSWORD] PASSWORD_CHANGED_START\",\r\n\tPASSWORD_CHANGED_SUCCEED = \"[USER][PASSWORD] PASSWORD_CHANGED_SUCCEED\",\r\n\tPASSWORD_CHANGED_FAILED = \"[USER][PASSWORD] PASSWORD_CHANGED_FAILED\"\r\n}\r\n\r\nexport class ChangePassword implements Action {\r\n\treadonly type = ChangePasswordActionTypes.CHANGE_PASSWORD;\r\n\tconstructor(public payload: ChangePasswordModel.Request) {}\r\n}\r\nexport class ChangePasswordStart implements Action {\r\n\treadonly type = ChangePasswordActionTypes.PASSWORD_CHANGED_START;\r\n\tconstructor(public payload: ChangePasswordModel.Request) {}\r\n}\r\nexport class ChangePasswordSucceed implements Action {\r\n\treadonly type = ChangePasswordActionTypes.PASSWORD_CHANGED_SUCCEED;\r\n\tconstructor(public payload: ChangePasswordModel.Response) {}\r\n}\r\nexport class ChangePasswordFailed implements Action {\r\n\treadonly type = ChangePasswordActionTypes.PASSWORD_CHANGED_FAILED;\r\n}\r\n\r\nexport type ChangePasswordAction = ChangePassword | ChangePasswordStart | ChangePasswordSucceed | ChangePasswordFailed;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\nimport { ChangePasswordAction, ChangePasswordActionTypes } from \"./change-password.actions\";\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\"\r\n};\r\nexport function reducer(state = initialState, action: ChangePasswordAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase ChangePasswordActionTypes.CHANGE_PASSWORD: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"dirty\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ChangePasswordActionTypes.PASSWORD_CHANGED_START: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ChangePasswordActionTypes.PASSWORD_CHANGED_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"succeed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ChangePasswordActionTypes.PASSWORD_CHANGED_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn initialState;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getStatus = (state: State) => state.status;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\nimport { EditProfileAction, EditProfileActionTypes } from \"./edit-profile.actions\";\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\"\r\n};\r\nexport function reducer(state = initialState, action: EditProfileAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase EditProfileActionTypes.EDIT_PROFILE: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"dirty\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditProfileActionTypes.EDIT_PROFILE_START: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditProfileActionTypes.EDIT_PROFILE_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"succeed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditProfileActionTypes.EDIT_PROFILE_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport let getStatus = (state: State) => state.status;\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { ProfileViewModel } from \"../models/profile-view.model\";\r\n\r\nexport enum SearchActionTypes {\r\n\tSEARCH = \"[USER][SEARCH] SEARCH\",\r\n\tSEARCH_START = \"[USER][SEARCH] SEARCH_START\",\r\n\tSEARCH_SUCCEED = \"[USER][SEARCH] SEARCH_SUCCEED\",\r\n\tSEARCH_FAILED = \"[USER][SEARCH] SEARCH_FAILED\",\r\n\tCLEAR_SEARCHED_USER = \"[USER][SEARCH] CLEAR_SEARCHED_USER\"\r\n}\r\n\r\nexport class Search implements Action {\r\n\treadonly type = SearchActionTypes.SEARCH;\r\n\tconstructor(public payload: ProfileViewModel.Request) {}\r\n}\r\nexport class SearchStartAction implements Action {\r\n\treadonly type = SearchActionTypes.SEARCH_START;\r\n\tconstructor(public payload: ProfileViewModel.Request) {}\r\n}\r\nexport class SearchSucceed implements Action {\r\n\treadonly type = SearchActionTypes.SEARCH_SUCCEED;\r\n\tconstructor(public payload: ProfileViewModel.Response) {}\r\n}\r\nexport class SearchFailed implements Action {\r\n\treadonly type = SearchActionTypes.SEARCH_FAILED;\r\n}\r\nexport class ClearSearchedUser implements Action {\r\n\treadonly type = SearchActionTypes.CLEAR_SEARCHED_USER;\r\n}\r\n\r\nexport type SearchAction = Search | SearchStartAction | SearchSucceed | SearchFailed | ClearSearchedUser;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\nimport { ProfileViewModel } from \"../models/profile-view.model\";\r\nimport { SearchActionTypes, SearchAction } from \"./search.actions\";\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n\tdata: ProfileViewModel.Response;\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\",\r\n\tdata: {} as ProfileViewModel.Response\r\n};\r\nexport function reducer(state = initialState, action: SearchAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase SearchActionTypes.SEARCH: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"dirty\",\r\n\t\t\t\tdata: new ProfileViewModel.Response()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SearchActionTypes.SEARCH_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SearchActionTypes.SEARCH_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"succeed\",\r\n\t\t\t\tdata: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SearchActionTypes.SEARCH_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SearchActionTypes.CLEAR_SEARCHED_USER: {\r\n\t\t\treturn initialState;\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getStatus = (state: State) => state.status;\r\nexport var getAccountInfo = (state: State) => state.data;\r\n","import { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { MatchValidator } from \"@soushians/shared\";\r\n\r\nexport namespace ChangePasswordModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tUsername: string;\r\n\t\tPassword: string;\r\n\r\n\t\tconstructor(initValue: ChangePasswordModel.Request = {} as ChangePasswordModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {\r\n\t\t\t\tPassword: this.Password\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tPassword: new FormControl(null, [ Validators.required, Validators.minLength(7) ]),\r\n\t\t\t\tConfirm: new FormControl(null, [ Validators.required, MatchValidator(\"Password\") ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { createSelector, createFeatureSelector, MemoizedSelector } from \"@ngrx/store\";\r\nimport * as userReducer from \"./dashboard/account.reducer\";\r\nimport { getAccountInfo as _getAccountInfo } from \"./dashboard/account.reducer\";\r\nimport * as resetPasswordRequestReducer from \"./reset-password/reset-password-request.reducer\";\r\nimport * as changePassword from \"./change-password/change-password.reducer\";\r\nimport * as editProfileReducer from \"./profile-edit/edit-profile.reducer\";\r\nimport * as searchReducer from \"./search-account/search.reducer\";\r\nimport { UserModel } from \"./models/user.model\";\r\nimport { responseStatusTypes } from \"@soushians/shared\";\r\n\r\nexport interface UserState {\r\n\tuser: userReducer.State;\r\n\tresetPasswordRequest: resetPasswordRequestReducer.State;\r\n\tsearchView: searchReducer.State;\r\n\tchangePassword: changePassword.State;\r\n\teditProfile: editProfileReducer.State;\r\n}\r\n\r\nexport const UserReducers = {\r\n\tuser: userReducer.userReducer,\r\n\tresetPasswordRequest: resetPasswordRequestReducer.reducer,\r\n\tchangePassword: changePassword.reducer,\r\n\tsearchView: searchReducer.reducer,\r\n\teditProfile: editProfileReducer.reducer\r\n};\r\n\r\nexport interface AppState {\r\n\t\"user\": UserState;\r\n}\r\n\r\n//#region selectors\r\n\r\nexport const selectFeatureState = createFeatureSelector<UserState>(\"user\");\r\n\r\nexport const getUserInforamtionStatus = createSelector(selectFeatureState, (state: UserState) => state.user.loaded);\r\nexport const isSignedIn = createSelector(selectFeatureState, (state: UserState) => state.user.loaded);\r\n\r\nexport const selectResetPasswordRequestState = createSelector(\r\n\tselectFeatureState,\r\n\t(state: UserState) => state.resetPasswordRequest\r\n);\r\nexport const getNumberOfRequeseted = createSelector(\r\n\tselectResetPasswordRequestState,\r\n\tresetPasswordRequestReducer.getNumberOfRequeseted\r\n);\r\nexport const getResetPasswordRequestStatus = createSelector(\r\n\tselectResetPasswordRequestState,\r\n\tresetPasswordRequestReducer.getStatus\r\n);\r\n\r\n//#region user\r\nexport const selectUserInformaionState = createSelector(selectFeatureState, (state: UserState) => state.user);\r\nexport const getAccountInfo = createSelector(selectUserInformaionState, _getAccountInfo);\r\n//#endregion\r\n\r\n//#region search\r\nexport const selectSearchState = createSelector(selectFeatureState, (state: UserState) => state.searchView);\r\nexport const getSearchStatus = createSelector(selectSearchState, searchReducer.getStatus);\r\n//#endregion\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { responseStatusTypes } from \"@soushians/shared\";\r\n\r\nimport { ProfileViewModel } from \"../../models/profile-view.model\";\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { Search } from \"../search.actions\";\r\n\r\n@Component({\r\n\tselector: \"search\",\r\n\ttemplate: `<mat-card fxFlex=\"450px\" *ngIf=\"(userStatus$ | async) == 'succeed'\">\r\n  <mat-card-header>\r\n    <mat-card-title>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n        <div fxFlex=\"nogrow\">\r\n          <!-- {{(user | async).LastName }}Ø {{(user | async).FirstName }} -->\r\n        </div>\r\n        <div fxFlex=\"nogrow\">\r\n          <!-- {{(user | async).Email}} -->\r\n        </div>\r\n      </div>\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <div class='list-item' fxFlexLayout='row' fxLayoutAlign='center center'>\r\n        <mat-icon fxFlex='nogrow'>local_grocery_store</mat-icon>\r\n        <div fxFlex='15px'></div>\r\n        <p fxFlex='40'>Ø´ÙØ§Ø³Ù</p>\r\n        <!-- <p fxFlex='60' fxLayoutAlign=\"end\">{{(user | async)._id }}</p> -->\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row' fxLayoutAlign='center center'>\r\n        <mat-icon fxFlex='nogrow'>email</mat-icon>\r\n        <div fxFlex='15px'></div>\r\n        <p fxFlex='40'>Ù¾Ø³Øª Ø§ÙÚ©ØªØ±ÙÙÛÚ©Û</p>\r\n        <!-- <p fxFlex='60' fxLayoutAlign=\"end\">{{(user | async).Email }}</p> -->\r\n      </div>\r\n    </div>\r\n\r\n  </mat-card-content>\r\n</mat-card>`,\r\n\tstyles: [``]\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\tuser: Observable<ProfileViewModel.Response>;\r\n\tuserStatus$: Observable<responseStatusTypes>;\r\n\tformGroup = ProfileViewModel.Request.formGroup;\r\n\tuserDataLoaded$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\tuserNotFound$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\tconstructor(private store: Store<FeatureReducer.AppState>) {\r\n\t\tthis.user = this.store.select(FeatureReducer.getAccountInfo);\r\n\t\tthis.userStatus$ = this.store.select(FeatureReducer.getSearchStatus);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.userStatus$.subscribe(value => this.userDataLoaded$.next(!\"pristine|dirty|pending\".includes(value)));\r\n\t}\r\n\tsearch() {\r\n\t\tif (!this.formGroup.valid) return;\r\n\t\tthis.store.dispatch(new Search(this.formGroup.value));\r\n\t}\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Component({\r\n\tselector: \"user-change-password\",\r\n\ttemplate: `<div fxFlex=\"450px\">\r\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"changePassword()\" fxLayout=\"column\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-form-field fxFlexFill>\r\n          <input type=\"password\" matInput placeholder=\"Ú©ÙÙÙ Ø¹Ø¨ÙØ±\" formControlName=\"Password\">\r\n        </mat-form-field>\r\n        <mat-form-field fxFlexFill>\r\n          <input type=\"password\" matInput placeholder=\"ØªÚ©Ø±Ø§Ø± Ú©ÙÙÙ Ø¹Ø¨ÙØ±\" formControlName=\"Confirm\">\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n      <mat-card-actions fxLayoutAlign=\"center center\">\r\n        <button fxFlex=\"nogrow\" type=\"submit\" mat-raised-button color=\"primary\">ØªØºÛÛØ± Ø±ÙØ² Ø¹Ø¨ÙØ±</button>\r\n        <button fxFlex=\"nogrow\" type=\"button\" routerLink=\"/user/panel\" mat-raised-button>Ø¨Ø§Ø²Ú¯Ø´Øª</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </form>\r\n</div>`,\r\n\tstyles: [``]\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\t@Input() formGroup: FormGroup;\r\n\t@Output() submited = new EventEmitter();\r\n\r\n\tngOnInit() {}\r\n\r\n\tsubmit() {}\r\n\r\n\tconstructor() {}\r\n\r\n\tchangePassword() {\r\n\t\tif (!this.formGroup.valid) return;\r\n\t\tthis.submited.emit(this.formGroup.value);\r\n\t}\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\r\n\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { ConfigModel } from \"@soushians/config\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\n\r\n@Component({\r\n\tselector: \"profile-edit\",\r\n\ttemplate: `<div fxFlex=\"450px\">\r\n\r\n  \r\n  <ngs-form-view #form [id]=\"formId\" [card]=\"true\" (accept)=\"editProfile(form.formGroup)\" (cancel)=\"goback()\" ></ngs-form-view>\r\n  <!-- <form [formGroup]=\"formGroup\" (ngSubmit)=\"editProfile()\" fxLayout=\"column\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n      </mat-card-content>\r\n      <mat-card-actions align=\"end\">\r\n        <button type=\"button\" routerLink=\"..\" mat-button color=\"primary\">Ø¨Ø§Ø²Ú¯Ø´Øª</button>\r\n        <button type=\"submit\" mat-raised-button color=\"primary\">ÙÛØ±Ø§ÛØ´</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </form> -->\r\n</div>`\r\n})\r\nexport class ProfileEditComponent implements OnInit {\r\n\t@Output() submited = new EventEmitter();\r\n\t@Input() userInfo: any;\r\n\t@Input() formId: string;\r\n\t@Input(\"roles\") roles$: Observable<string[]>;\r\n\t@Input() groups: string[];\r\n\tconstructor(private router: Router) {}\r\n\r\n\tngOnInit() {}\r\n\teditProfile(form: FormGroup) {\r\n\t\tif (!form.valid) return;\r\n\t\tthis.submited.emit(form.value);\r\n\t}\r\n\tgoback() {\r\n\t\tthis.router.navigate([ \"..\" ]);\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, AfterViewInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { UserConfigurationService } from \"../../services/user-configuration.service\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\tselector: \"user-dashboard-links\",\r\n\ttemplate: `<div fxLayout='row' fxLayoutWrap id=\"con\">\r\n    <button fxFlex=\"31\" class='link' mat-raised-button [routerLink]='link.route' *ngFor='let link of links'>\r\n        <div fxLayout='column' fxLayoutAlign='center center'>\r\n            <mat-icon color='primary'>{{link.icon}}</mat-icon>\r\n            <h3 class='title'>{{link.title}}</h3>\r\n            <div class='description'>{{link.description}}</div>\r\n        </div>\r\n    </button>\r\n    <button fxFlex=\"31\" class='link' mat-raised-button [routerLink]='link.route' *ngFor='let link of links$ | async'>\r\n        <div fxLayout='column' fxLayoutAlign='center center'>\r\n            <mat-icon color='primary'>{{link.icon}}</mat-icon>\r\n            <h3 class='title'>{{link.title}}</h3>\r\n            <div class='description'>{{link.description}}</div>\r\n        </div>\r\n    </button>\r\n</div>`,\r\n\tstyles: [`#con [fxflex]{margin-right:25px}:host{width:100%;padding:25px 25px 0}button mat-icon{font-size:48px;width:48px;height:48px}button.link{padding:25px 15px;margin-bottom:25px}.title{margin-top:0;margin-bottom:5px}.description{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:90%}`]\r\n})\r\nexport class DashboardLinksComponent implements AfterViewInit {\r\n\tlinks: any[];\r\n\tlinks$: Observable<any[]>;\r\n\tconstructor(private userConfigurationService: UserConfigurationService, private store: Store<any>) {\r\n\t\tthis.links$ = this.userConfigurationService.config$.pipe(map(data => data.dashboardLinks));\r\n\t\tthis.links = [\r\n\t\t\t{\r\n\t\t\t\ttitle: \"ÙØ´Ø§ÙØ¯Ù Ø­Ø³Ø§Ø¨ Ú©Ø§Ø±Ø¨Ø±Û\",\r\n\t\t\t\troute: \"/user/panel/profile\",\r\n\t\t\t\t// description: \"ÙÙØ±Ù Ø§ÛÙ¾Ø³ÙÙ ÙØªÙ Ø³Ø§Ø®ØªÚ¯Û Ø¨Ø§ ØªÙÙÛØ¯ Ø³Ø§Ø¯Ú¯Û ÙØ§ÙÙÙÙÙ\",\r\n\t\t\t\ticon: \"person\"\r\n\t\t\t}\r\n\t\t\t// ,\r\n\t\t\t// {\r\n\t\t\t// \troute: \"/user/panel/password/change\",\r\n\t\t\t// \ttitle: \"ØªØºÛÛØ± Ú©ÙÙÙ Ø¹Ø¨ÙØ±\",\r\n\t\t\t// \t// description: \"ÙÙØ±Ù Ø§ÛÙ¾Ø³ÙÙ ÙØªÙ Ø³Ø§Ø®ØªÚ¯Û Ø¨Ø§ ØªÙÙÛØ¯ Ø³Ø§Ø¯Ú¯Û ÙØ§ÙÙÙÙÙ\",\r\n\t\t\t// \ticon: \"security\"\r\n\t\t\t// }\r\n\t\t];\r\n\t}\r\n\r\n\tngAfterViewInit() {}\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { ResetPasswordRequestModel } from \"../../models/reset-password-request.model\";\r\nimport { MatSnackBar } from \"@angular/material\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { map, takeWhile } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\tselector: \"user-reset-password-request\",\r\n\ttemplate: `<form [formGroup]=\"formGroup\" (ngSubmit)=\"submit()\" fxLayout=\"column\">\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        <h3>Ø¯Ø±Ø®ÙØ§Ø³Øª Ø¨Ø§Ø²ÛØ§Ø¨Û Ø±ÙØ² Ø¹Ø¨ÙØ±</h3>\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p>Ø¨Ø±Ø§Û Ø¨Ø§Ø²ÛØ§Ø¨Û Ø±ÙØ² Ø¹Ø¨ÙØ± Ø´ÙØ§Ø±Ù ØªÙÙÙ Ø®ÙØ¯ Ø±Ø§ ÙØ§Ø±Ø¯ ÙÙØ§ÛÛØ¯</p>\r\n      <mat-radio-group fxFlexFill formControlName=\"Type\">\r\n        <mat-radio-button value=\"sms\">Ù¾ÛØ§ÙÚ©</mat-radio-button>\r\n        <mat-radio-button value=\"email\">Ù¾Ø³Øª Ø§ÙÚ©ØªØ±ÙÙÛÚ©Û</mat-radio-button>\r\n      </mat-radio-group>\r\n      <mat-form-field fxFlexFill>\r\n        <input matInput placeholder=\"Ø´ÙØ§Ø±Ù ØªÙÙÙ ÙÙØ±Ø§Ù\" formControlName=\"Username\">\r\n      </mat-form-field>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <!--<button type=\"submit\" [disabled]='(canRequestPin | async) || (maximumResendingHappend$ | async)' (click)=\"submit()\" mat-raised-button color=\"primary\">-->\r\n      <button type=\"submit\" [disabled]='(canRequestPin | async)' (click)=\"submit()\" mat-raised-button color=\"primary\">\r\n        <span *ngIf='!(canRequestPin | async)'>\r\n          Ø¨Ø§Ø²ÛØ§Ø¨Û Ø±ÙØ² Ø¹Ø¨ÙØ±\r\n        </span>\r\n        <!--<div *ngIf='(canRequestPin | async) && !(maximumResendingHappend$ | async)'>\r\n          {{timer$ | async}} Ø«Ø§ÙÛÙ ØªØ§ Ø§ÙÚ©Ø§Ù Ø¯Ø± Ø®ÙØ§Ø³Øª Ø¯ÙØ¨Ø§Ø±Ù Ø¯Ø±ÛØ§ÙØª Ù¾ÛØ§ÙÚ©.\r\n        </div>\r\n        <div *ngIf='(maximumResendingHappend$ | async)'>\r\n          Ø¹Ø¯Ù Ø§ÙÚ©Ø§Ù Ø¯Ø±Ø®ÙØ§Ø³Øª\r\n        </div>-->\r\n      </button>\r\n      <a mat-button routerLink='/auth/signin'>Ø§ÙØµØ±Ø§Ù</a>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</form>\r\n`,\r\n\tstyles: [``]\r\n})\r\nexport class ResetPasswordRequestComponent implements OnInit {\r\n\t@Output() submitted = new EventEmitter<ResetPasswordRequestModel.Request>();\r\n\r\n\t@Input() formGroup: FormGroup;\r\n\t@Input() numberOfRequested: Observable<number>;\r\n\t@Input() canRequestPin: Observable<boolean>;\r\n\t@Input()\r\n\tset pending(isPending: boolean) {\r\n\t\tif (isPending) {\r\n\t\t\tthis.formGroup.disable();\r\n\t\t}\r\n\r\n\t\tthis.formGroup.enable();\r\n\t}\r\n\r\n\ttimer$: Observable<number>;\r\n\tmaximumResendingHappend$ = new BehaviorSubject(false);\r\n\r\n\tconstructor(public snackBar: MatSnackBar) {\r\n\t\tthis.timer$ = Observable.timer(0, 100).pipe(\r\n\t\t\tmap(i => i + 1),\r\n\t\t\ttakeWhile(i => i * 100 <= 3000),\r\n\t\t\tmap(i => 3000 - i * 100)\r\n\t\t);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.numberOfRequested.subscribe(data => {\r\n\t\t\tif (data > 2) {\r\n\t\t\t\tthis.maximumResendingHappend$.next(true);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tif (this.formGroup.valid) {\r\n\t\t\tthis.submitted.emit(this.formGroup.value);\r\n\t\t\tlet message = this.maximumResendingHappend$.getValue()\r\n\t\t\t\t? \"Ø¹Ø¯Ù Ø§ÙÚ©Ø§Ù ...\"\r\n\t\t\t\t: \"Ù¾ÛØ§ÙÚ© Ø¬Ø¯ÛØ¯ Ø¨Ø±Ø§Û Ø´ÙØ§ Ø§Ø±Ø³Ø§Ù Ú¯Ø±Ø¯ÛØ¯.\";\r\n\t\t\tthis.snackBar.open(message, \"\", {\r\n\t\t\t\tduration: 3000\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { ProfileViewModel } from \"../../models/profile-view.model\";\r\nimport { Search } from \"../../search-account/search.actions\";\r\n\r\n@Component({\r\n\ttemplate: \"<router-outlet></router-outlet>\"\r\n})\r\nexport class FeatureContainerComponent {\r\n\tconstructor(private route: ActivatedRoute, private store: Store<FeatureReducer.AppState>) {\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tlet model = new ProfileViewModel.Request({ Email: params.Email } as ProfileViewModel.Request);\r\n\t\t\tthis.store.dispatch(new Search(model));\r\n\t\t});\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { ChangePasswordModel } from \"../../models/change-password.model\";\r\n\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { ChangePassword } from \"../change-password.actions\";\r\n\r\n@Component({\r\n\ttemplate: `<user-change-password\r\n                (submited)='changePassword($event)'\r\n                [formGroup]=\"formGroup\"\r\n              ></user-change-password>`\r\n})\r\nexport class ChangePasswordContainerComponent implements OnInit {\r\n\tformGroup = ChangePasswordModel.Request.formGroup;\r\n\tChangePasswordModel = new ChangePasswordModel.Request();\r\n\tconstructor(private route: ActivatedRoute, private store: Store<FeatureReducer.AppState>) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.store.select(FeatureReducer.getAccountInfo).subscribe(userInfo => {\r\n\t\t\tif (!userInfo) return;\r\n\t\t\t// TODO:\r\n\t\t\t// this.ChangePasswordModel.Username = userInfo.Username;\r\n\t\t});\r\n\t}\r\n\tchangePassword(event) {\r\n\t\tthis.ChangePasswordModel.Password = this.formGroup.get(\"Password\").value;\r\n\r\n\t\tthis.store.dispatch(new ChangePassword(this.ChangePasswordModel));\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { getAppConfig } from \"@soushians/config\";\r\n\r\nimport { UserModel } from \"../../models/user.model\";\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { EditProfile } from \"../edit-profile.actions\";\r\nimport { UserConfigurationService } from \"../../services/user-configuration.service\";\r\nimport { UserModuleConfig } from \"../../user.config\";\r\nimport { map, filter } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\tselector: \"profile-edit-contianer\",\r\n\ttemplate: `<profile-edit\r\n                (submited)='updateProfile($event)'\r\n                [userInfo]=\"userInforamation$ | async\"\r\n                [roles]=\"roles$\"\r\n\t\t\t\t[groups]=\"groups | async\"\r\n\t\t\t\t[formId]=\"(config$|async)?.forms.profile_edit\"\r\n              ></profile-edit>`\r\n})\r\nexport class ProfileEditContainerComponent implements OnInit {\r\n\tuserInforamation$: Observable<UserModel>;\r\n\troles$: Observable<string[]>;\r\n\tgroups: Observable<string[]>;\r\n\tconfig$: Observable<UserModuleConfig>;\r\n\r\n\tconstructor(private store: Store<FeatureReducer.AppState>, private configService: UserConfigurationService) {\r\n\t\tthis.userInforamation$ = this.store.select(FeatureReducer.getAccountInfo);\r\n\t\tthis.roles$ = this.store\r\n\t\t\t.select(getAppConfig)\r\n\t\t\t.pipe(filter(config => config != undefined), map(config => config.Config.Roles));\r\n\t\t// TODO:\r\n\t\t// this.groups = this.diagramService.getGroups();\r\n\t\tthis.groups = of([ \"test1\", \"test2\" ]);\r\n\r\n\t\tthis.config$ = this.configService.config$;\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\r\n\tupdateProfile(data) {\r\n\t\tthis.store.dispatch(new EditProfile(data));\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { UserModel } from \"../../models/user.model\";\r\nimport { getAccountInfo } from \"../account.reducer\";\r\n\r\n@Component({\r\n\tselector: \"user-dashboard-container\",\r\n\ttemplate: `<!-- <router-outlet name=\"links\"></router-outlet> -->\r\n<div fxLayoutAlign=\"center\">\r\n    <router-outlet></router-outlet>\r\n</div>`,\r\n\tstyles: [`#box-left{background:#fff}#box-bottom{background:#2b0033}#box-right{background:#000833;padding-top:10px!important;padding-bottom:10px!important}#box-right div{background:#fff;opacity:.5}#banner:not(.active){height:100%;-webkit-filter:grayscale(100%) brightness(1.5) opacity(.2) blur(2px);filter:grayscale(100%) brightness(1.5) opacity(.2) blur(2px)}#s1{background:#aaa}#s2{background:#bbb}#s3{background:#ccc}.personal-info{background-color:rgba(255,255,255,.5);position:relative;right:10%;width:90%;height:469px}.personal-info h2{color:#00bcd4;font-weight:400;font-size:24px;font-family:iran-sans-light!important}.personal-info h6{font-weight:400;font-size:12px;float:right;width:50%;margin:0;color:#555;border-bottom:2px solid #ececec}.personal-info p{float:right;width:30%;margin:0;font-size:13px;padding-right:30px;border-bottom:2px solid #ececec}.personal-info div{width:100%;height:50px;position:relative;line-height:52px;right:17px}.quick-box{width:100%;height:50px;position:relative;line-height:52px;padding-top:79px}.quick-btn{background-color:#00bcd4;margin:12px 10px;height:100px;text-align:center;line-height:100px;font-size:17px;color:#fff}.banner-section{text-align:center}.info-section{padding:60px 25px 10px;background-color:#f7f7f7;background-image:url(https://www.toptal.com/designers/subtlepatterns/patterns/grey.png)!important;height:1040px;padding-bottom:120px!important}`]\r\n})\r\nexport class DashboardContainerComponent implements OnInit {\r\n\tuser$: Observable<UserModel>;\r\n\t// is_agent : Observable<boolean>;\r\n\tconstructor(private store: Store<any>) {\r\n\t\tthis.user$ = this.store.select(getAccountInfo);\r\n\t\t// this.is_agent = signinService.is_agent();\r\n\t}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { UserModel } from \"../../models/user.model\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\n@Component({\r\n\tselector: \"user-profile\",\r\n\ttemplate: `<div fxFlex=\"450px\">\r\n  <router-outlet name=\"ngs-user-profile-view\"></router-outlet>\r\n  <router-outlet></router-outlet>\r\n  <!-- <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>Ø§Ø·ÙØ§Ø¹Ø§Øª Ù¾Ø±ÙÙØ§ÛÙ</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content *ngIf='dataStatus$ | async'>\r\n        <div class='list-item' fxFlexLayout='row' *ngFor=\"let item of info\">\r\n            <p fxFlex='40'>{{item[0]}}</p>\r\n            <p fxFlex='60'>{{item[1]}}</p>\r\n        </div>\r\n     \r\n    </mat-card-content>\r\n\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-button color=\"primary\" routerLink='..'>Ø¨Ø§Ø²Ú¯Ø´Øª</button>\r\n      <button mat-raised-button color=\"primary\" routerLink='edit'>ÙÛØ±Ø§ÛØ´</button>\r\n    </mat-card-actions>\r\n  </mat-card> -->\r\n</div>\r\n\r\n\r\n\r\n<!-- <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>Ø§ÛÙÛÙ</p>\r\n        <p fxFlex='60'>{{(information | async).Email}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>roles</p>\r\n        <p fxFlex='60'>{{(information | async).Roles | json}}</p>\r\n      </div> -->\r\n<!-- <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>ÙØ§Ù</p>\r\n        <p fxFlex='60'>{{(userInformation | async).FirstName}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>ÙØ§Ù Ø®Ø§ÙÙØ§Ø¯Ú¯Û</p>\r\n        <p fxFlex='60'>{{(userInformation | async).LastName}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>ÙØ§Ù Ú©Ø§Ø±Ø¨Ø±Û</p>\r\n        <p fxFlex='60'>{{(userInformation | async).Username}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>ØªÙÙÙ ÙÙØ±Ø§Ù</p>\r\n        <p fxFlex='60'>{{(userInformation | async).MobileNumber | persianNumber}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>Ø¬ÙØ³ÛØª</p>\r\n        <p fxFlex='60'>{{sex$ | async}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>ØªØ§Ø±ÛØ® ØªÙÙØ¯</p>\r\n        <p fxFlex='60'>{{(userInformation | async).Birthdate | persianDate : false}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>Ø§ÛÙÛÙ</p>\r\n        <p fxFlex='60'>{{(userInformation | async).Email}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>{{(identifierType$ | async)}}</p>\r\n        <p fxFlex='60'>{{(userInformation | async).IdentificationNo | persianNumber}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>ØªØ§Ø±ÛØ® Ø¹Ø¶ÙÛØª</p>\r\n        <p fxFlex='60'>{{(userInformation | async).RegisterDate | persianDate}}</p>\r\n      </div> -->`,\r\n\tstyles: [``]\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\t@Input()\r\n\tset information(information: UserModel) {\r\n\t\tif (!information) return;\r\n\r\n\t\tObject.keys(information).forEach(k => this.info.push([ k, information[k] ]));\r\n\t}\r\n\t@Input() dataStatus$: BehaviorSubject<boolean>;\r\n\tinfo: any[] = [];\r\n\tconstructor() {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { UserModel } from \"../../models/user.model\";\r\n\r\n@Component({\r\n\ttemplate: `<user-profile\r\n                [information]=\"data$ | async\"\r\n                [dataStatus$]='dataStatus$'\r\n            ></user-profile>`\r\n})\r\nexport class ProfileContainerComponent implements OnInit {\r\n\tdata$: Observable<UserModel>;\r\n\tdataStatus$: Observable<boolean>;\r\n\r\n\tconstructor(private store: Store<FeatureReducer.AppState>) {\r\n\t\tthis.data$ = this.store.select(FeatureReducer.getAccountInfo);\r\n\t\tthis.dataStatus$ = this.store.select(FeatureReducer.getUserInforamtionStatus);\r\n\t}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule\r\n} from \"@angular/material\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\nimport { EffectsModule, mergeEffects } from \"@ngrx/effects\";\r\n\r\nimport { NgsFormModule } from \"@soushians/form\";\r\n\r\nimport { UserModuleConfig, MODULE_CONFIG_TOKEN } from \"./user.config\";\r\nimport { EditProfileEffects } from \"./profile-edit/edit-profile.effects\";\r\nimport { ProfileViewEffects } from \"./profile-view/profile-view.effects\";\r\nimport { UserEffects } from \"./feature/feature.effects\";\r\nimport { SearchComponent } from \"./search-account/search/search.component\";\r\nimport { ChangePasswordComponent } from \"./change-password/change-password/change-password.component\";\r\nimport { ProfileEditComponent } from \"./profile-edit/profile-edit/profile-edit.component\";\r\nimport { DashboardLinksComponent } from \"./dashboard/dashboard-links/dashboard-links.component\";\r\nimport { ResetPasswordRequestComponent } from \"./reset-password/reset-password-request/reset-password-request.component\";\r\nimport { FeatureContainerComponent } from \"./feature/feature-container/feature-container.component\";\r\nimport { ChangePasswordContainerComponent } from \"./change-password/change-password-container/change-password-container.component\";\r\nimport { ProfileEditContainerComponent } from \"./profile-edit/profile-edit-container/profile-edit-container.component\";\r\nimport { DashboardContainerComponent } from \"./dashboard/dashboard-container/dashboard.component\";\r\nimport { ProfileComponent } from \"./profile-view/profile/profile.component\";\r\nimport { ProfileContainerComponent } from \"./profile-view/profile-container/profile-container.component\";\r\nimport { UserReducers } from \"./user.reducers\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tRouterModule,\r\n\t\tCommonModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSelectModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatRadioModule,\r\n\t\tReactiveFormsModule,\r\n\t\tBrowserAnimationsModule,\r\n\t\tNgsFormModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tSearchComponent,\r\n\t\tProfileComponent,\r\n\t\tChangePasswordComponent,\r\n\t\tProfileEditComponent,\r\n\t\tProfileContainerComponent,\r\n\t\tDashboardLinksComponent,\r\n\t\tResetPasswordRequestComponent,\r\n\t\tFeatureContainerComponent,\r\n\t\tDashboardContainerComponent,\r\n\t\tChangePasswordContainerComponent,\r\n\t\tProfileEditContainerComponent\r\n\t],\r\n\texports: []\r\n})\r\nexport class NgsUserModule {\r\n\tstatic forRoot(config?: UserModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: RootNgsUserModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config } ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsUserModule,\r\n\t\tStoreModule.forFeature(\"user\", UserReducers),\r\n\t\tEffectsModule.forFeature([\r\n\t\t\t// ResetPasswordRequestEffects,\r\n\t\t\tEditProfileEffects,\r\n\t\t\t// ChangePasswordEffects,\r\n\t\t\tProfileViewEffects,\r\n\t\t\t// SearchEffects,\r\n\t\t\tUserEffects\r\n\t\t])\r\n\t]\r\n})\r\nexport class RootNgsUserModule {}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { DashboardContainerComponent } from \"./dashboard/dashboard-container/dashboard.component\";\r\nimport { ProfileContainerComponent } from \"./profile-view/profile-container/profile-container.component\";\r\nimport { ProfileEditContainerComponent } from \"./profile-edit/profile-edit-container/profile-edit-container.component\";\r\n// import { ChangePasswordContainerComponent } from \"./change-password/change-password-container/change-password-container.component\";\r\n// import { SearchComponent } from \"./search-account/search/search.component\";\r\nimport { FeatureContainerComponent } from \"./feature/feature-container/feature-container.component\";\r\nimport { DashboardLinksComponent } from \"./dashboard/dashboard-links/dashboard-links.component\";\r\n\r\nexport const routes: Routes = [\r\n\t{\r\n\t\tpath: \"user/panel\",\r\n\t\tcomponent: DashboardContainerComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"\",\r\n\t\t\t\tcomponent: DashboardLinksComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"profile\",\r\n\t\t\t\tcomponent: ProfileContainerComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"profile/edit\",\r\n\t\t\t\tcomponent: ProfileEditContainerComponent\r\n\t\t\t}\r\n\t\t\t// {\r\n\t\t\t// \tpath: \"password/change\",\r\n\t\t\t// \tcomponent: ChangePasswordContainerComponent\r\n\t\t\t// }\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tpath: \"admin/user\",\r\n\t\tchildren: [\r\n\t\t\t// { path: \"managment\", component: SearchComponent },\r\n\t\t\t{\r\n\t\t\t\tpath: \":Email\",\r\n\t\t\t\tcomponent: FeatureContainerComponent,\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: \"profile-edit\",\r\n\t\t\t\t\t\tcomponent: ProfileEditContainerComponent\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// {\r\n\t\t\t\t\t// \tpath: \"change-password\",\r\n\t\t\t\t\t// \tcomponent: ChangePasswordContainerComponent\r\n\t\t\t\t\t// }\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const NgsUserRoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { getAccountInfo, AppState } from \"../user.reducers\";\r\nimport { UserConfigurationService } from \"./user-configuration.service\";\r\nimport { UserModel } from \"../models/user.model\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class UserFacadeService {\r\n\tconstructor(private store: Store<AppState>, private configService: UserConfigurationService) {}\r\n\tgetDisplayName(): Observable<string> {\r\n\t\treturn this.store.select(getAccountInfo).let(this.configService.config$.getValue().mapUserDisplayName);\r\n\t\t// .pipe(filter(displayName => displayName !== undefined));\r\n\t}\r\n\tgetInfo(): Observable<UserModel> {\r\n\t\treturn this.store.select(getAccountInfo);\r\n\t}\r\n}\r\n","export enum NgsUserModuleOutlets {\r\n\tngs_user_profile_view = \"ngs-user-profile-view\"\r\n}\r\n"]}