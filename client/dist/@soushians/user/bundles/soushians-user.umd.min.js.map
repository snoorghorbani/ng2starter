{"version":3,"sources":["../node_modules/tslib/tslib.es6.js","ng://@soushians/user/lib/models/user.model.ts","ng://@soushians/user/lib/user.config.ts","ng://@soushians/user/lib/services/user-configuration.service.ts","ng://@soushians/user/lib/profile-view/profile-view.actions.ts","ng://@soushians/user/lib/dashboard/user.actions.ts","ng://@soushians/user/lib/dashboard/account.reducer.ts","ng://@soushians/user/lib/models/profile-view.model.ts","ng://@soushians/user/lib/models/profile-edit.model.ts","ng://@soushians/user/lib/services/user.service.ts","ng://@soushians/user/lib/profile-edit/edit-profile.actions.ts","ng://@soushians/user/lib/profile-edit/edit-profile.effects.ts","ng://@soushians/user/lib/profile-view/profile-view.effects.ts","ng://@soushians/user/lib/feature/feature.effects.ts","ng://@soushians/user/lib/reset-password/reset-password-request.actions.ts","ng://@soushians/user/lib/reset-password/reset-password-request.reducer.ts","ng://@soushians/user/lib/change-password/change-password.actions.ts","ng://@soushians/user/lib/change-password/change-password.reducer.ts","ng://@soushians/user/lib/profile-edit/edit-profile.reducer.ts","ng://@soushians/user/lib/search-account/search.actions.ts","ng://@soushians/user/lib/search-account/search.reducer.ts","ng://@soushians/user/lib/user.reducers.ts","ng://@soushians/user/lib/search-account/search/search.component.ts","ng://@soushians/user/lib/change-password/change-password/change-password.component.ts","ng://@soushians/user/lib/profile-edit/profile-edit/profile-edit.component.ts","ng://@soushians/user/lib/dashboard/dashboard-links/dashboard-links.component.ts","ng://@soushians/user/lib/reset-password/reset-password-request/reset-password-request.component.ts","ng://@soushians/user/lib/feature/feature-container/feature-container.component.ts","ng://@soushians/user/lib/models/change-password.model.ts","ng://@soushians/user/lib/change-password/change-password-container/change-password-container.component.ts","ng://@soushians/user/lib/profile-edit/profile-edit-container/profile-edit-container.component.ts","ng://@soushians/user/lib/dashboard/dashboard-container/dashboard.component.ts","ng://@soushians/user/lib/profile-view/profile/profile.component.ts","ng://@soushians/user/lib/profile-view/profile-container/profile-container.component.ts","ng://@soushians/user/lib/user.module.ts","ng://@soushians/user/lib/user.routing-module.ts","ng://@soushians/user/lib/services/user.facade-service.ts","ng://@soushians/user/lib/models/user-outlets.enum.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","UserModel","Roles","Groups","MODULE_DEFAULT_CONFIG","server","env","production","frontend_server","endpoints","changePassword","editProfile","getAccountInfo","profileInformation","forms","profile_edit","dashboardLinks","responseToUserInfo","user$","mapUserDisplayName","pipe","map","user","Username","MODULE_CONFIG_TOKEN","InjectionToken","UserConfigurationService","configFile","store","_this","config$","BehaviorSubject","_config","select","getUserModuleConfig","subscribe","userConfig","Config","Injectable","args","providedIn","Inject","Store","GET_PROFILE","GET_PROFILE_START","GET_PROFILE_SUCCEED","GET_PROFILE_FAILED","GetProfile","type","ProfileViewActionTypes","GetProfileStart","GetProfileSucceed","payload","GetProfileFailed","USER_SELECTED","REFRESH_USER_INFO","RefreshUserInfoAction","UserActionTypes","initialState","loaded","data","userReducer","state","action","ProfileViewModel","EditProfile_ApiModel","Request","initValue","keys","forEach","getRequestBody","FormGroup","FormControl","Validators","minLength","required","Response","_super","__","constructor","create","tslib_1.__extends","Email","extractData","Result","User","UserService","http","configurationService","config","setTimeout","dispatch","filter","take","combineLatest","getUser","_a","_b","undefined","switchMap","get","stringTemplate","let","response","_user","Role","catchError","err","of","model","put","getInfo","is_role","role","indexOf","HttpClient","EDIT_PROFILE","EDIT_PROFILE_START","EDIT_PROFILE_SUCCEED","EDIT_PROFILE_FAILED","EditProfile","EditProfileActionTypes","EditProfileStart","EditProfileSucceed","EditProfileFailed","EditProfileEffects","actions$","router","service","EditProfileRequest$","ofType","pluck","RequestEditProfileLink$","res","goToView$","navigate","Actions","Router","tslib_1.__decorate","Effect","ProfileViewEffects","userService","ProfileRequest$","getProfile$","refreshUserInfo$","UserEffects","getAccountInfo$","SignInActionTypes","SIGNIN_SUCCEED","signout$","SIGNOUT","GET_RESET_PASSWORD_LINK","RESET_PASSWORD_LINK_REQUEST_START","RESET_PASSWORD_LINK_REQUEST_SUCCEED","RESET_PASSWORD_LINK_REQUEST_FAILED","DISABLE_GET_LINK","ENABLE_GET_LINK","MAXIMUM_TRY_HAPPEND","PASSWORD_CHANGED_SUCCEED","PASSWORD_CHANGED_FAILED","numberOfRequested","lastRequestedTime","disable","reducer","initialState$1","ResetPasswordRequestActionTypes","Date","now","toString","CHANGE_PASSWORD","PASSWORD_CHANGED_START","ChangePassword","ChangePasswordActionTypes","status","initialState$2","initialState$3","SEARCH","SEARCH_START","SEARCH_SUCCEED","SEARCH_FAILED","CLEAR_SEARCHED_USER","Search","SearchActionTypes","initialState$4","UserReducers","userReducer.userReducer","resetPasswordRequest","resetPasswordRequestReducer.reducer","changePassword.reducer","searchView","searchReducer.reducer","editProfileReducer.reducer","selectFeatureState","createFeatureSelector","getUserInforamtionStatus","createSelector","selectResetPasswordRequestState","selectUserInformaionState","_getAccountInfo","selectSearchState","getSearchStatus","SearchComponent","formGroup","userDataLoaded$","userNotFound$","FeatureReducer.getAccountInfo","userStatus$","FeatureReducer.getSearchStatus","ngOnInit","includes","search","valid","Component","selector","template","ChangePasswordComponent","submited","EventEmitter","submit","emit","Input","Output","ProfileEditComponent","form","goback","DashboardLinksComponent","userConfigurationService","links$","links","title","route","icon","ngAfterViewInit","ResetPasswordRequestComponent","snackBar","submitted","maximumResendingHappend$","timer$","Observable","timer","takeWhile","isPending","enable","message","getValue","open","duration","MatSnackBar","ChangePasswordModel","FeatureContainerComponent","params","ActivatedRoute","Password","Confirm","MatchValidator","ChangePasswordContainerComponent","userInfo","event","ProfileEditContainerComponent","configService","userInforamation$","roles$","getAppConfig","groups","updateProfile","DashboardContainerComponent","ProfileComponent","info","information","k","ProfileContainerComponent","data$","dataStatus$","FeatureReducer.getUserInforamtionStatus","NgsUserModule","forRoot","ngModule","RootNgsUserModule","providers","provide","useValue","NgModule","imports","HttpClientModule","FormsModule","RouterModule","CommonModule","MatExpansionModule","MatSnackBarModule","MatIconModule","MatButtonModule","MatCardModule","MatSelectModule","MatInputModule","MatFormFieldModule","MatTabsModule","FlexLayoutModule","MatRadioModule","ReactiveFormsModule","BrowserAnimationsModule","NgsFormModule","declarations","exports","___starter","StoreModule","forFeature","EffectsModule","routes","path","component","children","NgsUserRoutingModule","forChild","UserFacadeService","getDisplayName","ngs_user_profile_view"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class UserModel {\r\n\t_id: string;\r\n\t// FirstName: string;\r\n\t// LastName: string;\r\n\t// Username: string;\r\n\tDisplayName: string;\r\n\t// Username: string;\r\n\t// MobileNumber: string;\r\n\t// Sex: string;\r\n\t// Birthdate: string;\r\n\tEmail: string;\r\n\t// IdentificationNo: string;\r\n\t// IdentifierType: string;\r\n\t// RegisterDate: string;\r\n\t// UserType: string;\r\n\tRoles: string[];\r\n\tGroups: string[];\r\n\tconstructor() {\r\n\t\tthis.Roles = [];\r\n\t\tthis.Groups = [];\r\n\t}\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { UserModel } from \"./models/user.model\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nexport interface UserModuleConfig {\r\n\tserver?: string;\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t\tserver: string;\r\n\t};\r\n\tendpoints?: {\r\n\t\t// resetPasswordRequest: string;\r\n\t\tchangePassword?: string;\r\n\t\teditProfile?: string;\r\n\t\tgetAccountInfo?: string;\r\n\t\tprofileInformation?: string;\r\n\t\t// resetPassword: string;\r\n\t};\r\n\tforms?: {\r\n\t\tprofile_edit: string;\r\n\t};\r\n\tdashboardLinks?: {\r\n\t\troute: string;\r\n\t\ticon: string;\r\n\t\ttitle: string;\r\n\t}[];\r\n\tresponseToUserInfo?: (user: Observable<any>) => Observable<UserModel>;\r\n\tmapUserDisplayName?: (user: Observable<any>) => Observable<string>;\r\n}\r\n\r\nexport const MODULE_DEFAULT_CONFIG: UserModuleConfig = {\r\n\tserver: \"frontend_server\",\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"user/module/frontend/server/did/not/set\",\r\n\t\tserver: \"user/module/server/did/not/set\"\r\n\t},\r\n\tendpoints: {\r\n\t\t// resetPasswordRequest: '',\r\n\t\tchangePassword: \"\",\r\n\t\teditProfile: \"\",\r\n\t\tgetAccountInfo: \"\",\r\n\t\tprofileInformation: \"\"\r\n\t\t// resetPassword: '',\r\n\t},\r\n\tforms: {\r\n\t\tprofile_edit: \"\"\r\n\t},\r\n\tdashboardLinks: [],\r\n\tresponseToUserInfo: user$ => user$,\r\n\tmapUserDisplayName: user$ => user$.pipe(map(user => user.Username))\r\n};\r\n\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<UserModuleConfig>(\"UserModuleConfig\");\r\n","import { Injectable, Inject } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\nimport { getUserModuleConfig } from \"@soushians/config\";\r\n\r\nimport { UserModuleConfig, MODULE_CONFIG_TOKEN, MODULE_DEFAULT_CONFIG } from \"../user.config\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class UserConfigurationService {\r\n\tprivate _config: UserModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(this._config);\r\n\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<any>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\tthis.store.select(getUserModuleConfig).subscribe(userConfig => {\r\n\t\t\tif (!userConfig) return;\r\n\t\t\tthis._config = Object.assign({}, this._config, userConfig.Config);\r\n\t\t\tthis.config$.next(this._config);\r\n\t\t});\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { ProfileViewModel } from \"../models/profile-view.model\";\r\n\r\nexport enum ProfileViewActionTypes {\r\n\tGET_PROFILE = \"[USER][PROFILE] GET_PROFILE\",\r\n\tGET_PROFILE_START = \"[USER][PROFILE] GET_PROFILE_START\",\r\n\tGET_PROFILE_SUCCEED = \"[USER][PROFILE] GET_PROFILE_SUCCEED\",\r\n\tGET_PROFILE_FAILED = \"[USER][PROFILE] GET_PROFILE_FAILED\"\r\n}\r\n\r\nexport class GetProfile implements Action {\r\n\treadonly type = ProfileViewActionTypes.GET_PROFILE;\r\n}\r\nexport class GetProfileStart implements Action {\r\n\treadonly type = ProfileViewActionTypes.GET_PROFILE_START;\r\n}\r\nexport class GetProfileSucceed implements Action {\r\n\treadonly type = ProfileViewActionTypes.GET_PROFILE_SUCCEED;\r\n\tconstructor(public payload: ProfileViewModel.Response) {}\r\n}\r\nexport class GetProfileFailed implements Action {\r\n\treadonly type = ProfileViewActionTypes.GET_PROFILE_FAILED;\r\n}\r\n\r\nexport type ProfileViewAction = GetProfile | GetProfileStart | GetProfileSucceed | GetProfileFailed;\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { UserModel } from \"../models/user.model\";\r\n\r\nexport enum UserActionTypes {\r\n\tUSER_SELECTED = \"[USER] USER_SELECTED\",\r\n\tREFRESH_USER_INFO = \"[USER] REFRESH_USER_INFO\"\r\n}\r\n\r\nexport class UserSelectedAction implements Action {\r\n\treadonly type = UserActionTypes.USER_SELECTED;\r\n\tconstructor(public payload: UserModel) {}\r\n}\r\n\r\nexport class RefreshUserInfoAction implements Action {\r\n\treadonly type = UserActionTypes.REFRESH_USER_INFO;\r\n\tconstructor(public payload: UserModel) {}\r\n}\r\n\r\nexport type UserAction = UserSelectedAction | RefreshUserInfoAction;\r\n","import { UserModel } from \"../models/user.model\";\r\nimport { UserAction, UserActionTypes } from \"./user.actions\";\r\n\r\nexport interface State {\r\n\tloaded: boolean;\r\n\tdata: UserModel;\r\n}\r\nexport const initialState: State = {\r\n\tloaded: false,\r\n\tdata: new UserModel()\r\n};\r\n\r\nexport function userReducer(state = initialState, action: UserAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase UserActionTypes.USER_SELECTED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloaded: true,\r\n\t\t\t\tdata: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase UserActionTypes.REFRESH_USER_INFO: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloaded: true,\r\n\t\t\t\tdata: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const getAccountInfo = (state: State) => state.data;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { UserModel } from \"./user.model\";\r\n\r\nexport namespace ProfileViewModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tEmail: string;\r\n\r\n\t\tconstructor(initValue?: ProfileViewModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tUsername: new FormControl(\"\", [ Validators.minLength(8), Validators.required ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response extends UserModel {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t}\r\n\t}\r\n}\r\n","import { HttpRequestBaseModel, HttpResponseBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { UserModel } from \"./user.model\";\r\n\r\nexport namespace EditProfile_ApiModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tEmail: string;\r\n\t\tRoles: string[];\r\n\t\tGroups: string[];\r\n\r\n\t\tconstructor(initValue: Partial<Request> = {} as Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tEmail: new FormControl(null, [ Validators.required ]),\r\n\t\t\t\tRoles: new FormControl(null, [ Validators.required ]),\r\n\t\t\t\tGroups: new FormControl(null, [ Validators.required ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response implements HttpResponseBaseModel<Response> {\r\n\t\tResult: { User: UserModel };\r\n\t\tconstructor(initValue: Response = {} as Response) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\t\textractData() {\r\n\t\t\treturn this.Result.User;\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, filter, take, switchMap, combineLatest, catchError } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { stringTemplate } from \"@soushians/shared\";\r\nimport { getUser } from \"@soushians/authentication\";\r\n\r\nimport { UserConfigurationService } from \"./user-configuration.service\";\r\nimport { GetProfile } from \"../profile-view/profile-view.actions\";\r\nimport { getAccountInfo } from \"../dashboard/account.reducer\";\r\nimport { UserModuleConfig } from \"../user.config\";\r\nimport { ProfileViewModel } from \"../models/profile-view.model\";\r\nimport { UserModel } from \"../models/user.model\";\r\nimport { EditProfile_ApiModel } from \"../models/profile-edit.model\";\r\nimport { of } from \"rxjs\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class UserService {\r\n\tconfig: UserModuleConfig;\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<any>,\r\n\t\tprivate configurationService: UserConfigurationService\r\n\t) {\r\n\t\tthis.configurationService.config$.subscribe(config => (this.config = config));\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.store.dispatch(new GetProfile());\r\n\t\t}, 999);\r\n\t}\r\n\r\n\tgetAccountInfo(): Observable<ProfileViewModel.Response> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter(config => config.endpoints.profileInformation != \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tcombineLatest(this.store.select(getUser)),\r\n\t\t\tfilter(([config, user]: [UserModuleConfig, any]) => user != undefined),\r\n\t\t\tswitchMap(([config, user]: [UserModuleConfig, any]) => {\r\n\t\t\t\treturn this.http\r\n\t\t\t\t\t.get<any>(\r\n\t\t\t\t\t\tstringTemplate(config.env[config.server] + config.endpoints.profileInformation, {\r\n\t\t\t\t\t\t\tuser: user || {}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.let(config.responseToUserInfo)\r\n\t\t\t\t\t.pipe(\r\n\t\t\t\t\t\tmap((response: UserModel) => {\r\n\t\t\t\t\t\t\tconst _user: any = Object.assign({}, response);\r\n\t\t\t\t\t\t\tif (_user.Role) {\r\n\t\t\t\t\t\t\t\t_user.Roles = [_user.Role];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn _user;\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tcatchError(err => of(false))\r\n\t\t\t\t\t);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\teditProfile(data: EditProfile_ApiModel.Request): Observable<UserModel> {\r\n\t\tconst model = new EditProfile_ApiModel.Request(data);\r\n\t\treturn this.http\r\n\t\t\t.put<EditProfile_ApiModel.Response>(\r\n\t\t\t\tstringTemplate(this.config.env[this.config.server] + this.config.endpoints.editProfile, model),\r\n\t\t\t\tmodel.getRequestBody()\r\n\t\t\t)\r\n\t\t\t.pipe(map(response => new EditProfile_ApiModel.Response(response).extractData()));\r\n\t}\r\n\t// TODO: remove\r\n\tgetInfo(data: ProfileViewModel.Request): Observable<any> {\r\n\t\tconst model = new ProfileViewModel.Request(data);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ProfileViewModel.Response>(\r\n\t\t\t\tstringTemplate(this.config.env[this.config.server] + this.config.endpoints.getAccountInfo, model)\r\n\t\t\t)\r\n\t\t\t.pipe(map(response => response));\r\n\t}\r\n\r\n\tis_role(role: string): Observable<boolean> {\r\n\t\treturn this.store\r\n\t\t\t.select(getAccountInfo)\r\n\t\t\t.pipe(filter(user => user && user.Roles != undefined), take(1), map(user => user.Roles.indexOf(role) > -1));\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { UserModel } from \"../models/user.model\";\r\nimport { EditProfile_ApiModel } from \"../models/profile-edit.model\";\r\n\r\nexport enum EditProfileActionTypes {\r\n\tEDIT_PROFILE = \"[USER][PASSWORD] EDIT_PROFILE\",\r\n\tEDIT_PROFILE_START = \"[USER][PASSWORD] EDIT_PROFILE_START\",\r\n\tEDIT_PROFILE_SUCCEED = \"[USER][PASSWORD] EDIT_PROFILE_SUCCEED\",\r\n\tEDIT_PROFILE_FAILED = \"[USER][PASSWORD] EDIT_PROFILE_FAILED\"\r\n}\r\n\r\nexport class EditProfile implements Action {\r\n\treadonly type = EditProfileActionTypes.EDIT_PROFILE;\r\n\tconstructor(public payload: EditProfile_ApiModel.Request) {}\r\n}\r\nexport class EditProfileStart implements Action {\r\n\treadonly type = EditProfileActionTypes.EDIT_PROFILE_START;\r\n\tconstructor(public payload: EditProfile_ApiModel.Request) {}\r\n}\r\nexport class EditProfileSucceed implements Action {\r\n\treadonly type = EditProfileActionTypes.EDIT_PROFILE_SUCCEED;\r\n\tconstructor(public payload: UserModel) {}\r\n}\r\nexport class EditProfileFailed implements Action {\r\n\treadonly type = EditProfileActionTypes.EDIT_PROFILE_FAILED;\r\n}\r\n\r\nexport type EditProfileAction = EditProfile | EditProfileStart | EditProfileSucceed | EditProfileFailed;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { map, catchError, switchMap, pluck } from \"rxjs/operators\";\r\n\r\nimport { UserService } from \"../services/user.service\";\r\nimport { EditProfile_ApiModel } from \"../models/profile-edit.model\";\r\nimport {\r\n\tEditProfileActionTypes,\r\n\tEditProfileStart,\r\n\tEditProfileSucceed,\r\n\tEditProfileFailed\r\n} from \"./edit-profile.actions\";\r\nimport { GetProfile } from \"../profile-view/profile-view.actions\";\r\n\r\n@Injectable()\r\nexport class EditProfileEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private service: UserService) {}\r\n\r\n\t@Effect()\r\n\tEditProfileRequest$ = this.actions$.pipe(\r\n\t\tofType(EditProfileActionTypes.EDIT_PROFILE),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap((data: any) => new EditProfileStart(data))\r\n\t);\r\n\r\n\t@Effect()\r\n\tRequestEditProfileLink$ = this.actions$.pipe(\r\n\t\tofType(EditProfileActionTypes.EDIT_PROFILE_START),\r\n\t\tpluck(\"payload\"),\r\n\t\tswitchMap((data: EditProfile_ApiModel.Request) => this.service.editProfile(data)),\r\n\t\tmap(res => new EditProfileSucceed(res)),\r\n\t\tcatchError(() => of(new EditProfileFailed()))\r\n\t);\r\n\t// .switchMap((data: EditProfile_ApiModel.Request) => {\r\n\t// \treturn this.service\r\n\t// \t\t.editProfile(data)\r\n\t// \t\t.map((res) => new EditProfileSucceed(res))\r\n\t// \t\t.catch(() => of(new EditProfileFailed()));\r\n\t// });\r\n\r\n\t@Effect()\r\n\tgoToView$ = this.actions$.pipe(\r\n\t\tofType(EditProfileActionTypes.EDIT_PROFILE_SUCCEED),\r\n\t\tmap(() => {\r\n\t\t\tthis.router.navigate([ \"/user/profile\" ]);\r\n\t\t\treturn new GetProfile();\r\n\t\t})\r\n\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map, switchMap, catchError, pluck } from \"rxjs/operators\";\r\n\r\nimport { UserService } from \"../services/user.service\";\r\nimport { EditProfile_ApiModel } from \"../models/profile-edit.model\";\r\nimport { ProfileViewActionTypes, GetProfileStart, GetProfileSucceed, GetProfileFailed } from \"./profile-view.actions\";\r\nimport { RefreshUserInfoAction } from \"../dashboard/user.actions\";\r\n\r\n@Injectable()\r\nexport class ProfileViewEffects {\r\n\tconstructor(private actions$: Actions<any>, private userService: UserService) {}\r\n\r\n\t@Effect()\r\n\tProfileRequest$ = this.actions$.pipe(\r\n\t\tofType(ProfileViewActionTypes.GET_PROFILE),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap(data => new GetProfileStart())\r\n\t);\r\n\r\n\t@Effect()\r\n\tgetProfile$ = this.actions$.pipe(\r\n\t\tofType(ProfileViewActionTypes.GET_PROFILE_START),\r\n\t\tpluck(\"payload\"),\r\n\t\tswitchMap((data: EditProfile_ApiModel.Request) =>\r\n\t\t\tthis.userService\r\n\t\t\t\t.getAccountInfo()\r\n\t\t\t\t.pipe(map(res => new GetProfileSucceed(res)), catchError(() => of(new GetProfileFailed())))\r\n\t\t)\r\n\t);\r\n\r\n\t@Effect()\r\n\trefreshUserInfo$ = this.actions$.pipe(\r\n\t\tofType(ProfileViewActionTypes.GET_PROFILE_SUCCEED),\r\n\t\tpluck(\"payload\"),\r\n\t\tmap((data: any) => new RefreshUserInfoAction(data))\r\n\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { of } from \"rxjs\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { SignInActionTypes } from \"@soushians/authentication\";\r\n\r\nimport { UserService } from \"../services/user.service\";\r\nimport { GetProfile, GetProfileSucceed } from \"../profile-view/profile-view.actions\";\r\nimport { RefreshUserInfoAction } from \"../dashboard/user.actions\";\r\nimport { UserModel } from \"../models/user.model\";\r\n\r\n@Injectable()\r\nexport class UserEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private service: UserService) {}\r\n\r\n\t// @Effect()\r\n\t// updateProfileInformation$ = this.actions$.pipe(\r\n\t// ofType(SignInActionTypes.SIGNIN_SUCCEED),\r\n\t// \tmap(action => action.payload),\r\n\t// \tmap(user => {\r\n\t// \t\treturn new GetProfileSucceed(user);\r\n\t// \t})\r\n\t// );\r\n\t@Effect()\r\n\tgetAccountInfo$ = this.actions$.pipe(\r\n\t\tofType(SignInActionTypes.SIGNIN_SUCCEED),\r\n\t\tmap(() => {\r\n\t\t\treturn new GetProfile();\r\n\t\t})\r\n\t);\r\n\t@Effect()\r\n\tsignout$ = this.actions$.pipe(\r\n\t\tofType(SignInActionTypes.SIGNOUT),\r\n\t\tmap(() => new RefreshUserInfoAction({} as UserModel))\r\n\t);\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { ResetPasswordRequestModel } from \"../models/reset-password-request.model\";\r\n\r\nexport enum ResetPasswordRequestActionTypes {\r\n\tGET_RESET_PASSWORD_LINK = \"[USER][PASSWORD] GET_RESET_PASSWORD_LINK\",\r\n\tRESET_PASSWORD_LINK_REQUEST_START = \"[USER][PASSWORD] RESET_PASSWORD_LINK_REQUEST_START\",\r\n\tRESET_PASSWORD_LINK_REQUEST_SUCCEED = \"[USER][PASSWORD] RESET_PASSWORD_LINK_REQUEST_SUCCEED\",\r\n\tRESET_PASSWORD_LINK_REQUEST_FAILED = \"[USER][PASSWORD] RESET_PASSWORD_LINK_REQUEST_FAILED\",\r\n\tDISABLE_GET_LINK = \"[USER][PASSWORD] DISABLE_GET_LINK\",\r\n\tENABLE_GET_LINK = \"[USER][PASSWORD] ENABLE_GET_LINK\",\r\n\tMAXIMUM_TRY_HAPPEND = \"[USER][PASSWORD] MAXIMUM_TRY_HAPPEND\",\r\n\tPASSWORD_CHANGED_SUCCEED = \"[USER][PASSWORD] PASSWORD_CHANGED_SUCCEED\",\r\n\tPASSWORD_CHANGED_FAILED = \"[USER][PASSWORD] PASSWORD_CHANGED_FAILED\"\r\n}\r\n\r\nexport class GetResetPasswordLink implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.GET_RESET_PASSWORD_LINK;\r\n\tconstructor(public payload: ResetPasswordRequestModel.Request) {}\r\n}\r\nexport class ResetPasswordLinkRequestStart implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_START;\r\n\tconstructor(public payload: ResetPasswordRequestModel.Request) {}\r\n}\r\nexport class ResetPasswordLinkRequestSucceed implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_SUCCEED;\r\n\tconstructor() {}\r\n}\r\nexport class ResetPasswordLinkRequestFailed implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_FAILED;\r\n\tconstructor() {}\r\n}\r\nexport class DisableGetLink implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.DISABLE_GET_LINK;\r\n}\r\nexport class EnableGetLink implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.ENABLE_GET_LINK;\r\n}\r\nexport class MaximumTryHappend implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.MAXIMUM_TRY_HAPPEND;\r\n}\r\nexport class PasswordChangedSucceed implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.PASSWORD_CHANGED_SUCCEED;\r\n}\r\nexport class PasswordChangedFailed implements Action {\r\n\treadonly type = ResetPasswordRequestActionTypes.PASSWORD_CHANGED_FAILED;\r\n\tconstructor(public payload: string) {}\r\n}\r\n\r\nexport type ResetPasswordRequestAction =\r\n\t| GetResetPasswordLink\r\n\t| ResetPasswordLinkRequestStart\r\n\t| ResetPasswordLinkRequestFailed\r\n\t| DisableGetLink\r\n\t| ResetPasswordLinkRequestSucceed\r\n\t| EnableGetLink\r\n\t| MaximumTryHappend\r\n\t| PasswordChangedSucceed\r\n\t| PasswordChangedFailed;\r\n","import { ResetPasswordRequestAction, ResetPasswordRequestActionTypes } from \"./reset-password-request.actions\";\r\n\r\nexport interface State {\r\n\tnumberOfRequested: number;\r\n\tlastRequestedTime: string;\r\n\tdisable: boolean;\r\n}\r\nexport const initialState: State = {\r\n\tnumberOfRequested: 0,\r\n\tlastRequestedTime: null,\r\n\tdisable: false\r\n};\r\nexport function reducer(state = initialState, action: ResetPasswordRequestAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase ResetPasswordRequestActionTypes.GET_RESET_PASSWORD_LINK: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnumberOfRequested: state.numberOfRequested + 1,\r\n\t\t\t\tlastRequestedTime: Date.now().toString()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ResetPasswordRequestActionTypes.DISABLE_GET_LINK: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdisable: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ResetPasswordRequestActionTypes.ENABLE_GET_LINK: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdisable: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getNumberOfRequeseted = (state: State) => state.numberOfRequested;\r\nexport var getStatus = (state: State) => state.disable;\r\n","import { Action } from \"@ngrx/store\";\r\nimport { ChangePasswordModel } from \"../models/change-password.model\";\r\n\r\nexport enum ChangePasswordActionTypes {\r\n\tCHANGE_PASSWORD = \"[USER][PASSWORD] CHANGE_PASSWORD\",\r\n\tPASSWORD_CHANGED_START = \"[USER][PASSWORD] PASSWORD_CHANGED_START\",\r\n\tPASSWORD_CHANGED_SUCCEED = \"[USER][PASSWORD] PASSWORD_CHANGED_SUCCEED\",\r\n\tPASSWORD_CHANGED_FAILED = \"[USER][PASSWORD] PASSWORD_CHANGED_FAILED\"\r\n}\r\n\r\nexport class ChangePassword implements Action {\r\n\treadonly type = ChangePasswordActionTypes.CHANGE_PASSWORD;\r\n\tconstructor(public payload: ChangePasswordModel.Request) {}\r\n}\r\nexport class ChangePasswordStart implements Action {\r\n\treadonly type = ChangePasswordActionTypes.PASSWORD_CHANGED_START;\r\n\tconstructor(public payload: ChangePasswordModel.Request) {}\r\n}\r\nexport class ChangePasswordSucceed implements Action {\r\n\treadonly type = ChangePasswordActionTypes.PASSWORD_CHANGED_SUCCEED;\r\n\tconstructor(public payload: ChangePasswordModel.Response) {}\r\n}\r\nexport class ChangePasswordFailed implements Action {\r\n\treadonly type = ChangePasswordActionTypes.PASSWORD_CHANGED_FAILED;\r\n}\r\n\r\nexport type ChangePasswordAction = ChangePassword | ChangePasswordStart | ChangePasswordSucceed | ChangePasswordFailed;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\nimport { ChangePasswordAction, ChangePasswordActionTypes } from \"./change-password.actions\";\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\"\r\n};\r\nexport function reducer(state = initialState, action: ChangePasswordAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase ChangePasswordActionTypes.CHANGE_PASSWORD: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"dirty\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ChangePasswordActionTypes.PASSWORD_CHANGED_START: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ChangePasswordActionTypes.PASSWORD_CHANGED_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"succeed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ChangePasswordActionTypes.PASSWORD_CHANGED_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn initialState;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getStatus = (state: State) => state.status;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\nimport { EditProfileAction, EditProfileActionTypes } from \"./edit-profile.actions\";\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\"\r\n};\r\nexport function reducer(state = initialState, action: EditProfileAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase EditProfileActionTypes.EDIT_PROFILE: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"dirty\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditProfileActionTypes.EDIT_PROFILE_START: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditProfileActionTypes.EDIT_PROFILE_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"succeed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditProfileActionTypes.EDIT_PROFILE_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport let getStatus = (state: State) => state.status;\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { ProfileViewModel } from \"../models/profile-view.model\";\r\n\r\nexport enum SearchActionTypes {\r\n\tSEARCH = \"[USER][SEARCH] SEARCH\",\r\n\tSEARCH_START = \"[USER][SEARCH] SEARCH_START\",\r\n\tSEARCH_SUCCEED = \"[USER][SEARCH] SEARCH_SUCCEED\",\r\n\tSEARCH_FAILED = \"[USER][SEARCH] SEARCH_FAILED\",\r\n\tCLEAR_SEARCHED_USER = \"[USER][SEARCH] CLEAR_SEARCHED_USER\"\r\n}\r\n\r\nexport class Search implements Action {\r\n\treadonly type = SearchActionTypes.SEARCH;\r\n\tconstructor(public payload: ProfileViewModel.Request) {}\r\n}\r\nexport class SearchStartAction implements Action {\r\n\treadonly type = SearchActionTypes.SEARCH_START;\r\n\tconstructor(public payload: ProfileViewModel.Request) {}\r\n}\r\nexport class SearchSucceed implements Action {\r\n\treadonly type = SearchActionTypes.SEARCH_SUCCEED;\r\n\tconstructor(public payload: ProfileViewModel.Response) {}\r\n}\r\nexport class SearchFailed implements Action {\r\n\treadonly type = SearchActionTypes.SEARCH_FAILED;\r\n}\r\nexport class ClearSearchedUser implements Action {\r\n\treadonly type = SearchActionTypes.CLEAR_SEARCHED_USER;\r\n}\r\n\r\nexport type SearchAction = Search | SearchStartAction | SearchSucceed | SearchFailed | ClearSearchedUser;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\nimport { ProfileViewModel } from \"../models/profile-view.model\";\r\nimport { SearchActionTypes, SearchAction } from \"./search.actions\";\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n\tdata: ProfileViewModel.Response;\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\",\r\n\tdata: {} as ProfileViewModel.Response\r\n};\r\nexport function reducer(state = initialState, action: SearchAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase SearchActionTypes.SEARCH: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"dirty\",\r\n\t\t\t\tdata: new ProfileViewModel.Response()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SearchActionTypes.SEARCH_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SearchActionTypes.SEARCH_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"succeed\",\r\n\t\t\t\tdata: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SearchActionTypes.SEARCH_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SearchActionTypes.CLEAR_SEARCHED_USER: {\r\n\t\t\treturn initialState;\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getStatus = (state: State) => state.status;\r\nexport var getAccountInfo = (state: State) => state.data;\r\n","import { createSelector, createFeatureSelector, MemoizedSelector } from \"@ngrx/store\";\r\nimport * as userReducer from \"./dashboard/account.reducer\";\r\nimport { getAccountInfo as _getAccountInfo } from \"./dashboard/account.reducer\";\r\nimport * as resetPasswordRequestReducer from \"./reset-password/reset-password-request.reducer\";\r\nimport * as changePassword from \"./change-password/change-password.reducer\";\r\nimport * as editProfileReducer from \"./profile-edit/edit-profile.reducer\";\r\nimport * as searchReducer from \"./search-account/search.reducer\";\r\nimport { UserModel } from \"./models/user.model\";\r\nimport { responseStatusTypes } from \"@soushians/shared\";\r\n\r\nexport interface UserState {\r\n\tuser: userReducer.State;\r\n\tresetPasswordRequest: resetPasswordRequestReducer.State;\r\n\tsearchView: searchReducer.State;\r\n\tchangePassword: changePassword.State;\r\n\teditProfile: editProfileReducer.State;\r\n}\r\n\r\nexport const UserReducers = {\r\n\tuser: userReducer.userReducer,\r\n\tresetPasswordRequest: resetPasswordRequestReducer.reducer,\r\n\tchangePassword: changePassword.reducer,\r\n\tsearchView: searchReducer.reducer,\r\n\teditProfile: editProfileReducer.reducer\r\n};\r\n\r\nexport interface AppState {\r\n\t\"user\": UserState;\r\n}\r\n\r\n//#region selectors\r\n\r\nexport const selectFeatureState = createFeatureSelector<UserState>(\"user\");\r\n\r\nexport const getUserInforamtionStatus = createSelector(selectFeatureState, (state: UserState) => state.user.loaded);\r\nexport const isSignedIn = createSelector(selectFeatureState, (state: UserState) => state.user.loaded);\r\n\r\nexport const selectResetPasswordRequestState = createSelector(\r\n\tselectFeatureState,\r\n\t(state: UserState) => state.resetPasswordRequest\r\n);\r\nexport const getNumberOfRequeseted = createSelector(\r\n\tselectResetPasswordRequestState,\r\n\tresetPasswordRequestReducer.getNumberOfRequeseted\r\n);\r\nexport const getResetPasswordRequestStatus = createSelector(\r\n\tselectResetPasswordRequestState,\r\n\tresetPasswordRequestReducer.getStatus\r\n);\r\n\r\n//#region user\r\nexport const selectUserInformaionState = createSelector(selectFeatureState, (state: UserState) => state.user);\r\nexport const getAccountInfo = createSelector(selectUserInformaionState, _getAccountInfo);\r\n//#endregion\r\n\r\n//#region search\r\nexport const selectSearchState = createSelector(selectFeatureState, (state: UserState) => state.searchView);\r\nexport const getSearchStatus = createSelector(selectSearchState, searchReducer.getStatus);\r\n//#endregion\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { responseStatusTypes } from \"@soushians/shared\";\r\n\r\nimport { ProfileViewModel } from \"../../models/profile-view.model\";\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { Search } from \"../search.actions\";\r\n\r\n@Component({\r\n\tselector: \"search\",\r\n\ttemplateUrl: \"./search.component.html\",\r\n\tstyleUrls: [ \"./search.component.scss\" ]\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\tuser: Observable<ProfileViewModel.Response>;\r\n\tuserStatus$: Observable<responseStatusTypes>;\r\n\tformGroup = ProfileViewModel.Request.formGroup;\r\n\tuserDataLoaded$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\tuserNotFound$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\tconstructor(private store: Store<FeatureReducer.AppState>) {\r\n\t\tthis.user = this.store.select(FeatureReducer.getAccountInfo);\r\n\t\tthis.userStatus$ = this.store.select(FeatureReducer.getSearchStatus);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.userStatus$.subscribe(value => this.userDataLoaded$.next(!\"pristine|dirty|pending\".includes(value)));\r\n\t}\r\n\tsearch() {\r\n\t\tif (!this.formGroup.valid) return;\r\n\t\tthis.store.dispatch(new Search(this.formGroup.value));\r\n\t}\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Component({\r\n\tselector: \"user-change-password\",\r\n\ttemplateUrl: \"./change-password.component.html\",\r\n\tstyleUrls: [ \"./change-password.component.scss\" ]\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\t@Input() formGroup: FormGroup;\r\n\t@Output() submited = new EventEmitter();\r\n\r\n\tngOnInit() {}\r\n\r\n\tsubmit() {}\r\n\r\n\tconstructor() {}\r\n\r\n\tchangePassword() {\r\n\t\tif (!this.formGroup.valid) return;\r\n\t\tthis.submited.emit(this.formGroup.value);\r\n\t}\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\r\n\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { ConfigModel } from \"@soushians/config\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\n\r\n@Component({\r\n\tselector: \"profile-edit\",\r\n\ttemplateUrl: \"./profile-edit.component.html\"\r\n})\r\nexport class ProfileEditComponent implements OnInit {\r\n\t@Output() submited = new EventEmitter();\r\n\t@Input() userInfo: any;\r\n\t@Input() formId: string;\r\n\t@Input(\"roles\") roles$: Observable<string[]>;\r\n\t@Input() groups: string[];\r\n\tconstructor(private router: Router) {}\r\n\r\n\tngOnInit() {}\r\n\teditProfile(form: FormGroup) {\r\n\t\tif (!form.valid) return;\r\n\t\tthis.submited.emit(form.value);\r\n\t}\r\n\tgoback() {\r\n\t\tthis.router.navigate([ \"..\" ]);\r\n\t}\r\n}\r\n","import { Component, OnInit, Input, AfterViewInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { UserConfigurationService } from \"../../services/user-configuration.service\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\tselector: \"user-dashboard-links\",\r\n\ttemplateUrl: \"./dashboard-links.component.html\",\r\n\tstyleUrls: [ \"./dashboard-links.component.scss\" ]\r\n})\r\nexport class DashboardLinksComponent implements AfterViewInit {\r\n\tlinks: any[];\r\n\tlinks$: Observable<any[]>;\r\n\tconstructor(private userConfigurationService: UserConfigurationService, private store: Store<any>) {\r\n\t\tthis.links$ = this.userConfigurationService.config$.pipe(map(data => data.dashboardLinks));\r\n\t\tthis.links = [\r\n\t\t\t{\r\n\t\t\t\ttitle: \"ÙØ´Ø§ÙØ¯Ù Ø­Ø³Ø§Ø¨ Ú©Ø§Ø±Ø¨Ø±Û\",\r\n\t\t\t\troute: \"/user/panel/profile\",\r\n\t\t\t\t// description: \"ÙÙØ±Ù Ø§ÛÙ¾Ø³ÙÙ ÙØªÙ Ø³Ø§Ø®ØªÚ¯Û Ø¨Ø§ ØªÙÙÛØ¯ Ø³Ø§Ø¯Ú¯Û ÙØ§ÙÙÙÙÙ\",\r\n\t\t\t\ticon: \"person\"\r\n\t\t\t}\r\n\t\t\t// ,\r\n\t\t\t// {\r\n\t\t\t// \troute: \"/user/panel/password/change\",\r\n\t\t\t// \ttitle: \"ØªØºÛÛØ± Ú©ÙÙÙ Ø¹Ø¨ÙØ±\",\r\n\t\t\t// \t// description: \"ÙÙØ±Ù Ø§ÛÙ¾Ø³ÙÙ ÙØªÙ Ø³Ø§Ø®ØªÚ¯Û Ø¨Ø§ ØªÙÙÛØ¯ Ø³Ø§Ø¯Ú¯Û ÙØ§ÙÙÙÙÙ\",\r\n\t\t\t// \ticon: \"security\"\r\n\t\t\t// }\r\n\t\t];\r\n\t}\r\n\r\n\tngAfterViewInit() {}\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { ResetPasswordRequestModel } from \"../../models/reset-password-request.model\";\r\nimport { MatSnackBar } from \"@angular/material\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { map, takeWhile } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\tselector: \"user-reset-password-request\",\r\n\ttemplateUrl: \"./reset-password-request.component.html\",\r\n\tstyleUrls: [ \"./reset-password-request.component.scss\" ]\r\n})\r\nexport class ResetPasswordRequestComponent implements OnInit {\r\n\t@Output() submitted = new EventEmitter<ResetPasswordRequestModel.Request>();\r\n\r\n\t@Input() formGroup: FormGroup;\r\n\t@Input() numberOfRequested: Observable<number>;\r\n\t@Input() canRequestPin: Observable<boolean>;\r\n\t@Input()\r\n\tset pending(isPending: boolean) {\r\n\t\tif (isPending) {\r\n\t\t\tthis.formGroup.disable();\r\n\t\t}\r\n\r\n\t\tthis.formGroup.enable();\r\n\t}\r\n\r\n\ttimer$: Observable<number>;\r\n\tmaximumResendingHappend$ = new BehaviorSubject(false);\r\n\r\n\tconstructor(public snackBar: MatSnackBar) {\r\n\t\tthis.timer$ = Observable.timer(0, 100).pipe(\r\n\t\t\tmap(i => i + 1),\r\n\t\t\ttakeWhile(i => i * 100 <= 3000),\r\n\t\t\tmap(i => 3000 - i * 100)\r\n\t\t);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.numberOfRequested.subscribe(data => {\r\n\t\t\tif (data > 2) {\r\n\t\t\t\tthis.maximumResendingHappend$.next(true);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tif (this.formGroup.valid) {\r\n\t\t\tthis.submitted.emit(this.formGroup.value);\r\n\t\t\tlet message = this.maximumResendingHappend$.getValue()\r\n\t\t\t\t? \"Ø¹Ø¯Ù Ø§ÙÚ©Ø§Ù ...\"\r\n\t\t\t\t: \"Ù¾ÛØ§ÙÚ© Ø¬Ø¯ÛØ¯ Ø¨Ø±Ø§Û Ø´ÙØ§ Ø§Ø±Ø³Ø§Ù Ú¯Ø±Ø¯ÛØ¯.\";\r\n\t\t\tthis.snackBar.open(message, \"\", {\r\n\t\t\t\tduration: 3000\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { ProfileViewModel } from \"../../models/profile-view.model\";\r\nimport { Search } from \"../../search-account/search.actions\";\r\n\r\n@Component({\r\n\ttemplate: \"<router-outlet></router-outlet>\"\r\n})\r\nexport class FeatureContainerComponent {\r\n\tconstructor(private route: ActivatedRoute, private store: Store<FeatureReducer.AppState>) {\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tlet model = new ProfileViewModel.Request({ Email: params.Email } as ProfileViewModel.Request);\r\n\t\t\tthis.store.dispatch(new Search(model));\r\n\t\t});\r\n\t}\r\n}\r\n","import { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { MatchValidator } from \"@soushians/shared\";\r\n\r\nexport namespace ChangePasswordModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tUsername: string;\r\n\t\tPassword: string;\r\n\r\n\t\tconstructor(initValue: ChangePasswordModel.Request = {} as ChangePasswordModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {\r\n\t\t\t\tPassword: this.Password\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tPassword: new FormControl(null, [ Validators.required, Validators.minLength(7) ]),\r\n\t\t\t\tConfirm: new FormControl(null, [ Validators.required, MatchValidator(\"Password\") ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { ChangePasswordModel } from \"../../models/change-password.model\";\r\n\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { ChangePassword } from \"../change-password.actions\";\r\n\r\n@Component({\r\n\ttemplate: `<user-change-password\r\n                (submited)='changePassword($event)'\r\n                [formGroup]=\"formGroup\"\r\n              ></user-change-password>`\r\n})\r\nexport class ChangePasswordContainerComponent implements OnInit {\r\n\tformGroup = ChangePasswordModel.Request.formGroup;\r\n\tChangePasswordModel = new ChangePasswordModel.Request();\r\n\tconstructor(private route: ActivatedRoute, private store: Store<FeatureReducer.AppState>) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.store.select(FeatureReducer.getAccountInfo).subscribe(userInfo => {\r\n\t\t\tif (!userInfo) return;\r\n\t\t\t// TODO:\r\n\t\t\t// this.ChangePasswordModel.Username = userInfo.Username;\r\n\t\t});\r\n\t}\r\n\tchangePassword(event) {\r\n\t\tthis.ChangePasswordModel.Password = this.formGroup.get(\"Password\").value;\r\n\r\n\t\tthis.store.dispatch(new ChangePassword(this.ChangePasswordModel));\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { of } from \"rxjs\";\r\n\r\nimport { getAppConfig } from \"@soushians/config\";\r\n\r\nimport { UserModel } from \"../../models/user.model\";\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { EditProfile } from \"../edit-profile.actions\";\r\nimport { UserConfigurationService } from \"../../services/user-configuration.service\";\r\nimport { UserModuleConfig } from \"../../user.config\";\r\nimport { map, filter } from \"rxjs/operators\";\r\n\r\n@Component({\r\n\tselector: \"profile-edit-contianer\",\r\n\ttemplate: `<profile-edit\r\n                (submited)='updateProfile($event)'\r\n                [userInfo]=\"userInforamation$ | async\"\r\n                [roles]=\"roles$\"\r\n\t\t\t\t[groups]=\"groups | async\"\r\n\t\t\t\t[formId]=\"(config$|async)?.forms.profile_edit\"\r\n              ></profile-edit>`\r\n})\r\nexport class ProfileEditContainerComponent implements OnInit {\r\n\tuserInforamation$: Observable<UserModel>;\r\n\troles$: Observable<string[]>;\r\n\tgroups: Observable<string[]>;\r\n\tconfig$: Observable<UserModuleConfig>;\r\n\r\n\tconstructor(private store: Store<FeatureReducer.AppState>, private configService: UserConfigurationService) {\r\n\t\tthis.userInforamation$ = this.store.select(FeatureReducer.getAccountInfo);\r\n\t\tthis.roles$ = this.store\r\n\t\t\t.select(getAppConfig)\r\n\t\t\t.pipe(filter(config => config != undefined), map(config => config.Config.Roles));\r\n\t\t// TODO:\r\n\t\t// this.groups = this.diagramService.getGroups();\r\n\t\tthis.groups = of([ \"test1\", \"test2\" ]);\r\n\r\n\t\tthis.config$ = this.configService.config$;\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\r\n\tupdateProfile(data) {\r\n\t\tthis.store.dispatch(new EditProfile(data));\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { UserModel } from \"../../models/user.model\";\r\nimport { getAccountInfo } from \"../account.reducer\";\r\n\r\n@Component({\r\n\tselector: \"user-dashboard-container\",\r\n\ttemplateUrl: \"./dashboard.component.html\",\r\n\tstyleUrls: [ \"./dashboard.component.css\" ]\r\n})\r\nexport class DashboardContainerComponent implements OnInit {\r\n\tuser$: Observable<UserModel>;\r\n\t// is_agent : Observable<boolean>;\r\n\tconstructor(private store: Store<any>) {\r\n\t\tthis.user$ = this.store.select(getAccountInfo);\r\n\t\t// this.is_agent = signinService.is_agent();\r\n\t}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { UserModel } from \"../../models/user.model\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\n@Component({\r\n\tselector: \"user-profile\",\r\n\ttemplateUrl: \"./profile.component.html\",\r\n\tstyleUrls: [ \"./profile.component.css\" ]\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\t@Input()\r\n\tset information(information: UserModel) {\r\n\t\tif (!information) return;\r\n\r\n\t\tObject.keys(information).forEach(k => this.info.push([ k, information[k] ]));\r\n\t}\r\n\t@Input() dataStatus$: BehaviorSubject<boolean>;\r\n\tinfo: any[] = [];\r\n\tconstructor() {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { UserModel } from \"../../models/user.model\";\r\n\r\n@Component({\r\n\ttemplate: `<user-profile\r\n                [information]=\"data$ | async\"\r\n                [dataStatus$]='dataStatus$'\r\n            ></user-profile>`\r\n})\r\nexport class ProfileContainerComponent implements OnInit {\r\n\tdata$: Observable<UserModel>;\r\n\tdataStatus$: Observable<boolean>;\r\n\r\n\tconstructor(private store: Store<FeatureReducer.AppState>) {\r\n\t\tthis.data$ = this.store.select(FeatureReducer.getAccountInfo);\r\n\t\tthis.dataStatus$ = this.store.select(FeatureReducer.getUserInforamtionStatus);\r\n\t}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule\r\n} from \"@angular/material\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\n\r\nimport { NgsFormModule } from \"@soushians/form\";\r\n\r\nimport { UserModuleConfig, MODULE_CONFIG_TOKEN } from \"./user.config\";\r\nimport { EditProfileEffects } from \"./profile-edit/edit-profile.effects\";\r\nimport { ProfileViewEffects } from \"./profile-view/profile-view.effects\";\r\nimport { UserEffects } from \"./feature/feature.effects\";\r\nimport { SearchComponent } from \"./search-account/search/search.component\";\r\nimport { ChangePasswordComponent } from \"./change-password/change-password/change-password.component\";\r\nimport { ProfileEditComponent } from \"./profile-edit/profile-edit/profile-edit.component\";\r\nimport { DashboardLinksComponent } from \"./dashboard/dashboard-links/dashboard-links.component\";\r\nimport { ResetPasswordRequestComponent } from \"./reset-password/reset-password-request/reset-password-request.component\";\r\nimport { FeatureContainerComponent } from \"./feature/feature-container/feature-container.component\";\r\nimport { ChangePasswordContainerComponent } from \"./change-password/change-password-container/change-password-container.component\";\r\nimport { ProfileEditContainerComponent } from \"./profile-edit/profile-edit-container/profile-edit-container.component\";\r\nimport { DashboardContainerComponent } from \"./dashboard/dashboard-container/dashboard.component\";\r\nimport { ProfileComponent } from \"./profile-view/profile/profile.component\";\r\nimport { ProfileContainerComponent } from \"./profile-view/profile-container/profile-container.component\";\r\nimport { UserReducers } from \"./user.reducers\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tRouterModule,\r\n\t\tCommonModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSelectModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatRadioModule,\r\n\t\tReactiveFormsModule,\r\n\t\tBrowserAnimationsModule,\r\n\t\tNgsFormModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tSearchComponent,\r\n\t\tProfileComponent,\r\n\t\tChangePasswordComponent,\r\n\t\tProfileEditComponent,\r\n\t\tProfileContainerComponent,\r\n\t\tDashboardLinksComponent,\r\n\t\tResetPasswordRequestComponent,\r\n\t\tFeatureContainerComponent,\r\n\t\tDashboardContainerComponent,\r\n\t\tChangePasswordContainerComponent,\r\n\t\tProfileEditContainerComponent\r\n\t],\r\n\texports: []\r\n})\r\nexport class NgsUserModule {\r\n\tstatic forRoot(config?: UserModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: RootNgsUserModule,\r\n\t\t\tproviders: [{ provide: MODULE_CONFIG_TOKEN, useValue: config }]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsUserModule,\r\n\t\tStoreModule.forFeature(\"user\", UserReducers),\r\n\t\tEffectsModule.forFeature([\r\n\t\t\t// ResetPasswordRequestEffects,\r\n\t\t\tEditProfileEffects,\r\n\t\t\t// ChangePasswordEffects,\r\n\t\t\tProfileViewEffects,\r\n\t\t\t// SearchEffects,\r\n\t\t\tUserEffects\r\n\t\t])\r\n\t]\r\n})\r\nexport class RootNgsUserModule {\r\n\tconstructor() {\r\n\t\t(<any>window).___starter = (<any>window).___starter || {};\r\n\t\t(<any>window).___starter.user = \"8.0.10\";\r\n\t}\r\n}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { DashboardContainerComponent } from \"./dashboard/dashboard-container/dashboard.component\";\r\nimport { ProfileContainerComponent } from \"./profile-view/profile-container/profile-container.component\";\r\nimport { ProfileEditContainerComponent } from \"./profile-edit/profile-edit-container/profile-edit-container.component\";\r\n// import { ChangePasswordContainerComponent } from \"./change-password/change-password-container/change-password-container.component\";\r\n// import { SearchComponent } from \"./search-account/search/search.component\";\r\nimport { FeatureContainerComponent } from \"./feature/feature-container/feature-container.component\";\r\nimport { DashboardLinksComponent } from \"./dashboard/dashboard-links/dashboard-links.component\";\r\n\r\nexport const routes: Routes = [\r\n\t{\r\n\t\tpath: \"user/panel\",\r\n\t\tcomponent: DashboardContainerComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"\",\r\n\t\t\t\tcomponent: DashboardLinksComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"profile\",\r\n\t\t\t\tcomponent: ProfileContainerComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"profile/edit\",\r\n\t\t\t\tcomponent: ProfileEditContainerComponent\r\n\t\t\t}\r\n\t\t\t// {\r\n\t\t\t// \tpath: \"password/change\",\r\n\t\t\t// \tcomponent: ChangePasswordContainerComponent\r\n\t\t\t// }\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tpath: \"admin/user\",\r\n\t\tchildren: [\r\n\t\t\t// { path: \"managment\", component: SearchComponent },\r\n\t\t\t{\r\n\t\t\t\tpath: \":Email\",\r\n\t\t\t\tcomponent: FeatureContainerComponent,\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: \"profile-edit\",\r\n\t\t\t\t\t\tcomponent: ProfileEditContainerComponent\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// {\r\n\t\t\t\t\t// \tpath: \"change-password\",\r\n\t\t\t\t\t// \tcomponent: ChangePasswordContainerComponent\r\n\t\t\t\t\t// }\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const NgsUserRoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { getAccountInfo, AppState } from \"../user.reducers\";\r\nimport { UserConfigurationService } from \"./user-configuration.service\";\r\nimport { UserModel } from \"../models/user.model\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class UserFacadeService {\r\n\tconstructor(private store: Store<AppState>, private configService: UserConfigurationService) {}\r\n\tgetDisplayName(): Observable<string> {\r\n\t\treturn this.store.select(getAccountInfo).let(this.configService.config$.getValue().mapUserDisplayName);\r\n\t\t// .pipe(filter(displayName => displayName !== undefined));\r\n\t}\r\n\tgetInfo(): Observable<UserModel> {\r\n\t\treturn this.store.select(getAccountInfo);\r\n\t}\r\n}\r\n","export enum NgsUserModuleOutlets {\r\n\tngs_user_profile_view = \"ngs-user-profile-view\"\r\n}\r\n"]}