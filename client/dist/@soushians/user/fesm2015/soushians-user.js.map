{"version":3,"file":"soushians-user.js.map","sources":["ng://@soushians/user/lib/user.config.ts","ng://@soushians/user/lib/models/user.model.ts","ng://@soushians/user/lib/models/change-password.model.ts","ng://@soushians/user/lib/models/reset-password-request.model.ts","ng://@soushians/user/lib/models/reset-password.model.ts","ng://@soushians/user/lib/models/profile-edit.model.ts","ng://@soushians/user/lib/models/profile-view.model.ts","ng://@soushians/user/lib/models/failed-login-report.model.ts","ng://@soushians/user/lib/models/failed-login.model.ts","ng://@soushians/user/lib/services/user-configuration.service.ts","ng://@soushians/user/lib/profile-view/profile-view.actions.ts","ng://@soushians/user/lib/dashboard/user.actions.ts","ng://@soushians/user/lib/dashboard/account.reducer.ts","ng://@soushians/user/lib/services/user.service.ts","ng://@soushians/user/lib/profile-edit/edit-profile.actions.ts","ng://@soushians/user/lib/profile-edit/edit-profile.effects.ts","ng://@soushians/user/lib/profile-view/profile-view.effects.ts","ng://@soushians/user/lib/reset-password/reset-password-request.actions.ts","ng://@soushians/user/lib/reset-password/reset-password-request.reducer.ts","ng://@soushians/user/lib/change-password/change-password.actions.ts","ng://@soushians/user/lib/change-password/change-password.reducer.ts","ng://@soushians/user/lib/profile-edit/edit-profile.reducer.ts","ng://@soushians/user/lib/search-account/search.actions.ts","ng://@soushians/user/lib/search-account/search.reducer.ts","ng://@soushians/user/lib/user.reducers.ts","ng://@soushians/user/lib/dashboard/dashboard-container/dashboard.component.ts","ng://@soushians/user/lib/dashboard/dashboard-links/dashboard-links.component.ts","ng://@soushians/user/lib/feature/feature.effects.ts","ng://@soushians/user/lib/search-account/search/search.component.ts","ng://@soushians/user/lib/change-password/change-password/change-password.component.ts","ng://@soushians/user/lib/profile-edit/profile-edit/profile-edit.component.ts","ng://@soushians/user/lib/reset-password/reset-password-request/reset-password-request.component.ts","ng://@soushians/user/lib/search-account/search.effects.ts","ng://@soushians/user/lib/feature/feature-container/feature-container.component.ts","ng://@soushians/user/lib/change-password/change-password-container/change-password-container.component.ts","ng://@soushians/user/lib/profile-edit/profile-edit-container/profile-edit-container.component.ts","ng://@soushians/user/lib/profile-view/profile/profile.component.ts","ng://@soushians/user/lib/profile-view/profile-container/profile-container.component.ts","ng://@soushians/user/lib/user.module.ts","ng://@soushians/user/lib/services/password.service.ts","ng://@soushians/user/lib/change-password/change-password.effects.ts","ng://@soushians/user/lib/user.routing-module.ts","ng://@soushians/user/lib/services/user.facade-service.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { UserModel } from \"./models\";\r\n\r\nexport interface UserModuleConfig {\r\n\tendpoints?: {\r\n\t\t//resetPasswordRequest: string;\r\n\t\tchangePassword?: string;\r\n\t\teditProfile?: string;\r\n\t\tgetAccountInfo?: string;\r\n\t\tprofileInformation?: string;\r\n\t\t// resetPassword: string;\r\n\t};\r\n\tforms?: {\r\n\t\tprofile_edit: string;\r\n\t};\r\n\tdashboardLinks?: {\r\n\t\troute: string;\r\n\t\ticon: string;\r\n\t\ttitle: string;\r\n\t}[];\r\n\tresponseToUserInfo: { (user: Observable<any>): Observable<UserModel> };\r\n\tmapUserDisplayName: { (user: Observable<any>): Observable<string> };\r\n}\r\n\r\nexport const MODULE_DEFAULT_CONFIG: UserModuleConfig = {\r\n\tendpoints: {\r\n\t\t//resetPasswordRequest: '',\r\n\t\tchangePassword: \"\",\r\n\t\teditProfile: \"\",\r\n\t\tgetAccountInfo: \"\",\r\n\t\tprofileInformation: \"\"\r\n\t\t// resetPassword: '',\r\n\t},\r\n\tforms: {\r\n\t\tprofile_edit: \"\"\r\n\t},\r\n\tdashboardLinks: [],\r\n\tresponseToUserInfo: user$ => user$,\r\n\tmapUserDisplayName: user$ => user$.map(user => user.DisplayName)\r\n};\r\n\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<UserModuleConfig>(\"UserModuleConfig\");\r\n","export class UserModel {\r\n\t_id: string;\r\n\t// FirstName: string;\r\n\t// LastName: string;\r\n\t// Username: string;\r\n\tDisplayName: string;\r\n\t// Username: string;\r\n\t// MobileNumber: string;\r\n\t// Sex: string;\r\n\t// Birthdate: string;\r\n\tEmail: string;\r\n\t// IdentificationNo: string;\r\n\t// IdentifierType: string;\r\n\t// RegisterDate: string;\r\n\t// UserType: string;\r\n\tRoles: string[];\r\n\tGroups: string[];\r\n\tconstructor() {\r\n\t\tthis.Roles = [];\r\n\t\tthis.Groups = [];\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators, AbstractControl, ValidatorFn } from \"@angular/forms\";\r\nimport { MatchValidator } from \"@soushians/shared\";\r\n\r\nexport namespace ChangePasswordModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tUsername: string;\r\n\t\tPassword: string;\r\n\r\n\t\tconstructor(initValue: ChangePasswordModel.Request = {} as ChangePasswordModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {\r\n\t\t\t\tPassword: this.Password\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tPassword: new FormControl(null, [ Validators.required, Validators.minLength(7) ]),\r\n\t\t\t\tConfirm: new FormControl(null, [ Validators.required, MatchValidator(\"Password\") ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\n\r\nexport module ResetPasswordRequestModel {\r\n\r\n    export class Request implements HttpRequestBaseModel<Request>{\r\n\r\n        Username: string;\r\n\r\n        //@RequestBody(\"pegah\")\r\n        Token: string;\r\n\r\n        //@UseIn('body')\r\n        Captcha: string;\r\n\r\n        //@UseIn('url')\r\n        //@Validators([Validators.required])\r\n        Type: 'sms' | 'email';\r\n\r\n        constructor(initValue?: ResetPasswordRequestModel.Request) {\r\n            Object.keys(initValue).forEach(key => this[key] = initValue[key]);\r\n        }\r\n\r\n        getRequestBody() {\r\n            return {\r\n                Username: this.Username,\r\n                Token: this.Token,\r\n                Captcha: this.Captcha\r\n            }\r\n        }\r\n\r\n        static get formGroup() {\r\n            return new FormGroup({\r\n                Username: new FormControl('', [Validators.minLength(8), Validators.required]),\r\n                Captcha: new FormControl(null, [Validators.required]),\r\n                Token: new FormControl(null, [Validators.required]),\r\n                Type: new FormControl('sms'),\r\n            })\r\n        }\r\n    }\r\n\r\n    export class Response {\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators, AbstractControl, ValidatorFn } from \"@angular/forms\";\r\nimport { MatchValidator } from \"@soushians/shared\";\r\n\r\nexport namespace ResetPasswordModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tPassword: string;\r\n\t\tToken: string;\r\n\r\n\t\tconstructor(initValue?: ResetPasswordModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {\r\n\t\t\t\tPassword: this.Password\r\n\t\t\t\t//Token: this.Token,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tToken: new FormControl(null, [ Validators.required ]),\r\n\t\t\t\tPassword: new FormControl(\"\", [ Validators.minLength(8), Validators.required ]),\r\n\t\t\t\tConfirm: new FormControl(null, [ Validators.required, MatchValidator(\"Password\") ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\texport class Response {\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel, HttpResponseBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { UserModel } from \"./user.model\";\r\n\r\nexport namespace EditProfile_ApiModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tEmail: string;\r\n\t\tRoles: string[];\r\n\t\tGroups: string[];\r\n\r\n\t\tconstructor(initValue: Partial<Request> = {} as Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tEmail: new FormControl(null, [ Validators.required ]),\r\n\t\t\t\tRoles: new FormControl(null, [ Validators.required ]),\r\n\t\t\t\tGroups: new FormControl(null, [ Validators.required ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response implements HttpResponseBaseModel<Response> {\r\n\t\tResult: { User: UserModel };\r\n\t\tconstructor(initValue: Response = {} as Response) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\t\textractData() {\r\n\t\t\treturn this.Result.User;\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { UserModel } from \"./user.model\";\r\n\r\nexport namespace ProfileViewModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tEmail: string;\r\n\r\n\t\tconstructor(initValue?: ProfileViewModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => (this[key] = initValue[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tUsername: new FormControl(\"\", [ Validators.minLength(8), Validators.required ])\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response extends UserModel {\r\n\t\tconstructor() {\r\n\t\t\tsuper();\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { FailedLoginModel } from './failed-login.model';\r\n\r\nexport module FailedLoginReportModel {\r\n    export class Request implements HttpRequestBaseModel<Request>{\r\n        Username: string;\r\n\r\n        constructor(initValue?: FailedLoginReportModel.Request) {\r\n            Object.keys(initValue).forEach(key => this[key] = initValue[key]);\r\n        }\r\n\r\n        getRequestBody() {\r\n            return {\r\n            }\r\n        }\r\n\r\n        static get formGroup() {\r\n            return \r\n        }\r\n    }\r\n\r\n    export class Response  {\r\n        data: FailedLoginModel[] = [];\r\n\r\n        constructor() {\r\n            \r\n        }\r\n    }\r\n}","export class FailedLoginModel {\r\n    Username: string;\r\n    Password: string;\r\n    TryDate: Date;\r\n    MacAddress: string;\r\n    IpAddress: string;\r\n    Reason: string;\r\n}","import { Injectable, Inject } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\nimport { getUserModuleConfig } from \"@soushians/config\";\r\n\r\nimport { UserModuleConfig, MODULE_CONFIG_TOKEN, MODULE_DEFAULT_CONFIG } from \"../user.config\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class UserConfigurationService {\r\n\tprivate _config: UserModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(this._config);\r\n\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<any>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\tthis.store.select(getUserModuleConfig).subscribe(userConfig => {\r\n\t\t\tif (!userConfig) return;\r\n\t\t\tthis._config = Object.assign({}, this._config, userConfig.Config);\r\n\t\t\tthis.config$.next(this._config);\r\n\t\t});\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { ChangePasswordModel } from \"../models\";\r\nimport { ProfileViewModel } from \"../models\";\r\n\r\nexport enum ProfileViewActionTypes {\r\n\tGET_PROFILE = \"[USER][PROFILE] GET_PROFILE\",\r\n\tGET_PROFILE_START = \"[USER][PROFILE] GET_PROFILE_START\",\r\n\tGET_PROFILE_SUCCEED = \"[USER][PROFILE] GET_PROFILE_SUCCEED\",\r\n\tGET_PROFILE_FAILED = \"[USER][PROFILE] GET_PROFILE_FAILED\"\r\n}\r\n\r\nexport class GetProfile implements Action {\r\n\treadonly type = ProfileViewActionTypes.GET_PROFILE;\r\n}\r\nexport class GetProfileStart implements Action {\r\n\treadonly type = ProfileViewActionTypes.GET_PROFILE_START;\r\n}\r\nexport class GetProfileSucceed implements Action {\r\n\treadonly type = ProfileViewActionTypes.GET_PROFILE_SUCCEED;\r\n\tconstructor(public payload: ProfileViewModel.Response) {}\r\n}\r\nexport class GetProfileFailed implements Action {\r\n\treadonly type = ProfileViewActionTypes.GET_PROFILE_FAILED;\r\n}\r\n\r\nexport type ProfileViewAction = GetProfile | GetProfileStart | GetProfileSucceed | GetProfileFailed;\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { UserModel } from \"../models\";\r\n\r\nexport enum UserActionTypes {\r\n\tUSER_SELECTED = \"[USER] USER_SELECTED\",\r\n\tREFRESH_USER_INFO = \"[USER] REFRESH_USER_INFO\"\r\n}\r\n\r\nexport class UserSelectedAction implements Action {\r\n\treadonly type = UserActionTypes.USER_SELECTED;\r\n\tconstructor(public payload: UserModel) {}\r\n}\r\n\r\nexport class RefreshUserInfoAction implements Action {\r\n\treadonly type = UserActionTypes.REFRESH_USER_INFO;\r\n\tconstructor(public payload: UserModel) {}\r\n}\r\n\r\nexport type UserAction = UserSelectedAction | RefreshUserInfoAction;\r\n","import { UserModel } from \"../models\";\r\nimport { UserAction, UserActionTypes } from \"./user.actions\";\r\n\r\nexport interface State {\r\n\tloaded: boolean;\r\n\tdata: UserModel;\r\n}\r\nexport const initialState: State = {\r\n\tloaded: false,\r\n\tdata: new UserModel()\r\n};\r\n\r\nexport function userReducer(state = initialState, action: UserAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase UserActionTypes.USER_SELECTED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloaded: true,\r\n\t\t\t\tdata: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase UserActionTypes.REFRESH_USER_INFO: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloaded: true,\r\n\t\t\t\tdata: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const getAccountInfo = (state: State) => state.data;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Rx\";\r\n\r\nimport { UserModel, EditProfile_ApiModel, ProfileViewModel, FailedLoginReportModel } from \"../models\";\r\nimport { UserConfigurationService } from \"./user-configuration.service\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { stringTemplate } from \"@soushians/shared\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { GetProfile } from \"../profile-view/profile-view.actions\";\r\nimport { getAccountInfo } from \"../dashboard/account.reducer\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class UserService {\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<any>,\r\n\t\tprivate configurationService: UserConfigurationService\r\n\t) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.store.dispatch(new GetProfile());\r\n\t\t}, 999);\r\n\t}\r\n\r\n\tgetAccountInfo(): Observable<ProfileViewModel.Response> {\r\n\t\treturn this.configurationService.config$\r\n\t\t\t.filter(config => config.endpoints.profileInformation != \"\")\r\n\t\t\t.take(1)\r\n\t\t\t.switchMap(config =>\r\n\t\t\t\tthis.http.get<any>(config.endpoints.profileInformation).let(config.responseToUserInfo).pipe(\r\n\t\t\t\t\tmap((response: UserModel) => {\r\n\t\t\t\t\t\tconst user: any = Object.assign({}, response);\r\n\t\t\t\t\t\tif (user.Role) {\r\n\t\t\t\t\t\t\tuser.Roles = [ user.Role ];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn user;\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t}\r\n\teditProfile(data: EditProfile_ApiModel.Request): Observable<UserModel> {\r\n\t\tvar model = new EditProfile_ApiModel.Request(data);\r\n\t\treturn this.http\r\n\t\t\t.put<EditProfile_ApiModel.Response>(\r\n\t\t\t\tstringTemplate(this.configurationService.config.endpoints.editProfile, model),\r\n\t\t\t\tmodel.getRequestBody()\r\n\t\t\t)\r\n\t\t\t.map(response => new EditProfile_ApiModel.Response(response).extractData());\r\n\t}\r\n\tgetInfo(data: ProfileViewModel.Request): Observable<any> {\r\n\t\tconst model = new ProfileViewModel.Request(data);\r\n\r\n\t\treturn this.http\r\n\t\t\t.get<ProfileViewModel.Response>(\r\n\t\t\t\tstringTemplate(this.configurationService.config.endpoints.getAccountInfo, model)\r\n\t\t\t)\r\n\t\t\t.map(response => response);\r\n\t}\r\n\r\n\tis_role(role: string): Observable<boolean> {\r\n\t\treturn this.store\r\n\t\t\t.select(getAccountInfo)\r\n\t\t\t.filter(user => user && user.Roles != undefined)\r\n\t\t\t.take(1)\r\n\t\t\t.map(user => user.Roles.indexOf(role) > -1);\r\n\t}\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { EditProfile_ApiModel, UserModel } from \"../models\";\r\n\r\nexport enum EditProfileActionTypes {\r\n\tEDIT_PROFILE = \"[USER][PASSWORD] EDIT_PROFILE\",\r\n\tEDIT_PROFILE_START = \"[USER][PASSWORD] EDIT_PROFILE_START\",\r\n\tEDIT_PROFILE_SUCCEED = \"[USER][PASSWORD] EDIT_PROFILE_SUCCEED\",\r\n\tEDIT_PROFILE_FAILED = \"[USER][PASSWORD] EDIT_PROFILE_FAILED\"\r\n}\r\n\r\nexport class EditProfile implements Action {\r\n\treadonly type = EditProfileActionTypes.EDIT_PROFILE;\r\n\tconstructor(public payload: EditProfile_ApiModel.Request) { }\r\n}\r\nexport class EditProfileStart implements Action {\r\n\treadonly type = EditProfileActionTypes.EDIT_PROFILE_START;\r\n\tconstructor(public payload: EditProfile_ApiModel.Request) { }\r\n}\r\nexport class EditProfileSucceed implements Action {\r\n\treadonly type = EditProfileActionTypes.EDIT_PROFILE_SUCCEED;\r\n\tconstructor(public payload: UserModel) { }\r\n}\r\nexport class EditProfileFailed implements Action {\r\n\treadonly type = EditProfileActionTypes.EDIT_PROFILE_FAILED;\r\n}\r\n\r\nexport type EditProfileAction =\r\n\t| EditProfile\r\n\t| EditProfileStart\r\n\t| EditProfileSucceed\r\n\t| EditProfileFailed;\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { map, catchError, switchMap } from \"rxjs/operators\";\r\n\r\nimport { UserService } from \"../services/user.service\";\r\nimport { EditProfile_ApiModel } from \"../models\";\r\nimport {\r\n\tEditProfileActionTypes,\r\n\tEditProfileStart,\r\n\tEditProfileSucceed,\r\n\tEditProfileFailed\r\n} from \"./edit-profile.actions\";\r\nimport { GetProfile } from \"../profile-view/profile-view.actions\";\r\n\r\n@Injectable()\r\nexport class EditProfileEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private service: UserService) {}\r\n\r\n\t@Effect()\r\n\tEditProfileRequest$ = this.actions$\r\n\t\t.ofType(EditProfileActionTypes.EDIT_PROFILE)\r\n\t\t.pipe(map(action => action.payload), map(data => new EditProfileStart(data)));\r\n\r\n\t@Effect()\r\n\tRequestEditProfileLink$ = this.actions$\r\n\t\t.ofType(EditProfileActionTypes.EDIT_PROFILE_START)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap((data: EditProfile_ApiModel.Request) => this.service.editProfile(data)),\r\n\t\t\tmap(res => new EditProfileSucceed(res)),\r\n\t\t\tcatchError(() => of(new EditProfileFailed()))\r\n\t\t);\r\n\t// .switchMap((data: EditProfile_ApiModel.Request) => {\r\n\t// \treturn this.service\r\n\t// \t\t.editProfile(data)\r\n\t// \t\t.map((res) => new EditProfileSucceed(res))\r\n\t// \t\t.catch(() => Observable.of(new EditProfileFailed()));\r\n\t// });\r\n\r\n\t@Effect()\r\n\tgoToView$ = this.actions$.ofType(EditProfileActionTypes.EDIT_PROFILE_SUCCEED).pipe(\r\n\t\tmap(() => {\r\n\t\t\tthis.router.navigate([ \"/user/profile\" ]);\r\n\t\t\treturn new GetProfile();\r\n\t\t})\r\n\t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\n\r\nimport { UserService } from \"../services/user.service\";\r\nimport { EditProfile_ApiModel } from \"../models\";\r\nimport { ProfileViewActionTypes, GetProfileStart, GetProfileSucceed, GetProfileFailed } from \"./profile-view.actions\";\r\nimport { RefreshUserInfoAction } from \"../dashboard/user.actions\";\r\n\r\n@Injectable()\r\nexport class ProfileViewEffects {\r\n\tconstructor(private actions$: Actions<any>, private userService: UserService) {}\r\n\r\n\t@Effect()\r\n\tProfileRequest$ = this.actions$\r\n\t\t.ofType(ProfileViewActionTypes.GET_PROFILE)\r\n\t\t.pipe(map(action => action.payload), map(data => new GetProfileStart()));\r\n\r\n\t@Effect()\r\n\tgetProfile$ = this.actions$\r\n\t\t.ofType(ProfileViewActionTypes.GET_PROFILE_START)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap((data: EditProfile_ApiModel.Request) =>\r\n\t\t\t\tthis.userService\r\n\t\t\t\t\t.getAccountInfo()\r\n\t\t\t\t\t.pipe(\r\n\t\t\t\t\t\tmap(res => new GetProfileSucceed(res)),\r\n\t\t\t\t\t\tcatchError(() => Observable.of(new GetProfileFailed()))\r\n\t\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t@Effect()\r\n\trefreshUserInfo$ = this.actions$\r\n\t\t.ofType(ProfileViewActionTypes.GET_PROFILE_SUCCEED)\r\n\t\t.pipe(map(action => action.payload), map(data => new RefreshUserInfoAction(data)));\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nimport { ResetPasswordRequestModel } from '../models';\r\n\r\nexport enum ResetPasswordRequestActionTypes {\r\n        GET_RESET_PASSWORD_LINK             = '[USER][PASSWORD] GET_RESET_PASSWORD_LINK',\r\n        RESET_PASSWORD_LINK_REQUEST_START   = '[USER][PASSWORD] RESET_PASSWORD_LINK_REQUEST_START',\r\n        RESET_PASSWORD_LINK_REQUEST_SUCCEED = '[USER][PASSWORD] RESET_PASSWORD_LINK_REQUEST_SUCCEED',\r\n        RESET_PASSWORD_LINK_REQUEST_FAILED  = '[USER][PASSWORD] RESET_PASSWORD_LINK_REQUEST_FAILED',\r\n        DISABLE_GET_LINK                    = '[USER][PASSWORD] DISABLE_GET_LINK',\r\n        ENABLE_GET_LINK                     = '[USER][PASSWORD] ENABLE_GET_LINK',\r\n        MAXIMUM_TRY_HAPPEND                 = '[USER][PASSWORD] MAXIMUM_TRY_HAPPEND',\r\n        PASSWORD_CHANGED_SUCCEED            = '[USER][PASSWORD] PASSWORD_CHANGED_SUCCEED',\r\n        PASSWORD_CHANGED_FAILED             = '[USER][PASSWORD] PASSWORD_CHANGED_FAILED',\r\n}\r\n\r\nexport class GetResetPasswordLink implements Action {\r\n        readonly type = ResetPasswordRequestActionTypes.GET_RESET_PASSWORD_LINK;\r\n        constructor(public payload: ResetPasswordRequestModel.Request) { }\r\n}\r\nexport class ResetPasswordLinkRequestStart implements Action {\r\n        readonly type = ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_START;\r\n        constructor(public payload: ResetPasswordRequestModel.Request) { }\r\n}\r\nexport class ResetPasswordLinkRequestSucceed implements Action {\r\n        readonly type = ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_SUCCEED;\r\n        constructor() { }\r\n}\r\nexport class ResetPasswordLinkRequestFailed implements Action {\r\n        readonly type = ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_FAILED;\r\n        constructor() { }\r\n}\r\nexport class DisableGetLink implements Action {\r\n        readonly type = ResetPasswordRequestActionTypes.DISABLE_GET_LINK;\r\n}\r\nexport class EnableGetLink implements Action {\r\n        readonly type = ResetPasswordRequestActionTypes.ENABLE_GET_LINK;\r\n}\r\nexport class MaximumTryHappend implements Action {\r\n        readonly type = ResetPasswordRequestActionTypes.MAXIMUM_TRY_HAPPEND;\r\n}\r\nexport class PasswordChangedSucceed implements Action {\r\n        readonly type = ResetPasswordRequestActionTypes.PASSWORD_CHANGED_SUCCEED;\r\n}\r\nexport class PasswordChangedFailed implements Action {\r\n        readonly type = ResetPasswordRequestActionTypes.PASSWORD_CHANGED_FAILED;\r\n        constructor(public payload: string) { }\r\n}\r\n\r\n\r\nexport type ResetPasswordRequestAction =\r\n        GetResetPasswordLink\r\n        | ResetPasswordLinkRequestStart\r\n        | ResetPasswordLinkRequestFailed\r\n        | DisableGetLink\r\n        | ResetPasswordLinkRequestSucceed\r\n        | EnableGetLink\r\n        | MaximumTryHappend\r\n        | PasswordChangedSucceed\r\n        | PasswordChangedFailed;\r\n","import { ResetPasswordRequestAction, ResetPasswordRequestActionTypes } from \"./reset-password-request.actions\";\r\n\r\nexport interface State {\r\n\tnumberOfRequested: number;\r\n\tlastRequestedTime: string;\r\n\tdisable: boolean;\r\n}\r\nexport const initialState: State = {\r\n\tnumberOfRequested: 0,\r\n\tlastRequestedTime: null,\r\n\tdisable: false\r\n};\r\nexport function reducer(state = initialState, action: ResetPasswordRequestAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase ResetPasswordRequestActionTypes.GET_RESET_PASSWORD_LINK: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnumberOfRequested: state.numberOfRequested + 1,\r\n\t\t\t\tlastRequestedTime: Date.now().toString()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ResetPasswordRequestActionTypes.DISABLE_GET_LINK: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdisable: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ResetPasswordRequestActionTypes.ENABLE_GET_LINK: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdisable: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getNumberOfRequeseted = (state: State) => state.numberOfRequested;\r\nexport var getStatus = (state: State) => state.disable;\r\n","import { Action } from '@ngrx/store';\r\nimport { ChangePasswordModel } from '../models';\r\n\r\nexport enum ChangePasswordActionTypes {\r\n        CHANGE_PASSWORD          = '[USER][PASSWORD] CHANGE_PASSWORD',\r\n        PASSWORD_CHANGED_START   = '[USER][PASSWORD] PASSWORD_CHANGED_START',\r\n        PASSWORD_CHANGED_SUCCEED = '[USER][PASSWORD] PASSWORD_CHANGED_SUCCEED',\r\n        PASSWORD_CHANGED_FAILED  = '[USER][PASSWORD] PASSWORD_CHANGED_FAILED'\r\n}\r\n\r\nexport class ChangePassword implements Action {\r\n        readonly type = ChangePasswordActionTypes.CHANGE_PASSWORD;\r\n        constructor(public payload: ChangePasswordModel.Request) { }\r\n}\r\nexport class ChangePasswordStart implements Action {\r\n        readonly type = ChangePasswordActionTypes.PASSWORD_CHANGED_START;\r\n        constructor(public payload: ChangePasswordModel.Request) { }\r\n}\r\nexport class ChangePasswordSucceed implements Action {\r\n        readonly type = ChangePasswordActionTypes.PASSWORD_CHANGED_SUCCEED;\r\n        constructor(public payload: ChangePasswordModel.Response) { }\r\n}\r\nexport class ChangePasswordFailed implements Action {\r\n        readonly type = ChangePasswordActionTypes.PASSWORD_CHANGED_FAILED;\r\n}\r\n\r\nexport type ChangePasswordAction =\r\n            ChangePassword\r\n          | ChangePasswordStart\r\n          | ChangePasswordSucceed\r\n          | ChangePasswordFailed;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\nimport { ChangePasswordAction, ChangePasswordActionTypes } from \"./change-password.actions\";\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\"\r\n};\r\nexport function reducer(state = initialState, action: ChangePasswordAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase ChangePasswordActionTypes.CHANGE_PASSWORD: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"dirty\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ChangePasswordActionTypes.PASSWORD_CHANGED_START: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ChangePasswordActionTypes.PASSWORD_CHANGED_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"succeed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ChangePasswordActionTypes.PASSWORD_CHANGED_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn initialState;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getStatus = (state: State) => state.status;\r\n","import { responseStatusTypes } from '@soushians/shared';\r\nimport { EditProfileAction, EditProfileActionTypes } from './edit-profile.actions';\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n}\r\nexport const initialState: State = {\r\n\tstatus: 'pristine'\r\n};\r\nexport function reducer(state = initialState, action: EditProfileAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase EditProfileActionTypes.EDIT_PROFILE: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'dirty'\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditProfileActionTypes.EDIT_PROFILE_START: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'pending'\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditProfileActionTypes.EDIT_PROFILE_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'succeed'\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase EditProfileActionTypes.EDIT_PROFILE_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'failed'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getStatus = (state: State) => state.status;\r\n","import { Action } from '@ngrx/store';\r\n\r\nimport { ProfileViewModel } from '../models';\r\n\r\nexport enum SearchActionTypes {\r\n    SEARCH = '[USER][SEARCH] SEARCH',\r\n    SEARCH_START = '[USER][SEARCH] SEARCH_START',\r\n    SEARCH_SUCCEED = '[USER][SEARCH] SEARCH_SUCCEED',\r\n    SEARCH_FAILED = '[USER][SEARCH] SEARCH_FAILED',\r\n    CLEAR_SEARCHED_USER = '[USER][SEARCH] CLEAR_SEARCHED_USER'\r\n}\r\n\r\nexport class Search implements Action {\r\n    readonly type = SearchActionTypes.SEARCH;\r\n    constructor(public payload: ProfileViewModel.Request) { }\r\n}\r\nexport class SearchStartAction implements Action {\r\n    readonly type = SearchActionTypes.SEARCH_START;\r\n    constructor(public payload: ProfileViewModel.Request) { }\r\n}\r\nexport class SearchSucceed implements Action {\r\n    readonly type = SearchActionTypes.SEARCH_SUCCEED;\r\n    constructor(public payload: ProfileViewModel.Response) { }\r\n}\r\nexport class SearchFailed implements Action {\r\n    readonly type = SearchActionTypes.SEARCH_FAILED;\r\n}\r\nexport class ClearSearchedUser implements Action {\r\n    readonly type = SearchActionTypes.CLEAR_SEARCHED_USER;\r\n}\r\n\r\n\r\nexport type SearchAction =\r\n    Search\r\n    | SearchStartAction\r\n    | SearchSucceed\r\n    | SearchFailed\r\n    | ClearSearchedUser;","import { responseStatusTypes } from \"@soushians/shared\";\r\nimport { ProfileViewModel } from \"../models\";\r\nimport { SearchActionTypes, SearchAction } from \"./search.actions\";\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n\tdata: ProfileViewModel.Response;\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\",\r\n\tdata: {} as ProfileViewModel.Response\r\n};\r\nexport function reducer(state = initialState, action: SearchAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase SearchActionTypes.SEARCH: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"dirty\",\r\n\t\t\t\tdata: new ProfileViewModel.Response()\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SearchActionTypes.SEARCH_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SearchActionTypes.SEARCH_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"succeed\",\r\n\t\t\t\tdata: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SearchActionTypes.SEARCH_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase SearchActionTypes.CLEAR_SEARCHED_USER: {\r\n\t\t\treturn initialState;\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getStatus = (state: State) => state.status;\r\nexport var getAccountInfo = (state: State) => state.data;\r\n","import { createSelector, createFeatureSelector, MemoizedSelector } from \"@ngrx/store\";\r\nimport * as userReducer from \"./dashboard/account.reducer\";\r\nimport * as resetPasswordRequestReducer from \"./reset-password/reset-password-request.reducer\";\r\nimport * as changePassword from \"./change-password/change-password.reducer\";\r\nimport * as editProfileReducer from \"./profile-edit/edit-profile.reducer\";\r\nimport * as searchReducer from \"./search-account/search.reducer\";\r\nimport { UserModel } from \"./models\";\r\n\r\nexport interface UserState {\r\n\tuser: userReducer.State;\r\n\tresetPasswordRequest: resetPasswordRequestReducer.State;\r\n\tsearchView: searchReducer.State;\r\n\tchangePassword: changePassword.State;\r\n\teditProfile: editProfileReducer.State;\r\n}\r\n\r\nexport const UserReducers = {\r\n\tuser: userReducer.userReducer,\r\n\tresetPasswordRequest: resetPasswordRequestReducer.reducer,\r\n\tchangePassword: changePassword.reducer,\r\n\tsearchView: searchReducer.reducer,\r\n\teditProfile: editProfileReducer.reducer\r\n};\r\n\r\nexport interface AppState {\r\n\t\"user\": UserState;\r\n}\r\n\r\n//#region selectors\r\n\r\nexport const selectFeatureState = createFeatureSelector<UserState>(\"user\");\r\n\r\nexport const getUserInforamtionStatus = createSelector(selectFeatureState, (state: UserState) => state.user.loaded);\r\nexport const isSignedIn = createSelector(selectFeatureState, (state: UserState) => state.user.loaded);\r\n\r\nexport const selectResetPasswordRequestState = createSelector(\r\n\tselectFeatureState,\r\n\t(state: UserState) => state.resetPasswordRequest\r\n);\r\nexport const getNumberOfRequeseted = createSelector(\r\n\tselectResetPasswordRequestState,\r\n\tresetPasswordRequestReducer.getNumberOfRequeseted\r\n);\r\nexport const getResetPasswordRequestStatus = createSelector(\r\n\tselectResetPasswordRequestState,\r\n\tresetPasswordRequestReducer.getStatus\r\n);\r\n\r\n//#region user\r\nexport const selectUserInformaionState = createSelector(selectFeatureState, (state: UserState) => state.user);\r\nexport const getAccountInfo = createSelector(selectUserInformaionState, userReducer.getAccountInfo);\r\n//#endregion\r\n\r\n//#region search\r\nexport const selectSearchState = createSelector(selectFeatureState, (state: UserState) => state.searchView);\r\nexport const getSearchStatus = createSelector(selectSearchState, searchReducer.getStatus);\r\n//#endregion\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { UserModel } from \"../../models\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport * as appReducer from \"../../user.reducers\";\r\n\r\n@Component({\r\n\tselector: \"user-dashboard-container\",\r\n\ttemplate: `<!-- <router-outlet name=\"links\"></router-outlet> -->\r\n<div fxLayoutAlign=\"center\">\r\n    <router-outlet></router-outlet>\r\n</div>`,\r\n\tstyles: [`#box-left{background:#fff}#box-bottom{background:#2b0033}#box-right{background:#000833;padding-top:10px!important;padding-bottom:10px!important}#box-right div{background:#fff;opacity:.5}#banner:not(.active){height:100%;-webkit-filter:grayscale(100%) brightness(1.5) opacity(.2) blur(2px);filter:grayscale(100%) brightness(1.5) opacity(.2) blur(2px)}#s1{background:#aaa}#s2{background:#bbb}#s3{background:#ccc}.personal-info{background-color:rgba(255,255,255,.5);position:relative;right:10%;width:90%;height:469px}.personal-info h2{color:#00bcd4;font-weight:400;font-size:24px;font-family:iran-sans-light!important}.personal-info h6{font-weight:400;font-size:12px;float:right;width:50%;margin:0;color:#555;border-bottom:2px solid #ececec}.personal-info p{float:right;width:30%;margin:0;font-size:13px;padding-right:30px;border-bottom:2px solid #ececec}.personal-info div{width:100%;height:50px;position:relative;line-height:52px;right:17px}.quick-box{width:100%;height:50px;position:relative;line-height:52px;padding-top:79px}.quick-btn{background-color:#00bcd4;margin:12px 10px;height:100px;text-align:center;line-height:100px;font-size:17px;color:#fff}.banner-section{text-align:center}.info-section{padding:60px 25px 10px;background-color:#f7f7f7;background-image:url(https://www.toptal.com/designers/subtlepatterns/patterns/grey.png)!important;height:1040px;padding-bottom:120px!important}`]\r\n})\r\nexport class DashboardContainerComponent implements OnInit {\r\n\tuser$: Observable<UserModel>;\r\n\t// is_agent : Observable<boolean>;\r\n\tconstructor(private store: Store<appReducer.UserState>) {\r\n\t\tthis.user$ = this.store.select(appReducer.getAccountInfo);\r\n\t\t// this.is_agent = signinService.is_agent();\r\n\t}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { UserConfigurationService } from \"../../services/user-configuration.service\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n@Component({\r\n\tselector: \"user-dashboard-links\",\r\n\ttemplate: `<div fxLayout='row' fxLayoutWrap id=\"con\">\r\n    <button fxFlex=\"31\" class='link' mat-raised-button [routerLink]='link.route' *ngFor='let link of links'>\r\n        <div fxLayout='column' fxLayoutAlign='center center'>\r\n            <mat-icon color='primary'>{{link.icon}}</mat-icon>\r\n            <h3 class='title'>{{link.title}}</h3>\r\n            <div class='description'>{{link.description}}</div>\r\n        </div>\r\n    </button>\r\n    <button fxFlex=\"31\" class='link' mat-raised-button [routerLink]='link.route' *ngFor='let link of links$ | async'>\r\n        <div fxLayout='column' fxLayoutAlign='center center'>\r\n            <mat-icon color='primary'>{{link.icon}}</mat-icon>\r\n            <h3 class='title'>{{link.title}}</h3>\r\n            <div class='description'>{{link.description}}</div>\r\n        </div>\r\n    </button>\r\n</div>`,\r\n\tstyles: [`#con [fxflex]{margin-right:25px}:host{width:100%}button mat-icon{font-size:48px;width:48px;height:48px}button.link{padding:25px 15px;margin-bottom:25px}.title{margin-top:0;margin-bottom:5px}.description{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:90%}`]\r\n})\r\nexport class DashboardLinksComponent implements OnInit {\r\n\tlinks: any[];\r\n\tlinks$: Observable<any[]>;\r\n\tconstructor(private userConfigurationService: UserConfigurationService) {\r\n\t\tthis.links$ = this.userConfigurationService.config$.map(data => data.dashboardLinks);\r\n\t\tthis.links = [\r\n\t\t\t{\r\n\t\t\t\ttitle: \"ÙØ´Ø§ÙØ¯Ù Ø­Ø³Ø§Ø¨ Ú©Ø§Ø±ÛØ±Û\",\r\n\t\t\t\troute: \"/user/panel/profile\",\r\n\t\t\t\tdescription: \"ÙÙØ±Ù Ø§ÛÙ¾Ø³ÙÙ ÙØªÙ Ø³Ø§Ø®ØªÚ¯Û Ø¨Ø§ ØªÙÙÛØ¯ Ø³Ø§Ø¯Ú¯Û ÙØ§ÙÙÙÙÙ\",\r\n\t\t\t\ticon: \"credit_card\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\troute: \"/user/panel/password/change\",\r\n\t\t\t\ttitle: \"ØªØºÛÛØ± Ú©ÙÙÙ Ø¹Ø¨ÙØ±\",\r\n\t\t\t\tdescription: \"ÙÙØ±Ù Ø§ÛÙ¾Ø³ÙÙ ÙØªÙ Ø³Ø§Ø®ØªÚ¯Û Ø¨Ø§ ØªÙÙÛØ¯ Ø³Ø§Ø¯Ú¯Û ÙØ§ÙÙÙÙÙ\",\r\n\t\t\t\ticon: \"security\"\r\n\t\t\t}\r\n\t\t];\r\n\t}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { SignInActionTypes } from \"@soushians/authentication\";\r\n\r\nimport { UserService } from \"../services/user.service\";\r\nimport { GetProfile, GetProfileSucceed } from \"../profile-view/profile-view.actions\";\r\nimport { RefreshUserInfoAction } from \"../dashboard\";\r\nimport { UserModel } from \"../models\";\r\n\r\n@Injectable()\r\nexport class UserEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private service: UserService) {}\r\n\r\n\t// @Effect()\r\n\t// updateProfileInformation$ = this.actions$.ofType(SignInActionTypes.SIGNIN_SUCCEED).pipe(\r\n\t// \tmap(action => action.payload),\r\n\t// \tmap(user => {\r\n\t// \t\treturn new GetProfileSucceed(user);\r\n\t// \t})\r\n\t// );\r\n\t@Effect()\r\n\tgetAccountInfo$ = this.actions$.ofType(SignInActionTypes.SIGNIN_SUCCEED).pipe(\r\n\t\tmap(() => {\r\n\t\t\treturn new GetProfile();\r\n\t\t})\r\n\t);\r\n\t@Effect()\r\n\tsignout$ = this.actions$\r\n\t\t.ofType(SignInActionTypes.SIGNOUT)\r\n\t\t.pipe(map(() => new RefreshUserInfoAction({} as UserModel)));\r\n}\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { responseStatusTypes } from \"@soushians/shared\";\r\n\r\nimport { ProfileViewModel } from \"../../models\";\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { Search } from \"../search.actions\";\r\n\r\n@Component({\r\n\tselector: \"search\",\r\n\ttemplate: `<mat-card fxFlex=\"450px\" *ngIf=\"(userStatus$ | async) == 'succeed'\">\r\n  <mat-card-header>\r\n    <mat-card-title>\r\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n        <div fxFlex=\"nogrow\">\r\n          <!-- {{(user | async).LastName }}Ø {{(user | async).FirstName }} -->\r\n        </div>\r\n        <div fxFlex=\"nogrow\">\r\n          <!-- {{(user | async).Email}} -->\r\n        </div>\r\n      </div>\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div>\r\n      <div class='list-item' fxFlexLayout='row' fxLayoutAlign='center center'>\r\n        <mat-icon fxFlex='nogrow'>local_grocery_store</mat-icon>\r\n        <div fxFlex='15px'></div>\r\n        <p fxFlex='40'>Ø´ÙØ§Ø³Ù</p>\r\n        <!-- <p fxFlex='60' fxLayoutAlign=\"end\">{{(user | async)._id }}</p> -->\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row' fxLayoutAlign='center center'>\r\n        <mat-icon fxFlex='nogrow'>email</mat-icon>\r\n        <div fxFlex='15px'></div>\r\n        <p fxFlex='40'>Ù¾Ø³Øª Ø§ÙÚ©ØªØ±ÙÙÛÚ©Û</p>\r\n        <!-- <p fxFlex='60' fxLayoutAlign=\"end\">{{(user | async).Email }}</p> -->\r\n      </div>\r\n    </div>\r\n\r\n  </mat-card-content>\r\n</mat-card>`,\r\n\tstyles: [``]\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\tuser: Observable<ProfileViewModel.Response>;\r\n\tuserStatus$: Observable<responseStatusTypes>;\r\n\tformGroup = ProfileViewModel.Request.formGroup;\r\n\tuserDataLoaded$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\tuserNotFound$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\tconstructor(private store: Store<FeatureReducer.AppState>) {\r\n\t\tthis.user = this.store.select(FeatureReducer.getAccountInfo);\r\n\t\tthis.userStatus$ = this.store.select(FeatureReducer.getSearchStatus);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.userStatus$.subscribe(value => this.userDataLoaded$.next(!\"pristine|dirty|pending\".includes(value)));\r\n\t}\r\n\tsearch() {\r\n\t\tif (!this.formGroup.valid) return;\r\n\t\tthis.store.dispatch(new Search(this.formGroup.value));\r\n\t}\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { ChangePasswordModel } from \"../../models\";\r\n// import { MdSnackBar } from \"@angular/material\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\n@Component({\r\n        selector: 'user-change-password',\r\n        template: `<div fxFlex=\"450px\">\r\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"changePassword()\" fxLayout=\"column\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <mat-form-field fxFlexFill>\r\n          <input type=\"password\" matInput placeholder=\"Ú©ÙÙÙ Ø¹Ø¨ÙØ±\" formControlName=\"Password\">\r\n        </mat-form-field>\r\n        <mat-form-field fxFlexFill>\r\n          <input type=\"password\" matInput placeholder=\"ØªÚ©Ø±Ø§Ø± Ú©ÙÙÙ Ø¹Ø¨ÙØ±\" formControlName=\"Confirm\">\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n      <mat-card-actions fxLayoutAlign=\"center center\">\r\n        <button fxFlex=\"nogrow\" type=\"submit\" mat-raised-button color=\"primary\">ØªØºÛÛØ± Ø±ÙØ² Ø¹Ø¨ÙØ±</button>\r\n        <button fxFlex=\"nogrow\" type=\"button\" routerLink=\"/user/panel\" mat-raised-button>Ø¨Ø§Ø²Ú¯Ø´Øª</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </form>\r\n</div>`,\r\n        styles: [``]\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n        @Input() formGroup: FormGroup;\r\n        @Output() submited = new EventEmitter();\r\n\r\n        ngOnInit() {\r\n        }\r\n\r\n        submit() {\r\n        }\r\n\r\n        constructor() { }\r\n\r\n        changePassword() {\r\n            if (!this.formGroup.valid) return;\r\n            this.submited.emit(this.formGroup.value)\r\n        }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, Input } from \"@angular/core\";\r\n\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { ChangePasswordModel } from \"../../models\";\r\nimport { ConfigModel } from \"@soushians/config\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Component({\r\n\tselector: \"profile-edit\",\r\n\ttemplate: `<div fxFlex=\"450px\">\r\n\r\n  \r\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"editProfile()\" fxLayout=\"column\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n          <!-- <ngs-form-view [id]=\"formId\"></ngs-form-view> -->\r\n      </mat-card-content>\r\n      <mat-card-actions fxLayoutAlign=\"center center\">\r\n        <button fxFlex=\"nogrow\" type=\"submit\" mat-raised-button color=\"primary\">ÙÛØ±Ø§ÛØ´</button>\r\n        <button fxFlex=\"nogrow\" type=\"button\" routerLink=\"/user/panel/profile\" mat-raised-button>Ø¨Ø§Ø²Ú¯Ø´Øª</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </form>\r\n</div>`\r\n})\r\nexport class ProfileEditComponent implements OnInit {\r\n\t@Output() submited = new EventEmitter();\r\n\r\n\t@Input() formId: string;\r\n\t@Input() formGroup: FormGroup;\r\n\t@Input(\"roles\") roles$: Observable<string[]>;\r\n\t@Input() groups: string[];\r\n\tconstructor() {}\r\n\r\n\tngOnInit() {}\r\n\teditProfile() {\r\n\t\tif (!this.formGroup.valid) return;\r\n\t\tthis.submited.emit(this.formGroup.value);\r\n\t}\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { ResetPasswordRequestModel } from \"../../models\";\r\nimport { MatSnackBar } from \"@angular/material\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\n@Component({\r\n        selector: 'user-reset-password-request',\r\n        template: `<form [formGroup]=\"formGroup\" (ngSubmit)=\"submit()\" fxLayout=\"column\">\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        <h3>Ø¯Ø±Ø®ÙØ§Ø³Øª Ø¨Ø§Ø²ÛØ§Ø¨Û Ø±ÙØ² Ø¹Ø¨ÙØ±</h3>\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p>Ø¨Ø±Ø§Û Ø¨Ø§Ø²ÛØ§Ø¨Û Ø±ÙØ² Ø¹Ø¨ÙØ± Ø´ÙØ§Ø±Ù ØªÙÙÙ Ø®ÙØ¯ Ø±Ø§ ÙØ§Ø±Ø¯ ÙÙØ§ÛÛØ¯</p>\r\n      <mat-radio-group fxFlexFill formControlName=\"Type\">\r\n        <mat-radio-button value=\"sms\">Ù¾ÛØ§ÙÚ©</mat-radio-button>\r\n        <mat-radio-button value=\"email\">Ù¾Ø³Øª Ø§ÙÚ©ØªØ±ÙÙÛÚ©Û</mat-radio-button>\r\n      </mat-radio-group>\r\n      <mat-form-field fxFlexFill>\r\n        <input matInput placeholder=\"Ø´ÙØ§Ø±Ù ØªÙÙÙ ÙÙØ±Ø§Ù\" formControlName=\"Username\">\r\n      </mat-form-field>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <!--<button type=\"submit\" [disabled]='(canRequestPin | async) || (maximumResendingHappend$ | async)' (click)=\"submit()\" mat-raised-button color=\"primary\">-->\r\n      <button type=\"submit\" [disabled]='(canRequestPin | async)' (click)=\"submit()\" mat-raised-button color=\"primary\">\r\n        <span *ngIf='!(canRequestPin | async)'>\r\n          Ø¨Ø§Ø²ÛØ§Ø¨Û Ø±ÙØ² Ø¹Ø¨ÙØ±\r\n        </span>\r\n        <!--<div *ngIf='(canRequestPin | async) && !(maximumResendingHappend$ | async)'>\r\n          {{timer$ | async}} Ø«Ø§ÙÛÙ ØªØ§ Ø§ÙÚ©Ø§Ù Ø¯Ø± Ø®ÙØ§Ø³Øª Ø¯ÙØ¨Ø§Ø±Ù Ø¯Ø±ÛØ§ÙØª Ù¾ÛØ§ÙÚ©.\r\n        </div>\r\n        <div *ngIf='(maximumResendingHappend$ | async)'>\r\n          Ø¹Ø¯Ù Ø§ÙÚ©Ø§Ù Ø¯Ø±Ø®ÙØ§Ø³Øª\r\n        </div>-->\r\n      </button>\r\n      <a mat-button routerLink='/auth/signin'>Ø§ÙØµØ±Ø§Ù</a>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</form>\r\n`,\r\n        styles: [``]\r\n})\r\nexport class ResetPasswordRequestComponent implements OnInit {\r\n        @Output() submitted = new EventEmitter<ResetPasswordRequestModel.Request>();\r\n\r\n        @Input() formGroup: FormGroup;\r\n        @Input() numberOfRequested: Observable<number>;\r\n        @Input() canRequestPin: Observable<boolean>;\r\n        @Input() set pending(isPending: boolean) {\r\n                if (isPending) {\r\n                        this.formGroup.disable();\r\n                }\r\n\r\n                this.formGroup.enable();\r\n        }\r\n\r\n        timer$: Observable<number>;\r\n        maximumResendingHappend$ = new BehaviorSubject(false);\r\n\r\n        constructor(\r\n                public snackBar: MatSnackBar\r\n        ) {\r\n                this.timer$ = Observable.timer(0, 100)\r\n                        .map(i => i + 1)\r\n                        .takeWhile(i => i * 100 <= 3000)\r\n                        .map(i => 3000 - i * 100);\r\n        }\r\n\r\n        ngOnInit() {\r\n                this.numberOfRequested.subscribe(data => {\r\n                        if (data > 2) {\r\n                                this.maximumResendingHappend$.next(true);\r\n                        }\r\n                })\r\n        }\r\n\r\n        submit() {\r\n                if (this.formGroup.valid) {\r\n                        this.submitted.emit(this.formGroup.value);\r\n                        let message = (this.maximumResendingHappend$.getValue())\r\n                                ? 'Ø¹Ø¯Ù Ø§ÙÚ©Ø§Ù ...'\r\n                                : 'Ù¾ÛØ§ÙÚ© Ø¬Ø¯ÛØ¯ Ø¨Ø±Ø§Û Ø´ÙØ§ Ø§Ø±Ø³Ø§Ù Ú¯Ø±Ø¯ÛØ¯.';\r\n                        this.snackBar.open(message, '', {\r\n                                duration: 3000,\r\n                        })\r\n                }\r\n        }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { Observable } from \"rxjs/observable\";\r\n\r\nimport { ProfileViewModel } from \"../models\";\r\nimport { UserService } from \"../services/user.service\";\r\nimport { SearchStartAction, SearchFailed, SearchActionTypes, SearchSucceed } from \"./search.actions\";\r\n\r\n@Injectable()\r\nexport class SearchEffects {\r\n\tconstructor(private actions$: Actions<any>, private userService: UserService) {}\r\n\r\n\t@Effect()\r\n\tcanSearch$ = this.actions$\r\n\t\t.ofType(SearchActionTypes.SEARCH)\r\n\t\t.pipe(map(action => action.payload), map(data => new SearchStartAction(data)));\r\n\r\n\t@Effect()\r\n\tsearch$ = this.actions$.ofType(SearchActionTypes.SEARCH_START).pipe(\r\n\t\tmap(action => action.payload),\r\n\t\tswitchMap((data: ProfileViewModel.Request) => {\r\n\t\t\treturn this.userService.getInfo(data).pipe(\r\n\t\t\t\tmap(res => {\r\n\t\t\t\t\treturn res == null ? new SearchFailed() : new SearchSucceed(res);\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError(() => of(new SearchFailed()))\r\n\t\t\t);\r\n\t\t})\r\n\t);\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { ProfileViewModel } from \"../../models\";\r\nimport { Search } from \"../../search-account\";\r\n\r\n@Component({\r\n\ttemplate: \"<router-outlet></router-outlet>\"\r\n})\r\nexport class FeatureContainerComponent {\r\n\tconstructor(private route: ActivatedRoute, private store: Store<FeatureReducer.AppState>) {\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tlet model = new ProfileViewModel.Request({ Email: params.Email } as ProfileViewModel.Request);\r\n\t\t\tthis.store.dispatch(new Search(model));\r\n\t\t});\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { ChangePasswordModel } from \"../../models\";\r\n\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { ChangePassword } from \"../change-password.actions\";\r\n\r\n@Component({\r\n\ttemplate: `<user-change-password\r\n                (submited)='changePassword($event)'\r\n                [formGroup]=\"formGroup\"\r\n              ></user-change-password>`\r\n})\r\nexport class ChangePasswordContainerComponent implements OnInit {\r\n\tformGroup = ChangePasswordModel.Request.formGroup;\r\n\tChangePasswordModel = new ChangePasswordModel.Request();\r\n\tconstructor(private route: ActivatedRoute, private store: Store<FeatureReducer.AppState>) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.store.select(FeatureReducer.getAccountInfo).subscribe(userInfo => {\r\n\t\t\tif (!userInfo) return;\r\n\t\t\t// TODO:\r\n\t\t\t// this.ChangePasswordModel.Username = userInfo.Username;\r\n\t\t});\r\n\t}\r\n\tchangePassword(event) {\r\n\t\tthis.ChangePasswordModel.Password = this.formGroup.get(\"Password\").value;\r\n\r\n\t\tthis.store.dispatch(new ChangePassword(this.ChangePasswordModel));\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { ConfigModel, getAppConfig } from \"@soushians/config\";\r\n\r\nimport { UserModel, EditProfile_ApiModel } from \"../../models\";\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { EditProfile } from \"../edit-profile.actions\";\r\nimport { UserConfigurationService } from \"../../services/user-configuration.service\";\r\nimport { UserModuleConfig } from \"../../user.config\";\r\n\r\n@Component({\r\n\tselector: \"profile-edit-contianer\",\r\n\ttemplate: `<profile-edit\r\n                (submited)='updateProfile($event)'\r\n                [formGroup]=\"formGroup\"\r\n                [roles]=\"roles$\"\r\n\t\t\t\t[groups]=\"groups | async\"\r\n\t\t\t\t[formId]=\"(config$|async)?.forms.profile_edit\"\r\n              ></profile-edit>`\r\n})\r\nexport class ProfileEditContainerComponent implements OnInit {\r\n\tuserInforamation$: Observable<UserModel>;\r\n\tformGroup = EditProfile_ApiModel.Request.formGroup;\r\n\troles$: Observable<string[]>;\r\n\tgroups: Observable<string[]>;\r\n\tconfig$: Observable<UserModuleConfig>;\r\n\tconstructor(private store: Store<FeatureReducer.AppState>, private configService: UserConfigurationService) {\r\n\t\tthis.userInforamation$ = this.store.select(FeatureReducer.getAccountInfo);\r\n\t\tthis.roles$ = this.store\r\n\t\t\t.select(getAppConfig)\r\n\t\t\t.filter(config => config != undefined)\r\n\t\t\t.map(config => config.Config.Roles);\r\n\t\t// TODO:\r\n\t\t// this.groups = this.diagramService.getGroups();\r\n\t\tthis.groups = Observable.of([ \"test1\", \"test2\" ]);\r\n\r\n\t\tthis.config$ = this.configService.config$;\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.userInforamation$.subscribe(userInfo => {\r\n\t\t\tif (userInfo == null) return;\r\n\t\t\tthis.formGroup.patchValue({\r\n\t\t\t\tEmail: userInfo.Email,\r\n\t\t\t\tRoles: userInfo.Roles,\r\n\t\t\t\tGroups: userInfo.Groups\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tupdateProfile(data) {\r\n\t\tthis.store.dispatch(new EditProfile(data));\r\n\t}\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { UserModel } from \"../../models\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\n@Component({\r\n    selector: 'user-profile',\r\n    template: `<div fxFlex=\"450px\">\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>Ø§Ø·ÙØ§Ø¹Ø§Øª Ù¾Ø±ÙÙØ§ÛÙ</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content *ngIf='dataStatus$ | async'>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>Ø§ÛÙÛÙ</p>\r\n        <p fxFlex='60'>{{(information | async).Email}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>roles</p>\r\n        <p fxFlex='60'>{{(information | async).Roles | json}}</p>\r\n      </div>\r\n      <!-- <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>ÙØ§Ù</p>\r\n        <p fxFlex='60'>{{(userInformation | async).FirstName}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>ÙØ§Ù Ø®Ø§ÙÙØ§Ø¯Ú¯Û</p>\r\n        <p fxFlex='60'>{{(userInformation | async).LastName}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>ÙØ§Ù Ú©Ø§Ø±Ø¨Ø±Û</p>\r\n        <p fxFlex='60'>{{(userInformation | async).Username}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>ØªÙÙÙ ÙÙØ±Ø§Ù</p>\r\n        <p fxFlex='60'>{{(userInformation | async).MobileNumber | persianNumber}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>Ø¬ÙØ³ÛØª</p>\r\n        <p fxFlex='60'>{{sex$ | async}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>ØªØ§Ø±ÛØ® ØªÙÙØ¯</p>\r\n        <p fxFlex='60'>{{(userInformation | async).Birthdate | persianDate : false}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>Ø§ÛÙÛÙ</p>\r\n        <p fxFlex='60'>{{(userInformation | async).Email}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>{{(identifierType$ | async)}}</p>\r\n        <p fxFlex='60'>{{(userInformation | async).IdentificationNo | persianNumber}}</p>\r\n      </div>\r\n      <div class='list-item' fxFlexLayout='row'>\r\n        <p fxFlex='40'>ØªØ§Ø±ÛØ® Ø¹Ø¶ÙÛØª</p>\r\n        <p fxFlex='60'>{{(userInformation | async).RegisterDate | persianDate}}</p>\r\n      </div> -->\r\n    </mat-card-content>\r\n\r\n    <mat-card-actions>\r\n      <button id=\"profile-edit-button\" fxFlex mat-raised-button color=\"primary\" routerLink='edit'>ÙÛØ±Ø§ÛØ´</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>`,\r\n    styles: [``]\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n    @Input() information: Observable<UserModel>;\r\n    @Input() dataStatus$: BehaviorSubject<boolean>;\r\n\r\n    sex$ = new BehaviorSubject('');\r\n    identifierType$ = new BehaviorSubject('');\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.information.subscribe(data => {\r\n            if (data == null) return;\r\n\r\n        })\r\n    }\r\n\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport * as FeatureReducer from \"../../user.reducers\";\r\nimport { UserModel } from \"../../models\";\r\n\r\n@Component({\r\n\ttemplate: `<user-profile\r\n                [information]=\"data$\"\r\n                [dataStatus$]='dataStatus$'\r\n            ></user-profile>`\r\n})\r\nexport class ProfileContainerComponent implements OnInit {\r\n\tdata$: Observable<UserModel>;\r\n\tdataStatus$: Observable<boolean>;\r\n\r\n\tconstructor(private store: Store<FeatureReducer.AppState>) {\r\n\t\tthis.data$ = this.store.select(FeatureReducer.getAccountInfo);\r\n\t\tthis.dataStatus$ = this.store.select(FeatureReducer.getUserInforamtionStatus);\r\n\t}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule\r\n} from \"@angular/material\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\r\nimport { EffectsModule, mergeEffects } from \"@ngrx/effects\";\r\n\r\nimport { NgsFormModule } from \"@soushians/form\";\r\n\r\nimport { UserModuleConfig, MODULE_CONFIG_TOKEN } from \"./user.config\";\r\nimport { EditProfileEffects } from \"./profile-edit/edit-profile.effects\";\r\nimport { ProfileViewEffects } from \"./profile-view/profile-view.effects\";\r\nimport { UserEffects } from \"./feature/feature.effects\";\r\nimport { SearchComponent } from \"./search-account/search/search.component\";\r\nimport { ChangePasswordComponent } from \"./change-password/change-password/change-password.component\";\r\nimport { ProfileEditComponent } from \"./profile-edit/profile-edit/profile-edit.component\";\r\nimport { DashboardLinksComponent } from \"./dashboard/dashboard-links/dashboard-links.component\";\r\nimport { ResetPasswordRequestComponent } from \"./reset-password/reset-password-request/reset-password-request.component\";\r\nimport { FeatureContainerComponent } from \"./feature/feature-container/feature-container.component\";\r\nimport { ChangePasswordContainerComponent } from \"./change-password/change-password-container/change-password-container.component\";\r\nimport { ProfileEditContainerComponent } from \"./profile-edit/profile-edit-container/profile-edit-container.component\";\r\nimport { DashboardContainerComponent } from \"./dashboard/dashboard-container/dashboard.component\";\r\nimport { ProfileComponent } from \"./profile-view/profile/profile.component\";\r\nimport { ProfileContainerComponent } from \"./profile-view/profile-container/profile-container.component\";\r\nimport { UserReducers } from \"./user.reducers\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tRouterModule,\r\n\t\tCommonModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSelectModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatRadioModule,\r\n\t\tReactiveFormsModule,\r\n\t\tBrowserAnimationsModule,\r\n\t\tNgsFormModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tSearchComponent,\r\n\t\tProfileComponent,\r\n\t\tChangePasswordComponent,\r\n\t\tProfileEditComponent,\r\n\t\tProfileContainerComponent,\r\n\t\tDashboardLinksComponent,\r\n\t\tResetPasswordRequestComponent,\r\n\t\tFeatureContainerComponent,\r\n\t\tDashboardContainerComponent,\r\n\t\tChangePasswordContainerComponent,\r\n\t\tProfileEditContainerComponent\r\n\t],\r\n\texports: []\r\n})\r\nexport class NgsUserModule {\r\n\tstatic forRoot(config?: UserModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: RootNgsUserModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config } ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsUserModule,\r\n\t\tStoreModule.forFeature(\"user\", UserReducers),\r\n\t\tEffectsModule.forFeature([\r\n\t\t\t// ResetPasswordRequestEffects,\r\n\t\t\tEditProfileEffects,\r\n\t\t\t// ChangePasswordEffects,\r\n\t\t\tProfileViewEffects,\r\n\t\t\t// SearchEffects,\r\n\t\t\tUserEffects\r\n\t\t])\r\n\t]\r\n})\r\nexport class RootNgsUserModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Headers, RequestOptions } from \"@angular/http\";\r\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport * as FeatureReducer from \"../user.reducers\";\r\n\r\nimport { ResetPasswordModel, ResetPasswordRequestModel, ChangePasswordModel } from \"../models\";\r\nimport { UserConfigurationService } from \"./user-configuration.service\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class PasswordService {\r\n\tnumberOfRequeseted$: Observable<number>;\r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<any>,\r\n\t\tprivate userConfigurationService: UserConfigurationService\r\n\t) {\r\n\t\tthis.numberOfRequeseted$ = this.store.select(FeatureReducer.getNumberOfRequeseted);\r\n\t}\r\n\r\n\tisValidResetPasswordRequest(): Observable<boolean> {\r\n\t\treturn this.numberOfRequeseted$\r\n\t\t\t.take(1)\r\n\t\t\t.switchMap(count => (count < 3 ? Observable.of(true) : Observable.of(false)));\r\n\t}\r\n\r\n\tisValidResetPasswordReset(data: ResetPasswordModel.Request): Observable<any> {\r\n\t\tvar model = new ResetPasswordModel.Request(data);\r\n\t\tlet { Token } = model;\r\n\t\treturn this.http\r\n\t\t\t.get(`http://wifi.shatel.ir/api/v1/reset/tokens/${Token}`, { withCredentials: true })\r\n\t\t\t.map(response => response);\r\n\t}\r\n\r\n\trequestResetPasswordLink(data: ResetPasswordRequestModel.Request): Observable<any> {\r\n\t\tvar model = new ResetPasswordRequestModel.Request(data);\r\n\r\n\t\t// TODO:\r\n\t\t// return this.http.post(this.userConfigurationService.config.endpoints.resetPasswordRequest(model), model.getRequestBody(), { withCredentials: true })\r\n\t\treturn this.http\r\n\t\t\t.post(this.userConfigurationService.config.endpoints.editProfile, model.getRequestBody(), {\r\n\t\t\t\twithCredentials: true\r\n\t\t\t})\r\n\t\t\t.map(response => response);\r\n\t}\r\n\r\n\tchangePassword(data: ChangePasswordModel.Request): Observable<any> {\r\n\t\tvar model = new ChangePasswordModel.Request(data);\r\n\t\treturn this.http\r\n\t\t\t.patch(\"this.userConfigurationService.config.endpoints.changePassword(model)\", model.getRequestBody(), {\r\n\t\t\t\twithCredentials: true\r\n\t\t\t})\r\n\t\t\t.map(response => response);\r\n\t}\r\n\r\n\tresetPassword(data: ResetPasswordModel.Request): Observable<any> {\r\n\t\tvar model = new ResetPasswordModel.Request(data);\r\n\t\tlet { Token } = model;\r\n\t\treturn this.http\r\n\t\t\t.patch(`http://wifi.shatel.ir/api/v1/reset/tokens/${Token}`, model.getRequestBody(), {\r\n\t\t\t\twithCredentials: true\r\n\t\t\t})\r\n\t\t\t.map(response => response);\r\n\t}\r\n}\r\n\r\nexport var PasswordServiceStub = {};\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { map, switchMap } from \"rxjs/operators\";\r\n\r\nimport { ChangePasswordModel } from \"../models\";\r\n\r\nimport { PasswordService } from \"../services/password.service\";\r\nimport {\r\n\tChangePasswordActionTypes,\r\n\tChangePasswordStart,\r\n\tChangePasswordSucceed,\r\n\tChangePasswordFailed\r\n} from \"./change-password.actions\";\r\n\r\n@Injectable()\r\nexport class ChangePasswordEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router, private passwordService: PasswordService) {}\r\n\r\n\t@Effect()\r\n\tChangePasswordRequest$ = this.actions$\r\n\t\t.ofType(ChangePasswordActionTypes.CHANGE_PASSWORD)\r\n\t\t.pipe(map(action => action.payload), map(data => new ChangePasswordStart(data)));\r\n\r\n\t@Effect()\r\n\tRequestChangePasswordLink$ = this.actions$.ofType(ChangePasswordActionTypes.PASSWORD_CHANGED_START).pipe(\r\n\t\tmap(action => action.payload),\r\n\t\tswitchMap((data: ChangePasswordModel.Request) => {\r\n\t\t\treturn this.passwordService\r\n\t\t\t\t.changePassword(data)\r\n\t\t\t\t.map(res => new ChangePasswordSucceed(res))\r\n\t\t\t\t.catch(() => Observable.of(new ChangePasswordFailed()));\r\n\t\t})\r\n\t);\r\n\r\n\t//@Effect()\r\n\t//    ResetPassword$ = this.actions$\r\n\t//        .ofType(ResetPasswordActionTypes.RESET_PASSWORD)\r\n\t//        .map(toPayload)\r\n\t//        .map((data) => new ResetPasswordStart(data));\r\n\t//\r\n\t//    @Effect()\r\n\t//    ResetPasswordLink$ = this.actions$\r\n\t//        .ofType(ResetPasswordActionTypes.RESET_PASSWORD_START)\r\n\t//        .map(toPayload)\r\n\t//        .switchMap((data: ResetPasswordModel.Request) => {\r\n\t//            return this.passwordService.resetPassword(data)\r\n\t//                .map(() => new ResetPasswordSucceed())\r\n\t//                .catch(() => Observable.of(new ResetPasswordFailed()))\r\n\t//        });\r\n}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { DashboardContainerComponent, DashboardLinksComponent } from \"./dashboard\";\r\nimport { ProfileContainerComponent } from \"./profile-view\";\r\nimport { ProfileEditContainerComponent } from \"./profile-edit\";\r\nimport { ChangePasswordContainerComponent } from \"./change-password\";\r\nimport { SearchComponent } from \"./search-account\";\r\nimport { FeatureContainerComponent } from \"./feature\";\r\n\r\nexport const routes: Routes = [\r\n\t{\r\n\t\tpath: \"user/panel\",\r\n\t\tcomponent: DashboardContainerComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"\",\r\n\t\t\t\tcomponent: DashboardLinksComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"profile\",\r\n\t\t\t\tcomponent: ProfileContainerComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"profile/edit\",\r\n\t\t\t\tcomponent: ProfileEditContainerComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"password/change\",\r\n\t\t\t\tcomponent: ChangePasswordContainerComponent\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tpath: \"admin/user\",\r\n\t\tchildren: [\r\n\t\t\t{ path: \"managment\", component: SearchComponent },\r\n\t\t\t{\r\n\t\t\t\tpath: \":Email\",\r\n\t\t\t\tcomponent: FeatureContainerComponent,\r\n\t\t\t\tchildren: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: \"profile-edit\",\r\n\t\t\t\t\t\tcomponent: ProfileEditContainerComponent\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: \"change-password\",\r\n\t\t\t\t\t\tcomponent: ChangePasswordContainerComponent\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const NgsUserRoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { AppState } from \"../user.reducers\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { getAccountInfo } from \"../user.reducers\";\r\nimport { UserConfigurationService } from \"./user-configuration.service\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class UserFacadeService {\r\n\tconstructor(private store: Store<AppState>, private configService: UserConfigurationService) {}\r\n\tgetDisplayName(): Observable<string> {\r\n\t\treturn this.configService.config$\r\n\t\t\t.map(config => config.mapUserDisplayName)\r\n\t\t\t.switchMap(mapper => this.store.select(getAccountInfo).let(mapper));\r\n\t}\r\n}\r\n"],"names":["initialState","getStatus","userReducer.userReducer","resetPasswordRequestReducer.reducer","changePassword.reducer","searchReducer.reducer","editProfileReducer.reducer","getNumberOfRequeseted","resetPasswordRequestReducer.getNumberOfRequeseted","resetPasswordRequestReducer.getStatus","getAccountInfo","userReducer.getAccountInfo","searchReducer.getStatus","appReducer.getAccountInfo","BehaviorSubject","FeatureReducer.getAccountInfo","FeatureReducer.getSearchStatus","FeatureReducer.getUserInforamtionStatus","FeatureReducer.getNumberOfRequeseted","Observable"],"mappings":"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"}
