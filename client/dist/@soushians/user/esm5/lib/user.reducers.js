/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { createSelector, createFeatureSelector } from "@ngrx/store";
import * as userReducer from "./dashboard/user.reducer";
import * as resetPasswordRequestReducer from "./reset-password/reset-password-request.reducer";
import * as changePassword from "./change-password/change-password.reducer";
import * as editProfileReducer from "./profile-edit/edit-profile.reducer";
import * as searchReducer from "./search-account/search.reducer";
/**
 * @record
 */
export function UserState() { }
function UserState_tsickle_Closure_declarations() {
    /** @type {?} */
    UserState.prototype.user;
    /** @type {?} */
    UserState.prototype.resetPasswordRequest;
    /** @type {?} */
    UserState.prototype.searchView;
    /** @type {?} */
    UserState.prototype.changePassword;
    /** @type {?} */
    UserState.prototype.editProfile;
}
export var /** @type {?} */ UserReducers = {
    user: userReducer.userReducer,
    resetPasswordRequest: resetPasswordRequestReducer.reducer,
    changePassword: changePassword.reducer,
    searchView: searchReducer.reducer,
    editProfile: editProfileReducer.reducer
};
/**
 * @record
 */
export function AppState() { }
function AppState_tsickle_Closure_declarations() {
    /** @type {?} */
    AppState.prototype.user;
}
//#region selectors
export var /** @type {?} */ selectFeatureState = createFeatureSelector("user");
export var /** @type {?} */ getUserInforamtionStatus = createSelector(selectFeatureState, function (state) { return state.user.loaded; });
export var /** @type {?} */ isSignedIn = createSelector(selectFeatureState, function (state) { return state.user.loaded; });
export var /** @type {?} */ selectResetPasswordRequestState = createSelector(selectFeatureState, function (state) { return state.resetPasswordRequest; });
export var /** @type {?} */ getNumberOfRequeseted = createSelector(selectResetPasswordRequestState, resetPasswordRequestReducer.getNumberOfRequeseted);
export var /** @type {?} */ getResetPasswordRequestStatus = createSelector(selectResetPasswordRequestState, resetPasswordRequestReducer.getStatus);
//#region user
export var /** @type {?} */ selectUserInformaionState = createSelector(selectFeatureState, function (state) { return state.user; });
export var /** @type {?} */ getUser = createSelector(selectUserInformaionState, userReducer.getUser);
//#endregion
//#region search
export var /** @type {?} */ selectSearchState = createSelector(selectFeatureState, function (state) { return state.searchView; });
export var /** @type {?} */ getSearchStatus = createSelector(selectSearchState, searchReducer.getStatus);
export var /** @type {?} */ getUserInfo = createSelector(selectSearchState, searchReducer.getUserInfo);
//#endregion

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci5yZWR1Y2Vycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bzb3VzaGlhbnMvdXNlci8iLCJzb3VyY2VzIjpbImxpYi91c2VyLnJlZHVjZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLHFCQUFxQixFQUFvQixNQUFNLGFBQWEsQ0FBQztBQXlCdEYsT0FBTyxLQUFLLFdBQVcsTUFBTSwwQkFBMEIsQ0FBQztBQUN4RCxPQUFPLEtBQUssMkJBQTJCLE1BQU0saURBQWlELENBQUM7QUFDL0YsT0FBTyxLQUFLLGNBQWMsTUFBTSwyQ0FBMkMsQ0FBQztBQUM1RSxPQUFPLEtBQUssa0JBQWtCLE1BQU0scUNBQXFDLENBQUM7QUFDMUUsT0FBTyxLQUFLLGFBQWEsTUFBTSxpQ0FBaUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFVakUsTUFBTSxDQUFDLHFCQUFNLFlBQVksR0FBRztJQUMzQixJQUFJLEVBQUUsV0FBVyxDQUFDLFdBQVc7SUFDN0Isb0JBQW9CLEVBQUUsMkJBQTJCLENBQUMsT0FBTztJQUN6RCxjQUFjLEVBQUUsY0FBYyxDQUFDLE9BQU87SUFDdEMsVUFBVSxFQUFFLGFBQWEsQ0FBQyxPQUFPO0lBQ2pDLFdBQVcsRUFBRSxrQkFBa0IsQ0FBQyxPQUFPO0NBQ3ZDLENBQUM7Ozs7Ozs7Ozs7QUFRRixNQUFNLENBQUMscUJBQU0sa0JBQWtCLEdBQUcscUJBQXFCLENBQVksTUFBTSxDQUFDLENBQUM7QUFFM0UsTUFBTSxDQUFDLHFCQUFNLHdCQUF3QixHQUFHLGNBQWMsQ0FBQyxrQkFBa0IsRUFBRSxVQUFDLEtBQWdCLElBQUssT0FBQSxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBakIsQ0FBaUIsQ0FBQyxDQUFDO0FBQ3BILE1BQU0sQ0FBQyxxQkFBTSxVQUFVLEdBQUcsY0FBYyxDQUFDLGtCQUFrQixFQUFFLFVBQUMsS0FBZ0IsSUFBSyxPQUFBLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFqQixDQUFpQixDQUFDLENBQUM7QUFFdEcsTUFBTSxDQUFDLHFCQUFNLCtCQUErQixHQUFHLGNBQWMsQ0FDNUQsa0JBQWtCLEVBQ2xCLFVBQUMsS0FBZ0IsSUFBSyxPQUFBLEtBQUssQ0FBQyxvQkFBb0IsRUFBMUIsQ0FBMEIsQ0FDaEQsQ0FBQztBQUNGLE1BQU0sQ0FBQyxxQkFBTSxxQkFBcUIsR0FBRyxjQUFjLENBQ2xELCtCQUErQixFQUMvQiwyQkFBMkIsQ0FBQyxxQkFBcUIsQ0FDakQsQ0FBQztBQUNGLE1BQU0sQ0FBQyxxQkFBTSw2QkFBNkIsR0FBRyxjQUFjLENBQzFELCtCQUErQixFQUMvQiwyQkFBMkIsQ0FBQyxTQUFTLENBQ3JDLENBQUM7O0FBR0YsTUFBTSxDQUFDLHFCQUFNLHlCQUF5QixHQUFHLGNBQWMsQ0FBQyxrQkFBa0IsRUFBRSxVQUFDLEtBQWdCLElBQUssT0FBQSxLQUFLLENBQUMsSUFBSSxFQUFWLENBQVUsQ0FBQyxDQUFDO0FBQzlHLE1BQU0sQ0FBQyxxQkFBTSxPQUFPLEdBQUcsY0FBYyxDQUFDLHlCQUF5QixFQUFFLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQzs7O0FBSXRGLE1BQU0sQ0FBQyxxQkFBTSxpQkFBaUIsR0FBRyxjQUFjLENBQUMsa0JBQWtCLEVBQUUsVUFBQyxLQUFnQixJQUFLLE9BQUEsS0FBSyxDQUFDLFVBQVUsRUFBaEIsQ0FBZ0IsQ0FBQyxDQUFDO0FBQzVHLE1BQU0sQ0FBQyxxQkFBTSxlQUFlLEdBQUcsY0FBYyxDQUFDLGlCQUFpQixFQUFFLGFBQWEsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUMxRixNQUFNLENBQUMscUJBQU0sV0FBVyxHQUFHLGNBQWMsQ0FBQyxpQkFBaUIsRUFBRSxhQUFhLENBQUMsV0FBVyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTZWxlY3RvciwgY3JlYXRlRmVhdHVyZVNlbGVjdG9yLCBNZW1vaXplZFNlbGVjdG9yIH0gZnJvbSBcIkBuZ3J4L3N0b3JlXCI7XHJcblxyXG5pbXBvcnQgeyBVc2VyTW9kZWwsIFByb2ZpbGVWaWV3TW9kZWwgfSBmcm9tIFwiLi9tb2RlbHNcIjtcclxuaW1wb3J0IHsgQ2hhbmdlUGFzc3dvcmQsIENoYW5nZVBhc3N3b3JkRmFpbGVkLCBDaGFuZ2VQYXNzd29yZFN0YXJ0LCBDaGFuZ2VQYXNzd29yZFN1Y2NlZWQgfSBmcm9tIFwiLi9jaGFuZ2UtcGFzc3dvcmRcIjtcclxuaW1wb3J0IHtcclxuXHREaXNhYmxlR2V0TGluayxcclxuXHRFbmFibGVHZXRMaW5rLFxyXG5cdEdldFJlc2V0UGFzc3dvcmRMaW5rLFxyXG5cdE1heGltdW1UcnlIYXBwZW5kLFxyXG5cdFBhc3N3b3JkQ2hhbmdlZEZhaWxlZCxcclxuXHRQYXNzd29yZENoYW5nZWRTdWNjZWVkLFxyXG5cdFJlc2V0UGFzc3dvcmRMaW5rUmVxdWVzdEZhaWxlZCxcclxuXHRSZXNldFBhc3N3b3JkTGlua1JlcXVlc3RTdGFydCxcclxuXHRSZXNldFBhc3N3b3JkTGlua1JlcXVlc3RTdWNjZWVkXHJcbn0gZnJvbSBcIi4vcmVzZXQtcGFzc3dvcmRcIjtcclxuaW1wb3J0IHsgRWRpdFByb2ZpbGUsIEVkaXRQcm9maWxlRmFpbGVkLCBFZGl0UHJvZmlsZVN0YXJ0LCBFZGl0UHJvZmlsZVN1Y2NlZWQgfSBmcm9tIFwiLi9wcm9maWxlLWVkaXRcIjtcclxuaW1wb3J0IHsgUmVmcmVzaFVzZXJJbmZvQWN0aW9uLCBVc2VyU2VsZWN0ZWRBY3Rpb24gfSBmcm9tIFwiLi9kYXNoYm9hcmRcIjtcclxuaW1wb3J0IHsgU2VhcmNoRmFpbGVkLCBTZWFyY2hTdGFydEFjdGlvbiwgU2VhcmNoU3VjY2VlZCB9IGZyb20gXCIuL3NlYXJjaC1hY2NvdW50XCI7XHJcblxyXG4vL1RPRE8gOiByZW1vdmUgdGhlc2UgbGluZXNcclxuLy9pbXBvcnQge1xyXG4vLyAgICAgICAgTG9naW4sIExvZ2luU3VjY2VzcywgTG9naW5GYWlsdXJlLCBMb2dpblJlZGlyZWN0LCBMb2dvdXRBY3Rpb25cclxuLy99IGZyb20gXCIuLi9hY3Rpb25zXCJcclxuLy9pbXBvcnQgeyBDYXB0Y2hhQWN0aW9uIH0gZnJvbSBcIi4uL2FjdGlvbnNcIlxyXG5cclxuaW1wb3J0ICogYXMgdXNlclJlZHVjZXIgZnJvbSBcIi4vZGFzaGJvYXJkL3VzZXIucmVkdWNlclwiO1xyXG5pbXBvcnQgKiBhcyByZXNldFBhc3N3b3JkUmVxdWVzdFJlZHVjZXIgZnJvbSBcIi4vcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQtcmVxdWVzdC5yZWR1Y2VyXCI7XHJcbmltcG9ydCAqIGFzIGNoYW5nZVBhc3N3b3JkIGZyb20gXCIuL2NoYW5nZS1wYXNzd29yZC9jaGFuZ2UtcGFzc3dvcmQucmVkdWNlclwiO1xyXG5pbXBvcnQgKiBhcyBlZGl0UHJvZmlsZVJlZHVjZXIgZnJvbSBcIi4vcHJvZmlsZS1lZGl0L2VkaXQtcHJvZmlsZS5yZWR1Y2VyXCI7XHJcbmltcG9ydCAqIGFzIHNlYXJjaFJlZHVjZXIgZnJvbSBcIi4vc2VhcmNoLWFjY291bnQvc2VhcmNoLnJlZHVjZXJcIjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVXNlclN0YXRlIHtcclxuXHR1c2VyOiB1c2VyUmVkdWNlci5TdGF0ZTtcclxuXHRyZXNldFBhc3N3b3JkUmVxdWVzdDogcmVzZXRQYXNzd29yZFJlcXVlc3RSZWR1Y2VyLlN0YXRlO1xyXG5cdHNlYXJjaFZpZXc6IHNlYXJjaFJlZHVjZXIuU3RhdGU7XHJcblx0Y2hhbmdlUGFzc3dvcmQ6IGNoYW5nZVBhc3N3b3JkLlN0YXRlO1xyXG5cdGVkaXRQcm9maWxlOiBlZGl0UHJvZmlsZVJlZHVjZXIuU3RhdGU7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBVc2VyUmVkdWNlcnMgPSB7XHJcblx0dXNlcjogdXNlclJlZHVjZXIudXNlclJlZHVjZXIsXHJcblx0cmVzZXRQYXNzd29yZFJlcXVlc3Q6IHJlc2V0UGFzc3dvcmRSZXF1ZXN0UmVkdWNlci5yZWR1Y2VyLFxyXG5cdGNoYW5nZVBhc3N3b3JkOiBjaGFuZ2VQYXNzd29yZC5yZWR1Y2VyLFxyXG5cdHNlYXJjaFZpZXc6IHNlYXJjaFJlZHVjZXIucmVkdWNlcixcclxuXHRlZGl0UHJvZmlsZTogZWRpdFByb2ZpbGVSZWR1Y2VyLnJlZHVjZXJcclxufTtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXBwU3RhdGUge1xyXG5cdFwidXNlclwiOiBVc2VyU3RhdGU7XHJcbn1cclxuXHJcbi8vI3JlZ2lvbiBzZWxlY3RvcnNcclxuXHJcbmV4cG9ydCBjb25zdCBzZWxlY3RGZWF0dXJlU3RhdGUgPSBjcmVhdGVGZWF0dXJlU2VsZWN0b3I8VXNlclN0YXRlPihcInVzZXJcIik7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0VXNlckluZm9yYW10aW9uU3RhdHVzID0gY3JlYXRlU2VsZWN0b3Ioc2VsZWN0RmVhdHVyZVN0YXRlLCAoc3RhdGU6IFVzZXJTdGF0ZSkgPT4gc3RhdGUudXNlci5sb2FkZWQpO1xyXG5leHBvcnQgY29uc3QgaXNTaWduZWRJbiA9IGNyZWF0ZVNlbGVjdG9yKHNlbGVjdEZlYXR1cmVTdGF0ZSwgKHN0YXRlOiBVc2VyU3RhdGUpID0+IHN0YXRlLnVzZXIubG9hZGVkKTtcclxuXHJcbmV4cG9ydCBjb25zdCBzZWxlY3RSZXNldFBhc3N3b3JkUmVxdWVzdFN0YXRlID0gY3JlYXRlU2VsZWN0b3IoXHJcblx0c2VsZWN0RmVhdHVyZVN0YXRlLFxyXG5cdChzdGF0ZTogVXNlclN0YXRlKSA9PiBzdGF0ZS5yZXNldFBhc3N3b3JkUmVxdWVzdFxyXG4pO1xyXG5leHBvcnQgY29uc3QgZ2V0TnVtYmVyT2ZSZXF1ZXNldGVkID0gY3JlYXRlU2VsZWN0b3IoXHJcblx0c2VsZWN0UmVzZXRQYXNzd29yZFJlcXVlc3RTdGF0ZSxcclxuXHRyZXNldFBhc3N3b3JkUmVxdWVzdFJlZHVjZXIuZ2V0TnVtYmVyT2ZSZXF1ZXNldGVkXHJcbik7XHJcbmV4cG9ydCBjb25zdCBnZXRSZXNldFBhc3N3b3JkUmVxdWVzdFN0YXR1cyA9IGNyZWF0ZVNlbGVjdG9yKFxyXG5cdHNlbGVjdFJlc2V0UGFzc3dvcmRSZXF1ZXN0U3RhdGUsXHJcblx0cmVzZXRQYXNzd29yZFJlcXVlc3RSZWR1Y2VyLmdldFN0YXR1c1xyXG4pO1xyXG5cclxuLy8jcmVnaW9uIHVzZXJcclxuZXhwb3J0IGNvbnN0IHNlbGVjdFVzZXJJbmZvcm1haW9uU3RhdGUgPSBjcmVhdGVTZWxlY3RvcihzZWxlY3RGZWF0dXJlU3RhdGUsIChzdGF0ZTogVXNlclN0YXRlKSA9PiBzdGF0ZS51c2VyKTtcclxuZXhwb3J0IGNvbnN0IGdldFVzZXIgPSBjcmVhdGVTZWxlY3RvcihzZWxlY3RVc2VySW5mb3JtYWlvblN0YXRlLCB1c2VyUmVkdWNlci5nZXRVc2VyKTtcclxuLy8jZW5kcmVnaW9uXHJcblxyXG4vLyNyZWdpb24gc2VhcmNoXHJcbmV4cG9ydCBjb25zdCBzZWxlY3RTZWFyY2hTdGF0ZSA9IGNyZWF0ZVNlbGVjdG9yKHNlbGVjdEZlYXR1cmVTdGF0ZSwgKHN0YXRlOiBVc2VyU3RhdGUpID0+IHN0YXRlLnNlYXJjaFZpZXcpO1xyXG5leHBvcnQgY29uc3QgZ2V0U2VhcmNoU3RhdHVzID0gY3JlYXRlU2VsZWN0b3Ioc2VsZWN0U2VhcmNoU3RhdGUsIHNlYXJjaFJlZHVjZXIuZ2V0U3RhdHVzKTtcclxuZXhwb3J0IGNvbnN0IGdldFVzZXJJbmZvID0gY3JlYXRlU2VsZWN0b3Ioc2VsZWN0U2VhcmNoU3RhdGUsIHNlYXJjaFJlZHVjZXIuZ2V0VXNlckluZm8pO1xyXG4vLyNlbmRyZWdpb25cclxuIl19