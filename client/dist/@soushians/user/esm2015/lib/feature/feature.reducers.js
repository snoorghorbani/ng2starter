/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { createSelector, createFeatureSelector } from "@ngrx/store";
import * as userReducer from "../dashboard/user.reducer";
import * as resetPasswordRequestReducer from "../reset-password/reset-password-request.reducer";
import * as changePassword from "../change-password/change-password.reducer";
import * as editProfileReducer from "../profile-edit/edit-profile.reducer";
import * as searchReducer from "../search-account/search.reducer";
/**
 * @record
 */
export function UserState() { }
function UserState_tsickle_Closure_declarations() {
    /** @type {?} */
    UserState.prototype.user;
    /** @type {?} */
    UserState.prototype.resetPasswordRequest;
    /** @type {?} */
    UserState.prototype.searchView;
    /** @type {?} */
    UserState.prototype.changePassword;
    /** @type {?} */
    UserState.prototype.editProfile;
}
export const /** @type {?} */ UserReducers = {
    user: userReducer.userReducer,
    resetPasswordRequest: resetPasswordRequestReducer.reducer,
    changePassword: changePassword.reducer,
    searchView: searchReducer.reducer,
    editProfile: editProfileReducer.reducer
};
/**
 * @record
 */
export function FeatureState() { }
function FeatureState_tsickle_Closure_declarations() {
    /** @type {?} */
    FeatureState.prototype.user;
}
//#region selectors
export const /** @type {?} */ selectFeatureState = createFeatureSelector("user");
export const /** @type {?} */ getUserInforamtionStatus = createSelector(selectFeatureState, (state) => state.user.loaded);
export const /** @type {?} */ isSignedIn = createSelector(selectFeatureState, (state) => state.user.loaded);
export const /** @type {?} */ selectResetPasswordRequestState = createSelector(selectFeatureState, (state) => state.resetPasswordRequest);
export const /** @type {?} */ getNumberOfRequeseted = createSelector(selectResetPasswordRequestState, resetPasswordRequestReducer.getNumberOfRequeseted);
export const /** @type {?} */ getResetPasswordRequestStatus = createSelector(selectResetPasswordRequestState, resetPasswordRequestReducer.getStatus);
//#region user
export const /** @type {?} */ selectUserInformaionState = createSelector(selectFeatureState, (state) => state.user);
export const /** @type {?} */ getUser = createSelector(selectUserInformaionState, userReducer.getUser);
//#endregion
//#region search
export const /** @type {?} */ selectSearchState = createSelector(selectFeatureState, (state) => state.searchView);
export const /** @type {?} */ getSearchStatus = createSelector(selectSearchState, searchReducer.getStatus);
export const /** @type {?} */ getUserInfo = createSelector(selectSearchState, searchReducer.getUserInfo);
//#endregion

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmVhdHVyZS5yZWR1Y2Vycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bzb3VzaGlhbnMvdXNlci8iLCJzb3VyY2VzIjpbImxpYi9mZWF0dXJlL2ZlYXR1cmUucmVkdWNlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUscUJBQXFCLEVBQW9CLE1BQU0sYUFBYSxDQUFDO0FBd0J0RixPQUFPLEtBQUssV0FBVyxNQUFNLDJCQUEyQixDQUFDO0FBQ3pELE9BQU8sS0FBSywyQkFBMkIsTUFBTSxrREFBa0QsQ0FBQztBQUNoRyxPQUFPLEtBQUssY0FBYyxNQUFNLDRDQUE0QyxDQUFDO0FBQzdFLE9BQU8sS0FBSyxrQkFBa0IsTUFBTSxzQ0FBc0MsQ0FBQztBQUMzRSxPQUFPLEtBQUssYUFBYSxNQUFNLGtDQUFrQyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7OztBQVVsRSxNQUFNLENBQUMsdUJBQU0sWUFBWSxHQUFHO0lBQzNCLElBQUksRUFBRSxXQUFXLENBQUMsV0FBVztJQUM3QixvQkFBb0IsRUFBRSwyQkFBMkIsQ0FBQyxPQUFPO0lBQ3pELGNBQWMsRUFBRSxjQUFjLENBQUMsT0FBTztJQUN0QyxVQUFVLEVBQUUsYUFBYSxDQUFDLE9BQU87SUFDakMsV0FBVyxFQUFFLGtCQUFrQixDQUFDLE9BQU87Q0FDdkMsQ0FBQzs7Ozs7Ozs7OztBQVFGLE1BQU0sQ0FBQyx1QkFBTSxrQkFBa0IsR0FBRyxxQkFBcUIsQ0FBWSxNQUFNLENBQUMsQ0FBQztBQUUzRSxNQUFNLENBQUMsdUJBQU0sd0JBQXdCLEdBQUcsY0FBYyxDQUFDLGtCQUFrQixFQUFFLENBQUMsS0FBZ0IsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNwSCxNQUFNLENBQUMsdUJBQU0sVUFBVSxHQUFHLGNBQWMsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLEtBQWdCLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7QUFFdEcsTUFBTSxDQUFDLHVCQUFNLCtCQUErQixHQUFHLGNBQWMsQ0FDNUQsa0JBQWtCLEVBQ2xCLENBQUMsS0FBZ0IsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLG9CQUFvQixDQUNoRCxDQUFDO0FBQ0YsTUFBTSxDQUFDLHVCQUFNLHFCQUFxQixHQUFHLGNBQWMsQ0FDbEQsK0JBQStCLEVBQy9CLDJCQUEyQixDQUFDLHFCQUFxQixDQUNqRCxDQUFDO0FBQ0YsTUFBTSxDQUFDLHVCQUFNLDZCQUE2QixHQUFHLGNBQWMsQ0FDMUQsK0JBQStCLEVBQy9CLDJCQUEyQixDQUFDLFNBQVMsQ0FDckMsQ0FBQzs7QUFHRixNQUFNLENBQUMsdUJBQU0seUJBQXlCLEdBQUcsY0FBYyxDQUFDLGtCQUFrQixFQUFFLENBQUMsS0FBZ0IsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQzlHLE1BQU0sQ0FBQyx1QkFBTSxPQUFPLEdBQUcsY0FBYyxDQUFDLHlCQUF5QixFQUFFLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQzs7O0FBSXRGLE1BQU0sQ0FBQyx1QkFBTSxpQkFBaUIsR0FBRyxjQUFjLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxLQUFnQixFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDNUcsTUFBTSxDQUFDLHVCQUFNLGVBQWUsR0FBRyxjQUFjLENBQUMsaUJBQWlCLEVBQUUsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQzFGLE1BQU0sQ0FBQyx1QkFBTSxXQUFXLEdBQUcsY0FBYyxDQUFDLGlCQUFpQixFQUFFLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlbGVjdG9yLCBjcmVhdGVGZWF0dXJlU2VsZWN0b3IsIE1lbW9pemVkU2VsZWN0b3IgfSBmcm9tIFwiQG5ncngvc3RvcmVcIjtcclxuaW1wb3J0IHsgVXNlck1vZGVsLCBQcm9maWxlVmlld01vZGVsIH0gZnJvbSBcIi4uL21vZGVsc1wiO1xyXG5pbXBvcnQgeyBDaGFuZ2VQYXNzd29yZCwgQ2hhbmdlUGFzc3dvcmRGYWlsZWQsIENoYW5nZVBhc3N3b3JkU3RhcnQsIENoYW5nZVBhc3N3b3JkU3VjY2VlZCB9IGZyb20gXCIuLi9jaGFuZ2UtcGFzc3dvcmRcIjtcclxuaW1wb3J0IHtcclxuXHREaXNhYmxlR2V0TGluayxcclxuXHRFbmFibGVHZXRMaW5rLFxyXG5cdEdldFJlc2V0UGFzc3dvcmRMaW5rLFxyXG5cdE1heGltdW1UcnlIYXBwZW5kLFxyXG5cdFBhc3N3b3JkQ2hhbmdlZEZhaWxlZCxcclxuXHRQYXNzd29yZENoYW5nZWRTdWNjZWVkLFxyXG5cdFJlc2V0UGFzc3dvcmRMaW5rUmVxdWVzdEZhaWxlZCxcclxuXHRSZXNldFBhc3N3b3JkTGlua1JlcXVlc3RTdGFydCxcclxuXHRSZXNldFBhc3N3b3JkTGlua1JlcXVlc3RTdWNjZWVkXHJcbn0gZnJvbSBcIi4uL3Jlc2V0LXBhc3N3b3JkXCI7XHJcbmltcG9ydCB7IEVkaXRQcm9maWxlLCBFZGl0UHJvZmlsZUZhaWxlZCwgRWRpdFByb2ZpbGVTdGFydCwgRWRpdFByb2ZpbGVTdWNjZWVkIH0gZnJvbSBcIi4uL3Byb2ZpbGUtZWRpdFwiO1xyXG5pbXBvcnQgeyBSZWZyZXNoVXNlckluZm9BY3Rpb24sIFVzZXJTZWxlY3RlZEFjdGlvbiB9IGZyb20gXCIuLi9kYXNoYm9hcmRcIjtcclxuaW1wb3J0IHsgU2VhcmNoRmFpbGVkLCBTZWFyY2hTdGFydEFjdGlvbiwgU2VhcmNoU3VjY2VlZCB9IGZyb20gXCIuLi9zZWFyY2gtYWNjb3VudFwiO1xyXG5cclxuLy9UT0RPIDogcmVtb3ZlIHRoZXNlIGxpbmVzXHJcbi8vaW1wb3J0IHtcclxuLy8gICAgICAgIExvZ2luLCBMb2dpblN1Y2Nlc3MsIExvZ2luRmFpbHVyZSwgTG9naW5SZWRpcmVjdCwgTG9nb3V0QWN0aW9uXHJcbi8vfSBmcm9tIFwiLi4vYWN0aW9uc1wiXHJcbi8vaW1wb3J0IHsgQ2FwdGNoYUFjdGlvbiB9IGZyb20gXCIuLi9hY3Rpb25zXCJcclxuXHJcbmltcG9ydCAqIGFzIHVzZXJSZWR1Y2VyIGZyb20gXCIuLi9kYXNoYm9hcmQvdXNlci5yZWR1Y2VyXCI7XHJcbmltcG9ydCAqIGFzIHJlc2V0UGFzc3dvcmRSZXF1ZXN0UmVkdWNlciBmcm9tIFwiLi4vcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQtcmVxdWVzdC5yZWR1Y2VyXCI7XHJcbmltcG9ydCAqIGFzIGNoYW5nZVBhc3N3b3JkIGZyb20gXCIuLi9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLnJlZHVjZXJcIjtcclxuaW1wb3J0ICogYXMgZWRpdFByb2ZpbGVSZWR1Y2VyIGZyb20gXCIuLi9wcm9maWxlLWVkaXQvZWRpdC1wcm9maWxlLnJlZHVjZXJcIjtcclxuaW1wb3J0ICogYXMgc2VhcmNoUmVkdWNlciBmcm9tIFwiLi4vc2VhcmNoLWFjY291bnQvc2VhcmNoLnJlZHVjZXJcIjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVXNlclN0YXRlIHtcclxuXHR1c2VyOiB1c2VyUmVkdWNlci5TdGF0ZTtcclxuXHRyZXNldFBhc3N3b3JkUmVxdWVzdDogcmVzZXRQYXNzd29yZFJlcXVlc3RSZWR1Y2VyLlN0YXRlO1xyXG5cdHNlYXJjaFZpZXc6IHNlYXJjaFJlZHVjZXIuU3RhdGU7XHJcblx0Y2hhbmdlUGFzc3dvcmQ6IGNoYW5nZVBhc3N3b3JkLlN0YXRlO1xyXG5cdGVkaXRQcm9maWxlOiBlZGl0UHJvZmlsZVJlZHVjZXIuU3RhdGU7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBVc2VyUmVkdWNlcnMgPSB7XHJcblx0dXNlcjogdXNlclJlZHVjZXIudXNlclJlZHVjZXIsXHJcblx0cmVzZXRQYXNzd29yZFJlcXVlc3Q6IHJlc2V0UGFzc3dvcmRSZXF1ZXN0UmVkdWNlci5yZWR1Y2VyLFxyXG5cdGNoYW5nZVBhc3N3b3JkOiBjaGFuZ2VQYXNzd29yZC5yZWR1Y2VyLFxyXG5cdHNlYXJjaFZpZXc6IHNlYXJjaFJlZHVjZXIucmVkdWNlcixcclxuXHRlZGl0UHJvZmlsZTogZWRpdFByb2ZpbGVSZWR1Y2VyLnJlZHVjZXJcclxufTtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmVhdHVyZVN0YXRlIHtcclxuXHRcInVzZXJcIjogVXNlclN0YXRlO1xyXG59XHJcblxyXG4vLyNyZWdpb24gc2VsZWN0b3JzXHJcblxyXG5leHBvcnQgY29uc3Qgc2VsZWN0RmVhdHVyZVN0YXRlID0gY3JlYXRlRmVhdHVyZVNlbGVjdG9yPFVzZXJTdGF0ZT4oXCJ1c2VyXCIpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldFVzZXJJbmZvcmFtdGlvblN0YXR1cyA9IGNyZWF0ZVNlbGVjdG9yKHNlbGVjdEZlYXR1cmVTdGF0ZSwgKHN0YXRlOiBVc2VyU3RhdGUpID0+IHN0YXRlLnVzZXIubG9hZGVkKTtcclxuZXhwb3J0IGNvbnN0IGlzU2lnbmVkSW4gPSBjcmVhdGVTZWxlY3RvcihzZWxlY3RGZWF0dXJlU3RhdGUsIChzdGF0ZTogVXNlclN0YXRlKSA9PiBzdGF0ZS51c2VyLmxvYWRlZCk7XHJcblxyXG5leHBvcnQgY29uc3Qgc2VsZWN0UmVzZXRQYXNzd29yZFJlcXVlc3RTdGF0ZSA9IGNyZWF0ZVNlbGVjdG9yKFxyXG5cdHNlbGVjdEZlYXR1cmVTdGF0ZSxcclxuXHQoc3RhdGU6IFVzZXJTdGF0ZSkgPT4gc3RhdGUucmVzZXRQYXNzd29yZFJlcXVlc3RcclxuKTtcclxuZXhwb3J0IGNvbnN0IGdldE51bWJlck9mUmVxdWVzZXRlZCA9IGNyZWF0ZVNlbGVjdG9yKFxyXG5cdHNlbGVjdFJlc2V0UGFzc3dvcmRSZXF1ZXN0U3RhdGUsXHJcblx0cmVzZXRQYXNzd29yZFJlcXVlc3RSZWR1Y2VyLmdldE51bWJlck9mUmVxdWVzZXRlZFxyXG4pO1xyXG5leHBvcnQgY29uc3QgZ2V0UmVzZXRQYXNzd29yZFJlcXVlc3RTdGF0dXMgPSBjcmVhdGVTZWxlY3RvcihcclxuXHRzZWxlY3RSZXNldFBhc3N3b3JkUmVxdWVzdFN0YXRlLFxyXG5cdHJlc2V0UGFzc3dvcmRSZXF1ZXN0UmVkdWNlci5nZXRTdGF0dXNcclxuKTtcclxuXHJcbi8vI3JlZ2lvbiB1c2VyXHJcbmV4cG9ydCBjb25zdCBzZWxlY3RVc2VySW5mb3JtYWlvblN0YXRlID0gY3JlYXRlU2VsZWN0b3Ioc2VsZWN0RmVhdHVyZVN0YXRlLCAoc3RhdGU6IFVzZXJTdGF0ZSkgPT4gc3RhdGUudXNlcik7XHJcbmV4cG9ydCBjb25zdCBnZXRVc2VyID0gY3JlYXRlU2VsZWN0b3Ioc2VsZWN0VXNlckluZm9ybWFpb25TdGF0ZSwgdXNlclJlZHVjZXIuZ2V0VXNlcik7XHJcbi8vI2VuZHJlZ2lvblxyXG5cclxuLy8jcmVnaW9uIHNlYXJjaFxyXG5leHBvcnQgY29uc3Qgc2VsZWN0U2VhcmNoU3RhdGUgPSBjcmVhdGVTZWxlY3RvcihzZWxlY3RGZWF0dXJlU3RhdGUsIChzdGF0ZTogVXNlclN0YXRlKSA9PiBzdGF0ZS5zZWFyY2hWaWV3KTtcclxuZXhwb3J0IGNvbnN0IGdldFNlYXJjaFN0YXR1cyA9IGNyZWF0ZVNlbGVjdG9yKHNlbGVjdFNlYXJjaFN0YXRlLCBzZWFyY2hSZWR1Y2VyLmdldFN0YXR1cyk7XHJcbmV4cG9ydCBjb25zdCBnZXRVc2VySW5mbyA9IGNyZWF0ZVNlbGVjdG9yKHNlbGVjdFNlYXJjaFN0YXRlLCBzZWFyY2hSZWR1Y2VyLmdldFVzZXJJbmZvKTtcclxuLy8jZW5kcmVnaW9uXHJcbiJdfQ==