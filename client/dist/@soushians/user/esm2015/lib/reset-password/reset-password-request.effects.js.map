{
  "version": 3,
  "file": "reset-password-request.effects.js",
  "sources": [
    "ng://@soushians/user/projects/soushians/user/src/lib/reset-password/reset-password-request.effects.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { switchMap, map, takeUntil, delay, catchError } from \"rxjs/operators\";\r\n\r\nimport { ResetPasswordRequestModel } from \"../models\";\r\n\r\nimport {\r\n\tResetPasswordRequestActionTypes,\r\n\tDisableGetLink,\r\n\tEnableGetLink,\r\n\tMaximumTryHappend,\r\n\tResetPasswordLinkRequestStart,\r\n\tResetPasswordLinkRequestSucceed,\r\n\tResetPasswordLinkRequestFailed\r\n} from \"./reset-password-request.actions\";\r\nimport { PasswordService } from \"../services/password.service\";\r\n\r\n@Injectable()\r\nexport class ResetPasswordRequestEffects {\r\n\tconstructor(private actions$: Actions<any>, private passwordService: PasswordService) {}\r\n\r\n\t@Effect()\r\n\tResetPasswordRequest$ = this.actions$.ofType(ResetPasswordRequestActionTypes.GET_RESET_PASSWORD_LINK).pipe(\r\n\t\tmap(action => action.payload),\r\n\t\t// switchMap((data: ResetPasswordRequestModel.Request) => this.passwordService.isValidResetPasswordRequest()),\r\n\t\t// map((isValid: boolean) => isValid ? new ResetPasswordLinkRequestStart(data) : new MaximumTryHappend())\r\n\t\tmap(data => new ResetPasswordLinkRequestStart(data))\r\n\t);\r\n\r\n\t@Effect()\r\n\tMaximumTryHappend$ = this.actions$\r\n\t\t.ofType(\r\n\t\t\tResetPasswordRequestActionTypes.MAXIMUM_TRY_HAPPEND,\r\n\t\t\tResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_START\r\n\t\t)\r\n\t\t.pipe(map(() => new DisableGetLink()));\r\n\r\n\t@Effect()\r\n\tenableAfterTime$ = this.actions$\r\n\t\t.ofType(ResetPasswordRequestActionTypes.DISABLE_GET_LINK)\r\n\t\t.pipe(\r\n\t\t\ttakeUntil(this.actions$.ofType(ResetPasswordRequestActionTypes.MAXIMUM_TRY_HAPPEND)),\r\n\t\t\tdelay(3 * 1000),\r\n\t\t\tmap(() => new EnableGetLink())\r\n\t\t);\r\n\r\n\t@Effect()\r\n\tRequestResetPasswordLink$ = this.actions$\r\n\t\t.ofType(ResetPasswordRequestActionTypes.RESET_PASSWORD_LINK_REQUEST_START)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap((data: ResetPasswordRequestModel.Request) => this.passwordService.requestResetPasswordLink(data)),\r\n\t\t\tmap(() => new ResetPasswordLinkRequestSucceed()),\r\n\t\t\tcatchError(() => Observable.of(new ResetPasswordLinkRequestFailed()))\r\n\t\t);\r\n}\r\n"
  ],
  "names": [],
  "mappings": ";;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAE7C,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAGhD,OAAO,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAI9E,OAAO,EACN,+BAA+B,EAC/B,cAAc,EACd,aAAa,EAEb,6BAA6B,EAC7B,+BAA+B,EAC/B,8BAA8B,EAC9B,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAAE,eAAe,EAAE,MAAM,8BAA8B,CAAC;AAG/D,MAAM;;;;;IACL,YAAoB,QAAsB,EAAU,eAAgC;QAAhE,aAAQ,GAAR,QAAQ,CAAc;QAAU,oBAAe,GAAf,eAAe,CAAiB;qCAG5D,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,+BAA+B,CAAC,uBAAuB,CAAC,CAAC,IAAI,CACzG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC;;;QAG7B,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,6BAA6B,CAAC,IAAI,CAAC,CAAC,CACpD;kCAGoB,IAAI,CAAC,QAAQ;aAChC,MAAM,CACN,+BAA+B,CAAC,mBAAmB,EACnD,+BAA+B,CAAC,iCAAiC,CACjE;aACA,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,cAAc,EAAE,CAAC,CAAC;gCAGpB,IAAI,CAAC,QAAQ;aAC9B,MAAM,CAAC,+BAA+B,CAAC,gBAAgB,CAAC;aACxD,IAAI,CACJ,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,+BAA+B,CAAC,mBAAmB,CAAC,CAAC,EACpF,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,EACf,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,aAAa,EAAE,CAAC,CAC9B;yCAG0B,IAAI,CAAC,QAAQ;aACvC,MAAM,CAAC,+BAA+B,CAAC,iCAAiC,CAAC;aACzE,IAAI,CACJ,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,EAC7B,SAAS,CAAC,CAAC,IAAuC,EAAE,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,EAC3G,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,+BAA+B,EAAE,CAAC,EAChD,UAAU,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,8BAA8B,EAAE,CAAC,CAAC,CACrE;KAnCsF;;;YAFxF,UAAU;;;;YAlBF,OAAO;YAgBP,eAAe;;;IAMtB,MAAM,EAAE;;;;IAQR,MAAM,EAAE;;;;IAQR,MAAM,EAAE;;;;IASR,MAAM,EAAE"
}
