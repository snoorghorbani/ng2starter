/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { createSelector, createFeatureSelector } from "@ngrx/store";
import * as userReducer from "./dashboard/account.reducer";
import { getAccountInfo as _getAccountInfo } from "./dashboard/account.reducer";
import * as resetPasswordRequestReducer from "./reset-password/reset-password-request.reducer";
import * as changePassword from "./change-password/change-password.reducer";
import * as editProfileReducer from "./profile-edit/edit-profile.reducer";
import * as searchReducer from "./search-account/search.reducer";
/**
 * @record
 */
export function UserState() { }
/** @type {?} */
UserState.prototype.user;
/** @type {?} */
UserState.prototype.resetPasswordRequest;
/** @type {?} */
UserState.prototype.searchView;
/** @type {?} */
UserState.prototype.changePassword;
/** @type {?} */
UserState.prototype.editProfile;
/** @type {?} */
export const UserReducers = {
    user: userReducer.userReducer,
    resetPasswordRequest: resetPasswordRequestReducer.reducer,
    changePassword: changePassword.reducer,
    searchView: searchReducer.reducer,
    editProfile: editProfileReducer.reducer
};
/**
 * @record
 */
export function AppState() { }
/** @type {?} */
AppState.prototype.user;
/** @type {?} */
export const selectFeatureState = createFeatureSelector("user");
/** @type {?} */
export const getUserInforamtionStatus = createSelector(selectFeatureState, (state) => state.user.loaded);
/** @type {?} */
export const isSignedIn = createSelector(selectFeatureState, (state) => state.user.loaded);
/** @type {?} */
export const selectResetPasswordRequestState = createSelector(selectFeatureState, (state) => state.resetPasswordRequest);
/** @type {?} */
export const getNumberOfRequeseted = createSelector(selectResetPasswordRequestState, resetPasswordRequestReducer.getNumberOfRequeseted);
/** @type {?} */
export const getResetPasswordRequestStatus = createSelector(selectResetPasswordRequestState, resetPasswordRequestReducer.getStatus);
/** @type {?} */
export const selectUserInformaionState = createSelector(selectFeatureState, (state) => state.user);
/** @type {?} */
export const getAccountInfo = createSelector(selectUserInformaionState, _getAccountInfo);
/** @type {?} */
export const selectSearchState = createSelector(selectFeatureState, (state) => state.searchView);
/** @type {?} */
export const getSearchStatus = createSelector(selectSearchState, searchReducer.getStatus);
//#endregion

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci5yZWR1Y2Vycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bzb3VzaGlhbnMvdXNlci8iLCJzb3VyY2VzIjpbImxpYi91c2VyLnJlZHVjZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLHFCQUFxQixFQUFvQixNQUFNLGFBQWEsQ0FBQztBQUN0RixPQUFPLEtBQUssV0FBVyxNQUFNLDZCQUE2QixDQUFDO0FBQzNELE9BQU8sRUFBRSxjQUFjLElBQUksZUFBZSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDaEYsT0FBTyxLQUFLLDJCQUEyQixNQUFNLGlEQUFpRCxDQUFDO0FBQy9GLE9BQU8sS0FBSyxjQUFjLE1BQU0sMkNBQTJDLENBQUM7QUFDNUUsT0FBTyxLQUFLLGtCQUFrQixNQUFNLHFDQUFxQyxDQUFDO0FBQzFFLE9BQU8sS0FBSyxhQUFhLE1BQU0saUNBQWlDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7QUFZakUsYUFBYSxZQUFZLEdBQUc7SUFDM0IsSUFBSSxFQUFFLFdBQVcsQ0FBQyxXQUFXO0lBQzdCLG9CQUFvQixFQUFFLDJCQUEyQixDQUFDLE9BQU87SUFDekQsY0FBYyxFQUFFLGNBQWMsQ0FBQyxPQUFPO0lBQ3RDLFVBQVUsRUFBRSxhQUFhLENBQUMsT0FBTztJQUNqQyxXQUFXLEVBQUUsa0JBQWtCLENBQUMsT0FBTztDQUN2QyxDQUFDOzs7Ozs7OztBQVFGLGFBQWEsa0JBQWtCLEdBQUcscUJBQXFCLENBQVksTUFBTSxDQUFDLENBQUM7O0FBRTNFLGFBQWEsd0JBQXdCLEdBQUcsY0FBYyxDQUFDLGtCQUFrQixFQUFFLENBQUMsS0FBZ0IsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQzs7QUFDcEgsYUFBYSxVQUFVLEdBQUcsY0FBYyxDQUFDLGtCQUFrQixFQUFFLENBQUMsS0FBZ0IsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQzs7QUFFdEcsYUFBYSwrQkFBK0IsR0FBRyxjQUFjLENBQzVELGtCQUFrQixFQUNsQixDQUFDLEtBQWdCLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxvQkFBb0IsQ0FDaEQsQ0FBQzs7QUFDRixhQUFhLHFCQUFxQixHQUFHLGNBQWMsQ0FDbEQsK0JBQStCLEVBQy9CLDJCQUEyQixDQUFDLHFCQUFxQixDQUNqRCxDQUFDOztBQUNGLGFBQWEsNkJBQTZCLEdBQUcsY0FBYyxDQUMxRCwrQkFBK0IsRUFDL0IsMkJBQTJCLENBQUMsU0FBUyxDQUNyQyxDQUFDOztBQUdGLGFBQWEseUJBQXlCLEdBQUcsY0FBYyxDQUFDLGtCQUFrQixFQUFFLENBQUMsS0FBZ0IsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDOztBQUM5RyxhQUFhLGNBQWMsR0FBRyxjQUFjLENBQUMseUJBQXlCLEVBQUUsZUFBZSxDQUFDLENBQUM7O0FBSXpGLGFBQWEsaUJBQWlCLEdBQUcsY0FBYyxDQUFDLGtCQUFrQixFQUFFLENBQUMsS0FBZ0IsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDOztBQUM1RyxhQUFhLGVBQWUsR0FBRyxjQUFjLENBQUMsaUJBQWlCLEVBQUUsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlU2VsZWN0b3IsIGNyZWF0ZUZlYXR1cmVTZWxlY3RvciwgTWVtb2l6ZWRTZWxlY3RvciB9IGZyb20gXCJAbmdyeC9zdG9yZVwiO1xyXG5pbXBvcnQgKiBhcyB1c2VyUmVkdWNlciBmcm9tIFwiLi9kYXNoYm9hcmQvYWNjb3VudC5yZWR1Y2VyXCI7XHJcbmltcG9ydCB7IGdldEFjY291bnRJbmZvIGFzIF9nZXRBY2NvdW50SW5mbyB9IGZyb20gXCIuL2Rhc2hib2FyZC9hY2NvdW50LnJlZHVjZXJcIjtcclxuaW1wb3J0ICogYXMgcmVzZXRQYXNzd29yZFJlcXVlc3RSZWR1Y2VyIGZyb20gXCIuL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLXJlcXVlc3QucmVkdWNlclwiO1xyXG5pbXBvcnQgKiBhcyBjaGFuZ2VQYXNzd29yZCBmcm9tIFwiLi9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLnJlZHVjZXJcIjtcclxuaW1wb3J0ICogYXMgZWRpdFByb2ZpbGVSZWR1Y2VyIGZyb20gXCIuL3Byb2ZpbGUtZWRpdC9lZGl0LXByb2ZpbGUucmVkdWNlclwiO1xyXG5pbXBvcnQgKiBhcyBzZWFyY2hSZWR1Y2VyIGZyb20gXCIuL3NlYXJjaC1hY2NvdW50L3NlYXJjaC5yZWR1Y2VyXCI7XHJcbmltcG9ydCB7IFVzZXJNb2RlbCB9IGZyb20gXCIuL21vZGVscy91c2VyLm1vZGVsXCI7XHJcbmltcG9ydCB7IHJlc3BvbnNlU3RhdHVzVHlwZXMgfSBmcm9tIFwiQHNvdXNoaWFucy9zaGFyZWRcIjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVXNlclN0YXRlIHtcclxuXHR1c2VyOiB1c2VyUmVkdWNlci5TdGF0ZTtcclxuXHRyZXNldFBhc3N3b3JkUmVxdWVzdDogcmVzZXRQYXNzd29yZFJlcXVlc3RSZWR1Y2VyLlN0YXRlO1xyXG5cdHNlYXJjaFZpZXc6IHNlYXJjaFJlZHVjZXIuU3RhdGU7XHJcblx0Y2hhbmdlUGFzc3dvcmQ6IGNoYW5nZVBhc3N3b3JkLlN0YXRlO1xyXG5cdGVkaXRQcm9maWxlOiBlZGl0UHJvZmlsZVJlZHVjZXIuU3RhdGU7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBVc2VyUmVkdWNlcnMgPSB7XHJcblx0dXNlcjogdXNlclJlZHVjZXIudXNlclJlZHVjZXIsXHJcblx0cmVzZXRQYXNzd29yZFJlcXVlc3Q6IHJlc2V0UGFzc3dvcmRSZXF1ZXN0UmVkdWNlci5yZWR1Y2VyLFxyXG5cdGNoYW5nZVBhc3N3b3JkOiBjaGFuZ2VQYXNzd29yZC5yZWR1Y2VyLFxyXG5cdHNlYXJjaFZpZXc6IHNlYXJjaFJlZHVjZXIucmVkdWNlcixcclxuXHRlZGl0UHJvZmlsZTogZWRpdFByb2ZpbGVSZWR1Y2VyLnJlZHVjZXJcclxufTtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXBwU3RhdGUge1xyXG5cdFwidXNlclwiOiBVc2VyU3RhdGU7XHJcbn1cclxuXHJcbi8vI3JlZ2lvbiBzZWxlY3RvcnNcclxuXHJcbmV4cG9ydCBjb25zdCBzZWxlY3RGZWF0dXJlU3RhdGUgPSBjcmVhdGVGZWF0dXJlU2VsZWN0b3I8VXNlclN0YXRlPihcInVzZXJcIik7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0VXNlckluZm9yYW10aW9uU3RhdHVzID0gY3JlYXRlU2VsZWN0b3Ioc2VsZWN0RmVhdHVyZVN0YXRlLCAoc3RhdGU6IFVzZXJTdGF0ZSkgPT4gc3RhdGUudXNlci5sb2FkZWQpO1xyXG5leHBvcnQgY29uc3QgaXNTaWduZWRJbiA9IGNyZWF0ZVNlbGVjdG9yKHNlbGVjdEZlYXR1cmVTdGF0ZSwgKHN0YXRlOiBVc2VyU3RhdGUpID0+IHN0YXRlLnVzZXIubG9hZGVkKTtcclxuXHJcbmV4cG9ydCBjb25zdCBzZWxlY3RSZXNldFBhc3N3b3JkUmVxdWVzdFN0YXRlID0gY3JlYXRlU2VsZWN0b3IoXHJcblx0c2VsZWN0RmVhdHVyZVN0YXRlLFxyXG5cdChzdGF0ZTogVXNlclN0YXRlKSA9PiBzdGF0ZS5yZXNldFBhc3N3b3JkUmVxdWVzdFxyXG4pO1xyXG5leHBvcnQgY29uc3QgZ2V0TnVtYmVyT2ZSZXF1ZXNldGVkID0gY3JlYXRlU2VsZWN0b3IoXHJcblx0c2VsZWN0UmVzZXRQYXNzd29yZFJlcXVlc3RTdGF0ZSxcclxuXHRyZXNldFBhc3N3b3JkUmVxdWVzdFJlZHVjZXIuZ2V0TnVtYmVyT2ZSZXF1ZXNldGVkXHJcbik7XHJcbmV4cG9ydCBjb25zdCBnZXRSZXNldFBhc3N3b3JkUmVxdWVzdFN0YXR1cyA9IGNyZWF0ZVNlbGVjdG9yKFxyXG5cdHNlbGVjdFJlc2V0UGFzc3dvcmRSZXF1ZXN0U3RhdGUsXHJcblx0cmVzZXRQYXNzd29yZFJlcXVlc3RSZWR1Y2VyLmdldFN0YXR1c1xyXG4pO1xyXG5cclxuLy8jcmVnaW9uIHVzZXJcclxuZXhwb3J0IGNvbnN0IHNlbGVjdFVzZXJJbmZvcm1haW9uU3RhdGUgPSBjcmVhdGVTZWxlY3RvcihzZWxlY3RGZWF0dXJlU3RhdGUsIChzdGF0ZTogVXNlclN0YXRlKSA9PiBzdGF0ZS51c2VyKTtcclxuZXhwb3J0IGNvbnN0IGdldEFjY291bnRJbmZvID0gY3JlYXRlU2VsZWN0b3Ioc2VsZWN0VXNlckluZm9ybWFpb25TdGF0ZSwgX2dldEFjY291bnRJbmZvKTtcclxuLy8jZW5kcmVnaW9uXHJcblxyXG4vLyNyZWdpb24gc2VhcmNoXHJcbmV4cG9ydCBjb25zdCBzZWxlY3RTZWFyY2hTdGF0ZSA9IGNyZWF0ZVNlbGVjdG9yKHNlbGVjdEZlYXR1cmVTdGF0ZSwgKHN0YXRlOiBVc2VyU3RhdGUpID0+IHN0YXRlLnNlYXJjaFZpZXcpO1xyXG5leHBvcnQgY29uc3QgZ2V0U2VhcmNoU3RhdHVzID0gY3JlYXRlU2VsZWN0b3Ioc2VsZWN0U2VhcmNoU3RhdGUsIHNlYXJjaFJlZHVjZXIuZ2V0U3RhdHVzKTtcclxuLy8jZW5kcmVnaW9uXHJcbiJdfQ==