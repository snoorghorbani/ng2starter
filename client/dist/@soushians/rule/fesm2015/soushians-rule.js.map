{"version":3,"file":"soushians-rule.js.map","sources":["ng://@soushians/rule/lib/rule.config.ts","ng://@soushians/rule/lib/rule.component.ts","ng://@soushians/rule/lib/rule-routing.module.ts","ng://@soushians/rule/lib/rule-anchor/rule-anchor.actions.ts","ng://@soushians/rule/lib/rule-anchor/rule-anchor.reducer.ts","ng://@soushians/rule/lib/db/rule-db.actions.ts","ng://@soushians/rule/lib/db/rule-db.reducer.ts","ng://@soushians/rule/lib/db/scenario-db.actions.ts","ng://@soushians/rule/lib/db/scenario-db.reducer.ts","ng://@soushians/rule/lib/rule.reducers.ts","ng://@soushians/rule/lib/services/rule-configuration.service.ts","ng://@soushians/rule/lib/models/gwt-scenario.model.ts","ng://@soushians/rule/lib/step-loader/step-loader.directive.ts","ng://@soushians/rule/lib/services/scenario.service.ts","ng://@soushians/rule/lib/gwt-view/gwt-view.component.ts","ng://@soushians/rule/lib/models/gwt-step-types.enum.ts","ng://@soushians/rule/lib/rule-anchor/rule-anchor.directive.ts","ng://@soushians/rule/lib/db/scenario-db.effects.ts","ng://@soushians/rule/lib/db/rule-db.effects.ts","ng://@soushians/rule/lib/mode-button/mode-button.component.ts","ng://@soushians/rule/lib/services/rule.service.ts","ng://@soushians/rule/lib/rule.module.ts"],"sourcesContent":["import { InjectionToken, Type } from \"@angular/core\";\r\n\r\nimport { GwtStep } from \"./models/gwt-step.model\";\r\n\r\nexport interface RuleModuleConfig {\r\n\tendpoints?: {\r\n\t\tupsert?: string;\r\n\t\tget?: string;\r\n\t};\r\n\tstepClasses?: Type<GwtStep>[];\r\n\tsteps?: GwtStep[];\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t};\r\n}\r\nexport const MODULE_DEFAULT_CONFIG: RuleModuleConfig = {\r\n\tendpoints: {\r\n\t\tupsert: \"/api/gwt/scenario\",\r\n\t\tget: \"/api/gwt/anchor/${model.anchorId}/scenarios\"\r\n\t},\r\n\tstepClasses: [],\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"frontend_server/did/not/set\"\r\n\t}\r\n};\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<RuleModuleConfig>(\"RuleModuleConfig\");\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n\tselector: \"app-rule\",\r\n\ttemplate: `<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n  <router-outlet></router-outlet>\r\n</div>`\r\n})\r\nexport class RuleComponent implements OnInit {\r\n\tconstructor() {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { RuleComponent } from \"./rule.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"rule\",\r\n\t\tcomponent: RuleComponent\r\n\t\t// children: [ {} ]\r\n\t}\r\n];\r\n\r\nexport const RoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nexport enum RuleAnchorsActionTypes {\r\n\tSHOW_ANCHORS = \"[RULE][ANCHORS] SHOW_ANCHORS\",\r\n\tHIDE_ANCHORS = \"[RULE][ANCHORS] HIDE_ANCHORS\"\r\n}\r\n\r\nexport class ShowAnchorsAction implements Action {\r\n\treadonly type = RuleAnchorsActionTypes.SHOW_ANCHORS;\r\n}\r\n\r\nexport class HideAnchorsAction implements Action {\r\n\treadonly type = RuleAnchorsActionTypes.HIDE_ANCHORS;\r\n}\r\n\r\nexport type RuleAnchorsAction = ShowAnchorsAction | HideAnchorsAction;\r\n","import { RuleAnchorsAction, RuleAnchorsActionTypes } from \"./rule-anchor.actions\";\r\n\r\nexport interface State {\r\n\tactive: boolean;\r\n}\r\n\r\nexport const initialState: State = {\r\n\tactive: false\r\n};\r\n\r\nexport function Reducer(state = initialState, action: RuleAnchorsAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase RuleAnchorsActionTypes.SHOW_ANCHORS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactive: true\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase RuleAnchorsActionTypes.HIDE_ANCHORS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactive: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//#region  selectors\r\nexport const getAnchorsActivityState = (state: State) => state.active;\r\n//#endregion\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { RuleModel } from \"../models/rule.model\";\r\n\r\nexport enum RulesListActionTypes {\r\n\tRULES_LIST = \"[RULE][DB] RULES_LIST\",\r\n\tRULES_LIST_START = \"[RULE][DB] RULES_LIST_START\",\r\n\tRULES_LIST_SUCCEED = \"[RULE][DB] RULES_LIST_SUCCEED\",\r\n\tRULES_LIST_FAILED = \"[RULE][DB] RULES_LIST_FAILED\",\r\n\tRULE_UPSERT = \"[RULE][DB] RULE_UPSERT\",\r\n\tGET_RULE = \"[RULE][DB] GET_RULE\",\r\n\tRULE_FETCHED = \"[RULE][DB] RULE_FETCHED\"\r\n}\r\n\r\nexport class RulesListAction implements Action {\r\n\treadonly type = RulesListActionTypes.RULES_LIST;\r\n}\r\nexport class RulesListStartAction implements Action {\r\n\treadonly type = RulesListActionTypes.RULES_LIST_START;\r\n}\r\nexport class RulesListSucceedAction implements Action {\r\n\treadonly type = RulesListActionTypes.RULES_LIST_SUCCEED;\r\n\tconstructor(public payload: RuleModel[]) {}\r\n}\r\nexport class RulesListFailedAction implements Action {\r\n\treadonly type = RulesListActionTypes.RULES_LIST_FAILED;\r\n}\r\nexport class UpsertRuleAction implements Action {\r\n\treadonly type = RulesListActionTypes.RULE_UPSERT;\r\n\tconstructor(public payload: RuleModel) {}\r\n}\r\nexport class GetRuleAction implements Action {\r\n\treadonly type = RulesListActionTypes.GET_RULE;\r\n\tconstructor(public payload: string) {}\r\n}\r\nexport class RuleFechedAction implements Action {\r\n\treadonly type = RulesListActionTypes.RULE_FETCHED;\r\n\tconstructor(public payload: RuleModel) {}\r\n}\r\n\r\nexport type RulesListActions =\r\n\t| RulesListAction\r\n\t| RulesListStartAction\r\n\t| RulesListSucceedAction\r\n\t| RulesListFailedAction\r\n\t| UpsertRuleAction\r\n\t| GetRuleAction\r\n\t| RuleFechedAction;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\n\r\nimport { RuleModel } from \"../models/rule.model\";\r\nimport { RulesListActionTypes, RulesListActions } from \"./rule-db.actions\";\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n\tdata: RuleModel[];\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\",\r\n\tdata: []\r\n};\r\nexport function reducer(state = initialState, action: RulesListActions): State {\r\n\tswitch (action.type) {\r\n\t\tcase RulesListActionTypes.RULES_LIST: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"dirty\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase RulesListActionTypes.RULES_LIST_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase RulesListActionTypes.RULES_LIST_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t\tstatus: \"succeed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase RulesListActionTypes.RULES_LIST_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase RulesListActionTypes.RULE_UPSERT: {\r\n\t\t\tconst data = state.data.concat();\r\n\t\t\tvar entityIdx = state.data.findIndex(form => form._id == action.payload._id);\r\n\t\t\tif (entityIdx > -1) {\r\n\t\t\t\tdata[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n\t\t\t} else {\r\n\t\t\t\tdata.push(action.payload);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: data\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase RulesListActionTypes.RULE_FETCHED: {\r\n\t\t\tconst data = state.data.concat();\r\n\t\t\tvar entityIdx = state.data.findIndex(form => form._id == action.payload._id);\r\n\t\t\tif (entityIdx > -1) {\r\n\t\t\t\tdata[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n\t\t\t} else {\r\n\t\t\t\tdata.push(action.payload);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: data\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getStatus = (state: State) => state.status;\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GwtScenarioModel } from \"../models/gwt-scenario.model\";\r\n\r\nexport enum ScenariosListActionTypes {\r\n\tSCENARIOS_LIST = \"[GWT][SCENARIO][DB][LIST] SCENARIOS_LIST\",\r\n\tSCENARIOS_LIST_START = \"[SCENARIO][DB] SCENARIOS_LIST_START\",\r\n\tSCENARIOS_LIST_SUCCEED = \"[SCENARIO][DB] SCENARIOS_LIST_SUCCEED\",\r\n\tSCENARIOS_LIST_FAILED = \"[SCENARIO][DB] SCENARIOS_LIST_FAILED\",\r\n\tUPSERT = \"[GWT][SCENARIO][DB][UPSERT] SCENARIO_UPSERT\",\r\n\tGET_SCENARIO = \"[SCENARIO][DB] GET_SCENARIO\",\r\n\tSCENARIO_FETCHED = \"[SCENARIO][DB] SCENARIO_FETCHED\",\r\n\t/// new vision\r\n\tUPDATE_DB = \"[GWT][SCENARIO][DB] UPDATE_DB\"\r\n}\r\n\r\nexport class ScenariosListAction implements Action {\r\n\treadonly type = ScenariosListActionTypes.SCENARIOS_LIST;\r\n}\r\nexport class ScenariosListStartAction implements Action {\r\n\treadonly type = ScenariosListActionTypes.SCENARIOS_LIST_START;\r\n}\r\nexport class ScenariosListSucceedAction implements Action {\r\n\treadonly type = ScenariosListActionTypes.SCENARIOS_LIST_SUCCEED;\r\n\tconstructor(public payload: GwtScenarioModel[]) {}\r\n}\r\nexport class ScenariosListFailedAction implements Action {\r\n\treadonly type = ScenariosListActionTypes.SCENARIOS_LIST_FAILED;\r\n}\r\nexport class UpsertScenarioAction implements Action {\r\n\treadonly type = ScenariosListActionTypes.UPSERT;\r\n\tconstructor(public payload: GwtScenarioModel) {}\r\n}\r\nexport class GetScenarioAction implements Action {\r\n\treadonly type = ScenariosListActionTypes.GET_SCENARIO;\r\n\tconstructor(public payload: string) {}\r\n}\r\nexport class ScenarioFechedAction implements Action {\r\n\treadonly type = ScenariosListActionTypes.SCENARIO_FETCHED;\r\n\tconstructor(public payload: GwtScenarioModel) {}\r\n}\r\nexport class UpdateDbAction implements Action {\r\n\treadonly type = ScenariosListActionTypes.UPDATE_DB;\r\n\tconstructor(public payload: GwtScenarioModel[]) {}\r\n}\r\n\r\nexport type ScenariosListActions =\r\n\t| ScenariosListAction\r\n\t| ScenariosListStartAction\r\n\t| ScenariosListSucceedAction\r\n\t| ScenariosListFailedAction\r\n\t| UpsertScenarioAction\r\n\t| GetScenarioAction\r\n\t| ScenarioFechedAction\r\n\t| UpdateDbAction;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\n\r\nimport { GwtScenarioModel } from \"../models/gwt-scenario.model\";\r\nimport { ScenariosListActionTypes, ScenariosListActions } from \"./scenario-db.actions\";\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n\tdata: GwtScenarioModel[];\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\",\r\n\tdata: []\r\n};\r\nexport function reducer(state = initialState, action: ScenariosListActions): State {\r\n\tswitch (action.type) {\r\n\t\tcase ScenariosListActionTypes.SCENARIOS_LIST: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"dirty\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ScenariosListActionTypes.SCENARIOS_LIST_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ScenariosListActionTypes.SCENARIOS_LIST_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t\tstatus: \"succeed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ScenariosListActionTypes.SCENARIOS_LIST_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ScenariosListActionTypes.UPSERT: {\r\n\t\t\tconst data = state.data.concat();\r\n\t\t\tvar entityIdx = state.data.findIndex(form => form._id == action.payload._id);\r\n\t\t\tif (entityIdx > -1) {\r\n\t\t\t\tdata[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n\t\t\t} else {\r\n\t\t\t\tdata.push(action.payload);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: data\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ScenariosListActionTypes.SCENARIO_FETCHED: {\r\n\t\t\tconst data = state.data.concat();\r\n\t\t\tvar entityIdx = state.data.findIndex(form => form._id == action.payload._id);\r\n\t\t\tif (entityIdx > -1) {\r\n\t\t\t\tdata[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n\t\t\t} else {\r\n\t\t\t\tdata.push(action.payload);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: data\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ScenariosListActionTypes.UPDATE_DB: {\r\n\t\t\tconst data = state.data.concat();\r\n\t\t\tconst scenarios = action.payload;\r\n\t\t\tscenarios.forEach(scenario => {\r\n\t\t\t\tvar entityIdx = state.data.findIndex(form => form._id == scenario._id);\r\n\t\t\t\tif (entityIdx > -1) {\r\n\t\t\t\t\tdata[entityIdx] = Object.assign({}, data[entityIdx], scenario);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata.push(scenario);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: data\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getStatus = (state: State) => state.status;\r\n","import * as fromRuleAnchor from \"./rule-anchor/rule-anchor.reducer\";\r\nimport * as fromRuleDbAnchor from \"./db/rule-db.reducer\";\r\nimport * as fromScenarioDbAnchor from \"./db/scenario-db.reducer\";\r\n\r\nexport interface RuleState {\r\n\truleAnchors: fromRuleAnchor.State;\r\n\trules: fromRuleDbAnchor.State;\r\n\tscenarios: fromScenarioDbAnchor.State;\r\n}\r\n\r\nexport const RuleReducers = {\r\n\truleAnchors: fromRuleAnchor.Reducer,\r\n\trules: fromRuleDbAnchor.reducer,\r\n\tscenarios: fromScenarioDbAnchor.reducer\r\n};\r\n\r\nexport interface AppState {\r\n\t\"rule\": RuleState;\r\n}\r\n","import { Injectable, Inject, Injector } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\n// import { getRuleModuleConfig } from \"@soushians/config\";\r\nimport { RuleModuleConfig } from \"../rule.config\";\r\nimport { MODULE_CONFIG_TOKEN, MODULE_DEFAULT_CONFIG } from \"../rule.config\";\r\nimport { RuleState } from \"../rule.reducers\";\r\n\r\n@Injectable()\r\nexport class RuleConfigurationService {\r\n\tprivate _config: RuleModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n\r\n\tconstructor(\r\n\t\t@Inject(MODULE_CONFIG_TOKEN) configFile: RuleModuleConfig,\r\n\t\tprivate store: Store<RuleState>,\r\n\t\tprivate injector: Injector\r\n\t) {\r\n\t\t// instantiate steps and used them\r\n\t\tconfigFile.steps = configFile.stepClasses.map(step => new step(this.injector));\r\n\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\r\n\t\tthis.config$.next(this._config);\r\n\r\n\t\t// this.store.select(getRuleModuleConfig).subscribe(userConfig => {\r\n\t\t// \tif (!userConfig) return;\r\n\t\t// \tthis._config = Object.assign({}, this._config, userConfig.Config);\r\n\t\t// \tthis.config$.next(this._config);\r\n\t\t// });\r\n\t}\r\n}\r\n","import { GwtStep } from \"./gwt-step.model\";\r\n\r\nexport class GwtScenarioModel {\r\n\t_id: string;\r\n\tname: string;\r\n\tanchorId: string;\r\n\tfeatureId: string;\r\n\tsteps: GwtStep[];\r\n\tconstructor(\r\n\t\t{\r\n\t\t\t_id,\r\n\t\t\tanchorId,\r\n\t\t\tsteps,\r\n\t\t\tname,\r\n\t\t\tfeatureId\r\n\t\t}: { _id?: string; anchorId?: string; steps?: GwtStep[]; name?: string; featureId?: string } = {}\r\n\t) {\r\n\t\tthis._id = _id || \"\";\r\n\t\tthis.name = name || \"\";\r\n\t\tthis.featureId = featureId || \"\";\r\n\t\tthis._id = _id || \"\";\r\n\t\tthis.anchorId = anchorId || \"\";\r\n\t\tthis.steps = steps || [];\r\n\t}\r\n\tgetRequsetBody() {\r\n\t\treturn {\r\n\t\t\t_id: this._id,\r\n\t\t\tanchorId: this.anchorId,\r\n\t\t\tname: this.name,\r\n\t\t\tfeatureId: this.featureId,\r\n\t\t\tsteps: this.steps.map((step) => ({\r\n\t\t\t\tid: step.id,\r\n\t\t\t\topposite: step.opposite,\r\n\t\t\t\tparams: step.params\r\n\t\t\t}))\r\n\t\t};\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tInput,\r\n\tViewContainerRef,\r\n\tComponentFactoryResolver,\r\n\tComponentRef,\r\n\tViewChild,\r\n\tDirective,\r\n\tOnChanges\r\n} from \"@angular/core\";\r\n\r\nimport { GwtStep } from \"../models/gwt-step.model\";\r\n\r\n@Directive({\r\n\tselector: \"[rule-step-loader]\"\r\n\t// templateUrl: \"./step-loader.component.html\",\r\n\t// styleUrls: [ \"./step-loader.component.css\" ]\r\n})\r\nexport class StepLoaderDirective implements OnChanges, OnInit {\r\n\t@Input() step: GwtStep<any>;\r\n\t@ViewChild(\"container\", { read: ViewContainerRef })\r\n\t// TODO: fix generic type\r\n\tcomponent: ComponentRef<any>;\r\n\tget params() {\r\n\t\treturn this.component.instance.params || {};\r\n\t}\r\n\tconstructor(private resolver: ComponentFactoryResolver, private container: ViewContainerRef) {}\r\n\r\n\tngOnChanges() {\r\n\t\tif (this.component) {\r\n\t\t\t// this.component.instance.config = this.config;\r\n\t\t\t// this.component.instance.group = this.group;\r\n\t\t}\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tif (!this.step.stepComponent) {\r\n\t\t\tdebugger;\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Trying to use an unsupported type ().\r\n\t\t  Supported types: `\r\n\t\t\t);\r\n\t\t}\r\n\t\t// TODO: fix generic type\r\n\t\tconst component = this.resolver.resolveComponentFactory<any>(this.step.stepComponent);\r\n\t\tthis.component = this.container.createComponent(component);\r\n\t\tthis.component.instance.params = this.step.params;\r\n\t}\r\n}\r\n","import { filter, map, startWith, share } from \"rxjs/operators\";\r\nimport { Observable, BehaviorSubject } from \"rxjs/Rx\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { stringTemplate } from \"@soushians/shared\";\r\n\r\nimport { RuleConfigurationService } from \"./rule-configuration.service\";\r\nimport { GwtScenarioModel } from \"../models/gwt-scenario.model\";\r\nimport { RuleModuleConfig } from \"../rule.config\";\r\nimport { AppState } from \"../rule.reducers\";\r\n\r\n@Injectable()\r\nexport class ScenarioService {\r\n\tconfig$: Observable<RuleModuleConfig>;\r\n\tconfig: RuleModuleConfig;\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate configService: RuleConfigurationService\r\n\t) {\r\n\t\tthis.config$ = this.configService.config$;\r\n\t\tthis.config$.subscribe(config => (this.config = config));\r\n\t}\r\n\r\n\tupsert(scenario: GwtScenarioModel): Observable<GwtScenarioModel> {\r\n\t\tconst model = new GwtScenarioModel(scenario);\r\n\t\treturn this.http\r\n\t\t\t.post(this.config.env.frontend_server + this.config.endpoints.upsert, model.getRequsetBody())\r\n\t\t\t.pipe(map(response => response as GwtScenarioModel), share());\r\n\t}\r\n\tgetAnchorScenarios(anchorId: string): Observable<GwtScenarioModel[]> {\r\n\t\treturn this.http\r\n\t\t\t.get<any>(this.config.env.frontend_server + stringTemplate(this.config.endpoints.get, { anchorId }))\r\n\t\t\t.map(response => response.Result as GwtScenarioModel[]);\r\n\t}\r\n\tselectScenarioById(_id: string): Observable<GwtScenarioModel> {\r\n\t\tconst subject = new BehaviorSubject<GwtScenarioModel>(undefined);\r\n\t\tthis.store\r\n\t\t\t.select(state => state.rule.scenarios.data)\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter(scenarios => scenarios != null),\r\n\t\t\t\tmap(scenarios => {\r\n\t\t\t\t\treturn scenarios.find(scenario => scenario._id == _id);\r\n\t\t\t\t}),\r\n\t\t\t\tfilter(scenario => scenario != undefined)\r\n\t\t\t)\r\n\t\t\t.subscribe(scenario => {\r\n\t\t\t\tsubject.next(scenario);\r\n\t\t\t});\r\n\t\treturn subject.asObservable();\r\n\t}\r\n\tselectAnchorScenarios(anchorId: string): Observable<GwtScenarioModel[]> {\r\n\t\tconst subject = new BehaviorSubject<GwtScenarioModel[]>(undefined);\r\n\t\tthis.store\r\n\t\t\t.select(state => state.rule.scenarios.data)\r\n\t\t\t.pipe(\r\n\t\t\t\tstartWith([]),\r\n\t\t\t\tfilter(scenarios => scenarios != null),\r\n\t\t\t\tmap(scenarios => {\r\n\t\t\t\t\treturn scenarios.filter(scenario => scenario._id == anchorId);\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe(scenarios => {\r\n\t\t\t\tsubject.next(scenarios);\r\n\t\t\t});\r\n\t\treturn subject.asObservable();\r\n\t}\r\n}\r\n","import { Component, OnInit, Inject, Type, Injector, ViewChildren, OnDestroy } from \"@angular/core\";\r\nimport { map, filter, withLatestFrom, takeUntil } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable, BehaviorSubject, Subject } from \"rxjs\";\r\nimport { MAT_BOTTOM_SHEET_DATA } from \"@angular/material\";\r\n\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FormControl } from \"@angular/forms\";\r\n\r\nimport { RuleConfigurationService } from \"../services/rule-configuration.service\";\r\nimport { GwtStep } from \"../models/gwt-step.model\";\r\nimport { GwtScenarioModel } from \"../models/gwt-scenario.model\";\r\nimport { AppState } from \"../rule.reducers\";\r\nimport { UpsertScenarioAction } from \"../db/scenario-db.actions\";\r\nimport { StepLoaderDirective } from \"../step-loader/step-loader.directive\";\r\nimport { ScenarioService } from \"../services/scenario.service\";\r\n\r\n@Component({\r\n\tselector: \"app-gwt-view\",\r\n\ttemplate: `<div fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n<div fxFlex=\"400px\" fxLayout=\"column\" fxLayoutGap=\"15px\">\r\n  <div fxLayout=\"row wrap\">\r\n    <mat-form-field appearance=\"fill\" fxFlex=\"100\">\r\n      <input matInput placeholder=\"ÙÛÙØªØ±\">\r\n      <mat-icon matSuffix>search</mat-icon>\r\n    </mat-form-field>\r\n    <mat-checkbox fxFlex class=\"example-margin\">ÙØ±Ø¶ Ú©ÙÛØ¯</mat-checkbox>\r\n    <mat-checkbox fxFlex class=\"example-margin\">ÙÙÚ¯Ø§ÙÛ Ú©Ù</mat-checkbox>\r\n    <mat-checkbox fxFlex class=\"example-margin\">Ø¢ÙÚ¯Ø§Ù</mat-checkbox>\r\n  </div>\r\n    <mat-card class=\"steps-item\" *ngFor=\"let step of steps$ | async\">\r\n      <span class=\"step-text\">\r\n        {{step.description}}\r\n      </span>\r\n      <button mat-icon-button class=\"add-button\" (click)=\"addStepToScenario(step)\">\r\n        <mat-icon>arrow_back_ios</mat-icon>\r\n      </button>\r\n    </mat-card>\r\n</div>\r\n\r\n<div fxFlex=\"700px\">\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"25px\" fxLayoutAlign=\"center center\" class=\"scenario-toolbar\">\r\n    <div fxFlex>\r\n        <mat-form-field class=\"fit\">\r\n            <mat-select placeholder=\"ÙÙÛÚÚ¯Û\" (selectionChange)=\"activeScenario($event.value)\">\r\n                  <mat-option *ngFor=\"let scenario of scenarios$ | async\" [value]=\"scenario\">\r\n                {{ scenario.featureId }} : {{ scenario.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n    </div>\r\n    <button fxFlex=\"nogrow\" mat-raised-button color=\"primary\" (click)=\"addNewScenario()\">\r\n       Ø«Ø¨Øª Ø³ÙØ§Ø±ÛÙ Ø¬Ø¯ÛØ¯\r\n    </button>\r\n  </div>\r\n  <div fxLayout=\"column\" fxLayoutGap=\"15px\">\r\n    <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"25px\" [formGroup]=\"scenarioFormGroup\">\r\n      <mat-form-field fxFlex=\"50\">\r\n        <mat-select placeholder=\"ÙÛÚÚ¯Û\" formControlName=\"featureId\">\r\n          <mat-option *ngFor=\"let feature of features$\" [value]=\"feature\">\r\n            {{ feature }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <mat-form-field fxFlex=\"50\">\r\n        <input matInput placeholder=\"ÙØ§Ù\" formControlName=\"name\">\r\n      </mat-form-field>\r\n    </div>\r\n    <ng-container *ngFor=\"let step of (scenario$ | async).steps\">\r\n      <div class=\"scenario-steps-item\">\r\n        <ng-container rule-step-loader [step]=\"step\"></ng-container>\r\n        <div class=\"scenario-steps-action\">\r\n          <button mat-icon-button (click)=\"deleteStepFromScenario(step)\">\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n          <button mat-icon-button (click)=\"incScenarioStepPriority(step)\">\r\n            <mat-icon>keyboard_arrow_up</mat-icon>\r\n          </button>\r\n          <button mat-icon-button (click)=\"decScenarioStepPriority(step)\">\r\n            <mat-icon>keyboard_arrow_down</mat-icon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n      <button fxFlex=\"nogrow\" mat-raised-button color=\"primary\" (click)=\"save()\">\r\n        Ø«Ø¨Øª\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>`,\r\n\tstyles: [`:host{width:100vw}.scenario-toolbar{height:60px;margin-bottom:20px}`]\r\n})\r\nexport class GwtViewComponent implements OnInit, OnDestroy {\r\n\tunsubscribe = new Subject<void>();\r\n\tsteps$: Observable<GwtStep[]>;\r\n\tsteps: GwtStep[];\r\n\tscenario$ = new BehaviorSubject<GwtScenarioModel>(new GwtScenarioModel());\r\n\tscenarios$ = new BehaviorSubject<GwtScenarioModel[]>([]);\r\n\tscenarioFormGroup: FormGroup;\r\n\tfeatures$: string[];\r\n\t@ViewChildren(StepLoaderDirective) stepLoaders: StepLoaderDirective[];\r\n\tconstructor(\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate configService: RuleConfigurationService,\r\n\t\tprivate scenarioService: ScenarioService,\r\n\t\tprivate injector: Injector,\r\n\t\t@Inject(MAT_BOTTOM_SHEET_DATA) private data: any\r\n\t) {\r\n\t\tthis._create_scenario_form_group();\r\n\t\tthis._init_features_list();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.steps$ = this.configService.config$.pipe(map(config => config.steps), takeUntil(this.unsubscribe));\r\n\t\tthis.steps$.subscribe(steps => (this.steps = steps));\r\n\t\tthis._load_scenario_and_map_scenario_step_to_steps_class();\r\n\t}\r\n\tngOnDestroy() {\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t}\r\n\tsave() {\r\n\t\tconst scenario = this.scenario$.getValue();\r\n\t\tthis.stepLoaders.forEach(stepLoader => {\r\n\t\t\tscenario.steps.find(step => step.name == stepLoader.step.name).params = stepLoader.params;\r\n\t\t});\r\n\t\tscenario.featureId = this.scenarioFormGroup.value.featureId;\r\n\t\tscenario.name = this.scenarioFormGroup.value.name;\r\n\t\tthis.store.dispatch(new UpsertScenarioAction(scenario));\r\n\t}\r\n\taddStepToScenario(step: GwtStep) {\r\n\t\tconst scenario = this.scenario$.getValue();\r\n\t\tscenario.steps.push(step);\r\n\t\tthis.scenario$.next(scenario);\r\n\t}\r\n\tdeleteStepFromScenario(step: GwtStep) {\r\n\t\tconst scenario = this.scenario$.getValue();\r\n\t\tscenario.steps.splice(scenario.steps.findIndex(item => item.name == step.name), 1);\r\n\t\tthis.scenario$.next(scenario);\r\n\t}\r\n\tdecScenarioStepPriority(step: GwtStep) {}\r\n\tincScenarioStepPriority(step: GwtStep) {}\r\n\taddNewScenario() {\r\n\t\tconst scenarios = this.scenarios$.getValue();\r\n\t\tscenarios.push(\r\n\t\t\tnew GwtScenarioModel({\r\n\t\t\t\tanchorId: this.data.anchorId\r\n\t\t\t})\r\n\t\t);\r\n\t\tthis.scenarios$.next(scenarios);\r\n\t}\r\n\tactiveScenario(scenario: GwtScenarioModel) {\r\n\t\tscenario.steps = scenario.steps.map(scenarioStep => {\r\n\t\t\tconst step = this.steps.find(step => step.id == scenarioStep.id);\r\n\t\t\tstep.params = scenarioStep.params;\r\n\t\t\treturn step;\r\n\t\t});\r\n\t\tthis.scenarioFormGroup.patchValue(scenario);\r\n\t\tscenario.anchorId = this.data.anchorId;\r\n\t\tthis.scenario$.next(scenario);\r\n\t}\r\n\r\n\t_load_scenario_and_map_scenario_step_to_steps_class() {\r\n\t\tthis.scenarioService\r\n\t\t\t.getAnchorScenarios(this.data.anchorId)\r\n\t\t\t.pipe(takeUntil(this.unsubscribe))\r\n\t\t\t.subscribe(scenarios => {\r\n\t\t\t\tthis.scenarios$.next(scenarios);\r\n\t\t\t\tthis.activeScenario(scenarios[0] || new GwtScenarioModel());\r\n\t\t\t});\r\n\t}\r\n\t_create_scenario_form_group() {\r\n\t\tthis.scenarioFormGroup = new FormGroup({\r\n\t\t\tfeatureId: new FormControl(),\r\n\t\t\tname: new FormControl()\r\n\t\t});\r\n\t}\r\n\t_reset_scenario_form_group_and_patch_with_active_scenario() {\r\n\t\tthis.scenarioFormGroup.reset();\r\n\t\tthis.scenarioFormGroup.patchValue(this.scenario$.getValue());\r\n\t}\r\n\t_init_features_list() {\r\n\t\tthis.features$ = [ \"ÙØ¯ÛØ±ÛØª ÙÙØ§ÛØ´ Ø¨Ø±Ø§Ø³Ø§Ø³ Ø¯Ø³ØªØ±Ø³Û ÙØ§Û Ú©Ø§Ø±Ø¨Ø±\" ];\r\n\t}\r\n}\r\n","export enum GwtStepTypes {\r\n\t\"Given\" = \"Given\",\r\n\t\"When\" = \"When\",\r\n\t\"Then\" = \"Then\",\r\n\t\"And\" = \"And\",\r\n\t\"But\" = \"But\"\r\n}\r\n","import { Directive, HostListener, ElementRef, Renderer2, OnInit, Input, OnDestroy } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable, of, zip, Subject, combineLatest } from \"rxjs\";\r\nimport { filter, map, switchMap, takeUntil } from \"rxjs/operators\";\r\nimport { MatBottomSheet } from \"@angular/material\";\r\n\r\nimport { GwtViewComponent } from \"../gwt-view/gwt-view.component\";\r\nimport { AppState } from \"../rule.reducers\";\r\nimport { GwtScenarioModel } from \"../models/gwt-scenario.model\";\r\nimport { ScenarioService } from \"../services/scenario.service\";\r\nimport { GwtStepTypes } from \"../models/gwt-step-types.enum\";\r\nimport { GwtStep } from \"../models/gwt-step.model\";\r\nimport { RuleConfigurationService } from \"../services/rule-configuration.service\";\r\n\r\n@Directive({\r\n\tselector: \"[ruleAnchor]\"\r\n})\r\nexport class RuleAnchorDirective implements OnInit, OnDestroy {\r\n\tunsubscribe = new Subject<void>();\r\n\t@Input(\"ruleAnchor\") anchorId;\r\n\tsteps: GwtStep[];\r\n\tactive$: Observable<boolean>;\r\n\tactive: boolean;\r\n\tbutton: HTMLButtonElement;\r\n\tanchorScenarios$: Observable<GwtScenarioModel[]>;\r\n\tconstructor(\r\n\t\tprivate scenarioService: ScenarioService,\r\n\t\tprivate configService: RuleConfigurationService,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate el: ElementRef,\r\n\t\tprivate renderer: Renderer2,\r\n\t\tprivate bottomSheet: MatBottomSheet\r\n\t) {\r\n\t\tthis.active$ = this.store.select(s => s.rule.ruleAnchors.active).pipe(takeUntil(this.unsubscribe));\r\n\t\tthis.active$.subscribe(active => (this.active = active));\r\n\t\tthis.el.nativeElement.classList.add(\"ngs-rule-anchor\");\r\n\t\tthis.steps = this.configService.config$.getValue().steps;\r\n\t}\r\n\r\n\t@HostListener(\"mouseenter\")\r\n\tonMouseEnter() {\r\n\t\tif (!this.active) return;\r\n\t\tthis.showAnchor();\r\n\t}\r\n\r\n\t@HostListener(\"mouseleave\")\r\n\tonMouseLeave() {\r\n\t\tif (!this.active) return;\r\n\t\tthis.hideAnchor();\r\n\t}\r\n\r\n\tprivate showAnchor() {\r\n\t\tthis.el.nativeElement.classList.add(\"show-anchor\");\r\n\t}\r\n\tprivate hideAnchor() {\r\n\t\tthis.el.nativeElement.classList.remove(\"show-anchor\");\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\t// TODO: remove\r\n\t\t// this.store.dispatch(new ShowAnchorsAction());\r\n\r\n\t\tthis.anchorScenarios$ = this.scenarioService\r\n\t\t\t.getAnchorScenarios(this.anchorId) //TODO: replace service call with ngrx action\r\n\t\t\t.pipe(takeUntil(this.unsubscribe), filter(scenario => scenario != undefined));\r\n\t\tthis.active$.subscribe(active => {\r\n\t\t\tif (active) this._activate_anchor();\r\n\t\t\telse this._deactivate_anchor();\r\n\t\t});\r\n\t\tthis.anchorScenarios$.subscribe(scenarios => {\r\n\t\t\tscenarios.forEach(scenario => {\r\n\t\t\t\tscenario.steps = scenario.steps.map(scenarioStep => {\r\n\t\t\t\t\tconst step = this.steps.find(step => step.id == scenarioStep.id);\r\n\t\t\t\t\tstep.params = scenarioStep.params;\r\n\t\t\t\t\treturn step;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._do_scenario(scenario);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tngOnDestroy() {\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t}\r\n\t_activate_anchor() {\r\n\t\tthis._create_anchor();\r\n\t\tthis._set_active_class_to_host();\r\n\t}\r\n\t_deactivate_anchor() {\r\n\t\tthis._remove_anchor();\r\n\t\tthis._remove_active_class_to_host();\r\n\t}\r\n\t_set_active_class_to_host() {\r\n\t\tthis.el.nativeElement.classList.add(\"anchor-active\");\r\n\t}\r\n\t_remove_active_class_to_host() {\r\n\t\tthis.el.nativeElement.classList.remove(\"anchor-active\");\r\n\t}\r\n\t_create_anchor() {\r\n\t\tthis.button = this.renderer.createElement(\"button\");\r\n\t\tthis.button.classList.add(\"ngs-rule-anchor-button\", \"mat-icon-button\");\r\n\t\tthis.button.setAttribute(\"mat-icon-button\", \"\");\r\n\t\tthis.button.addEventListener(\"click\", e => {\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\t\t\tthis.bottomSheet.open(GwtViewComponent, {\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tanchorId: this.anchorId\r\n\t\t\t\t},\r\n\t\t\t\tpanelClass: \"magenta-theme\"\r\n\t\t\t});\r\n\t\t});\r\n\t\tconst maticon = this.renderer.createElement(\"mat-icon\");\r\n\t\tmaticon.classList.add(\"mat-icon\", \"material-icons\");\r\n\t\tconst icon = this.renderer.createText(\"settings\");\r\n\t\tthis.renderer.appendChild(maticon, icon);\r\n\t\tthis.renderer.appendChild(this.button, maticon);\r\n\t\tthis.renderer.appendChild(this.el.nativeElement, this.button);\r\n\t}\r\n\t_remove_anchor() {\r\n\t\tif (!this.button) return;\r\n\t\tthis.button.parentNode.removeChild(this.button);\r\n\t}\r\n\t_do_scenario(scenario: GwtScenarioModel) {\r\n\t\tconst givenStepInterpretors = scenario.steps\r\n\t\t\t.filter(step => step.type == GwtStepTypes.Given)\r\n\t\t\t.map(step => step.interperator(step.params));\r\n\r\n\t\tcombineLatest(givenStepInterpretors)\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this.unsubscribe),\r\n\t\t\t\tmap((values: boolean[]) => values.every(value => value === true)),\r\n\t\t\t\tswitchMap(givenResult => {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\tif (givenResult) {\r\n\t\t\t\t\t\tconst thenStepInterpretors = scenario.steps\r\n\t\t\t\t\t\t\t.filter(step => step.type == GwtStepTypes.Then)\r\n\t\t\t\t\t\t\t.map(step => step.interperator(step.params, this.el));\r\n\t\t\t\t\t\treturn combineLatest\r\n\t\t\t\t\t\t\t.apply(null, thenStepInterpretors)\r\n\t\t\t\t\t\t\t.pipe(map((values: boolean[]) => values.every(value => value === true)));\r\n\t\t\t\t\t} else return of(false);\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe(() => {});\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map, switchMap } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { ScenariosListActionTypes, ScenariosListStartAction, ScenarioFechedAction } from \"./scenario-db.actions\";\r\nimport { ScenarioService } from \"../services/scenario.service\";\r\n\r\n@Injectable()\r\nexport class ScenariosDbEffects {\r\n\tconstructor(private actions$: Actions<any>, private service: ScenarioService) {}\r\n\r\n\t@Effect()\r\n\tEditProfileRequest$ = this.actions$\r\n\t\t.ofType(ScenariosListActionTypes.SCENARIOS_LIST)\r\n\t\t.pipe(map(() => new ScenariosListStartAction()));\r\n\r\n\t@Effect()\r\n\tUpsertScenario$ = this.actions$\r\n\t\t.ofType(ScenariosListActionTypes.UPSERT)\r\n\t\t.pipe(\r\n\t\t\tmap((action) => action.payload),\r\n\t\t\tswitchMap((scenario) => this.service.upsert(scenario)),\r\n\t\t\tmap((scenario) => new ScenarioFechedAction(scenario))\r\n\t\t);\r\n\r\n\t// @Effect()\r\n\t// GetScenario$ = this.actions$\r\n\t// \t.ofType(ScenariosListActionTypes.GET_SCENARIO)\r\n\t// \t.pipe(\r\n\t// \t\tmap(action => action.payload),\r\n\t// \t\tswitchMap(id => this.service.get(id)),\r\n\t// \t\tmap(rule => new ScenarioFechedAction(rule))\r\n\t// \t);\r\n\r\n\t// @Effect()\r\n\t// get_rules_list$ = this.actions$\r\n\t// \t.ofType(ScenariosListActionTypes.SCENARIOS_LIST_START)\r\n\t// \t.pipe(\r\n\t// \t\tswitchMap((data: any) => this.service.getList()),\r\n\t// \t\tmap(res => new ScenariosListSucceedAction(res)),\r\n\t// \t\tcatchError(() => Observable.of(new ScenariosListFailedAction()))\r\n\t// \t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { RulesListActionTypes, RulesListStartAction } from \"./rule-db.actions\";\r\n\r\n@Injectable()\r\nexport class RulesListEffects {\r\n\tconstructor(private actions$: Actions<any>) {}\r\n\r\n\t@Effect()\r\n\tEditProfileRequest$ = this.actions$.ofType(RulesListActionTypes.RULES_LIST).map(() => new RulesListStartAction());\r\n\r\n\t// @Effect()\r\n\t// GetRule$ = this.actions$\r\n\t// \t.ofType(RulesListActionTypes.GET_RULE)\r\n\t// \t.pipe(\r\n\t// \t\tmap(action => action.payload),\r\n\t// \t\tswitchMap(id => this.service.get(id)),\r\n\t// \t\tmap(rule => new RuleFechedAction(rule))\r\n\t// \t);\r\n\r\n\t// @Effect()\r\n\t// get_rules_list$ = this.actions$\r\n\t// \t.ofType(RulesListActionTypes.RULES_LIST_START)\r\n\t// \t.pipe(\r\n\t// \t\tswitchMap((data: any) => this.service.getList()),\r\n\t// \t\tmap(res => new RulesListSucceedAction(res)),\r\n\t// \t\tcatchError(() => Observable.of(new RulesListFailedAction()))\r\n\t// \t);\r\n}\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Subject, Observable } from \"rxjs\";\r\n\r\nimport { getFrontendAuthenticationState } from \"@soushians/frontend-authentication\";\r\n\r\nimport { ShowAnchorsAction, HideAnchorsAction } from \"../rule-anchor/rule-anchor.actions\";\r\n\r\n@Component({\r\n\tselector: \"gwt-mode-button\",\r\n\ttemplate: `    <button *ngIf=\"!(havePermission$ | async)\" class=\"btn\" mat-mini-fab type=\"button\" routerLink=\"auth/frontend/signin\" fxFlex=\"nogrow\" fxLayoutAlign=\"center center\">\r\n      <mat-icon>fingerprint</mat-icon>\r\n    </button>\r\n\r\n    <button *ngIf=\"havePermission$ | async\" class=\"btn\" mat-mini-fab type=\"button\" (click)=\"toggleAnchors()\" fxFlex=\"nogrow\" fxLayoutAlign=\"center center\">\r\n      <mat-icon>settings</mat-icon>\r\n    </button>`,\r\n\tstyles: [`.btn{position:fixed;bottom:25px;left:25px;z-index:3}`]\r\n})\r\nexport class GwtModeButtonComponent {\r\n\tanchorsMode: boolean;\r\n\thavePermission$: Observable<boolean>;\r\n\tconstructor(private store: Store<any>) {\r\n\t\tthis.anchorsMode = false;\r\n\t\tthis.havePermission$ = this.store.select(getFrontendAuthenticationState);\r\n\t}\r\n\r\n\ttoggleAnchors() {\r\n\t\tif (this.anchorsMode === false) {\r\n\t\t\tthis.store.dispatch(new ShowAnchorsAction());\r\n\t\t\tthis.anchorsMode = true;\r\n\t\t} else {\r\n\t\t\tthis.store.dispatch(new HideAnchorsAction());\r\n\t\t\tthis.anchorsMode = false;\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { of } from \"rxjs/internal/observable/of\";\r\n\r\nimport { RuleConfigurationService } from \"./rule-configuration.service\";\r\n\r\nimport { AppState } from \"../rule.reducers\";\r\n\r\n@Injectable()\r\nexport class RuleService {\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate configurationService: RuleConfigurationService\r\n\t) {}\r\n\r\n\t// add(): Observable<TestModel> {\r\n\t// \t// const model = new AddRuleApiModel.Request(data);\r\n\t// \t// return this.configurationService.config$\r\n\t// \t// \t.filter(config => config.endpoints.addRule != \"\")\r\n\t// \t// \t.take(1)\r\n\t// \t// \t.switchMap(config => this.http.post(config.endpoints.addRule, model.getRequestBody()))\r\n\t// \t// \t.map((response: AddRuleApiModel.Response) => response.Result);\r\n\t// }\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule,\r\n\tMatSlideToggleModule,\r\n\tMatDividerModule,\r\n\tMatCheckboxModule,\r\n\tMatTableModule\r\n} from \"@angular/material\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\n\r\nimport { RuleModuleConfig, MODULE_CONFIG_TOKEN } from \"./rule.config\";\r\nimport { RoutingModule } from \"./rule-routing.module\";\r\nimport { RuleReducers } from \"./rule.reducers\";\r\nimport { RuleComponent } from \"./rule.component\";\r\nimport { RuleAnchorDirective } from \"./rule-anchor/rule-anchor.directive\";\r\nimport { GwtViewComponent } from \"./gwt-view/gwt-view.component\";\r\nimport { StepLoaderDirective } from \"./step-loader/step-loader.directive\";\r\nimport { ScenariosDbEffects } from \"./db/scenario-db.effects\";\r\nimport { RulesListEffects } from \"./db/rule-db.effects\";\r\nimport { GwtModeButtonComponent } from \"./mode-button/mode-button.component\";\r\nimport { RuleService } from \"./services/rule.service\";\r\nimport { RuleConfigurationService } from \"./services/rule-configuration.service\";\r\nimport { ScenarioService } from \"./services/scenario.service\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tRouterModule,\r\n\t\tCommonModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatTableModule,\r\n\t\tMatSelectModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tMatDividerModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatRadioModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tReactiveFormsModule,\r\n\t\tBrowserAnimationsModule\r\n\t],\r\n\tdeclarations: [ RuleComponent, RuleAnchorDirective, GwtViewComponent, StepLoaderDirective, GwtModeButtonComponent ],\r\n\tentryComponents: [ GwtViewComponent ],\r\n\texports: [ RuleAnchorDirective, GwtModeButtonComponent ]\r\n})\r\nexport class RuleModule {\r\n\tstatic forRoot(config?: RuleModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: RootRuleModule,\r\n\t\t\tproviders: [\r\n\t\t\t\t{ provide: MODULE_CONFIG_TOKEN, useValue: config || {} },\r\n\t\t\t\tRuleService,\r\n\t\t\t\tRuleConfigurationService,\r\n\t\t\t\tScenarioService\r\n\t\t\t]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRuleModule,\r\n\t\tStoreModule.forFeature(\"rule\", RuleReducers),\r\n\t\tEffectsModule.forFeature([ RulesListEffects, ScenariosDbEffects ]),\r\n\t\tRoutingModule\r\n\t],\r\n\texports: [ RuleModule ]\r\n})\r\nexport class RootRuleModule {}\r\n"],"names":["initialState","fromRuleAnchor.Reducer","fromRuleDbAnchor.reducer","fromScenarioDbAnchor.reducer","BehaviorSubject"],"mappings":"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"}
