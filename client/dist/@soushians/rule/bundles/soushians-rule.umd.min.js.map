{"version":3,"sources":["ng://@soushians/rule/lib/rule.config.ts","ng://@soushians/rule/lib/rule.component.ts","ng://@soushians/rule/lib/rule-routing.module.ts","null","ng://@soushians/rule/lib/rule-anchor/rule-anchor.actions.ts","ng://@soushians/rule/lib/rule-anchor/rule-anchor.reducer.ts","ng://@soushians/rule/lib/db/rule-db.actions.ts","ng://@soushians/rule/lib/db/rule-db.reducer.ts","ng://@soushians/rule/lib/db/scenario-db.actions.ts","ng://@soushians/rule/lib/db/scenario-db.reducer.ts","ng://@soushians/rule/lib/rule.reducers.ts","ng://@soushians/rule/lib/services/rule-configuration.service.ts","ng://@soushians/rule/lib/models/gwt-scenario.model.ts","ng://@soushians/rule/lib/step-loader/step-loader.directive.ts","ng://@soushians/rule/lib/services/scenario.service.ts","ng://@soushians/rule/lib/gwt-view/gwt-view.component.ts","ng://@soushians/rule/lib/models/gwt-step-types.enum.ts","ng://@soushians/rule/lib/rule-anchor/rule-anchor.directive.ts","ng://@soushians/rule/lib/db/scenario-db.effects.ts","ng://@soushians/rule/lib/db/rule-db.effects.ts","ng://@soushians/rule/lib/mode-button/mode-button.component.ts","ng://@soushians/rule/lib/services/rule.service.ts","ng://@soushians/rule/lib/rule.module.ts"],"names":["MODULE_DEFAULT_CONFIG","endpoints","upsert","get","stepClasses","env","production","frontend_server","MODULE_CONFIG_TOKEN","InjectionToken","RuleComponent","prototype","ngOnInit","Component","args","selector","template","routes","path","component","RoutingModule","RouterModule","forChild","__assign","Object","assign","t","s","i","n","arguments","length","p","hasOwnProperty","call","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","ShowAnchorsAction","RuleAnchorsActionTypes","HideAnchorsAction","initialState","active","Reducer","state","action","type","RulesListStartAction","RulesListActionTypes","status","data","reducer","initialState$1","payload","concat","entityIdx","findIndex","form","_id","push","ScenariosListStartAction","ScenariosListActionTypes","UpsertScenarioAction","this","ScenarioFechedAction","reducer$1","initialState$2","data_1","forEach","scenario","RuleReducers","ruleAnchors","fromRuleAnchor.Reducer","rules","fromRuleDbAnchor.reducer","scenarios","fromScenarioDbAnchor.reducer","RuleConfigurationService","configFile","store","injector","_this","BehaviorSubject","steps","map","step","_config","config$","next","Injectable","Inject","Store","Injector","GwtScenarioModel","_a","_b","anchorId","name","featureId","getRequsetBody","id","opposite","params","StepLoaderDirective","resolver","container","instance","ngOnChanges","stepComponent","Error","resolveComponentFactory","createComponent","Directive","ComponentFactoryResolver","ViewContainerRef","Input","ViewChild","read","ScenarioService","http","configService","subscribe","config","model","post","pipe","response","share","getAnchorScenarios","stringTemplate","selectScenarioById","subject","undefined","select","rule","filter","find","asObservable","selectAnchorScenarios","startWith","HttpClient","GwtViewComponent","scenarioService","Subject","_create_scenario_form_group","_init_features_list","steps$","takeUntil","unsubscribe","_load_scenario_and_map_scenario_step_to_steps_class","ngOnDestroy","complete","save","scenario$","getValue","stepLoaders","stepLoader","scenarioFormGroup","value","dispatch","addStepToScenario","deleteStepFromScenario","splice","item","decScenarioStepPriority","incScenarioStepPriority","addNewScenario","scenarios$","activeScenario","scenarioStep","patchValue","FormGroup","FormControl","_reset_scenario_form_group_and_patch_with_active_scenario","reset","features$","styles","MAT_BOTTOM_SHEET_DATA","ViewChildren","RuleAnchorDirective","el","renderer","bottomSheet","active$","nativeElement","classList","add","onMouseEnter","showAnchor","onMouseLeave","hideAnchor","remove","anchorScenarios$","_activate_anchor","_deactivate_anchor","_do_scenario","_create_anchor","_set_active_class_to_host","_remove_anchor","_remove_active_class_to_host","button","createElement","setAttribute","addEventListener","e","preventDefault","stopPropagation","open","panelClass","maticon","icon","createText","appendChild","parentNode","removeChild","givenStepInterpretors","GwtStepTypes","Given","interperator","combineLatest","values","every","switchMap","givenResult","thenStepInterpretors","Then","apply","of","ElementRef","Renderer2","MatBottomSheet","HostListener","ScenariosDbEffects","actions$","service","ofType","Actions","Effect","RulesListEffects","GwtModeButtonComponent","anchorsMode","havePermission$","getFrontendAuthenticationState","toggleAnchors","RuleService","configurationService","RuleModule","forRoot","ngModule","RootRuleModule","providers","provide","useValue","NgModule","imports","HttpClientModule","FormsModule","CommonModule","MatExpansionModule","MatSnackBarModule","MatIconModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatTableModule","MatSelectModule","MatInputModule","MatFormFieldModule","MatTabsModule","MatDividerModule","FlexLayoutModule","MatRadioModule","MatSlideToggleModule","ReactiveFormsModule","BrowserAnimationsModule","declarations","entryComponents","exports","StoreModule","forFeature","EffectsModule"],"mappings":"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","sourcesContent":["import { InjectionToken, Type } from \"@angular/core\";\r\n\r\nimport { GwtStep } from \"./models/gwt-step.model\";\r\n\r\nexport interface RuleModuleConfig {\r\n\tendpoints?: {\r\n\t\tupsert?: string;\r\n\t\tget?: string;\r\n\t};\r\n\tstepClasses?: Type<GwtStep>[];\r\n\tsteps?: GwtStep[];\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t};\r\n}\r\nexport const MODULE_DEFAULT_CONFIG: RuleModuleConfig = {\r\n\tendpoints: {\r\n\t\tupsert: \"/api/gwt/scenario\",\r\n\t\tget: \"/api/gwt/anchor/${model.anchorId}/scenarios\"\r\n\t},\r\n\tstepClasses: [],\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"frontend_server/did/not/set\"\r\n\t}\r\n};\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<RuleModuleConfig>(\"RuleModuleConfig\");\r\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n\tselector: \"app-rule\",\n\ttemplate: `<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <router-outlet></router-outlet>\n</div>`\n})\nexport class RuleComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit() {}\n}\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { RuleComponent } from \"./rule.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"rule\",\r\n\t\tcomponent: RuleComponent\r\n\t\t// children: [ {} ]\r\n\t}\r\n];\r\n\r\nexport const RoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nexport enum RuleAnchorsActionTypes {\r\n\tSHOW_ANCHORS = \"[RULE][ANCHORS] SHOW_ANCHORS\",\r\n\tHIDE_ANCHORS = \"[RULE][ANCHORS] HIDE_ANCHORS\"\r\n}\r\n\r\nexport class ShowAnchorsAction implements Action {\r\n\treadonly type = RuleAnchorsActionTypes.SHOW_ANCHORS;\r\n}\r\n\r\nexport class HideAnchorsAction implements Action {\r\n\treadonly type = RuleAnchorsActionTypes.HIDE_ANCHORS;\r\n}\r\n\r\nexport type RuleAnchorsAction = ShowAnchorsAction | HideAnchorsAction;\r\n","import { RuleAnchorsAction, RuleAnchorsActionTypes } from \"./rule-anchor.actions\";\r\n\r\nexport interface State {\r\n\tactive: boolean;\r\n}\r\n\r\nexport const initialState: State = {\r\n\tactive: false\r\n};\r\n\r\nexport function Reducer(state = initialState, action: RuleAnchorsAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase RuleAnchorsActionTypes.SHOW_ANCHORS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactive: true\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase RuleAnchorsActionTypes.HIDE_ANCHORS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactive: false\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//#region  selectors\r\nexport const getAnchorsActivityState = (state: State) => state.active;\r\n//#endregion\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { RuleModel } from \"../models/rule.model\";\r\n\r\nexport enum RulesListActionTypes {\r\n\tRULES_LIST = \"[RULE][DB] RULES_LIST\",\r\n\tRULES_LIST_START = \"[RULE][DB] RULES_LIST_START\",\r\n\tRULES_LIST_SUCCEED = \"[RULE][DB] RULES_LIST_SUCCEED\",\r\n\tRULES_LIST_FAILED = \"[RULE][DB] RULES_LIST_FAILED\",\r\n\tRULE_UPSERT = \"[RULE][DB] RULE_UPSERT\",\r\n\tGET_RULE = \"[RULE][DB] GET_RULE\",\r\n\tRULE_FETCHED = \"[RULE][DB] RULE_FETCHED\"\r\n}\r\n\r\nexport class RulesListAction implements Action {\r\n\treadonly type = RulesListActionTypes.RULES_LIST;\r\n}\r\nexport class RulesListStartAction implements Action {\r\n\treadonly type = RulesListActionTypes.RULES_LIST_START;\r\n}\r\nexport class RulesListSucceedAction implements Action {\r\n\treadonly type = RulesListActionTypes.RULES_LIST_SUCCEED;\r\n\tconstructor(public payload: RuleModel[]) {}\r\n}\r\nexport class RulesListFailedAction implements Action {\r\n\treadonly type = RulesListActionTypes.RULES_LIST_FAILED;\r\n}\r\nexport class UpsertRuleAction implements Action {\r\n\treadonly type = RulesListActionTypes.RULE_UPSERT;\r\n\tconstructor(public payload: RuleModel) {}\r\n}\r\nexport class GetRuleAction implements Action {\r\n\treadonly type = RulesListActionTypes.GET_RULE;\r\n\tconstructor(public payload: string) {}\r\n}\r\nexport class RuleFechedAction implements Action {\r\n\treadonly type = RulesListActionTypes.RULE_FETCHED;\r\n\tconstructor(public payload: RuleModel) {}\r\n}\r\n\r\nexport type RulesListActions =\r\n\t| RulesListAction\r\n\t| RulesListStartAction\r\n\t| RulesListSucceedAction\r\n\t| RulesListFailedAction\r\n\t| UpsertRuleAction\r\n\t| GetRuleAction\r\n\t| RuleFechedAction;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\n\r\nimport { RuleModel } from \"../models/rule.model\";\r\nimport { RulesListActionTypes, RulesListActions } from \"./rule-db.actions\";\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n\tdata: RuleModel[];\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\",\r\n\tdata: []\r\n};\r\nexport function reducer(state = initialState, action: RulesListActions): State {\r\n\tswitch (action.type) {\r\n\t\tcase RulesListActionTypes.RULES_LIST: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"dirty\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase RulesListActionTypes.RULES_LIST_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase RulesListActionTypes.RULES_LIST_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t\tstatus: \"succeed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase RulesListActionTypes.RULES_LIST_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase RulesListActionTypes.RULE_UPSERT: {\r\n\t\t\tconst data = state.data.concat();\r\n\t\t\tvar entityIdx = state.data.findIndex(form => form._id == action.payload._id);\r\n\t\t\tif (entityIdx > -1) {\r\n\t\t\t\tdata[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n\t\t\t} else {\r\n\t\t\t\tdata.push(action.payload);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: data\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase RulesListActionTypes.RULE_FETCHED: {\r\n\t\t\tconst data = state.data.concat();\r\n\t\t\tvar entityIdx = state.data.findIndex(form => form._id == action.payload._id);\r\n\t\t\tif (entityIdx > -1) {\r\n\t\t\t\tdata[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n\t\t\t} else {\r\n\t\t\t\tdata.push(action.payload);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: data\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getStatus = (state: State) => state.status;\r\n","import { Action } from \"@ngrx/store\";\r\n\r\nimport { GwtScenarioModel } from \"../models/gwt-scenario.model\";\r\n\r\nexport enum ScenariosListActionTypes {\r\n\tSCENARIOS_LIST = \"[GWT][SCENARIO][DB][LIST] SCENARIOS_LIST\",\r\n\tSCENARIOS_LIST_START = \"[SCENARIO][DB] SCENARIOS_LIST_START\",\r\n\tSCENARIOS_LIST_SUCCEED = \"[SCENARIO][DB] SCENARIOS_LIST_SUCCEED\",\r\n\tSCENARIOS_LIST_FAILED = \"[SCENARIO][DB] SCENARIOS_LIST_FAILED\",\r\n\tUPSERT = \"[GWT][SCENARIO][DB][UPSERT] SCENARIO_UPSERT\",\r\n\tGET_SCENARIO = \"[SCENARIO][DB] GET_SCENARIO\",\r\n\tSCENARIO_FETCHED = \"[SCENARIO][DB] SCENARIO_FETCHED\",\r\n\t/// new vision\r\n\tUPDATE_DB = \"[GWT][SCENARIO][DB] UPDATE_DB\"\r\n}\r\n\r\nexport class ScenariosListAction implements Action {\r\n\treadonly type = ScenariosListActionTypes.SCENARIOS_LIST;\r\n}\r\nexport class ScenariosListStartAction implements Action {\r\n\treadonly type = ScenariosListActionTypes.SCENARIOS_LIST_START;\r\n}\r\nexport class ScenariosListSucceedAction implements Action {\r\n\treadonly type = ScenariosListActionTypes.SCENARIOS_LIST_SUCCEED;\r\n\tconstructor(public payload: GwtScenarioModel[]) {}\r\n}\r\nexport class ScenariosListFailedAction implements Action {\r\n\treadonly type = ScenariosListActionTypes.SCENARIOS_LIST_FAILED;\r\n}\r\nexport class UpsertScenarioAction implements Action {\r\n\treadonly type = ScenariosListActionTypes.UPSERT;\r\n\tconstructor(public payload: GwtScenarioModel) {}\r\n}\r\nexport class GetScenarioAction implements Action {\r\n\treadonly type = ScenariosListActionTypes.GET_SCENARIO;\r\n\tconstructor(public payload: string) {}\r\n}\r\nexport class ScenarioFechedAction implements Action {\r\n\treadonly type = ScenariosListActionTypes.SCENARIO_FETCHED;\r\n\tconstructor(public payload: GwtScenarioModel) {}\r\n}\r\nexport class UpdateDbAction implements Action {\r\n\treadonly type = ScenariosListActionTypes.UPDATE_DB;\r\n\tconstructor(public payload: GwtScenarioModel[]) {}\r\n}\r\n\r\nexport type ScenariosListActions =\r\n\t| ScenariosListAction\r\n\t| ScenariosListStartAction\r\n\t| ScenariosListSucceedAction\r\n\t| ScenariosListFailedAction\r\n\t| UpsertScenarioAction\r\n\t| GetScenarioAction\r\n\t| ScenarioFechedAction\r\n\t| UpdateDbAction;\r\n","import { responseStatusTypes } from \"@soushians/shared\";\r\n\r\nimport { GwtScenarioModel } from \"../models/gwt-scenario.model\";\r\nimport { ScenariosListActionTypes, ScenariosListActions } from \"./scenario-db.actions\";\r\n\r\nexport interface State {\r\n\tstatus: responseStatusTypes;\r\n\tdata: GwtScenarioModel[];\r\n}\r\nexport const initialState: State = {\r\n\tstatus: \"pristine\",\r\n\tdata: []\r\n};\r\nexport function reducer(state = initialState, action: ScenariosListActions): State {\r\n\tswitch (action.type) {\r\n\t\tcase ScenariosListActionTypes.SCENARIOS_LIST: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"dirty\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ScenariosListActionTypes.SCENARIOS_LIST_START: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"pending\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ScenariosListActionTypes.SCENARIOS_LIST_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t\tstatus: \"succeed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ScenariosListActionTypes.SCENARIOS_LIST_FAILED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: \"failed\"\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ScenariosListActionTypes.UPSERT: {\r\n\t\t\tconst data = state.data.concat();\r\n\t\t\tvar entityIdx = state.data.findIndex(form => form._id == action.payload._id);\r\n\t\t\tif (entityIdx > -1) {\r\n\t\t\t\tdata[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n\t\t\t} else {\r\n\t\t\t\tdata.push(action.payload);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: data\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ScenariosListActionTypes.SCENARIO_FETCHED: {\r\n\t\t\tconst data = state.data.concat();\r\n\t\t\tvar entityIdx = state.data.findIndex(form => form._id == action.payload._id);\r\n\t\t\tif (entityIdx > -1) {\r\n\t\t\t\tdata[entityIdx] = Object.assign({}, data[entityIdx], action.payload);\r\n\t\t\t} else {\r\n\t\t\t\tdata.push(action.payload);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: data\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase ScenariosListActionTypes.UPDATE_DB: {\r\n\t\t\tconst data = state.data.concat();\r\n\t\t\tconst scenarios = action.payload;\r\n\t\t\tscenarios.forEach(scenario => {\r\n\t\t\t\tvar entityIdx = state.data.findIndex(form => form._id == scenario._id);\r\n\t\t\t\tif (entityIdx > -1) {\r\n\t\t\t\t\tdata[entityIdx] = Object.assign({}, data[entityIdx], scenario);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata.push(scenario);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: data\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport var getStatus = (state: State) => state.status;\r\n","import * as fromRuleAnchor from \"./rule-anchor/rule-anchor.reducer\";\r\nimport * as fromRuleDbAnchor from \"./db/rule-db.reducer\";\r\nimport * as fromScenarioDbAnchor from \"./db/scenario-db.reducer\";\r\n\r\nexport interface RuleState {\r\n\truleAnchors: fromRuleAnchor.State;\r\n\trules: fromRuleDbAnchor.State;\r\n\tscenarios: fromScenarioDbAnchor.State;\r\n}\r\n\r\nexport const RuleReducers = {\r\n\truleAnchors: fromRuleAnchor.Reducer,\r\n\trules: fromRuleDbAnchor.reducer,\r\n\tscenarios: fromScenarioDbAnchor.reducer\r\n};\r\n\r\nexport interface AppState {\r\n\t\"rule\": RuleState;\r\n}\r\n","import { Injectable, Inject, Injector } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\n// import { getRuleModuleConfig } from \"@soushians/config\";\r\nimport { RuleModuleConfig } from \"../rule.config\";\r\nimport { MODULE_CONFIG_TOKEN, MODULE_DEFAULT_CONFIG } from \"../rule.config\";\r\nimport { RuleState } from \"../rule.reducers\";\r\n\r\n@Injectable()\r\nexport class RuleConfigurationService {\r\n\tprivate _config: RuleModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(MODULE_DEFAULT_CONFIG);\r\n\r\n\tconstructor(\r\n\t\t@Inject(MODULE_CONFIG_TOKEN) configFile: RuleModuleConfig,\r\n\t\tprivate store: Store<RuleState>,\r\n\t\tprivate injector: Injector\r\n\t) {\r\n\t\t// instantiate steps and used them\r\n\t\tconfigFile.steps = configFile.stepClasses.map(step => new step(this.injector));\r\n\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\r\n\t\tthis.config$.next(this._config);\r\n\r\n\t\t// this.store.select(getRuleModuleConfig).subscribe(userConfig => {\r\n\t\t// \tif (!userConfig) return;\r\n\t\t// \tthis._config = Object.assign({}, this._config, userConfig.Config);\r\n\t\t// \tthis.config$.next(this._config);\r\n\t\t// });\r\n\t}\r\n}\r\n","import { GwtStep } from \"./gwt-step.model\";\r\n\r\nexport class GwtScenarioModel {\r\n\t_id: string;\r\n\tname: string;\r\n\tanchorId: string;\r\n\tfeatureId: string;\r\n\tsteps: GwtStep[];\r\n\tconstructor(\r\n\t\t{\r\n\t\t\t_id,\r\n\t\t\tanchorId,\r\n\t\t\tsteps,\r\n\t\t\tname,\r\n\t\t\tfeatureId\r\n\t\t}: { _id?: string; anchorId?: string; steps?: GwtStep[]; name?: string; featureId?: string } = {}\r\n\t) {\r\n\t\tthis._id = _id || \"\";\r\n\t\tthis.name = name || \"\";\r\n\t\tthis.featureId = featureId || \"\";\r\n\t\tthis._id = _id || \"\";\r\n\t\tthis.anchorId = anchorId || \"\";\r\n\t\tthis.steps = steps || [];\r\n\t}\r\n\tgetRequsetBody() {\r\n\t\treturn {\r\n\t\t\t_id: this._id,\r\n\t\t\tanchorId: this.anchorId,\r\n\t\t\tname: this.name,\r\n\t\t\tfeatureId: this.featureId,\r\n\t\t\tsteps: this.steps.map((step) => ({\r\n\t\t\t\tid: step.id,\r\n\t\t\t\topposite: step.opposite,\r\n\t\t\t\tparams: step.params\r\n\t\t\t}))\r\n\t\t};\r\n\t}\r\n}\r\n","import {\n\tComponent,\n\tOnInit,\n\tInput,\n\tViewContainerRef,\n\tComponentFactoryResolver,\n\tComponentRef,\n\tViewChild,\n\tDirective,\n\tOnChanges\n} from \"@angular/core\";\n\nimport { GwtStep } from \"../models/gwt-step.model\";\n\n@Directive({\n\tselector: \"[rule-step-loader]\"\n\t// templateUrl: \"./step-loader.component.html\",\n\t// styleUrls: [ \"./step-loader.component.css\" ]\n})\nexport class StepLoaderDirective implements OnChanges, OnInit {\n\t@Input() step: GwtStep<any>;\n\t@ViewChild(\"container\", { read: ViewContainerRef })\n\t// TODO: fix generic type\n\tcomponent: ComponentRef<any>;\n\tget params() {\n\t\treturn this.component.instance.params || {};\n\t}\n\tconstructor(private resolver: ComponentFactoryResolver, private container: ViewContainerRef) {}\n\n\tngOnChanges() {\n\t\tif (this.component) {\n\t\t\t// this.component.instance.config = this.config;\n\t\t\t// this.component.instance.group = this.group;\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tif (!this.step.stepComponent) {\n\t\t\tdebugger;\n\t\t\tthrow new Error(\n\t\t\t\t`Trying to use an unsupported type ().\n\t\t  Supported types: `\n\t\t\t);\n\t\t}\n\t\t// TODO: fix generic type\n\t\tconst component = this.resolver.resolveComponentFactory<any>(this.step.stepComponent);\n\t\tthis.component = this.container.createComponent(component);\n\t\tthis.component.instance.params = this.step.params;\n\t}\n}\n","import { filter, map, startWith, share } from \"rxjs/operators\";\r\nimport { Observable, BehaviorSubject } from \"rxjs/Rx\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { stringTemplate } from \"@soushians/shared\";\r\n\r\nimport { RuleConfigurationService } from \"./rule-configuration.service\";\r\nimport { GwtScenarioModel } from \"../models/gwt-scenario.model\";\r\nimport { RuleModuleConfig } from \"../rule.config\";\r\nimport { AppState } from \"../rule.reducers\";\r\n\r\n@Injectable()\r\nexport class ScenarioService {\r\n\tconfig$: Observable<RuleModuleConfig>;\r\n\tconfig: RuleModuleConfig;\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate configService: RuleConfigurationService\r\n\t) {\r\n\t\tthis.config$ = this.configService.config$;\r\n\t\tthis.config$.subscribe(config => (this.config = config));\r\n\t}\r\n\r\n\tupsert(scenario: GwtScenarioModel): Observable<GwtScenarioModel> {\r\n\t\tconst model = new GwtScenarioModel(scenario);\r\n\t\treturn this.http\r\n\t\t\t.post(this.config.env.frontend_server + this.config.endpoints.upsert, model.getRequsetBody())\r\n\t\t\t.pipe(map(response => response as GwtScenarioModel), share());\r\n\t}\r\n\tgetAnchorScenarios(anchorId: string): Observable<GwtScenarioModel[]> {\r\n\t\treturn this.http\r\n\t\t\t.get<any>(this.config.env.frontend_server + stringTemplate(this.config.endpoints.get, { anchorId }))\r\n\t\t\t.map(response => response.Result as GwtScenarioModel[]);\r\n\t}\r\n\tselectScenarioById(_id: string): Observable<GwtScenarioModel> {\r\n\t\tconst subject = new BehaviorSubject<GwtScenarioModel>(undefined);\r\n\t\tthis.store\r\n\t\t\t.select(state => state.rule.scenarios.data)\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter(scenarios => scenarios != null),\r\n\t\t\t\tmap(scenarios => {\r\n\t\t\t\t\treturn scenarios.find(scenario => scenario._id == _id);\r\n\t\t\t\t}),\r\n\t\t\t\tfilter(scenario => scenario != undefined)\r\n\t\t\t)\r\n\t\t\t.subscribe(scenario => {\r\n\t\t\t\tsubject.next(scenario);\r\n\t\t\t});\r\n\t\treturn subject.asObservable();\r\n\t}\r\n\tselectAnchorScenarios(anchorId: string): Observable<GwtScenarioModel[]> {\r\n\t\tconst subject = new BehaviorSubject<GwtScenarioModel[]>(undefined);\r\n\t\tthis.store\r\n\t\t\t.select(state => state.rule.scenarios.data)\r\n\t\t\t.pipe(\r\n\t\t\t\tstartWith([]),\r\n\t\t\t\tfilter(scenarios => scenarios != null),\r\n\t\t\t\tmap(scenarios => {\r\n\t\t\t\t\treturn scenarios.filter(scenario => scenario._id == anchorId);\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.subscribe(scenarios => {\r\n\t\t\t\tsubject.next(scenarios);\r\n\t\t\t});\r\n\t\treturn subject.asObservable();\r\n\t}\r\n}\r\n","import { Component, OnInit, Inject, Type, Injector, ViewChildren, OnDestroy } from \"@angular/core\";\nimport { map, filter, withLatestFrom, takeUntil } from \"rxjs/operators\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable, BehaviorSubject, Subject } from \"rxjs\";\nimport { MAT_BOTTOM_SHEET_DATA } from \"@angular/material\";\n\nimport { FormGroup } from \"@angular/forms\";\nimport { FormControl } from \"@angular/forms\";\n\nimport { RuleConfigurationService } from \"../services/rule-configuration.service\";\nimport { GwtStep } from \"../models/gwt-step.model\";\nimport { GwtScenarioModel } from \"../models/gwt-scenario.model\";\nimport { AppState } from \"../rule.reducers\";\nimport { UpsertScenarioAction } from \"../db/scenario-db.actions\";\nimport { StepLoaderDirective } from \"../step-loader/step-loader.directive\";\nimport { ScenarioService } from \"../services/scenario.service\";\n\n@Component({\n\tselector: \"app-gwt-view\",\n\ttemplate: `<div fxLayout=\"row\" fxLayoutGap=\"25px\">\n<div fxFlex=\"400px\" fxLayout=\"column\" fxLayoutGap=\"15px\">\n  <div fxLayout=\"row wrap\">\n    <mat-form-field appearance=\"fill\" fxFlex=\"100\">\n      <input matInput placeholder=\"ÙÛÙØªØ±\">\n      <mat-icon matSuffix>search</mat-icon>\n    </mat-form-field>\n    <mat-checkbox fxFlex class=\"example-margin\">ÙØ±Ø¶ Ú©ÙÛØ¯</mat-checkbox>\n    <mat-checkbox fxFlex class=\"example-margin\">ÙÙÚ¯Ø§ÙÛ Ú©Ù</mat-checkbox>\n    <mat-checkbox fxFlex class=\"example-margin\">Ø¢ÙÚ¯Ø§Ù</mat-checkbox>\n  </div>\n    <mat-card class=\"steps-item\" *ngFor=\"let step of steps$ | async\">\n      <span class=\"step-text\">\n        {{step.description}}\n      </span>\n      <button mat-icon-button class=\"add-button\" (click)=\"addStepToScenario(step)\">\n        <mat-icon>arrow_back_ios</mat-icon>\n      </button>\n    </mat-card>\n</div>\n\n<div fxFlex=\"700px\">\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"25px\" fxLayoutAlign=\"center center\" class=\"scenario-toolbar\">\n    <div fxFlex>\n        <mat-form-field class=\"fit\">\n            <mat-select placeholder=\"ÙÙÛÚÚ¯Û\" (selectionChange)=\"activeScenario($event.value)\">\n                  <mat-option *ngFor=\"let scenario of scenarios$ | async\" [value]=\"scenario\">\n                {{ scenario.featureId }} : {{ scenario.name }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n    </div>\n    <button fxFlex=\"nogrow\" mat-raised-button color=\"primary\" (click)=\"addNewScenario()\">\n       Ø«Ø¨Øª Ø³ÙØ§Ø±ÛÙ Ø¬Ø¯ÛØ¯\n    </button>\n  </div>\n  <div fxLayout=\"column\" fxLayoutGap=\"15px\">\n    <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutGap=\"25px\" [formGroup]=\"scenarioFormGroup\">\n      <mat-form-field fxFlex=\"50\">\n        <mat-select placeholder=\"ÙÛÚÚ¯Û\" formControlName=\"featureId\">\n          <mat-option *ngFor=\"let feature of features$\" [value]=\"feature\">\n            {{ feature }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field fxFlex=\"50\">\n        <input matInput placeholder=\"ÙØ§Ù\" formControlName=\"name\">\n      </mat-form-field>\n    </div>\n    <ng-container *ngFor=\"let step of (scenario$ | async).steps\">\n      <div class=\"scenario-steps-item\">\n        <ng-container rule-step-loader [step]=\"step\"></ng-container>\n        <div class=\"scenario-steps-action\">\n          <button mat-icon-button (click)=\"deleteStepFromScenario(step)\">\n            <mat-icon>delete</mat-icon>\n          </button>\n          <button mat-icon-button (click)=\"incScenarioStepPriority(step)\">\n            <mat-icon>keyboard_arrow_up</mat-icon>\n          </button>\n          <button mat-icon-button (click)=\"decScenarioStepPriority(step)\">\n            <mat-icon>keyboard_arrow_down</mat-icon>\n          </button>\n        </div>\n      </div>\n    </ng-container>\n      <button fxFlex=\"nogrow\" mat-raised-button color=\"primary\" (click)=\"save()\">\n        Ø«Ø¨Øª\n      </button>\n    </div>\n  </div>\n</div>`,\n\tstyles: [`:host{width:100vw}.scenario-toolbar{height:60px;margin-bottom:20px}`]\n})\nexport class GwtViewComponent implements OnInit, OnDestroy {\n\tunsubscribe = new Subject<void>();\n\tsteps$: Observable<GwtStep[]>;\n\tsteps: GwtStep[];\n\tscenario$ = new BehaviorSubject<GwtScenarioModel>(new GwtScenarioModel());\n\tscenarios$ = new BehaviorSubject<GwtScenarioModel[]>([]);\n\tscenarioFormGroup: FormGroup;\n\tfeatures$: string[];\n\t@ViewChildren(StepLoaderDirective) stepLoaders: StepLoaderDirective[];\n\tconstructor(\n\t\tprivate store: Store<AppState>,\n\t\tprivate configService: RuleConfigurationService,\n\t\tprivate scenarioService: ScenarioService,\n\t\tprivate injector: Injector,\n\t\t@Inject(MAT_BOTTOM_SHEET_DATA) private data: any\n\t) {\n\t\tthis._create_scenario_form_group();\n\t\tthis._init_features_list();\n\t}\n\n\tngOnInit() {\n\t\tthis.steps$ = this.configService.config$.pipe(map(config => config.steps), takeUntil(this.unsubscribe));\n\t\tthis.steps$.subscribe(steps => (this.steps = steps));\n\t\tthis._load_scenario_and_map_scenario_step_to_steps_class();\n\t}\n\tngOnDestroy() {\n\t\tthis.unsubscribe.next();\n\t\tthis.unsubscribe.complete();\n\t}\n\tsave() {\n\t\tconst scenario = this.scenario$.getValue();\n\t\tthis.stepLoaders.forEach(stepLoader => {\n\t\t\tscenario.steps.find(step => step.name == stepLoader.step.name).params = stepLoader.params;\n\t\t});\n\t\tscenario.featureId = this.scenarioFormGroup.value.featureId;\n\t\tscenario.name = this.scenarioFormGroup.value.name;\n\t\tthis.store.dispatch(new UpsertScenarioAction(scenario));\n\t}\n\taddStepToScenario(step: GwtStep) {\n\t\tconst scenario = this.scenario$.getValue();\n\t\tscenario.steps.push(step);\n\t\tthis.scenario$.next(scenario);\n\t}\n\tdeleteStepFromScenario(step: GwtStep) {\n\t\tconst scenario = this.scenario$.getValue();\n\t\tscenario.steps.splice(scenario.steps.findIndex(item => item.name == step.name), 1);\n\t\tthis.scenario$.next(scenario);\n\t}\n\tdecScenarioStepPriority(step: GwtStep) {}\n\tincScenarioStepPriority(step: GwtStep) {}\n\taddNewScenario() {\n\t\tconst scenarios = this.scenarios$.getValue();\n\t\tscenarios.push(\n\t\t\tnew GwtScenarioModel({\n\t\t\t\tanchorId: this.data.anchorId\n\t\t\t})\n\t\t);\n\t\tthis.scenarios$.next(scenarios);\n\t}\n\tactiveScenario(scenario: GwtScenarioModel) {\n\t\tscenario.steps = scenario.steps.map(scenarioStep => {\n\t\t\tconst step = this.steps.find(step => step.id == scenarioStep.id);\n\t\t\tstep.params = scenarioStep.params;\n\t\t\treturn step;\n\t\t});\n\t\tthis.scenarioFormGroup.patchValue(scenario);\n\t\tscenario.anchorId = this.data.anchorId;\n\t\tthis.scenario$.next(scenario);\n\t}\n\n\t_load_scenario_and_map_scenario_step_to_steps_class() {\n\t\tthis.scenarioService\n\t\t\t.getAnchorScenarios(this.data.anchorId)\n\t\t\t.pipe(takeUntil(this.unsubscribe))\n\t\t\t.subscribe(scenarios => {\n\t\t\t\tthis.scenarios$.next(scenarios);\n\t\t\t\tthis.activeScenario(scenarios[0] || new GwtScenarioModel());\n\t\t\t});\n\t}\n\t_create_scenario_form_group() {\n\t\tthis.scenarioFormGroup = new FormGroup({\n\t\t\tfeatureId: new FormControl(),\n\t\t\tname: new FormControl()\n\t\t});\n\t}\n\t_reset_scenario_form_group_and_patch_with_active_scenario() {\n\t\tthis.scenarioFormGroup.reset();\n\t\tthis.scenarioFormGroup.patchValue(this.scenario$.getValue());\n\t}\n\t_init_features_list() {\n\t\tthis.features$ = [ \"ÙØ¯ÛØ±ÛØª ÙÙØ§ÛØ´ Ø¨Ø±Ø§Ø³Ø§Ø³ Ø¯Ø³ØªØ±Ø³Û ÙØ§Û Ú©Ø§Ø±Ø¨Ø±\" ];\n\t}\n}\n","export enum GwtStepTypes {\r\n\t\"Given\" = \"Given\",\r\n\t\"When\" = \"When\",\r\n\t\"Then\" = \"Then\",\r\n\t\"And\" = \"And\",\r\n\t\"But\" = \"But\"\r\n}\r\n","import { Directive, HostListener, ElementRef, Renderer2, OnInit, Input, OnDestroy } from \"@angular/core\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable, of, zip, Subject, combineLatest } from \"rxjs\";\nimport { filter, map, switchMap, takeUntil } from \"rxjs/operators\";\nimport { MatBottomSheet } from \"@angular/material\";\n\nimport { GwtViewComponent } from \"../gwt-view/gwt-view.component\";\nimport { AppState } from \"../rule.reducers\";\nimport { GwtScenarioModel } from \"../models/gwt-scenario.model\";\nimport { ScenarioService } from \"../services/scenario.service\";\nimport { GwtStepTypes } from \"../models/gwt-step-types.enum\";\nimport { GwtStep } from \"../models/gwt-step.model\";\nimport { RuleConfigurationService } from \"../services/rule-configuration.service\";\n\n@Directive({\n\tselector: \"[ruleAnchor]\"\n})\nexport class RuleAnchorDirective implements OnInit, OnDestroy {\n\tunsubscribe = new Subject<void>();\n\t@Input(\"ruleAnchor\") anchorId;\n\tsteps: GwtStep[];\n\tactive$: Observable<boolean>;\n\tactive: boolean;\n\tbutton: HTMLButtonElement;\n\tanchorScenarios$: Observable<GwtScenarioModel[]>;\n\tconstructor(\n\t\tprivate scenarioService: ScenarioService,\n\t\tprivate configService: RuleConfigurationService,\n\t\tprivate store: Store<AppState>,\n\t\tprivate el: ElementRef,\n\t\tprivate renderer: Renderer2,\n\t\tprivate bottomSheet: MatBottomSheet\n\t) {\n\t\tthis.active$ = this.store.select(s => s.rule.ruleAnchors.active).pipe(takeUntil(this.unsubscribe));\n\t\tthis.active$.subscribe(active => (this.active = active));\n\t\tthis.el.nativeElement.classList.add(\"ngs-rule-anchor\");\n\t\tthis.steps = this.configService.config$.getValue().steps;\n\t}\n\n\t@HostListener(\"mouseenter\")\n\tonMouseEnter() {\n\t\tif (!this.active) return;\n\t\tthis.showAnchor();\n\t}\n\n\t@HostListener(\"mouseleave\")\n\tonMouseLeave() {\n\t\tif (!this.active) return;\n\t\tthis.hideAnchor();\n\t}\n\n\tprivate showAnchor() {\n\t\tthis.el.nativeElement.classList.add(\"show-anchor\");\n\t}\n\tprivate hideAnchor() {\n\t\tthis.el.nativeElement.classList.remove(\"show-anchor\");\n\t}\n\n\tngOnInit() {\n\t\t// TODO: remove\n\t\t// this.store.dispatch(new ShowAnchorsAction());\n\n\t\tthis.anchorScenarios$ = this.scenarioService\n\t\t\t.getAnchorScenarios(this.anchorId) //TODO: replace service call with ngrx action\n\t\t\t.pipe(takeUntil(this.unsubscribe), filter(scenario => scenario != undefined));\n\t\tthis.active$.subscribe(active => {\n\t\t\tif (active) this._activate_anchor();\n\t\t\telse this._deactivate_anchor();\n\t\t});\n\t\tthis.anchorScenarios$.subscribe(scenarios => {\n\t\t\tscenarios.forEach(scenario => {\n\t\t\t\tscenario.steps = scenario.steps.map(scenarioStep => {\n\t\t\t\t\tconst step = this.steps.find(step => step.id == scenarioStep.id);\n\t\t\t\t\tstep.params = scenarioStep.params;\n\t\t\t\t\treturn step;\n\t\t\t\t});\n\n\t\t\t\tthis._do_scenario(scenario);\n\t\t\t});\n\t\t});\n\t}\n\tngOnDestroy() {\n\t\tthis.unsubscribe.next();\n\t\tthis.unsubscribe.complete();\n\t}\n\t_activate_anchor() {\n\t\tthis._create_anchor();\n\t\tthis._set_active_class_to_host();\n\t}\n\t_deactivate_anchor() {\n\t\tthis._remove_anchor();\n\t\tthis._remove_active_class_to_host();\n\t}\n\t_set_active_class_to_host() {\n\t\tthis.el.nativeElement.classList.add(\"anchor-active\");\n\t}\n\t_remove_active_class_to_host() {\n\t\tthis.el.nativeElement.classList.remove(\"anchor-active\");\n\t}\n\t_create_anchor() {\n\t\tthis.button = this.renderer.createElement(\"button\");\n\t\tthis.button.classList.add(\"ngs-rule-anchor-button\", \"mat-icon-button\");\n\t\tthis.button.setAttribute(\"mat-icon-button\", \"\");\n\t\tthis.button.addEventListener(\"click\", e => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tthis.bottomSheet.open(GwtViewComponent, {\n\t\t\t\tdata: {\n\t\t\t\t\tanchorId: this.anchorId\n\t\t\t\t},\n\t\t\t\tpanelClass: \"magenta-theme\"\n\t\t\t});\n\t\t});\n\t\tconst maticon = this.renderer.createElement(\"mat-icon\");\n\t\tmaticon.classList.add(\"mat-icon\", \"material-icons\");\n\t\tconst icon = this.renderer.createText(\"settings\");\n\t\tthis.renderer.appendChild(maticon, icon);\n\t\tthis.renderer.appendChild(this.button, maticon);\n\t\tthis.renderer.appendChild(this.el.nativeElement, this.button);\n\t}\n\t_remove_anchor() {\n\t\tif (!this.button) return;\n\t\tthis.button.parentNode.removeChild(this.button);\n\t}\n\t_do_scenario(scenario: GwtScenarioModel) {\n\t\tconst givenStepInterpretors = scenario.steps\n\t\t\t.filter(step => step.type == GwtStepTypes.Given)\n\t\t\t.map(step => step.interperator(step.params));\n\n\t\tcombineLatest(givenStepInterpretors)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe),\n\t\t\t\tmap((values: boolean[]) => values.every(value => value === true)),\n\t\t\t\tswitchMap(givenResult => {\n\t\t\t\t\tdebugger;\n\t\t\t\t\tif (givenResult) {\n\t\t\t\t\t\tconst thenStepInterpretors = scenario.steps\n\t\t\t\t\t\t\t.filter(step => step.type == GwtStepTypes.Then)\n\t\t\t\t\t\t\t.map(step => step.interperator(step.params, this.el));\n\t\t\t\t\t\treturn combineLatest\n\t\t\t\t\t\t\t.apply(null, thenStepInterpretors)\n\t\t\t\t\t\t\t.pipe(map((values: boolean[]) => values.every(value => value === true)));\n\t\t\t\t\t} else return of(false);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe(() => {});\n\t}\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { map, switchMap } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { ScenariosListActionTypes, ScenariosListStartAction, ScenarioFechedAction } from \"./scenario-db.actions\";\r\nimport { ScenarioService } from \"../services/scenario.service\";\r\n\r\n@Injectable()\r\nexport class ScenariosDbEffects {\r\n\tconstructor(private actions$: Actions<any>, private service: ScenarioService) {}\r\n\r\n\t@Effect()\r\n\tEditProfileRequest$ = this.actions$\r\n\t\t.ofType(ScenariosListActionTypes.SCENARIOS_LIST)\r\n\t\t.pipe(map(() => new ScenariosListStartAction()));\r\n\r\n\t@Effect()\r\n\tUpsertScenario$ = this.actions$\r\n\t\t.ofType(ScenariosListActionTypes.UPSERT)\r\n\t\t.pipe(\r\n\t\t\tmap((action) => action.payload),\r\n\t\t\tswitchMap((scenario) => this.service.upsert(scenario)),\r\n\t\t\tmap((scenario) => new ScenarioFechedAction(scenario))\r\n\t\t);\r\n\r\n\t// @Effect()\r\n\t// GetScenario$ = this.actions$\r\n\t// \t.ofType(ScenariosListActionTypes.GET_SCENARIO)\r\n\t// \t.pipe(\r\n\t// \t\tmap(action => action.payload),\r\n\t// \t\tswitchMap(id => this.service.get(id)),\r\n\t// \t\tmap(rule => new ScenarioFechedAction(rule))\r\n\t// \t);\r\n\r\n\t// @Effect()\r\n\t// get_rules_list$ = this.actions$\r\n\t// \t.ofType(ScenariosListActionTypes.SCENARIOS_LIST_START)\r\n\t// \t.pipe(\r\n\t// \t\tswitchMap((data: any) => this.service.getList()),\r\n\t// \t\tmap(res => new ScenariosListSucceedAction(res)),\r\n\t// \t\tcatchError(() => Observable.of(new ScenariosListFailedAction()))\r\n\t// \t);\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { RulesListActionTypes, RulesListStartAction } from \"./rule-db.actions\";\r\n\r\n@Injectable()\r\nexport class RulesListEffects {\r\n\tconstructor(private actions$: Actions<any>) {}\r\n\r\n\t@Effect()\r\n\tEditProfileRequest$ = this.actions$.ofType(RulesListActionTypes.RULES_LIST).map(() => new RulesListStartAction());\r\n\r\n\t// @Effect()\r\n\t// GetRule$ = this.actions$\r\n\t// \t.ofType(RulesListActionTypes.GET_RULE)\r\n\t// \t.pipe(\r\n\t// \t\tmap(action => action.payload),\r\n\t// \t\tswitchMap(id => this.service.get(id)),\r\n\t// \t\tmap(rule => new RuleFechedAction(rule))\r\n\t// \t);\r\n\r\n\t// @Effect()\r\n\t// get_rules_list$ = this.actions$\r\n\t// \t.ofType(RulesListActionTypes.RULES_LIST_START)\r\n\t// \t.pipe(\r\n\t// \t\tswitchMap((data: any) => this.service.getList()),\r\n\t// \t\tmap(res => new RulesListSucceedAction(res)),\r\n\t// \t\tcatchError(() => Observable.of(new RulesListFailedAction()))\r\n\t// \t);\r\n}\r\n","import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { Store } from \"@ngrx/store\";\nimport { Subject, Observable } from \"rxjs\";\n\nimport { getFrontendAuthenticationState } from \"@soushians/frontend-authentication\";\n\nimport { ShowAnchorsAction, HideAnchorsAction } from \"../rule-anchor/rule-anchor.actions\";\n\n@Component({\n\tselector: \"gwt-mode-button\",\n\ttemplate: `    <button *ngIf=\"!(havePermission$ | async)\" class=\"btn\" mat-mini-fab type=\"button\" routerLink=\"auth/frontend/signin\" fxFlex=\"nogrow\" fxLayoutAlign=\"center center\">\n      <mat-icon>fingerprint</mat-icon>\n    </button>\n\n    <button *ngIf=\"havePermission$ | async\" class=\"btn\" mat-mini-fab type=\"button\" (click)=\"toggleAnchors()\" fxFlex=\"nogrow\" fxLayoutAlign=\"center center\">\n      <mat-icon>settings</mat-icon>\n    </button>`,\n\tstyles: [`.btn{position:fixed;bottom:25px;left:25px;z-index:3}`]\n})\nexport class GwtModeButtonComponent {\n\tanchorsMode: boolean;\n\thavePermission$: Observable<boolean>;\n\tconstructor(private store: Store<any>) {\n\t\tthis.anchorsMode = false;\n\t\tthis.havePermission$ = this.store.select(getFrontendAuthenticationState);\n\t}\n\n\ttoggleAnchors() {\n\t\tif (this.anchorsMode === false) {\n\t\t\tthis.store.dispatch(new ShowAnchorsAction());\n\t\t\tthis.anchorsMode = true;\n\t\t} else {\n\t\t\tthis.store.dispatch(new HideAnchorsAction());\n\t\t\tthis.anchorsMode = false;\n\t\t}\n\t}\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { of } from \"rxjs/internal/observable/of\";\r\n\r\nimport { RuleConfigurationService } from \"./rule-configuration.service\";\r\n\r\nimport { AppState } from \"../rule.reducers\";\r\n\r\n@Injectable()\r\nexport class RuleService {\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate configurationService: RuleConfigurationService\r\n\t) {}\r\n\r\n\t// add(): Observable<TestModel> {\r\n\t// \t// const model = new AddRuleApiModel.Request(data);\r\n\t// \t// return this.configurationService.config$\r\n\t// \t// \t.filter(config => config.endpoints.addRule != \"\")\r\n\t// \t// \t.take(1)\r\n\t// \t// \t.switchMap(config => this.http.post(config.endpoints.addRule, model.getRequestBody()))\r\n\t// \t// \t.map((response: AddRuleApiModel.Response) => response.Result);\r\n\t// }\r\n}\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {\r\n\tMatExpansionModule,\r\n\tMatSnackBarModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSelectModule,\r\n\tMatInputModule,\r\n\tMatFormFieldModule,\r\n\tMatTabsModule,\r\n\tMatRadioModule,\r\n\tMatSlideToggleModule,\r\n\tMatDividerModule,\r\n\tMatCheckboxModule,\r\n\tMatTableModule\r\n} from \"@angular/material\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\n\r\nimport { RuleModuleConfig, MODULE_CONFIG_TOKEN } from \"./rule.config\";\r\nimport { RoutingModule } from \"./rule-routing.module\";\r\nimport { RuleReducers } from \"./rule.reducers\";\r\nimport { RuleComponent } from \"./rule.component\";\r\nimport { RuleAnchorDirective } from \"./rule-anchor/rule-anchor.directive\";\r\nimport { GwtViewComponent } from \"./gwt-view/gwt-view.component\";\r\nimport { StepLoaderDirective } from \"./step-loader/step-loader.directive\";\r\nimport { ScenariosDbEffects } from \"./db/scenario-db.effects\";\r\nimport { RulesListEffects } from \"./db/rule-db.effects\";\r\nimport { GwtModeButtonComponent } from \"./mode-button/mode-button.component\";\r\nimport { RuleService } from \"./services/rule.service\";\r\nimport { RuleConfigurationService } from \"./services/rule-configuration.service\";\r\nimport { ScenarioService } from \"./services/scenario.service\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tHttpClientModule,\r\n\t\tFormsModule,\r\n\t\tRouterModule,\r\n\t\tCommonModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatTableModule,\r\n\t\tMatSelectModule,\r\n\t\tMatInputModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatTabsModule,\r\n\t\tMatDividerModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatRadioModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tReactiveFormsModule,\r\n\t\tBrowserAnimationsModule\r\n\t],\r\n\tdeclarations: [ RuleComponent, RuleAnchorDirective, GwtViewComponent, StepLoaderDirective, GwtModeButtonComponent ],\r\n\tentryComponents: [ GwtViewComponent ],\r\n\texports: [ RuleAnchorDirective, GwtModeButtonComponent ]\r\n})\r\nexport class RuleModule {\r\n\tstatic forRoot(config?: RuleModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: RootRuleModule,\r\n\t\t\tproviders: [\r\n\t\t\t\t{ provide: MODULE_CONFIG_TOKEN, useValue: config || {} },\r\n\t\t\t\tRuleService,\r\n\t\t\t\tRuleConfigurationService,\r\n\t\t\t\tScenarioService\r\n\t\t\t]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRuleModule,\r\n\t\tStoreModule.forFeature(\"rule\", RuleReducers),\r\n\t\tEffectsModule.forFeature([ RulesListEffects, ScenariosDbEffects ]),\r\n\t\tRoutingModule\r\n\t],\r\n\texports: [ RuleModule ]\r\n})\r\nexport class RootRuleModule {}\r\n"]}