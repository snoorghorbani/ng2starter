import { OnInit, Injector, OnDestroy } from "@angular/core";
import { Store } from "@ngrx/store";
import { Observable, BehaviorSubject, Subject } from "rxjs";
import { FormGroup } from "@angular/forms";
import { RuleConfigurationService } from "../services/rule-configuration.service";
import { GwtStep } from "../models/gwt-step.model";
import { GwtScenarioModel } from "../models/gwt-scenario.model";
import { AppState } from "../rule.reducers";
import { StepLoaderDirective } from "../step-loader/step-loader.directive";
import { ScenarioService } from "../services/scenario.service";
export declare class GwtViewComponent implements OnInit, OnDestroy {
    private store;
    private configService;
    private scenarioService;
    private injector;
    private data;
    unsubscribe: Subject<void>;
    steps$: Observable<GwtStep[]>;
    steps: GwtStep[];
    scenario$: BehaviorSubject<GwtScenarioModel>;
    scenarios$: BehaviorSubject<GwtScenarioModel[]>;
    scenarioFormGroup: FormGroup;
    features$: string[];
    stepLoaders: StepLoaderDirective[];
    constructor(store: Store<AppState>, configService: RuleConfigurationService, scenarioService: ScenarioService, injector: Injector, data: any);
    ngOnInit(): void;
    ngOnDestroy(): void;
    save(): void;
    addStepToScenario(step: GwtStep): void;
    deleteStepFromScenario(step: GwtStep): void;
    decScenarioStepPriority(step: GwtStep): void;
    incScenarioStepPriority(step: GwtStep): void;
    addNewScenario(): void;
    activeScenario(scenario: GwtScenarioModel): void;
    _load_scenario_and_map_scenario_step_to_steps_class(): void;
    _create_scenario_form_group(): void;
    _reset_scenario_form_group_and_patch_with_active_scenario(): void;
    _init_features_list(): void;
}
