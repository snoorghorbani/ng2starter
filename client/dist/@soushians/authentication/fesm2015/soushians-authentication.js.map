{
  "version": 3,
  "file": "soushians-authentication.js",
  "sources": [
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/authentication.module.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/effects/authentication.effects.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/effects/signin.effects.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/interceptors/unauthorized.interceptor.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/interceptors/with-credential.interceptor.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/dump-components/signin/signin.component.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/authentication-routing.module.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/smart-components/signin-container/signin-container.component.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/smart-components/authentication-container/authentication-container.component.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/routing-guards/signin.guard.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/routing-guards/user.guard.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/routing-guards/agent.guard.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/routing-guards/admin.guard.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/reducers/index.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/reducers/user.reducer.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/services/signin.service.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/services/authentication-configuration.service.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/authentication.config.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/actions/signin.actions.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/actions/captcha.actions.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/actions/authentication.actions.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/models/signin.api-model.ts",
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/models/user.model.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders, InjectionToken, Injectable, Inject } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport {\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSnackBarModule,\r\n\tMatSidenavModule,\r\n\tMatExpansionModule,\r\n\tMatSelectModule,\r\n\tMatFormFieldModule,\r\n\tMatListModule,\r\n\tMatMenuModule,\r\n\tMatRadioModule,\r\n\tMatInputModule,\r\n\tMatToolbarModule,\r\n\tMatDatepickerModule,\r\n\tMatProgressBarModule\r\n} from \"@angular/material\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\n\r\nimport { NgsFormModule } from \"@soushians/form\";\r\n\r\nimport { AuthenticationModuleConfig, MODULE_CONFIG_TOKEN } from \"./authentication.config\";\r\nimport { AuthenticationRoutingModule } from \"./authentication-routing.module\";\r\nimport { SigninContainerComponent } from \"./smart-components/signin-container/signin-container.component\";\r\nimport { SigninComponent } from \"./dump-components/signin/signin.component\";\r\nimport { AuthenticationContainerComponent } from \"./smart-components/authentication-container/authentication-container.component\";\r\n\r\nimport { WithCredentialInterceptor } from \"./interceptors/with-credential.interceptor\";\r\nimport { UnauthorizedInterceptor } from \"./interceptors/unauthorized.interceptor\";\r\n\r\nimport { AuthenticationReducers } from \"./reducers\";\r\n\r\nimport { SigninEffects } from \"./effects/signin.effects\";\r\nimport { AuthenticationEffects } from \"./effects/authentication.effects\";\r\nimport { SigninService } from \"./services/signin.service\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tRouterModule,\r\n\t\tFormsModule,\r\n\t\tHttpClientModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatSidenavModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSelectModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatListModule,\r\n\t\tMatMenuModule,\r\n\t\tMatRadioModule,\r\n\t\tMatInputModule,\r\n\t\tMatToolbarModule,\r\n\t\tMatDatepickerModule,\r\n\t\tMatProgressBarModule,\r\n\t\tBrowserAnimationsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tFormsModule,\r\n\t\tNgsFormModule\r\n\t],\r\n\tdeclarations: [ SigninContainerComponent, SigninComponent, AuthenticationContainerComponent ],\r\n\tproviders: [],\r\n\texports: []\r\n})\r\nexport class NgsAuthenticationModule {\r\n\tstatic forRoot(config: AuthenticationModuleConfig = <AuthenticationModuleConfig>{}): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: RootNgsAuthenticationModule,\r\n\t\t\tproviders: [\r\n\t\t\t\t{ provide: MODULE_CONFIG_TOKEN, useValue: config },\r\n\t\t\t\t{\r\n\t\t\t\t\tprovide: HTTP_INTERCEPTORS,\r\n\t\t\t\t\tuseClass: UnauthorizedInterceptor,\r\n\t\t\t\t\tmulti: true\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tprovide: HTTP_INTERCEPTORS,\r\n\t\t\t\t\tuseClass: WithCredentialInterceptor,\r\n\t\t\t\t\tmulti: true\r\n\t\t\t\t},\r\n\t\t\t\tSigninService\r\n\t\t\t]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tStoreModule.forFeature(\"authentication\", AuthenticationReducers),\r\n\t\tEffectsModule.forFeature([ SigninEffects, AuthenticationEffects ]),\r\n\t\tAuthenticationRoutingModule,\r\n\t\tNgsAuthenticationModule\r\n\t]\r\n})\r\nexport class RootNgsAuthenticationModule {}\r\n",
    "import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport \"rxjs/add/operator/map\";\r\nimport \"rxjs/add/operator/mergeMap\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\n\r\nimport { SignInActionTypes, FailedHappened, ProgressingStarted, ProgressingFinished } from \"../actions\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class AuthenticationEffects {\r\n\tconstructor(private actions$: Actions<any>, private router: Router) {}\r\n\r\n\t@Effect()\r\n\tdispachProgressingStarted$ = this.actions$\r\n\t\t.ofType(SignInActionTypes.SIGNIN)\r\n\t\t.pipe(map(() => new ProgressingStarted()));\r\n\r\n\t@Effect()\r\n\tdispachProgressingFinished$ = this.actions$\r\n\t\t.ofType(SignInActionTypes.SIGNIN_FAILURE, SignInActionTypes.SIGNIN_SUCCEED)\r\n\t\t.pipe(map(() => new ProgressingFinished()));\r\n}\r\n",
    "import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/map\";\r\nimport \"rxjs/add/operator/mergeMap\";\r\nimport \"rxjs/add/operator/do\";\r\nimport \"rxjs/add/operator/catch\";\r\nimport \"rxjs/add/observable/empty\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { RouterAction } from \"@ngrx/router-store\";\r\nimport { switchMap, map, catchError, tap } from \"rxjs/operators\";\r\n\r\nimport { SignInActionTypes, SigninSecceed, SigninFailed, SigninRedirect, Signin } from \"../actions/signin.actions\";\r\n// import * as AuthActions from '../actions';\r\n\r\n//import {  } from '../reducers';\r\nimport { SigninService } from \"../services/signin.service\";\r\nimport { NewCaptcha } from \"../actions\";\r\nimport { Signin_ApiModel } from \"../models\";\r\n\r\n@Injectable()\r\nexport class SigninEffects {\r\n\tconstructor(private actions$: Actions, private router: Router, public signinService: SigninService) {}\r\n\r\n\t@Effect()\r\n\tpreSignUpStart$ = this.actions$\r\n\t\t.ofType(SignInActionTypes.SIGNIN)\r\n\t\t.pipe(\r\n\t\t\tswitchMap((action: Signin) => this.signinService.signin(action.payload)),\r\n\t\t\tmap(user => new SigninSecceed(user)),\r\n\t\t\tcatchError(error => Observable.of(new SigninFailed(error)))\r\n\t\t);\r\n\r\n\t@Effect({ dispatch: false })\r\n\tSigninSucceed$ = this.actions$\r\n\t\t.ofType(SignInActionTypes.SIGNIN_SUCCEED)\r\n\t\t.pipe(tap((data: any) => this.router.navigate([ \"/\" ])));\r\n\r\n\t@Effect() AfterSigninFiled$ = this.actions$.ofType(SignInActionTypes.SIGNIN_FAILURE).map(() => new NewCaptcha());\r\n\r\n\t@Effect({ dispatch: false })\r\n\tredirectToLoginPage$ = this.actions$\r\n\t\t.ofType(SignInActionTypes.SIGNIN_REDIRECT, SignInActionTypes.SIGNOUT)\r\n\t\t.pipe(tap(authed => this.router.navigate([ \"auth/signin\" ])));\r\n\r\n\t// TODO:\r\n\t// @Effect({ dispatch: false })\r\n\t// signout$ = this.actions$\r\n\t// \t.ofType(SignInActionTypes.SIGNOUT)\r\n\t// \t.map((data) => this.signinService.signout().subscribe((response) => null));\r\n}\r\n",
    "import \"rxjs/add/operator/do\";\r\nimport { HttpInterceptor } from \"@angular/common/http\";\r\nimport { HttpRequest } from \"@angular/common/http\";\r\nimport { HttpHandler } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { HttpEvent } from \"@angular/common/http\";\r\nimport { HttpResponse } from \"@angular/common/http\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\n\r\nimport { Store } from \"@ngrx/store\";\r\nimport { SignoutAction } from \"../actions\";\r\nimport * as fromAuth from \"../reducers\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport class UnauthorizedInterceptor implements HttpInterceptor {\r\n\tconstructor(\r\n\t\tprivate router: Router,\r\n\t\tprivate store: Store<fromAuth.FeatureState> // private signinService: SigninService\r\n\t) {}\r\n\tintercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\t\treturn next\r\n\t\t\t.handle(request)\r\n\t\t\t.map((event: HttpEvent<any>) => {\r\n\t\t\t\tif (event instanceof HttpResponse) return event;\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tif (!(err instanceof HttpErrorResponse)) return;\r\n\t\t\t\tif (err.status != 401) return;\r\n\t\t\t\tif (err.url.includes(\"logout\")) return;\r\n\r\n\t\t\t\tthis.store.dispatch(new SignoutAction());\r\n\r\n\t\t\t\treturn Observable.throw(\"Unauthorized\");\r\n\t\t\t});\r\n\t}\r\n}\r\n",
    "import \"rxjs/add/operator/do\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor } from \"@angular/common/http\";\r\nimport { HttpRequest } from \"@angular/common/http\";\r\nimport { HttpHandler } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { HttpEvent } from \"@angular/common/http\";\r\nimport { HttpResponse } from \"@angular/common/http\";\r\nimport { AuthenticationConfigurationService } from \"../services/authentication-configuration.service\";\r\n// import { environment } from \"../../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class WithCredentialInterceptor implements HttpInterceptor {\r\n\tconstructor(private configurationService: AuthenticationConfigurationService) {}\r\n\tintercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\t\t// if (!this.configurationService.config.env.production)\r\n\t\t(request as any).withCredentials = true;\r\n\t\treturn next.handle(request);\r\n\t}\r\n}\r\n",
    "import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs/Rx\";\r\n\r\n@Component({\r\n\tselector: \"auth-signin\",\r\n\ttemplate: `<div fxLayout='row' fxLayoutAlign=\"center center\">\r\n    <ngs-form-view \r\n        [id]=\"formId\"\r\n        (accept)=\"signin($event)\"\r\n    ></ngs-form-view>\r\n</div>\r\n<!-- <div>\r\n    <a fxFlex=\"nogrow\" routerLink=\"/user/password/reset\" mat-raised-button fxFlexFill>کلمه عبور خود را فراموش کرده اید؟</a>\r\n</div> -->`,\r\n\tstyles: [``]\r\n})\r\nexport class SigninComponent {\r\n\t@Output() signedin = new EventEmitter();\r\n\r\n\t@Input() formId: string;\r\n\r\n\tsignin(formGroup: FormGroup) {\r\n\t\tif (!formGroup.valid) return;\r\n\t\tthis.signedin.emit(formGroup.value);\r\n\t}\r\n\r\n\tconstructor() {}\r\n}\r\n",
    "import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { SigninGuard } from \"./routing-guards\";\r\nimport { AuthenticationContainerComponent } from \"./smart-components/authentication-container/authentication-container.component\";\r\nimport { SigninContainerComponent } from \"./smart-components/signin-container/signin-container.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"auth\",\r\n\t\tcomponent: AuthenticationContainerComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"signin\",\r\n\t\t\t\tcanActivate: [ SigninGuard ],\r\n\t\t\t\tcomponent: SigninContainerComponent\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const AuthenticationRoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n",
    "import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { Signin } from \"../../actions\";\r\nimport { CaptchaModel } from \"../../models\";\r\nimport { AuthenticationConfigurationService } from \"../../services/authentication-configuration.service\";\r\nimport { FeatureState } from \"../../reducers\";\r\n\r\n@Component({\r\n\ttemplate: `\r\n        <auth-signin \r\n                [formId]='(formId$ | async)'\r\n                (signedin)=\"signIn($event)\"\r\n        ></auth-signin>\r\n  `\r\n})\r\nexport class SigninContainerComponent {\r\n\tformId$: Observable<string>;\r\n\tconstructor(private configurationService: AuthenticationConfigurationService, private store: Store<FeatureState>) {\r\n\t\tthis.formId$ = this.configurationService.config$.map(config => config.forms.signIn);\r\n\t}\r\n\r\n\tsignIn(formValue: any) {\r\n\t\tthis.store.dispatch(new Signin(formValue));\r\n\t}\r\n}\r\n",
    "import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n\ttemplate: `\r\n          <router-outlet></router-outlet>\r\n        `\r\n})\r\nexport class AuthenticationContainerComponent {}\r\n",
    "import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, RouterStateSnapshot, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { FeatureState, getLoggedIn } from \"../reducers\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class SigninGuard implements CanActivate {\r\n\tconstructor(private store: Store<FeatureState>) {}\r\n\r\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n\t\treturn this.store.select(getLoggedIn).take(1).map(authed => !authed);\r\n\t}\r\n}\r\n",
    "import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, RouterStateSnapshot, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { FeatureState, getUser } from \"../reducers\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class UserGuard implements CanActivate {\r\n\tconstructor(private store: Store<FeatureState>) {}\r\n\r\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n\t\treturn this.store.select(getUser).take(1).map(user => (user.Roles as any).includes(\"User\"));\r\n\t}\r\n}\r\n",
    "import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, RouterStateSnapshot, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { FeatureState, getUser } from \"../reducers\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class AgentGuard implements CanActivate {\r\n\tconstructor(private store: Store<FeatureState>) {}\r\n\r\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n\t\treturn this.store.select(getUser).take(1).map(user => {\r\n\t\t\tvar res = (user.Roles as any).includes(\"Agent\");\r\n\t\t\t// !res && this.store.dispatch(new SigninRedirect());\r\n\t\t\treturn res;\r\n\t\t});\r\n\t}\r\n}\r\n",
    "import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, RouterStateSnapshot, ActivatedRouteSnapshot } from \"@angular/router\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { FeatureState, getUser } from \"../reducers\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n\tconstructor(private store: Store<FeatureState>) {}\r\n\r\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n\t\treturn this.store.select(getUser).take(1).map(user => {\r\n\t\t\tvar res = (user.Roles as any).includes(\"Admin\");\r\n\t\t\t// !res && this.store.dispatch(new SigninRedirect());\r\n\t\t\treturn res;\r\n\t\t});\r\n\t}\r\n}\r\n",
    "import { createSelector, createFeatureSelector, MemoizedSelector } from \"@ngrx/store\";\r\n\r\nimport * as userReducer from \"./user.reducer\";\r\n// import * as captchaReducer from \"./captcha.reducer\";\r\n\r\nimport { UserModel } from \"../models/user.model\";\r\n\r\nexport interface AuthenticationState {\r\n\tuserStatus: userReducer.State;\r\n\t// captcha: captchaReducer.State;\r\n}\r\n\r\nexport interface FeatureState {\r\n\t\"authentication\": AuthenticationState;\r\n}\r\n\r\nexport const AuthenticationReducers = {\r\n\tuserStatus: userReducer.UserReducer\r\n\t// captcha: captchaReducer.CaptchaReducer\r\n};\r\n\r\n//#region selectors\r\n\r\nexport const selectAuthenticationState = createFeatureSelector<AuthenticationState>(\"authentication\");\r\n\r\nexport const selectAuthState = createSelector(\r\n\tselectAuthenticationState,\r\n\t(state: AuthenticationState) => state.userStatus\r\n);\r\n\r\nexport const getLoggedIn = createSelector(selectAuthState, userReducer.getLoggedIn);\r\nexport const getUser = createSelector(selectAuthState, userReducer.getUser);\r\n\r\n// export const selectCaptchaState = createSelector(selectAuthenticationState, (state: AuthenticationState) => {\r\n// \treturn state.captcha;\r\n// });\r\n\r\n// export const getCaptcha = createSelector(selectCaptchaState, captchaReducer.getCaptcha);\r\n",
    "import { SigninAction, SignInActionTypes } from \"../actions/signin.actions\";\r\nimport { UserModel } from \"../models/user.model\";\r\n\r\nexport interface State {\r\n\tloggedIn: boolean;\r\n\tuser: UserModel;\r\n}\r\n\r\nexport const initialState: State = {\r\n\tloggedIn: false,\r\n\tuser: new UserModel({ Id: 1 })\r\n};\r\n\r\nexport function UserReducer(state = initialState, action: SigninAction): State {\r\n\tswitch (action.type) {\r\n\t\tcase SignInActionTypes.SIGNIN_SUCCEED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloggedIn: true,\r\n\t\t\t\tuser: action.payload\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase SignInActionTypes.SIGNOUT: {\r\n\t\t\treturn initialState;\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//#region  selectors\r\nexport const getLoggedIn = (state: State) => state.loggedIn;\r\nexport const getUser = (state: State) => state.user;\r\n//#endregion\r\n",
    "import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport { MatSnackBar } from \"@angular/material\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { map, switchMap, take, filter, tap } from \"rxjs/operators\";\r\n\r\n// import { environment } from \"../../environments/environment\";\r\n\r\nimport { Signin_ApiModel, UserModel } from \"../models\";\r\nimport { AuthenticationConfigurationService } from \"./authentication-configuration.service\";\r\n\r\nconst SIGNIN_RESPONSE = \"[APP] SIGNIN_RESPONSE\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class SigninService {\r\n\t// SigninResponse = new BehaviorSubject<UserModel>(new UserModel());\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate configurationService: AuthenticationConfigurationService,\r\n\t\tprivate snackBar: MatSnackBar\r\n\t) {}\r\n\r\n\tsignin(model: any): Observable<UserModel> {\r\n\t\treturn this.configurationService.config$.pipe(\r\n\t\t\tfilter(config => config.endpoints.signIn != \"\"),\r\n\t\t\ttake(1),\r\n\t\t\tswitchMap(config =>\r\n\t\t\t\tthis.http.post<Signin_ApiModel.Response>(this.configurationService.config.endpoints.signIn, model)\r\n\t\t\t),\r\n\t\t\tmap(response => {\r\n\t\t\t\tconst userModel = new Signin_ApiModel.Response(response).extractData();\r\n\t\t\t\t// this.SigninResponse.next(userModel);\r\n\t\t\t\treturn userModel;\r\n\t\t\t})\r\n\t\t);\r\n\t\t// .catch(err => {\r\n\t\t// \tif (err.status == 400) {\r\n\t\t// \t\tthis.snackBar.open(\"کد امنیتی اشتباه است\", null, {\r\n\t\t// \t\t\tduration: 5000\r\n\t\t// \t\t});\r\n\t\t// \t} else if (err.status == 403) {\r\n\t\t// \t\tthis.snackBar.open(\" شماره موبایل و یا کلمه عبور اشتباه است\", null, {\r\n\t\t// \t\t\tduration: 5000\r\n\t\t// \t\t});\r\n\t\t// \t}\r\n\t\t// \treturn Observable.throw(err);\r\n\t\t// });\r\n\t}\r\n\r\n\tsignout(): Observable<any> {\r\n\t\tlocalStorage.removeItem(SIGNIN_RESPONSE);\r\n\t\treturn this.http\r\n\t\t\t.get(this.configurationService.config.endpoints.signOut, {\r\n\t\t\t\twithCredentials: true\r\n\t\t\t})\r\n\t\t\t.map(response => response);\r\n\t}\r\n}\r\n\r\nexport var SigninServiceStub = {};\r\n",
    "import { Injectable, Inject } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\nimport { getAuthenticationModuleConfig } from \"@soushians/config\";\r\n\r\nimport { MODULE_CONFIG_TOKEN, AuthenticationModuleConfig, MODULE_DEFAULT_CONFIG } from \"../authentication.config\";\r\nimport { AuthenticationState } from \"../reducers\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class AuthenticationConfigurationService {\r\n\tprivate _config: AuthenticationModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(this._config);\r\n\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile: any, private store: Store<AuthenticationState>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\tthis.store.select(getAuthenticationModuleConfig).subscribe(storeConfig => {\r\n\t\t\tif (!storeConfig) return;\r\n\t\t\tthis._config = Object.assign({}, this._config, storeConfig.Config);\r\n\t\t\tthis.config$.next(this._config);\r\n\t\t});\r\n\t}\r\n}\r\n",
    "import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface AuthenticationModuleConfig {\r\n\tendpoints?: {\r\n\t\tsignOut?: string;\r\n\t\tsignIn?: string;\r\n\t\tuserInformation?: string;\r\n\t};\r\n\tforms?: {\r\n\t\tsignIn: string;\r\n\t};\r\n\tenv: {\r\n\t\tproduction: boolean;\r\n\t};\r\n}\r\n\r\nexport const MODULE_DEFAULT_CONFIG: AuthenticationModuleConfig = {\r\n\tendpoints: {\r\n\t\tsignOut: \"\",\r\n\t\tsignIn: \"\",\r\n\t\tuserInformation: \"\"\r\n\t},\r\n\tforms: {\r\n\t\tsignIn: \"\"\r\n\t},\r\n\tenv: {\r\n\t\tproduction: false\r\n\t}\r\n};\r\n\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<AuthenticationModuleConfig>(\"ModuleConfig\");\r\n",
    "import { Action } from \"@ngrx/store\";\r\nimport { Signin_ApiModel } from \"../models\";\r\n\r\nexport enum SignInActionTypes {\r\n\tSIGNIN = \"[Auth] Signin\",\r\n\tSIGNOUT = \"[Auth] Signout\",\r\n\tSIGNIN_SUCCEED = \"[Auth] Signin Success\",\r\n\tSIGNIN_FAILURE = \"[Auth] Signin Failure\",\r\n\tSIGNIN_REDIRECT = \"[Auth] Signin Redirect\"\r\n}\r\n\r\nexport class Signin implements Action {\r\n\treadonly type = SignInActionTypes.SIGNIN;\r\n\tconstructor(public payload: Signin_ApiModel.Request) {}\r\n}\r\n\r\nexport class SigninSecceed implements Action {\r\n\treadonly type = SignInActionTypes.SIGNIN_SUCCEED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport class SigninFailed implements Action {\r\n\treadonly type = SignInActionTypes.SIGNIN_FAILURE;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport class SigninRedirect implements Action {\r\n\treadonly type = SignInActionTypes.SIGNIN_REDIRECT;\r\n}\r\n\r\nexport class SignoutAction implements Action {\r\n\treadonly type = SignInActionTypes.SIGNOUT;\r\n}\r\n\r\nexport type SigninAction = Signin | SigninSecceed | SigninFailed | SigninRedirect | SignoutAction;\r\n",
    "import { Action } from '@ngrx/store';\r\n\r\nimport { TokenModel } from '../models';\r\n\r\nexport const NEW_CAPTCHA = '[captcha] new captcha';\r\nexport const TOKEN_REQUESTED = '[captcha] token_requested';\r\nexport const TOKEN_RECEIVED = '[captcha] token_received';\r\nexport const CAPTCHA_IMAGE_REQUESTED = '[captcha] captcha_image_requested';\r\nexport const CAPTCHA_IMAGE_LOADED = '[captcha] captcha_image_loaded';\r\nexport const CAPTCHA_ENTERED = '[captcha] CAPTCHA_ENTERED';\r\nexport const CLEAR_CAPTCHA = '[captcha] CLEAR_CAPTCHA';\r\n\r\nexport class NewCaptcha implements Action {\r\n        readonly type = NEW_CAPTCHA;\r\n}\r\nexport class TokenRequested implements Action {\r\n        readonly type = TOKEN_REQUESTED;\r\n}\r\nexport class TokenReceived implements Action {\r\n        readonly type = TOKEN_RECEIVED;\r\n        constructor(public payload: TokenModel) { }\r\n}\r\nexport class CaptchaImageRequested implements Action {\r\n        readonly type = CAPTCHA_IMAGE_REQUESTED;\r\n}\r\nexport class CaptchaImageLoaded implements Action {\r\n        readonly type = CAPTCHA_IMAGE_LOADED;\r\n}\r\nexport class CaptchaEntered implements Action {\r\n        readonly type = CAPTCHA_ENTERED;\r\n        constructor(public payload: string) { }\r\n}\r\nexport class ClearCaptcha implements Action {\r\n        readonly type = CLEAR_CAPTCHA;\r\n}\r\nexport type CaptchaAction =\r\n        | NewCaptcha\r\n        | TokenRequested\r\n        | TokenReceived\r\n        | CaptchaImageRequested\r\n        | CaptchaImageLoaded\r\n        | CaptchaEntered\r\n        | ClearCaptcha;",
    "import { Action } from '@ngrx/store';\r\n\r\nexport const enum AuthenticationActionTypes {\r\n\tPROGRESSING_STARTED = '[AUTHENTICATION] PROGRESSING_STARTED',\r\n\tPROGRESSING_FINISHED = '[AUTHENTICATION] PROGRESSING_FINISHED',\r\n\tFAILED_HAPPENED = '[AUTHENTICATION] FAILED_HAPPENED'\r\n}\r\n\r\nexport class ProgressingStarted implements Action {\r\n\treadonly type = AuthenticationActionTypes.PROGRESSING_STARTED;\r\n}\r\nexport class ProgressingFinished implements Action {\r\n\treadonly type = AuthenticationActionTypes.PROGRESSING_FINISHED;\r\n}\r\nexport class FailedHappened implements Action {\r\n\treadonly type = AuthenticationActionTypes.FAILED_HAPPENED;\r\n\tconstructor(public payload: any) {}\r\n}\r\n\r\nexport type AuthenticationAction = ProgressingStarted | ProgressingFinished | FailedHappened;\r\n",
    "import { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { HttpRequestBaseModel, HttpResponseBaseModel } from \"@soushians/shared\";\r\nimport { UserModel } from \"../models\";\r\nexport namespace Signin_ApiModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {}\r\n\r\n\texport class Response implements HttpResponseBaseModel<Response> {\r\n\t\tResult: {\r\n\t\t\tUser: UserModel;\r\n\t\t};\r\n\r\n\t\tconstructor(params: Response) {\r\n\t\t\tObject.keys(params).forEach(key => ((<any>this)[key] = (<any>params)[key]));\r\n\t\t}\r\n\t\textractData(): UserModel {\r\n\t\t\treturn this.Result.User;\r\n\t\t}\r\n\t}\r\n}\r\n",
    "export class UserModel {\r\n\t_id: string;\r\n\t// FirstName: string;\r\n\t// LastName: string;\r\n\tUsername: string;\r\n\t// MobileNumber: string;\r\n\t// Sex: string;\r\n\t// Birthdate: string;\r\n\tEmail: string;\r\n\t// IdentificationNo: string;\r\n\t// IdentifierType: string;\r\n\t// RegisterDate: string;\r\n\t// UserType: string;\r\n\tRoles: string[] = [];\r\n\r\n\tconstructor(params?: any) {\r\n\t\tparams &&\r\n\t\t\tObject.keys(params).forEach(key => {\r\n\t\t\t\tif (key in params) (this as any)[key] = params[key];\r\n\t\t\t});\r\n\t}\r\n}\r\n"
  ],
  "names": [
    "getLoggedIn",
    "getUser",
    "userReducer.getUser",
    "userReducer.getLoggedIn",
    "userReducer.UserReducer"
  ],
  "mappings": "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"
}
