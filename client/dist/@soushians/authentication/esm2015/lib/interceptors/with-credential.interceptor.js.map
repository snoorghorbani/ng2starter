{
  "version": 3,
  "file": "with-credential.interceptor.js",
  "sources": [
    "ng://@soushians/authentication/projects/soushians/authentication/src/lib/interceptors/with-credential.interceptor.ts"
  ],
  "sourcesContent": [
    "import \"rxjs/add/operator/do\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor } from \"@angular/common/http\";\r\nimport { HttpRequest } from \"@angular/common/http\";\r\nimport { HttpHandler } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { HttpEvent } from \"@angular/common/http\";\r\nimport { HttpResponse } from \"@angular/common/http\";\r\nimport { AuthenticationConfigurationService } from \"../services/authentication-configuration.service\";\r\n// import { environment } from \"../../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class WithCredentialInterceptor implements HttpInterceptor {\r\n\tconstructor(private configurationService: AuthenticationConfigurationService) {}\r\n\tintercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\t\t// if (!this.configurationService.config.env.production)\r\n\t\t(request as any).withCredentials = true;\r\n\t\treturn next.handle(request);\r\n\t}\r\n}\r\n"
  ],
  "names": [],
  "mappings": ";;;;AAAA,OAAO,sBAAsB,CAAC;AAC9B,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAO3C,OAAO,EAAE,kCAAkC,EAAE,MAAM,kDAAkD,CAAC;AAItG,MAAM;;;;IACL,YAAoB,oBAAwD;QAAxD,yBAAoB,GAApB,oBAAoB,CAAoC;KAAI;;;;;;IAChF,SAAS,CAAC,OAAyB,EAAE,IAAiB;;QAErD,mBAAC,OAAc,EAAC,CAAC,eAAe,GAAG,IAAI,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAC5B;;;YAPD,UAAU;;;;YAHF,kCAAkC"
}
