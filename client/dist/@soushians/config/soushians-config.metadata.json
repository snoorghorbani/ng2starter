{"__symbolic":"module","version":4,"exports":[{"from":"./lib/reducers"}],"metadata":{"ConfigModuleConfig":{"__symbolic":"interface"},"MODULE_DEFAULT_CONFIG":{"dev_api_host":"http://localhost:3000","prod_api_host":"http://5.196.149.107:3000","env":{"production":false}},"MODULE_CONFIG_TOKEN":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":18,"character":39},"arguments":["UserModuleConfig"]},"ConfigService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":11,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":19,"character":16},{"__symbolic":"reference","name":"Store","module":"@ngrx/store","arguments":[{"__symbolic":"reference","name":"ɵa"}]},{"__symbolic":"reference","name":"ɵb"}]}],"getConfigs":[{"__symbolic":"method"}],"getConfigByName":[{"__symbolic":"method"}],"editConfig":[{"__symbolic":"method"}],"getLayoutConfigs":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"NgsConfigModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":43,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":45,"character":2},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":46,"character":2},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":47,"character":2},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":48,"character":2},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":49,"character":2},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":50,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatIconModule","line":51,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatButtonModule","line":52,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatCardModule","line":53,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBarModule","line":54,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatSidenavModule","line":55,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatExpansionModule","line":56,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatSelectModule","line":57,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatFormFieldModule","line":58,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatListModule","line":59,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatMenuModule","line":60,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatRadioModule","line":61,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatInputModule","line":62,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatSlideToggleModule","line":63,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatToolbarModule","line":64,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatDatepickerModule","line":65,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatProgressBarModule","line":66,"character":2},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"BrowserAnimationsModule","line":67,"character":2},{"__symbolic":"reference","name":"ɵc"}],"declarations":[{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵo"}],"providers":[]}]}],"members":{},"statics":{"forRoot":{"__symbolic":"function","parameters":["config"],"value":{"ngModule":{"__symbolic":"reference","name":"RootNgsConfigModule"},"providers":[{"provide":{"__symbolic":"reference","name":"MODULE_CONFIG_TOKEN"},"useValue":{"__symbolic":"reference","name":"config"}}]}}}},"RootNgsConfigModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":91,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","name":"NgsConfigModule"},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@ngrx/store","name":"StoreModule","line":94,"character":2},"member":"forFeature"},"arguments":["config",{"__symbolic":"reference","name":"ɵp"}]},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@ngrx/effects","name":"EffectsModule","line":95,"character":2},"member":"forFeature"},"arguments":[[{"__symbolic":"reference","name":"ɵq"}]]}],"exports":[{"__symbolic":"reference","name":"NgsConfigModule"}]}]}],"members":{}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":8,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":18,"character":14},"arguments":[{"__symbolic":"reference","name":"MODULE_CONFIG_TOKEN"}]}],null],"parameters":[{"__symbolic":"reference","name":"ConfigModuleConfig"},{"__symbolic":"reference","name":"Store","module":"@ngrx/store","arguments":[{"__symbolic":"reference","name":"any"}]}]}]},"statics":{"ngInjectableDef":{}}},"ɵc":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":22,"character":50},"member":"forChild"},"arguments":[[{"path":"configs","component":{"__symbolic":"reference","name":"ɵd"},"children":[{"path":"","component":{"__symbolic":"reference","name":"ɵe"}},{"path":"edit/:name","component":{"__symbolic":"reference","name":"ɵf"}}]}]]},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"configs","template":"<div fxFlexLayout=\"row\" fxLayoutWrap fxLayoutAlign=\"center center\">\n  <mat-card class=\"config-box\" *ngFor=\"let config of (configs | async)\" [fxFlex]=\"50\">\n      <h3>\n        <a [routerLink]=\"['edit' ,  config.Name]\">\n          <mat-icon aria-label=\"edit config\">edit</mat-icon>\n        </a>\n        {{config.Name}}\n      </h3>\n  </mat-card>\n</div>","styles":[":host{width:100%}.config-box{margin:15px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Store","module":"@ngrx/store","arguments":[{"__symbolic":"reference","name":"ɵh"}]}]}]}},"ɵi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"config-config-edit","template":"<div >\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"edit()\" fxLayout=\"column\">\n    <mat-card>\n      <mat-card-content>\n          <dynamic-config-component-selector (configChanged)=\"configChanged($event)\" [data]=\"partialConfigModel\"></dynamic-config-component-selector>\n      </mat-card-content>\n      <mat-card-actions fxLayoutAlign=\"center center\">\n        <button fxFlex=\"nogrow\" type=\"submit\" mat-raised-button color=\"primary\" (click)=\"edit\">ویرایش</button>\n        <button fxFlex=\"nogrow\" type=\"button\" routerLink=\"/configs\" mat-raised-button>بازگشت</button>\n      </mat-card-actions>\n    </mat-card>\n  </form>\n</div>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ConfigService"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":29,"character":72},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":29,"character":100}]}],"addControl":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"configChanged":[{"__symbolic":"method"}],"edit":[{"__symbolic":"method"}]}},"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"config-app-config","template":"<div [formGroup]=\"formGroup\">\n    <mat-form-field>\n        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"نام پروژه\" formControlName=\"AppTitle\">\n    </mat-form-field>\n</div>"}]}],"members":{"configFormGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":2}}]}],"configChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":21,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":22,"character":31}]}]}},"ɵk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"config-user-module-config","template":"<h2>Endpoints</h2>\n<div [formGroup]=\"formGroup.get('endpoints')\" fxLayout=\"column\">\n        <mat-form-field>\n            <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"change password\" formControlName=\"changePassword\">\n        </mat-form-field>\n        <mat-form-field>\n            <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"edit profile\" formControlName=\"editProfile\">\n        </mat-form-field>\n        <mat-form-field>\n            <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"get user info\" formControlName=\"getUserInfo\">\n        </mat-form-field>\n        <mat-form-field>\n            <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"Profile Information Endpoint\" formControlName=\"profileInformation\">\n        </mat-form-field>\n</div>\n<h2>Forms</h2>\n<div [formGroup]=\"formGroup.get('forms')\" fxLayout=\"column\">\n    <mat-form-field>\n        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"profile edit\" formControlName=\"profile_edit\">\n    </mat-form-field>\n            <!-- <ngs-form-selector (select)=\"setFormId($event,'signIn')\"></ngs-form-selector> -->\n</div>\n\n\n<h2 fxFlex=\"100\">\n    Dashobard Links\n    <button mat-icon-button color=\"primary\" (click)=\"addMenu()\">\n        <mat-icon aria-label=\"icon-button icon\">add</mat-icon>\n    </button>\n</h2>\n<div fxFlex=\"100\" *ngFor=\"let item of $any(formGroup.get('dashboardLinks')).controls\">\n    <div [formGroup]=\"item\">\n        <mat-form-field>\n            <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"route\" formControlName=\"route\">\n        </mat-form-field>\n        <mat-form-field>\n            <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"icon\" formControlName=\"icon\">\n        </mat-form-field>\n        <mat-form-field>\n            <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"title\" formControlName=\"title\">\n        </mat-form-field>\n    </div>\n</div>"}]}],"members":{"configFormGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":64,"character":2}}]}],"configChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":85,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":86,"character":31}]}],"addMenu":[{"__symbolic":"method"}]}},"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"template":"<div fxFlexLayout=\"row\" fxLayoutWrap fxLayoutAlign=\"center center\">\n    <div fxFlex=\"100\" fxFlexLayout=\"row\">\n        <div [formGroup]=\"formGroup\">\n            <mat-form-field>\n                <mat-select (change)=\"configChanged.emit(formGroup.value)\" placeholder=\"layout mode\" formControlName=\"layoutMode\" >\n                    <mat-option *ngFor=\"let item of layoutModes\" [value]=\"item\">{{item}}</mat-option>\n                </mat-select> \n            </mat-form-field>\n            <mat-slide-toggle  (change)=\"configChanged.emit(formGroup.value)\"  formControlName=\"showLeftNavBar\">show left navbar</mat-slide-toggle>\n            <mat-form-field>\n                <mat-select (change)=\"configChanged.emit(formGroup.value)\" placeholder=\"main side nav mode\" formControlName=\"mainSideNavMode\" >\n                    <mat-option *ngFor=\"let item of sideNavModes\" [value]=\"item\">{{item}}</mat-option>\n                </mat-select> \n            </mat-form-field>\n            <mat-slide-toggle  (change)=\"configChanged.emit(formGroup.value)\"  formControlName=\"showMainSidenav\">show main side nav</mat-slide-toggle>\n            <mat-slide-toggle  (change)=\"configChanged.emit(formGroup.value)\"  formControlName=\"stickyLeftNavBar\">sticky left navbar</mat-slide-toggle>\n            <mat-slide-toggle  (change)=\"configChanged.emit(formGroup.value)\"  formControlName=\"showSecondSideNav\">show second side nav</mat-slide-toggle>\n            <mat-form-field>\n                <mat-select (change)=\"configChanged.emit(formGroup.value)\" placeholder=\"second side nav mode\" formControlName=\"secondSideNavMode\" >\n                    <mat-option *ngFor=\"let item of sideNavModes\" [value]=\"item\">{{item}}</mat-option>\n                </mat-select> \n            </mat-form-field>\n        </div>\n    </div>\n\n    <h2 fxFlex=\"100\">\n        Menu Items\n        <button mat-icon-button color=\"primary\" (click)=\"addMenu()\">\n            <mat-icon aria-label=\"icon-button icon\">add</mat-icon>\n        </button>\n    </h2>\n    <div fxFlex=\"100\" *ngFor=\"let item of formGroup.controls.menuItems.controls\">\n        <div [formGroup]=\"item\">\n            <mat-form-field>\n                <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"route\" formControlName=\"route\">\n            </mat-form-field>\n            <mat-form-field>\n                <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"icon\" formControlName=\"icon\">\n            </mat-form-field>\n            <mat-form-field>\n                <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"title\" formControlName=\"title\">\n            </mat-form-field>\n            <mat-form-field> \n                <mat-select (change)=\"configChanged.emit(formGroup.value)\" placeholder=\"roles\" formControlName=\"roles\" multiple>\n                    <mat-option *ngFor=\"let role of roleItems\" [value]=\"role\">{{role}}</mat-option>\n                </mat-select> \n            </mat-form-field>\n        </div>\n    </div>\n</div>"}]}],"members":{"configFormGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":69,"character":2}}]}],"configChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":90,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":94,"character":31}]}],"addMenu":[{"__symbolic":"method"}]}},"ɵm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"config-module-container","template":"<div fxLayoutAlign=\"\" fxflex=\"100\" fxLayout=\"column\">\n    <router-outlet></router-outlet>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"config-authentication-module-config","template":"<h2>Endpoints</h2>\n<div [formGroup]=\"formGroup.controls.endpoints\" fxLayout=\"column\">\n    <mat-form-field>\n        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"sign in\" formControlName=\"signIn\">\n    </mat-form-field>\n    <mat-form-field>\n        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"sign out\" formControlName=\"signOut\">\n    </mat-form-field>\n    <mat-form-field>\n        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"user information\" formControlName=\"userInformation\">\n    </mat-form-field>\n</div>\n<h2>Forms</h2>\n<div [formGroup]=\"formGroup.controls.forms\" fxLayout=\"column\">\n    <mat-form-field>\n        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"SignIn Forms\" formControlName=\"signIn\">\n    </mat-form-field>\n            <!-- <ngs-form-selector (select)=\"setFormId($event,'signIn')\"></ngs-form-selector> -->\n</div>"}]}],"members":{"configFormGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":2}}]}],"configChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":44,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":45,"character":31}]}],"setFormId":[{"__symbolic":"method"}]}},"ɵo":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":21,"character":1},"arguments":[{"selector":"dynamic-config-component-selector","template":"<div #dynamicComponentContainer></div>","styles":[":host{width:100%}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}"],"entryComponents":[{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵl"}]}]}],"members":{"dynamicComponentContainer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":39,"character":2},"arguments":["dynamicComponentContainer",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":39,"character":49}}]}]}],"configChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":41,"character":2}}]}],"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver","line":74,"character":31}]}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"ɵq":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":11,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Actions","module":"@ngrx/effects","arguments":[{"__symbolic":"reference","name":"any"}]},{"__symbolic":"reference","name":"ConfigService"}]}],"getConfigs$":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngrx/effects","name":"Effect","line":15,"character":2}}]}]}}},"origins":{"ConfigModuleConfig":"./lib/config.config","MODULE_DEFAULT_CONFIG":"./lib/config.config","MODULE_CONFIG_TOKEN":"./lib/config.config","ConfigService":"./lib/services/config.service","NgsConfigModule":"./lib/config.module","RootNgsConfigModule":"./lib/config.module","ɵa":"./lib/reducers","ɵb":"./lib/services/configuration.service","ɵc":"./lib/config.routing-module","ɵd":"./lib/smart-components","ɵe":"./lib/smart-components","ɵf":"./lib/smart-components","ɵg":"./lib/smart-components/configs/configs.component","ɵh":"./lib/reducers","ɵi":"./lib/smart-components/config-edit/config-edit.component","ɵj":"./lib/dumb-components/app-config/app-config.component","ɵk":"./lib/dumb-components/user-module-config/user-module-config.component","ɵl":"./lib/dumb-components/layout-config/layout-module-config.component","ɵm":"./lib/smart-components/config-module-container/config-module-container.component","ɵn":"./lib/dumb-components/authentication-module-config/authentication-module-config.component","ɵo":"./lib/smart-components/dynamic-config-component-selector/dynamic-config-component-selector.component","ɵp":"./lib/reducers","ɵq":"./lib/effects/load-config.effects"},"importAs":"@soushians/config"}