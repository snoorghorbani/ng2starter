{"__symbolic":"module","version":4,"exports":[{"from":"./lib/partial-config.interface"}],"metadata":{"ConfigModuleConfig":{"__symbolic":"interface"},"MODULE_DEFAULT_CONFIG":{"env":{"production":false,"frontend_server":"config/module/front_end/did/not/set"}},"MODULE_CONFIG_TOKEN":{"__symbolic":"new","expression":{"__symbolic":"reference","module":"@angular/core","name":"InjectionToken","line":16,"character":39},"arguments":["UserModuleConfig"]},"ConfigState":{"__symbolic":"interface"},"ConfigReducers":{"list":{"__symbolic":"reference","name":"ɵa"}},"FeatureState":{"__symbolic":"interface"},"selectConfigState":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngrx/store","name":"createFeatureSelector","line":17,"character":33},"arguments":["config"]},"getConfigListState":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngrx/store","name":"createSelector","line":21,"character":34},"arguments":[{"__symbolic":"reference","name":"selectConfigState"},{"__symbolic":"error","message":"Lambda not supported","line":21,"character":68,"module":"./lib/reducers/index"}]},"getConfigs":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngrx/store","name":"createSelector","line":22,"character":26},"arguments":[{"__symbolic":"reference","name":"getConfigListState"},{"__symbolic":"reference","name":"ɵb"}]},"getAppConfig":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngrx/store","name":"createSelector","line":23,"character":28},"arguments":[{"__symbolic":"reference","name":"getConfigListState"},{"__symbolic":"reference","name":"ɵc"}]},"getAuthenticationModuleConfig":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngrx/store","name":"createSelector","line":24,"character":45},"arguments":[{"__symbolic":"reference","name":"getConfigListState"},{"__symbolic":"reference","name":"ɵd"}]},"getUserModuleConfig":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngrx/store","name":"createSelector","line":28,"character":35},"arguments":[{"__symbolic":"reference","name":"getConfigListState"},{"__symbolic":"reference","name":"ɵe"}]},"getConfigModuleConfig":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngrx/store","name":"createSelector","line":29,"character":37},"arguments":[{"__symbolic":"reference","name":"getConfigListState"},{"__symbolic":"reference","name":"ɵf"}]},"getFormModuleConfig":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngrx/store","name":"createSelector","line":30,"character":35},"arguments":[{"__symbolic":"reference","name":"getConfigListState"},{"__symbolic":"reference","name":"ɵg"}]},"getSocketModuleConfig":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngrx/store","name":"createSelector","line":31,"character":37},"arguments":[{"__symbolic":"reference","name":"getConfigListState"},{"__symbolic":"reference","name":"ɵh"}]},"ConfigService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":12,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":19,"character":16},{"__symbolic":"reference","name":"Store","module":"@ngrx/store","arguments":[{"__symbolic":"reference","name":"ɵi"}]},{"__symbolic":"reference","name":"ɵk"}]}],"getConfigs":[{"__symbolic":"method"}],"getConfigByName":[{"__symbolic":"method"}],"editConfig":[{"__symbolic":"method"}],"getLayoutConfigs":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"NgsConfigModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":41,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":43,"character":2},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":44,"character":2},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":45,"character":2},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":46,"character":2},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":47,"character":2},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule","line":48,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatIconModule","line":49,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatButtonModule","line":50,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatCardModule","line":51,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBarModule","line":52,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatSidenavModule","line":53,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatExpansionModule","line":54,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatSelectModule","line":55,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatFormFieldModule","line":56,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatListModule","line":57,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatMenuModule","line":58,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatRadioModule","line":59,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatInputModule","line":60,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatSlideToggleModule","line":61,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatToolbarModule","line":62,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatDatepickerModule","line":63,"character":2},{"__symbolic":"reference","module":"@angular/material","name":"MatProgressBarModule","line":64,"character":2},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"BrowserAnimationsModule","line":65,"character":2}],"declarations":[{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵq"},{"__symbolic":"reference","name":"ɵr"},{"__symbolic":"reference","name":"ɵs"}],"providers":[]}]}],"members":{},"statics":{"forRoot":{"__symbolic":"function","parameters":["config"],"value":{"ngModule":{"__symbolic":"reference","name":"RootNgsConfigModule"},"providers":[{"provide":{"__symbolic":"reference","name":"MODULE_CONFIG_TOKEN"},"useValue":{"__symbolic":"reference","name":"config"}}]}}}},"RootNgsConfigModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":88,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","name":"NgsConfigModule"},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@ngrx/store","name":"StoreModule","line":91,"character":2},"member":"forFeature"},"arguments":["config",{"__symbolic":"reference","name":"ConfigReducers"}]},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@ngrx/effects","name":"EffectsModule","line":92,"character":2},"member":"forFeature"},"arguments":[[{"__symbolic":"reference","name":"ɵt"}]]},{"__symbolic":"reference","name":"ɵu"}],"exports":[{"__symbolic":"reference","name":"NgsConfigModule"}]}]}],"members":{}},"ɵa":{"__symbolic":"function"},"ɵb":{"__symbolic":"error","message":"Lambda not supported","line":30,"character":26,"module":"./lib/reducers/config-list.reducer"},"ɵc":{"__symbolic":"error","message":"Lambda not supported","line":31,"character":28,"module":"./lib/reducers/config-list.reducer"},"ɵd":{"__symbolic":"error","message":"Lambda not supported","line":32,"character":45,"module":"./lib/reducers/config-list.reducer"},"ɵe":{"__symbolic":"error","message":"Lambda not supported","line":34,"character":35,"module":"./lib/reducers/config-list.reducer"},"ɵf":{"__symbolic":"error","message":"Lambda not supported","line":35,"character":37,"module":"./lib/reducers/config-list.reducer"},"ɵg":{"__symbolic":"error","message":"Lambda not supported","line":37,"character":35,"module":"./lib/reducers/config-list.reducer"},"ɵh":{"__symbolic":"error","message":"Lambda not supported","line":39,"character":37,"module":"./lib/reducers/config-list.reducer"},"ɵi":{"__symbolic":"interface"},"ɵj":{"__symbolic":"interface"},"ɵk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":8,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":18,"character":14},"arguments":[{"__symbolic":"reference","name":"MODULE_CONFIG_TOKEN"}]}],null],"parameters":[{"__symbolic":"reference","name":"ConfigModuleConfig"},{"__symbolic":"reference","name":"Store","module":"@ngrx/store","arguments":[{"__symbolic":"reference","name":"any"}]}]}]},"statics":{"ngInjectableDef":{}}},"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"configs","template":"<div fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"25px\" class=\"main-container\">\r\n\r\n  <div class=\"content-action\">\r\n    <mat-card class=\"with-sticky-action\">\r\n      <mat-card-header>\r\n        <mat-card-title fxLayout=\"row\" fxLayoutGap=\"5px\">\r\n          <mat-icon>settings_input_component</mat-icon>\r\n          <span>تنظیمات سامانه و ماژول ها</span>\r\n        </mat-card-title>\r\n        <!-- <mat-card-subtitle fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n          <span>\r\n            شامل تمامی درخواست‌ها از قبیل دائری، جمع‌آوری و ...\r\n          </span>\r\n        </mat-card-subtitle> -->\r\n      </mat-card-header>\r\n\r\n      <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\" fxLayoutAlign=\"start\">\r\n\r\n        <button fxFlex.lt-lg=\"18\" fxFlex.lg=\"23.5\" fxFlex.md=\"31\" fxFlex.sm=\"48\" fxFlex.xs=\"100\" class='link'\r\n          mat-raised-button [routerLink]=\"['edit' ,  config.Name]\" *ngFor=\"let config of (configs | async)\">\r\n          <div fxLayout='column' fxLayoutAlign='center center'>\r\n            <mat-icon color='primary'>settings</mat-icon>\r\n            <h3 class='title'>{{config.Name}}</h3>\r\n          </div>\r\n        </button>\r\n\r\n      </div>\r\n\r\n    </mat-card>\r\n  </div>\r\n</div>","styles":[":host{width:100%}.config-box{margin:15px}button.link{padding:25px 15px;margin:.5%;box-sizing:border-box}button mat-icon{font-size:34px;width:34px;height:34px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Store","module":"@ngrx/store","arguments":[{"__symbolic":"reference","name":"ɵj"}]}]}]}},"ɵm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"config-config-edit","template":"<form [formGroup]=\"formGroup\" (ngSubmit)=\"edit()\" fxLayout=\"column\">\r\n  <dynamic-config-component-selector #dynConfig (configChanged)=\"configChanged($event)\" [data]=\"partialConfigModel\"></dynamic-config-component-selector>\r\n  <button mat-fab  type=\"submit\" mat-raised-button color=\"primary\" (click)=\"edit\">\r\n    <mat-icon>done</mat-icon>\r\n  </button>\r\n  <!-- <button  type=\"button\" routerLink=\"/configs\" mat-raised-button>بازگشت</button> -->\r\n</form>","styles":[""]}]}],"members":{"dynConfig":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":18,"character":2},"arguments":["dynConfig"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ConfigService"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":19,"character":72},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":19,"character":100}]}],"addControl":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"configChanged":[{"__symbolic":"method"}],"edit":[{"__symbolic":"method"}]}},"ɵn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"config-app-config","template":"<div fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"25px\" class=\"main-container\">\r\n\r\n    <div class=\"content-action\">\r\n        <mat-card class=\"with-sticky-action\">\r\n            <mat-card-header>\r\n                <mat-card-title fxLayout=\"row\" fxLayoutGap=\"5px\">\r\n                    <mat-icon>settings_input_component</mat-icon>\r\n                    <span>تنظیمات سامانه</span>\r\n                </mat-card-title>\r\n                <mat-card-subtitle fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                    <span>\r\n                        شامل تمامی درخواست‌ها از قبیل دائری، جمع‌آوری و ...\r\n                    </span>\r\n                </mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\" fxLayoutAlign=\"start\">\r\n\r\n                <div [formGroup]=\"formGroup\">\r\n                    <mat-form-field>\r\n                        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"نام پروژه\"\r\n                            formControlName=\"AppTitle\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n        </mat-card>\r\n    </div>\r\n</div>"}]}],"members":{"configFormGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":2}}]}],"configChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":17,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":18,"character":31}]}]}},"ɵo":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"config-user-module-config","template":"<div fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"25px\" class=\"main-container\">\r\n\r\n    <div class=\"content-action\">\r\n        <mat-card fxLayout=\"column\" fxLayoutGap=\"10px\" fxLayoutAlign=\"\" class=\"with-sticky-action\">\r\n            <h2>Endpoints</h2>\r\n            <div [formGroup]=\"formGroup.get('endpoints')\" fxLayout=\"column\">\r\n                <mat-form-field>\r\n                    <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"change password\"\r\n                        formControlName=\"changePassword\">\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"edit profile\"\r\n                        formControlName=\"editProfile\">\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"get user info\"\r\n                        formControlName=\"getUserInfo\">\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"Who Am I\"\r\n                        formControlName=\"whoAmI\">\r\n                </mat-form-field>\r\n            </div>\r\n            <h2>Forms</h2>\r\n            <div [formGroup]=\"formGroup.get('forms')\" fxLayout=\"column\">\r\n                <mat-form-field>\r\n                    <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"profile edit\"\r\n                        formControlName=\"profile_edit\">\r\n                </mat-form-field>\r\n                <!-- <ngs-form-selector (select)=\"setFormId($event,'signIn')\"></ngs-form-selector> -->\r\n            </div>\r\n\r\n\r\n            <h2 fxFlex=\"100\">\r\n                Dashobard Links\r\n                <button mat-icon-button color=\"primary\" (click)=\"addMenu()\">\r\n                    <mat-icon aria-label=\"icon-button icon\">add</mat-icon>\r\n                </button>\r\n            </h2>\r\n            <div fxFlex=\"100\" *ngFor=\"let item of $any(formGroup.get('dashboardLinks')).controls\">\r\n                <div [formGroup]=\"item\">\r\n                    <mat-form-field>\r\n                        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"route\"\r\n                            formControlName=\"route\">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"icon\"\r\n                            formControlName=\"icon\">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"title\"\r\n                            formControlName=\"title\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>"}]}],"members":{"configFormGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":2}}]}],"configChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":43,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":44,"character":31}]}],"addMenu":[{"__symbolic":"method"}]}},"ɵp":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"template":"<div fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"25px\" class=\"main-container\">\r\n\r\n    <div class=\"content-action\">\r\n        <mat-card class=\"with-sticky-action\">\r\n            <mat-card-header>\r\n                <mat-card-title fxLayout=\"row\" fxLayoutGap=\"5px\">\r\n                    <mat-icon>settings_input_component</mat-icon>\r\n                    <span>تنظیمات ماژول Layout</span>\r\n                </mat-card-title>\r\n                <mat-card-subtitle fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                    <span>\r\n                        شامل تمامی درخواست‌ها از قبیل دائری، جمع‌آوری و ...\r\n                    </span>\r\n                </mat-card-subtitle>\r\n            </mat-card-header>\r\n            <div fxLayout=\"row wrap\" fxLayoutAlign=\"center\" fxLayoutGap=\"25px\">\r\n                <mat-card fxFlex=\"20\" fxFlexLayout=\"row\">\r\n                    <div [formGroup]=\"formGroup\">\r\n                        <mat-form-field>\r\n                            <mat-select placeholder=\"layout mode\" formControlName=\"layoutMode\">\r\n                                <mat-option *ngFor=\"let item of layoutModes\" [value]=\"item\">{{item}}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-slide-toggle formControlName=\"showLeftNavBar\">show left navbar</mat-slide-toggle>\r\n                        <mat-form-field>\r\n                            <mat-select placeholder=\"main side nav mode\" formControlName=\"mainSideNavMode\">\r\n                                <mat-option *ngFor=\"let item of sideNavModes\" [value]=\"item\">{{item}}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-slide-toggle formControlName=\"showMainSidenav\">show main side nav</mat-slide-toggle>\r\n                        <mat-slide-toggle formControlName=\"stickyLeftNavBar\">sticky left navbar</mat-slide-toggle>\r\n                        <mat-slide-toggle formControlName=\"showSecondSideNav\">show second side nav</mat-slide-toggle>\r\n                        <mat-form-field>\r\n                            <mat-select placeholder=\"second side nav mode\" formControlName=\"secondSideNavMode\">\r\n                                <mat-option *ngFor=\"let item of sideNavModes\" [value]=\"item\">{{item}}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </mat-card>\r\n\r\n                <mat-card fxFlex fxLayout=\"column\">\r\n                    <h2 fxFlex>\r\n                        Menu Items\r\n                        <button mat-icon-button color=\"primary\" (click)=\"addMenu()\">\r\n                            <mat-icon aria-label=\"icon-button icon\">add</mat-icon>\r\n                        </button>\r\n                    </h2>\r\n                    <div fxFlex=\"nogrow\" *ngFor=\"let item of $any(formGroup).get('menuItems').controls\">\r\n                        <div [formGroup]=\"item\" fxLayout=\"row\" fxLayoutGap=\"25px\">\r\n                            <button mat-icon-button (click)=\"removeMenu(item)\">\r\n                                <mat-icon>delete</mat-icon>\r\n                            </button>\r\n                            <mat-form-field>\r\n                                <input type=\"text\" matInput placeholder=\"route\" formControlName=\"route\">\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                                <input type=\"text\" matInput placeholder=\"icon\" formControlName=\"icon\">\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                                <input type=\"text\" matInput placeholder=\"title\" formControlName=\"title\">\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                                <mat-select placeholder=\"roles\" formControlName=\"roles\" multiple>\r\n                                    <mat-option *ngFor=\"let role of roleItems$ | async\" [value]=\"role\">{{role}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </mat-card>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>"}]}],"members":{"configChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":12,"character":2},"arguments":["configChanged"]}]}],"configFormGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":50,"character":31},{"__symbolic":"reference","name":"Store","module":"@ngrx/store","arguments":[{"__symbolic":"reference","name":"ɵj"}]}]}],"addMenu":[{"__symbolic":"method"}],"removeMenu":[{"__symbolic":"method"}]}},"ɵq":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"config-module-container","template":"<div fxLayoutAlign=\"\" fxflex=\"100\" fxLayout=\"column\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵr":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"config-authentication-module-config","template":"<div fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"25px\" class=\"main-container\">\r\n\r\n    <div class=\"content-action\">\r\n        <mat-card class=\"with-sticky-action\">\r\n            <mat-card-header>\r\n                <mat-card-title fxLayout=\"row\" fxLayoutGap=\"5px\">\r\n                    <mat-icon>settings_input_component</mat-icon>\r\n                    <span>تنظیمات ماژول احراز هویت</span>\r\n                </mat-card-title>\r\n                <!-- <mat-card-subtitle fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                    <span>\r\n                        شامل تمامی درخواست‌ها از قبیل دائری، جمع‌آوری و ...\r\n                    </span>\r\n                </mat-card-subtitle> -->\r\n            </mat-card-header>\r\n\r\n            <div>\r\n\r\n                <h2>Endpoints</h2>\r\n                <div [formGroup]=\"formGroup.controls.endpoints\" fxLayout=\"column\">\r\n                    <mat-form-field>\r\n                        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"sign in\"\r\n                            formControlName=\"signIn\">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"sign out\"\r\n                            formControlName=\"signOut\">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"who am i\"\r\n                            formControlName=\"whoAmI\">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"captcha url\"\r\n                            formControlName=\"captchaUrl\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <h2>Forms</h2>\r\n                <div [formGroup]=\"formGroup.controls.forms\" fxLayout=\"column\">\r\n                    <mat-form-field>\r\n                        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"SignIn Forms\"\r\n                            formControlName=\"signIn\">\r\n                    </mat-form-field>\r\n                    <!-- <ngs-form-selector (select)=\"setFormId($event,'signIn')\"></ngs-form-selector> -->\r\n                </div>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>"}]}],"members":{"configFormGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":2}}]}],"configChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":27,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Injector","line":28,"character":31}]}],"setFormId":[{"__symbolic":"method"}]}},"ɵs":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":21,"character":1},"arguments":[{"selector":"dynamic-config-component-selector","entryComponents":[{"__symbolic":"reference","name":"ɵr"},{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","name":"ɵp"}],"template":"<div #dynamicComponentContainer></div>","styles":[":host{width:100%}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}"]}]}],"members":{"dynamicComponentContainer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":39,"character":2},"arguments":["dynamicComponentContainer",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":39,"character":49}}]}]}],"configChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":41,"character":2}}]}],"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":47,"character":2}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver","line":78,"character":31}]}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"ɵt":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":11,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Actions","module":"@ngrx/effects","arguments":[{"__symbolic":"reference","name":"any"}]},{"__symbolic":"reference","name":"ConfigService"}]}],"getConfigs$":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@ngrx/effects","name":"Effect","line":15,"character":2}}]}]}},"ɵu":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":24,"character":50},"member":"forChild"},"arguments":[[{"path":"configs","component":{"__symbolic":"reference","name":"ɵq"},"children":[{"path":"","component":{"__symbolic":"reference","name":"ɵl"}},{"path":"edit/:name","component":{"__symbolic":"reference","name":"ɵm"}}]}]]}},"origins":{"ConfigModuleConfig":"./lib/config.config","MODULE_DEFAULT_CONFIG":"./lib/config.config","MODULE_CONFIG_TOKEN":"./lib/config.config","ConfigState":"./lib/reducers/index","ConfigReducers":"./lib/reducers/index","FeatureState":"./lib/reducers/index","selectConfigState":"./lib/reducers/index","getConfigListState":"./lib/reducers/index","getConfigs":"./lib/reducers/index","getAppConfig":"./lib/reducers/index","getAuthenticationModuleConfig":"./lib/reducers/index","getUserModuleConfig":"./lib/reducers/index","getConfigModuleConfig":"./lib/reducers/index","getFormModuleConfig":"./lib/reducers/index","getSocketModuleConfig":"./lib/reducers/index","ConfigService":"./lib/services/config.service","NgsConfigModule":"./lib/config.module","RootNgsConfigModule":"./lib/config.module","ɵa":"./lib/reducers/config-list.reducer","ɵb":"./lib/reducers/config-list.reducer","ɵc":"./lib/reducers/config-list.reducer","ɵd":"./lib/reducers/config-list.reducer","ɵe":"./lib/reducers/config-list.reducer","ɵf":"./lib/reducers/config-list.reducer","ɵg":"./lib/reducers/config-list.reducer","ɵh":"./lib/reducers/config-list.reducer","ɵi":"./lib/reducers","ɵj":"./lib/reducers","ɵk":"./lib/services/configuration.service","ɵl":"./lib/smart-components/configs/configs.component","ɵm":"./lib/smart-components/config-edit/config-edit.component","ɵn":"./lib/dumb-components/app-config/app-config.component","ɵo":"./lib/dumb-components/user-module-config/user-module-config.component","ɵp":"./lib/dumb-components/layout-config/layout-module-config.component","ɵq":"./lib/smart-components/config-module-container/config-module-container.component","ɵr":"./lib/dumb-components/authentication-module-config/authentication-module-config.component","ɵs":"./lib/smart-components/dynamic-config-component-selector/dynamic-config-component-selector.component","ɵt":"./lib/effects/load-config.effects","ɵu":"./lib/config.routing-module"},"importAs":"@soushians/config"}