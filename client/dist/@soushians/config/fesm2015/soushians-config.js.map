{"version":3,"file":"soushians-config.js.map","sources":["ng://@soushians/config/lib/models/config.model.ts","ng://@soushians/config/lib/models/get-configs-api.model.ts","ng://@soushians/config/lib/models/edit-config-api.model.ts","ng://@soushians/config/lib/config.config.ts","ng://@soushians/config/lib/actions/config.action.ts","ng://@soushians/config/lib/reducers/config-list.reducer.ts","ng://@soushians/config/lib/reducers/index.ts","ng://@soushians/config/lib/services/configuration.service.ts","ng://@soushians/config/lib/services/config.service.ts","ng://@soushians/config/lib/smart-components/configs/configs.component.ts","ng://@soushians/config/lib/dumb-components/authentication-module-config/authentication-module-config.component.ts","ng://@soushians/config/lib/dumb-components/app-config/app-config.component.ts","ng://@soushians/config/lib/dumb-components/user-module-config/user-module-config.component.ts","ng://@soushians/config/lib/dumb-components/layout-config/layout-module-config.component.ts","ng://@soushians/config/lib/smart-components/dynamic-config-component-selector/dynamic-config-component-selector.component.ts","ng://@soushians/config/lib/smart-components/config-edit/config-edit.component.ts","ng://@soushians/config/lib/smart-components/config-module-container/config-module-container.component.ts","ng://@soushians/config/lib/effects/load-config.effects.ts","ng://@soushians/config/lib/config.routing-module.ts","ng://@soushians/config/lib/config.module.ts"],"sourcesContent":["export class ConfigModel<T> {\r\n\t_id: string;\r\n\tName: string;\r\n\tConfig: T;\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { ConfigModel } from \"./config.model\";\r\n\r\nexport namespace GetConfigsApiModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tconstructor(initValue: GetConfigsApiModel.Request = {} as GetConfigsApiModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => ((this as any)[key] = (initValue as any)[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: ConfigModel<any>[];\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { ConfigModel } from \"../models\";\r\n\r\nexport namespace EditConfigApiModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tName: string;\r\n\t\tConfig: {};\r\n\t\tconstructor(initValue = {} as EditConfigApiModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => ((this as any)[key] = (initValue as any)[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {\r\n\t\t\t\tName: this.Name,\r\n\t\t\t\tConfig: this.Config\r\n\t\t\t};\r\n\t\t}\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tName: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tConfig: new FormGroup({})\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: ConfigModel<any>;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { InjectionToken } from \"@angular/core\";\r\n\r\nexport interface ConfigModuleConfig {\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t\tfrontend_server: string;\r\n\t};\r\n}\r\n\r\nexport const MODULE_DEFAULT_CONFIG: ConfigModuleConfig = {\r\n\tenv: {\r\n\t\tproduction: false,\r\n\t\tfrontend_server: \"config/module/front_end/did/not/set\"\r\n\t}\r\n};\r\n\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<ConfigModuleConfig>(\"UserModuleConfig\");\r\n","import { Action } from \"@ngrx/store\";\r\nimport { ConfigModel, GetConfigsApiModel } from \"../models\";\r\n\r\nexport enum ConfigActionTypes {\r\n\tGET_CONFIGS = \"[CONFIG] get config\",\r\n\tCONFIG_LOADED_SUCCEED = \"[CONFIG] load config succeed\",\r\n\tUPDATE_CONFIG = \"[CONFIG] update config\",\r\n\tCONFIG_LOADED_FAILED = \"[CONFIG] load config failed\"\r\n}\r\n\r\nexport class GetConfigAction implements Action {\r\n\treadonly type = ConfigActionTypes.GET_CONFIGS;\r\n}\r\n\r\nexport class ConfigLoadedSucceedAction implements Action {\r\n\treadonly type = ConfigActionTypes.CONFIG_LOADED_SUCCEED;\r\n\r\n\tconstructor(public payload: ConfigModel<any>[]) {}\r\n}\r\nexport class UpdateConfigAction implements Action {\r\n\treadonly type = ConfigActionTypes.UPDATE_CONFIG;\r\n\tconstructor(public payload: ConfigModel<any>) {}\r\n}\r\n\r\nexport class ConfigLoadedFailedAction implements Action {\r\n\treadonly type = ConfigActionTypes.CONFIG_LOADED_FAILED;\r\n}\r\nexport type Actions = GetConfigAction | ConfigLoadedSucceedAction | ConfigLoadedFailedAction | UpdateConfigAction;\r\n","import * as config from \"../actions/config.action\";\r\n\r\nexport interface State {\r\n\tdata: any[];\r\n}\r\n\r\nconst initialState: State = {\r\n\tdata: []\r\n};\r\n\r\nexport function Reducer(state = initialState, action: config.Actions): State {\r\n\tswitch (action.type) {\r\n\t\tcase config.ConfigActionTypes.CONFIG_LOADED_SUCCEED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload\r\n\t\t\t};\r\n\t\tcase config.ConfigActionTypes.UPDATE_CONFIG:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: state.data.map(config => {\r\n\t\t\t\t\tif (config._id == action.payload._id) config.Config = action.payload.Config;\r\n\t\t\t\t\treturn config;\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const getConfigs = (state: State) => state.data;\r\nexport const getAppConfig = (state: State) => state.data.find(config => config.Name == \"app_config\");\r\nexport const getAuthenticationModuleConfig = (state: State) =>\r\n\tstate.data.find(config => config.Name == \"authentication_module_config\");\r\nexport const getUserModuleConfig = (state: State) => state.data.find(config => config.Name == \"user_module_config\");\r\nexport const getConfigModuleConfig = (state: State) =>\r\n\tstate.data.find(config => config.Name == \"config_module_config\") as any;\r\nexport const getFormModuleConfig = (state: State) =>\r\n\tstate.data.find(config => config.Name == \"form_module_config\") as any;\r\nexport const getSocketModuleConfig = (state: State) =>\r\n\tstate.data.find(config => config.Name == \"socket_module_config\") as any;\r\n","import { createSelector, createFeatureSelector, MemoizedSelector } from \"@ngrx/store\";\r\n\r\nimport * as configList from \"./config-list.reducer\";\r\nimport { ConfigLoadedFailedAction, ConfigLoadedSucceedAction } from \"../actions\";\r\nexport interface ConfigState {\r\n\tlist: configList.State;\r\n}\r\nexport const ConfigReducers = {\r\n\tlist: configList.Reducer\r\n};\r\n\r\nexport interface FeatureState {\r\n\t\"configs\": ConfigState;\r\n}\r\n\r\n//#region selectors\r\n\r\nexport const selectConfigState = createFeatureSelector<ConfigState>(\"config\");\r\n\r\n//#endregion\r\n\r\nexport const getConfigListState = createSelector(selectConfigState, (state: ConfigState) => state.list);\r\nexport const getConfigs = createSelector(getConfigListState, configList.getConfigs);\r\nexport const getAppConfig = createSelector(getConfigListState, configList.getAppConfig);\r\nexport const getAuthenticationModuleConfig = createSelector(\r\n\tgetConfigListState,\r\n\tconfigList.getAuthenticationModuleConfig\r\n);\r\nexport const getUserModuleConfig = createSelector(getConfigListState, configList.getUserModuleConfig);\r\nexport const getConfigModuleConfig = createSelector(getConfigListState, configList.getConfigModuleConfig);\r\nexport const getFormModuleConfig = createSelector(getConfigListState, configList.getFormModuleConfig);\r\nexport const getSocketModuleConfig = createSelector(getConfigListState, configList.getSocketModuleConfig);\r\n","import { Injectable, Inject } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { ConfigModuleConfig, MODULE_CONFIG_TOKEN, MODULE_DEFAULT_CONFIG } from \"../config.config\";\r\nimport { getConfigModuleConfig } from \"../reducers\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class ConfigurationService {\r\n\tprivate _config: ConfigModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(this._config);\r\n\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile: ConfigModuleConfig, private store: Store<any>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\tthis.store.select(getConfigModuleConfig).subscribe(configConfig => {\r\n\t\t\tif (!configConfig) return;\r\n\t\t\tthis._config = Object.assign({}, this._config, configConfig.Config);\r\n\t\t\tthis.config$.next(this._config);\r\n\t\t});\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { EditConfigApiModel, GetConfigsApiModel, ConfigModel } from \"../models\";\r\n\r\nimport { ConfigState } from \"../reducers\";\r\nimport { GetConfigAction } from \"../actions\";\r\nimport { ConfigurationService } from \"./configuration.service\";\r\nimport { take, map, catchError } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class ConfigService {\r\n\tresponseCache: any;\r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<ConfigState>,\r\n\t\tprivate configurationService: ConfigurationService\r\n\t) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.store.dispatch(new GetConfigAction());\r\n\t\t}, 999);\r\n\t}\r\n\r\n\tgetConfigs(): Observable<ConfigModel<any>[]> {\r\n\t\treturn this.http\r\n\t\t\t.get(`${this.configurationService.config.env.frontend_server}/api/config`)\r\n\t\t\t.pipe(\r\n\t\t\t\ttake(1),\r\n\t\t\t\tmap((response: GetConfigsApiModel.Response) => response.Result),\r\n\t\t\t\tcatchError(err => Observable.throw(err))\r\n\t\t\t);\r\n\t}\r\n\tgetConfigByName(name: string): Observable<any> {\r\n\t\treturn this.http.get(`${this.configurationService.config.env.frontend_server}/api/config/${name}`).pipe(\r\n\t\t\tmap(response => response),\r\n\t\t\tcatchError(err => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\teditConfig(body: EditConfigApiModel.Request): Observable<any> {\r\n\t\tconst model = new EditConfigApiModel.Request(body);\r\n\r\n\t\treturn this.http\r\n\t\t\t.put(\r\n\t\t\t\t`${this.configurationService.config.env.frontend_server}/api/config/${model.Name}`,\r\n\t\t\t\tmodel.getRequestBody()\r\n\t\t\t)\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(response => response),\r\n\t\t\t\tcatchError(err => {\r\n\t\t\t\t\treturn Observable.throw(err);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tgetLayoutConfigs(): Observable<any> {\r\n\t\treturn this.http.get(`${this.configurationService.config.env.frontend_server}/api/layout-config`).pipe(\r\n\t\t\tmap((response: any) => response),\r\n\t\t\tcatchError(err => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { ConfigModel } from \"../../models\";\r\nimport { getConfigs, FeatureState } from \"../../reducers\";\r\n\r\n@Component({\r\n\tselector: \"configs\",\r\n\ttemplateUrl: \"./configs.component.html\",\r\n\tstyleUrls: [ \"./configs.component.scss\" ]\r\n})\r\nexport class ConfigsComponent {\r\n\tconfigs: Observable<ConfigModel<any>[]>;\r\n\tconstructor(private store: Store<FeatureState>) {\r\n\t\tthis.configs = this.store.select(getConfigs);\r\n\t}\r\n}\r\n","import { NgModule, Component, OnInit, Output, EventEmitter, Input, Injector } from \"@angular/core\";\r\nimport { FormGroup, Validators, FormControl } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\n@Component({\r\n\tselector: \"config-authentication-module-config\",\r\n\ttemplateUrl: \"./authentication-module-config.component.html\"\r\n})\r\nexport class AuthenticationModuleConfigComponent {\r\n\tformGroup: FormGroup = new FormGroup({\r\n\t\tendpoints: new FormGroup({\r\n\t\t\tsignIn: new FormControl(\"\", [Validators.required]),\r\n\t\t\tsignOut: new FormControl(\"\", [Validators.required]),\r\n\t\t\twhoAmI: new FormControl(\"\", [Validators.required]),\r\n\t\t\tcaptchaUrl: new FormControl(\"\", [Validators.required])\r\n\t\t}),\r\n\t\tforms: new FormGroup({\r\n\t\t\tsignIn: new FormControl(\"\", [Validators.required])\r\n\t\t})\r\n\t});\r\n\t@Input()\r\n\tset configFormGroup(configFormGroup: FormGroup) {\r\n\t\tthis.formGroup.patchValue(configFormGroup.value);\r\n\t\tconfigFormGroup.valueChanges.subscribe(data => {\r\n\t\t\tthis.formGroup.patchValue(data);\r\n\t\t});\r\n\t}\r\n\t@Output() configChanged = new EventEmitter();\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.configFormGroup = this.injector.get(\"configFormGroup\");\r\n\t}\r\n\tsetFormId(formId: string, formName: string) {\r\n\t\tthis.formGroup.patchValue({ [formName]: formId });\r\n\t}\r\n}\r\n","import { NgModule, Component, OnInit, Output, EventEmitter, Input, Injector } from \"@angular/core\";\r\nimport { FormGroup, Validators, FormControl } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\n@Component({\r\n\tselector: \"config-app-config\",\r\n\ttemplateUrl: \"./app-config.component.html\"\r\n})\r\nexport class ConfigAppConfigComponent {\r\n\tformGroup: FormGroup = new FormGroup({ AppTitle: new FormControl(\"\", [ Validators.required ]) });\r\n\t@Input()\r\n\tset configFormGroup(configFormGroup: FormGroup) {\r\n\t\tthis.formGroup.patchValue(configFormGroup.value);\r\n\t\tconfigFormGroup.valueChanges.subscribe(data => {\r\n\t\t\tthis.formGroup.patchValue(data);\r\n\t\t});\r\n\t}\r\n\t@Output() configChanged = new EventEmitter();\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.configFormGroup = this.injector.get(\"configFormGroup\");\r\n\t}\r\n}\r\n","import { NgModule, Component, OnInit, Output, EventEmitter, Input, Injector } from \"@angular/core\";\r\nimport { FormGroup, Validators, FormControl, FormArray } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n\tselector: \"config-user-module-config\",\r\n\ttemplateUrl: \"./user-module-config.component.html\"\r\n})\r\nexport class UserModuleConfigComponent {\r\n\tformGroup: FormGroup = new FormGroup({\r\n\t\tendpoints: new FormGroup({\r\n\t\t\tchangePassword: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\teditProfile: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\tgetUserInfo: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\twhoAmI: new FormControl(\"\", [ Validators.required ])\r\n\t\t}),\r\n\t\tforms: new FormGroup({\r\n\t\t\tprofile_edit: new FormControl(\"\", [ Validators.required ])\r\n\t\t}),\r\n\t\tdashboardLinks: new FormArray([])\r\n\t});\r\n\t_configFormGroup: FormGroup;\r\n\t@Input()\r\n\tset configFormGroup(configFormGroup: FormGroup) {\r\n\t\tthis._configFormGroup = configFormGroup;\r\n\t\t(configFormGroup.controls.dashboardLinks as FormArray).controls.forEach(control => {\r\n\t\t\t(this.formGroup.controls.dashboardLinks as FormArray).push(\r\n\t\t\t\tnew FormGroup({\r\n\t\t\t\t\troute: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\t\ticon: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\t\ttitle: new FormControl(\"\", [ Validators.required ])\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tthis.formGroup.patchValue(configFormGroup.value);\r\n\t\tconfigFormGroup.valueChanges.subscribe(data => {\r\n\t\t\tthis.formGroup.patchValue(data);\r\n\t\t});\r\n\t}\r\n\tget configFormGroup() {\r\n\t\treturn this._configFormGroup;\r\n\t}\r\n\t@Output() configChanged = new EventEmitter();\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.configFormGroup = this.injector.get(\"configFormGroup\");\r\n\t}\r\n\taddMenu() {\r\n\t\tvar menuItem = new FormGroup({\r\n\t\t\troute: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\ticon: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\ttitle: new FormControl(\"\", [ Validators.required ])\r\n\t\t});\r\n\r\n\t\t(this.formGroup.get(\"dashboardLinks\") as FormArray).push(menuItem);\r\n\t\t(this.configFormGroup.get(\"dashboardLinks\") as FormArray).push(menuItem);\r\n\t}\r\n}\r\n","import { Component, Output, EventEmitter, Input, Injector } from \"@angular/core\";\r\nimport { FormGroup, Validators, FormControl, FormArray } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, filter } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { FeatureState, getAppConfig } from \"../../reducers\";\r\n\r\n@Component({\r\n\ttemplateUrl: \"./layout-module-config.component.html\"\r\n})\r\nexport class LayoutModuleConfigComponent {\r\n\t@Output(\"configChanged\") configChanged = new EventEmitter();\r\n\t_configFormGroup: FormGroup;\r\n\t@Input()\r\n\tset configFormGroup(configFormGroup: FormGroup) {\r\n\t\tthis._configFormGroup = configFormGroup;\r\n\t\t(configFormGroup.controls.menuItems as FormArray).controls.forEach(control => {\r\n\t\t\t(this.formGroup.controls.menuItems as FormArray).push(\r\n\t\t\t\tnew FormGroup({\r\n\t\t\t\t\troute: new FormControl(\"\", [Validators.required]),\r\n\t\t\t\t\ticon: new FormControl(\"\", [Validators.required]),\r\n\t\t\t\t\t// roles: new FormArray(control.value.roles.map((i) => new FormControl(\"Admin\"))),\r\n\t\t\t\t\troles: new FormControl(),\r\n\t\t\t\t\ttitle: new FormControl(\"\", [Validators.required])\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tthis.formGroup.patchValue(configFormGroup.value);\r\n\t\tconfigFormGroup.valueChanges.subscribe(data => this.formGroup.patchValue(data));\r\n\t}\r\n\tget configFormGroup() {\r\n\t\treturn this._configFormGroup;\r\n\t}\r\n\r\n\tsideNavModes: string[];\r\n\tlayoutModes: string[];\r\n\tformGroup = new FormGroup({\r\n\t\tlayoutMode: new FormControl(\"\", [Validators.required]),\r\n\t\tshowLeftNavBar: new FormControl(\"\", [Validators.required]),\r\n\t\tmainSideNavMode: new FormControl(\"\", [Validators.required]),\r\n\t\tshowMainSidenav: new FormControl(\"\", [Validators.required]),\r\n\t\tstickyLeftNavBar: new FormControl(\"\", [Validators.required]),\r\n\t\tshowSecondSideNav: new FormControl(\"\", [Validators.required]),\r\n\t\tsecondSideNavMode: new FormControl(\"\", [Validators.required]),\r\n\t\tmenuItems: new FormArray([])\r\n\t});\r\n\troleItems$: Observable<string[]>;\r\n\r\n\tconstructor(private injector: Injector, private store: Store<FeatureState>) {\r\n\t\tthis.sideNavModes = [\"over\", \"push\", \"side\"];\r\n\t\tthis.layoutModes = [\"with-margin\", \"without-margin\", \"default\"];\r\n\t\tthis.configFormGroup = this.injector.get(\"configFormGroup\");\r\n\t\tthis.roleItems$ = this.store\r\n\t\t\t.select(getAppConfig)\r\n\t\t\t.pipe(filter(config => config != null), map(appconfig => appconfig.Config.Roles));\r\n\t\t// this.configChanged.\r\n\t\t// this.formGroup.valueChanges.subscribe(value => {\r\n\t\t// \tdebugger;\r\n\t\t// \tthis.configChanged.emit(value);\r\n\t\t// });\r\n\t}\r\n\taddMenu() {\r\n\t\tconst menuItem = new FormGroup({\r\n\t\t\troute: new FormControl(\"\", [Validators.required]),\r\n\t\t\ticon: new FormControl(\"\", [Validators.required]),\r\n\t\t\troles: new FormControl(),\r\n\t\t\ttitle: new FormControl(\"\", [Validators.required])\r\n\t\t});\r\n\r\n\t\t(this.formGroup.get(\"menuItems\") as FormArray).push(menuItem);\r\n\t\t(this.configFormGroup.get(\"menuItems\") as FormArray).push(menuItem);\r\n\t}\r\n\tremoveMenu(item: any) {\r\n\t\tdebugger;\r\n\t\tconst index = (this.formGroup.get(\"menuItems\") as FormArray).controls.indexOf(item);\r\n\t\t(this.formGroup.get(\"menuItems\") as FormArray).removeAt(index);\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tInput,\r\n\tAfterViewInit,\r\n\tComponentFactoryResolver,\r\n\tViewChild,\r\n\tViewContainerRef,\r\n\tReflectiveInjector,\r\n\tOnDestroy,\r\n\tOutput,\r\n\tEventEmitter\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { PartialConfig } from \"../../models\";\r\nimport { AuthenticationModuleConfigComponent } from \"../../dumb-components/authentication-module-config/authentication-module-config.component\";\r\nimport { ConfigAppConfigComponent } from \"../../dumb-components/app-config/app-config.component\";\r\nimport { UserModuleConfigComponent } from \"../../dumb-components/user-module-config/user-module-config.component\";\r\nimport { LayoutModuleConfigComponent } from \"../../dumb-components/layout-config/layout-module-config.component\";\r\n\r\n@Component({\r\n\tselector: \"dynamic-config-component-selector\",\r\n\ttemplateUrl: \"./dynamic-config-component-selector.component.html\",\r\n\tstyleUrls: [ \"./dynamic-config-component-selector.component.scss\" ],\r\n\tentryComponents: [\r\n\t\tAuthenticationModuleConfigComponent,\r\n\t\tConfigAppConfigComponent,\r\n\t\tUserModuleConfigComponent,\r\n\t\tLayoutModuleConfigComponent\r\n\t]\r\n})\r\nexport class DynamicConfigComponentSelectorComponent implements AfterViewInit {\r\n\ttypeMapToDiagram: any = {\r\n\t\tauthentication_module_config: AuthenticationModuleConfigComponent,\r\n\t\tapp_config: ConfigAppConfigComponent,\r\n\t\tuser_module_config: UserModuleConfigComponent,\r\n\t\tlayout_config: LayoutModuleConfigComponent\r\n\t};\r\n\t@ViewChild(\"dynamicComponentContainer\", { read: ViewContainerRef })\r\n\tdynamicComponentContainer: ViewContainerRef;\r\n\t@Output() configChanged = new EventEmitter();\r\n\tget config() {\r\n\t\tif (!this.currentComponent) return {};\r\n\t\treturn this.currentComponent.instance.formGroup.value;\r\n\t}\r\n\tcurrentComponent: any = null;\r\n\t@Input()\r\n\tset data(data: PartialConfig) {\r\n\t\tif (!data || Object.keys(data).length == 0) return;\r\n\t\tif (!(data.type in this.typeMapToDiagram)) {\r\n\t\t\tif (this.currentComponent) this.currentComponent.destroy();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet _component: any = this.typeMapToDiagram[data.type];\r\n\t\tlet inputProviders = Object.keys(data.inputs).map(inputName => {\r\n\t\t\treturn { provide: inputName, useValue: (data.inputs as any)[inputName] };\r\n\t\t});\r\n\t\tlet resolvedInputs = ReflectiveInjector.resolve(inputProviders);\r\n\r\n\t\tlet injector = ReflectiveInjector.fromResolvedProviders(\r\n\t\t\tresolvedInputs,\r\n\t\t\tthis.dynamicComponentContainer.parentInjector\r\n\t\t);\r\n\t\tlet factory = this.resolver.resolveComponentFactory(_component);\r\n\r\n\t\tlet component = factory.create(injector);\r\n\t\t// (<any>component.instance).configChanged.add.subscribe((data: any) => {\r\n\t\t// \tthis.configChanged.emit(data);\r\n\t\t// });\r\n\t\tthis.dynamicComponentContainer.insert(component.hostView);\r\n\r\n\t\tif (this.currentComponent) {\r\n\t\t\tthis.currentComponent.destroy();\r\n\t\t}\r\n\r\n\t\tthis.currentComponent = component;\r\n\t}\r\n\tconstructor(private resolver: ComponentFactoryResolver) {}\r\n\tngAfterViewInit() {}\r\n}\r\n","import { NgModule, Component, OnInit, Output, EventEmitter, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { FormGroup, FormBuilder, FormControl } from \"@angular/forms\";\r\n\r\nimport { EditConfigApiModel, PartialConfig } from \"../../models\";\r\nimport { ConfigService } from \"../../services/config.service\";\r\nimport { DynamicConfigComponentSelectorComponent } from \"../dynamic-config-component-selector\";\r\n\r\n@Component({\r\n\tselector: \"config-config-edit\",\r\n\ttemplateUrl: \"./config-edit.component.html\",\r\n\tstyleUrls: [\"./config-edit.component.css\"]\r\n})\r\nexport class ConfigEditComponent implements OnInit {\r\n\tconfigInforamation: any;\r\n\tformGroup: FormGroup = EditConfigApiModel.Request.formGroup;\r\n\tpartialConfigModel: PartialConfig;\r\n\t@ViewChild(\"dynConfig\") dynConfig: DynamicConfigComponentSelectorComponent;\r\n\tconstructor(private configService: ConfigService, private formBuilder: FormBuilder, private route: ActivatedRoute) {\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tconst configName: string = params[\"name\"];\r\n\t\t\tthis.configService.getConfigByName(configName).subscribe(data => {\r\n\t\t\t\tdebugger;\r\n\t\t\t\tthis.partialConfigModel = {\r\n\t\t\t\t\ttype: data.Result.Name,\r\n\t\t\t\t\tinputs: {\r\n\t\t\t\t\t\tconfigFormGroup: this.formGroup.controls.Config as FormGroup\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tthis.formGroup.patchValue({\r\n\t\t\t\t\t_id: data.Result._id,\r\n\t\t\t\t\tName: data.Result.Name\r\n\t\t\t\t});\r\n\t\t\t\tObject.keys(data.Result.Config).forEach(key => {\r\n\t\t\t\t\tthis.addControl(this.formGroup.controls.Config as FormGroup, key, data.Result.Config[key]);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\taddControl(formGroup: FormGroup, key: string, value: any) {\r\n\t\tif (value instanceof Array) {\r\n\t\t\tformGroup.addControl(key, this.formBuilder.array(value));\r\n\t\t} else if (value instanceof Object) {\r\n\t\t\tformGroup.addControl(key, this.formBuilder.group(value));\r\n\t\t} else {\r\n\t\t\tformGroup.addControl(key, new FormControl(value));\r\n\t\t}\r\n\t}\r\n\r\n\tngOnInit() { }\r\n\tconfigChanged(event: any) {\r\n\t\tconsole.log(\"-\");\r\n\t}\r\n\tedit() {\r\n\t\tthis.formGroup.controls.Config.patchValue(this.dynConfig.config);\r\n\t\tif (!this.formGroup.valid) return;\r\n\t\tthis.configService.editConfig(this.formGroup.value).subscribe(config => { });\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\n@Component({\r\n\tselector: \"config-module-container\",\r\n\ttemplateUrl: \"./config-module-container.component.html\"\r\n})\r\nexport class ConfigModuleContainerComponent implements OnInit {\r\n\tconstructor() {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs/observable/of\";\r\n\r\nimport { ConfigActionTypes, ConfigLoadedSucceedAction, ConfigLoadedFailedAction } from \"../actions\";\r\nimport { ConfigService } from \"../services/config.service\";\r\nimport { GetConfigsApiModel } from \"../models\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class LoadConfigEffects {\r\n\tconstructor(private actions$: Actions<any>, private configService: ConfigService) {}\r\n\r\n\t@Effect()\r\n\tgetConfigs$ = this.actions$.pipe(\r\n\t\tofType<any>(ConfigActionTypes.GET_CONFIGS),\r\n\t\tmap(action => action.payload),\r\n\t\tswitchMap((data: GetConfigsApiModel.Request) => this.configService.getConfigs()),\r\n\t\tmap(configs => new ConfigLoadedSucceedAction(configs)),\r\n\t\tcatchError(() => of(new ConfigLoadedFailedAction()))\r\n\t);\r\n}\r\n","import { ModuleWithProviders } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { ConfigModuleContainerComponent } from \"./smart-components/config-module-container/config-module-container.component\";\r\nimport { ConfigsComponent } from \"./smart-components/configs/configs.component\";\r\nimport { ConfigEditComponent } from \"./smart-components/config-edit/config-edit.component\";\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: \"configs\",\r\n\t\tcomponent: ConfigModuleContainerComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: \"\",\r\n\t\t\t\tcomponent: ConfigsComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: \"edit/:name\",\r\n\t\t\t\tcomponent: ConfigEditComponent\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nexport const RoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSnackBarModule,\r\n\tMatSidenavModule,\r\n\tMatExpansionModule,\r\n\tMatSelectModule,\r\n\tMatFormFieldModule,\r\n\tMatListModule,\r\n\tMatMenuModule,\r\n\tMatRadioModule,\r\n\tMatInputModule,\r\n\tMatToolbarModule,\r\n\tMatDatepickerModule,\r\n\tMatProgressBarModule,\r\n\tMatSlideToggleModule\r\n} from \"@angular/material\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\n\r\nimport { ConfigModuleConfig, MODULE_CONFIG_TOKEN } from \"./config.config\";\r\nimport { ConfigsComponent } from \"./smart-components/configs/configs.component\";\r\nimport { ConfigEditComponent } from \"./smart-components/config-edit/config-edit.component\";\r\nimport { ConfigAppConfigComponent } from \"./dumb-components/app-config/app-config.component\";\r\nimport { UserModuleConfigComponent } from \"./dumb-components/user-module-config/user-module-config.component\";\r\nimport { LayoutModuleConfigComponent } from \"./dumb-components/layout-config/layout-module-config.component\";\r\nimport { ConfigModuleContainerComponent } from \"./smart-components/config-module-container/config-module-container.component\";\r\nimport { AuthenticationModuleConfigComponent } from \"./dumb-components/authentication-module-config/authentication-module-config.component\";\r\nimport { DynamicConfigComponentSelectorComponent } from \"./smart-components/dynamic-config-component-selector/dynamic-config-component-selector.component\";\r\nimport { LoadConfigEffects } from \"./effects/load-config.effects\";\r\nimport { ConfigReducers } from \"./reducers/index\";\r\nimport { RoutingModule } from \"./config.routing-module\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tRouterModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tHttpClientModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatSidenavModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSelectModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatListModule,\r\n\t\tMatMenuModule,\r\n\t\tMatRadioModule,\r\n\t\tMatInputModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tMatToolbarModule,\r\n\t\tMatDatepickerModule,\r\n\t\tMatProgressBarModule,\r\n\t\tBrowserAnimationsModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tConfigsComponent,\r\n\t\tConfigEditComponent,\r\n\t\tConfigAppConfigComponent,\r\n\t\tUserModuleConfigComponent,\r\n\t\tLayoutModuleConfigComponent,\r\n\t\tConfigModuleContainerComponent,\r\n\t\tAuthenticationModuleConfigComponent,\r\n\t\tDynamicConfigComponentSelectorComponent\r\n\t],\r\n\tproviders: []\r\n})\r\nexport class NgsConfigModule {\r\n\tstatic forRoot(config: ConfigModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: RootNgsConfigModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config } ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsConfigModule,\r\n\t\tStoreModule.forFeature(\"config\", ConfigReducers),\r\n\t\tEffectsModule.forFeature([ LoadConfigEffects ]),\r\n\t\tRoutingModule\r\n\t],\r\n\texports: [ NgsConfigModule ]\r\n})\r\nexport class RootNgsConfigModule {}\r\n"],"names":["config.ConfigActionTypes","configList.Reducer","getConfigs","configList.getConfigs","getAppConfig","configList.getAppConfig","getAuthenticationModuleConfig","configList.getAuthenticationModuleConfig","getUserModuleConfig","configList.getUserModuleConfig","getConfigModuleConfig","configList.getConfigModuleConfig","getFormModuleConfig","configList.getFormModuleConfig","getSocketModuleConfig","configList.getSocketModuleConfig","tslib_1.__decorate"],"mappings":"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"}
