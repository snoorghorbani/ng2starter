{"version":3,"file":"soushians-config.umd.js.map","sources":["ng://@soushians/config/lib/models/config.model.ts","ng://@soushians/config/lib/models/get-configs-api.model.ts","ng://@soushians/config/lib/models/edit-config-api.model.ts","ng://@soushians/config/lib/config.config.ts",null,"ng://@soushians/config/lib/actions/config.action.ts","ng://@soushians/config/lib/reducers/config-list.reducer.ts","ng://@soushians/config/lib/reducers/index.ts","ng://@soushians/config/lib/services/configuration.service.ts","ng://@soushians/config/lib/services/config.service.ts","ng://@soushians/config/lib/smart-components/configs/configs.component.ts","ng://@soushians/config/lib/smart-components/config-edit/config-edit.component.ts","ng://@soushians/config/lib/dumb-components/app-config/app-config.component.ts","ng://@soushians/config/lib/dumb-components/user-module-config/user-module-config.component.ts","ng://@soushians/config/lib/dumb-components/layout-config/layout-module-config.component.ts","ng://@soushians/config/lib/smart-components/config-module-container/config-module-container.component.ts","ng://@soushians/config/lib/dumb-components/authentication-module-config/authentication-module-config.component.ts","ng://@soushians/config/lib/smart-components/dynamic-config-component-selector/dynamic-config-component-selector.component.ts","ng://@soushians/config/lib/effects/load-config.effects.ts","ng://@soushians/config/lib/config.routing-module.ts","ng://@soushians/config/lib/config.module.ts"],"sourcesContent":["export class ConfigModel<T> {\r\n\t_id: string;\r\n\tName: string;\r\n\tConfig: T;\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { ConfigModel } from \"./config.model\";\r\n\r\nexport module GetConfigsApiModel {\r\n\r\n    export class Request implements HttpRequestBaseModel<Request>{\r\n\r\n        constructor(initValue: GetConfigsApiModel.Request = {} as GetConfigsApiModel.Request) {\r\n            Object.keys(initValue).forEach(key => (this as any)[key] = (initValue as any)[key]);\r\n        }\r\n\r\n        getRequestBody() {\r\n            return {\r\n            }\r\n        }\r\n    }\r\n\r\n    export class Response {\r\n        Result: ConfigModel<any>[];\r\n        constructor() {\r\n\r\n        }\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpRequestBaseModel } from \"@soushians/shared\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { ConfigModel } from \"../models\";\r\n\r\nexport namespace EditConfigApiModel {\r\n\texport class Request implements HttpRequestBaseModel<Request> {\r\n\t\tName: string;\r\n\t\tConfig: {};\r\n\t\tconstructor(initValue = {} as EditConfigApiModel.Request) {\r\n\t\t\tObject.keys(initValue).forEach(key => ((this as any)[key] = (initValue as any)[key]));\r\n\t\t}\r\n\r\n\t\tgetRequestBody() {\r\n\t\t\treturn {\r\n\t\t\t\tName: this.Name,\r\n\t\t\t\tConfig: this.Config\r\n\t\t\t};\r\n\t\t}\r\n\t\tstatic get formGroup() {\r\n\t\t\treturn new FormGroup({\r\n\t\t\t\tName: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\tConfig: new FormGroup({})\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\texport class Response {\r\n\t\tResult: ConfigModel<any>;\r\n\t\tconstructor() {}\r\n\t}\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface ConfigModuleConfig {\r\n\tdev_api_host?: string;\r\n\tprod_api_host?: string;\r\n\tenv?: {\r\n\t\tproduction: boolean;\r\n\t};\r\n}\r\n\r\nexport const MODULE_DEFAULT_CONFIG: ConfigModuleConfig = {\r\n\tdev_api_host: 'http://localhost:3000',\r\n\tprod_api_host: 'http://5.196.149.107:3000',\r\n\tenv: {\r\n\t\tproduction: false\r\n\t}\r\n};\r\n\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<ConfigModuleConfig>('UserModuleConfig');\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Action } from \"@ngrx/store\";\r\nimport { ConfigModel, GetConfigsApiModel } from \"../models\";\r\n\r\nexport enum ConfigActionTypes {\r\n\tGET_CONFIGS = \"[CONFIG] get config\",\r\n\tCONFIG_LOADED_SUCCEED = \"[CONFIG] load config succeed\",\r\n\tUPDATE_CONFIG = \"[CONFIG] update config\",\r\n\tCONFIG_LOADED_FAILED = \"[CONFIG] load config failed\"\r\n}\r\n\r\nexport class GetConfigAction implements Action {\r\n\treadonly type = ConfigActionTypes.GET_CONFIGS;\r\n}\r\n\r\nexport class ConfigLoadedSucceedAction implements Action {\r\n\treadonly type = ConfigActionTypes.CONFIG_LOADED_SUCCEED;\r\n\r\n\tconstructor(public payload: ConfigModel<any>[]) {}\r\n}\r\nexport class UpdateConfigAction implements Action {\r\n\treadonly type = ConfigActionTypes.UPDATE_CONFIG;\r\n\tconstructor(public payload: ConfigModel<any>) {}\r\n}\r\n\r\nexport class ConfigLoadedFailedAction implements Action {\r\n\treadonly type = ConfigActionTypes.CONFIG_LOADED_FAILED;\r\n}\r\nexport type Actions = GetConfigAction | ConfigLoadedSucceedAction | ConfigLoadedFailedAction | UpdateConfigAction;\r\n","import * as config from \"../actions/config.action\";\r\nimport { ConfigModel, LayoutConfigModel } from \"../models\";\r\n\r\nexport interface State {\r\n\tdata: any[];\r\n}\r\n\r\nconst initialState: State = {\r\n\tdata: []\r\n};\r\n\r\nexport function Reducer(state = initialState, action: config.Actions): State {\r\n\tswitch (action.type) {\r\n\t\tcase config.ConfigActionTypes.CONFIG_LOADED_SUCCEED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.payload\r\n\t\t\t};\r\n\t\tcase config.ConfigActionTypes.UPDATE_CONFIG:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: state.data.map(config => {\r\n\t\t\t\t\tif (config._id == action.payload._id) config.Config = action.payload.Config;\r\n\t\t\t\t\treturn config;\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const getConfigs = (state: State) => state.data;\r\nexport const getAppConfig = (state: State) => state.data.find(config => config.Name == \"app_config\");\r\nexport const getAuthenticationModuleConfig = (state: State) =>\r\n\tstate.data.find(config => config.Name == \"authentication_module_config\");\r\nexport const getUserModuleConfig = (state: State) => state.data.find(config => config.Name == \"user_module_config\");\r\nexport const getlayoutModuleConfig = (state: State) => state.data.find(config => config.Name == \"layout_config\") as any;\r\nexport const getConfigModuleConfig = (state: State) =>\r\n\tstate.data.find(config => config.Name == \"config_module_config\") as any;\r\nexport const getFormModuleConfig = (state: State) =>\r\n\tstate.data.find(config => config.Name == \"form_module_config\") as any;\r\nexport const getSocketModuleConfig = (state: State) =>\r\n\tstate.data.find(config => config.Name == \"socket_module_config\") as any;\r\n","import { createSelector, createFeatureSelector, MemoizedSelector } from \"@ngrx/store\";\r\n\r\nimport * as configList from \"./config-list.reducer\";\r\nimport { ConfigLoadedFailedAction, ConfigLoadedSucceedAction } from \"../actions\";\r\nexport interface ConfigState {\r\n\tlist: configList.State;\r\n}\r\nConfigLoadedFailedAction;\r\nexport const ConfigReducers = {\r\n\tlist: configList.Reducer\r\n};\r\n\r\nexport interface FeatureState {\r\n\t\"configs\": ConfigState;\r\n}\r\n\r\n//#region selectors\r\n\r\nexport const selectConfigState = createFeatureSelector<ConfigState>(\"config\");\r\n\r\n//#endregion\r\n\r\nexport const getConfigListState = createSelector(selectConfigState, (state: ConfigState) => state.list);\r\nexport const getConfigs = createSelector(getConfigListState, configList.getConfigs);\r\nexport const getAppConfig = createSelector(getConfigListState, configList.getAppConfig);\r\nexport const getAuthenticationModuleConfig = createSelector(\r\n\tgetConfigListState,\r\n\tconfigList.getAuthenticationModuleConfig\r\n);\r\nexport const getUserModuleConfig = createSelector(getConfigListState, configList.getUserModuleConfig);\r\nexport const getlayoutModuleConfig = createSelector(getConfigListState, configList.getlayoutModuleConfig);\r\nexport const getConfigModuleConfig = createSelector(getConfigListState, configList.getConfigModuleConfig);\r\nexport const getFormModuleConfig = createSelector(getConfigListState, configList.getFormModuleConfig);\r\nexport const getSocketModuleConfig = createSelector(getConfigListState, configList.getSocketModuleConfig);\r\n","import { Injectable, Inject } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { ConfigModuleConfig, MODULE_CONFIG_TOKEN, MODULE_DEFAULT_CONFIG } from \"../config.config\";\r\nimport { getConfigModuleConfig } from \"../reducers\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class ConfigurationService {\r\n\tprivate _config: ConfigModuleConfig;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject(this._config);\r\n\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile: ConfigModuleConfig, private store: Store<any>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\t\tthis.store.select(getConfigModuleConfig).subscribe(configConfig => {\r\n\t\t\tif (!configConfig) return;\r\n\t\t\tthis._config = Object.assign({}, this._config, configConfig.Config);\r\n\t\t\tthis.config$.next(this._config);\r\n\t\t});\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Rx\";\r\nimport { ConfigState } from \"../reducers\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { EditConfigApiModel, GetConfigsApiModel, ConfigModel, LayoutConfigModel } from \"../models\";\r\n\r\nimport { GetConfigAction } from \"../actions\";\r\nimport { ConfigurationService } from \"./configuration.service\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class ConfigService {\r\n\tresponseCache: any;\r\n\tconfigsEndpoint: string;\r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate store: Store<ConfigState>,\r\n\t\tprivate configurationService: ConfigurationService\r\n\t) {\r\n\t\tthis.configsEndpoint = this.configurationService.config.env.production\r\n\t\t\t? this.configurationService.config.prod_api_host\r\n\t\t\t: this.configurationService.config.dev_api_host;\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.store.dispatch(new GetConfigAction());\r\n\t\t}, 999);\r\n\t}\r\n\r\n\tgetConfigs(): Observable<ConfigModel<any>[]> {\r\n\t\treturn (\r\n\t\t\tthis.http\r\n\t\t\t\t.get(`${this.configsEndpoint}/api/config`)\r\n\t\t\t\t// .filter(() => this.configurationService.config.dev_api_host != undefined)\r\n\t\t\t\t.take(1)\r\n\t\t\t\t.map((response: GetConfigsApiModel.Response) => {\r\n\t\t\t\t\tif (this.configurationService.config.env.production) {\r\n\t\t\t\t\t\tconst dev_api_host = this.configurationService.config.dev_api_host;\r\n\t\t\t\t\t\tconst prod_api_host = this.configurationService.config.prod_api_host;\r\n\t\t\t\t\t\treturn JSON.parse(\r\n\t\t\t\t\t\t\tJSON.stringify(response).replace(new RegExp(dev_api_host, \"g\"), prod_api_host)\r\n\t\t\t\t\t\t).Result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn response.Result;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {\r\n\t\t\t\t\treturn Observable.throw(err);\r\n\t\t\t\t})\r\n\t\t);\r\n\t}\r\n\tgetConfigByName(name: string): Observable<any> {\r\n\t\treturn this.http.get(`${this.configsEndpoint}/api/config/${name}`).map(response => response).catch(err => {\r\n\t\t\treturn Observable.throw(err);\r\n\t\t});\r\n\t}\r\n\teditConfig(body: EditConfigApiModel.Request): Observable<any> {\r\n\t\tvar model = new EditConfigApiModel.Request(body);\r\n\r\n\t\treturn this.http\r\n\t\t\t.put(`${this.configsEndpoint}/api/config/${model.Name}`, model.getRequestBody())\r\n\t\t\t.map(response => response)\r\n\t\t\t.catch(err => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\tgetLayoutConfigs(): Observable<LayoutConfigModel> {\r\n\t\treturn this.http\r\n\t\t\t.get(`${this.configsEndpoint}/api/layout-config`)\r\n\t\t\t.map((response: LayoutConfigModel) => response)\r\n\t\t\t.catch(err => {\r\n\t\t\t\treturn Observable.throw(err);\r\n\t\t\t});\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { ConfigModel } from \"../../models\";\r\nimport { getConfigs, FeatureState } from \"../../reducers\";\r\n\r\n@Component({\r\n\tselector: \"configs\",\r\n\ttemplate: `<div fxFlexLayout=\"row\" fxLayoutWrap fxLayoutAlign=\"center center\">\r\n  <mat-card class=\"config-box\" *ngFor=\"let config of (configs | async)\" [fxFlex]=\"50\">\r\n      <h3>\r\n        <a [routerLink]=\"['edit' ,  config.Name]\">\r\n          <mat-icon aria-label=\"edit config\">edit</mat-icon>\r\n        </a>\r\n        {{config.Name}}\r\n      </h3>\r\n  </mat-card>\r\n</div>`,\r\n\tstyles: [`:host{width:100%}.config-box{margin:15px}`]\r\n})\r\nexport class ConfigsComponent {\r\n\tconfigs: Observable<ConfigModel<any>[]>;\r\n\tconstructor(private store: Store<FeatureState>) {\r\n\t\tthis.configs = this.store.select(getConfigs);\r\n\t}\r\n}\r\n","import { NgModule, Component, OnInit, Output, EventEmitter, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { FormGroup, FormBuilder, FormControl } from \"@angular/forms\";\r\n\r\nimport { EditConfigApiModel, PartialConfig } from \"../../models\";\r\nimport { ConfigService } from \"../../services/config.service\";\r\n\r\n@Component({\r\n\tselector: \"config-config-edit\",\r\n\ttemplate: `<div >\r\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"edit()\" fxLayout=\"column\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n          <dynamic-config-component-selector (configChanged)=\"configChanged($event)\" [data]=\"partialConfigModel\"></dynamic-config-component-selector>\r\n      </mat-card-content>\r\n      <mat-card-actions fxLayoutAlign=\"center center\">\r\n        <button fxFlex=\"nogrow\" type=\"submit\" mat-raised-button color=\"primary\" (click)=\"edit\">ÙÛØ±Ø§ÛØ´</button>\r\n        <button fxFlex=\"nogrow\" type=\"button\" routerLink=\"/configs\" mat-raised-button>Ø¨Ø§Ø²Ú¯Ø´Øª</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </form>\r\n</div>`\r\n})\r\nexport class ConfigEditComponent implements OnInit {\r\n\tconfigInforamation: any;\r\n\tformGroup: FormGroup = EditConfigApiModel.Request.formGroup;\r\n\tpartialConfigModel: PartialConfig;\r\n\r\n\tconstructor(private configService: ConfigService, private formBuilder: FormBuilder, private route: ActivatedRoute) {\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tconst configName: string = params[\"name\"];\r\n\t\t\tthis.configService.getConfigByName(configName).subscribe(data => {\r\n\t\t\t\tthis.partialConfigModel = {\r\n\t\t\t\t\ttype: data.Result.Name,\r\n\t\t\t\t\tinputs: {\r\n\t\t\t\t\t\tconfigFormGroup: this.formGroup.controls.Config as FormGroup\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tthis.formGroup.patchValue({\r\n\t\t\t\t\t_id: data.Result._id,\r\n\t\t\t\t\tName: data.Result.Name\r\n\t\t\t\t});\r\n\t\t\t\tObject.keys(data.Result.Config).forEach(key => {\r\n\t\t\t\t\tthis.addControl(this.formGroup.controls.Config as FormGroup, key, data.Result.Config[key]);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\taddControl(formGroup: FormGroup, key: string, value: any) {\r\n\t\tif (value instanceof Array) {\r\n\t\t\tformGroup.addControl(key, this.formBuilder.array(value));\r\n\t\t} else if (value instanceof Object) {\r\n\t\t\tformGroup.addControl(key, this.formBuilder.group(value));\r\n\t\t} else {\r\n\t\t\tformGroup.addControl(key, new FormControl(value));\r\n\t\t}\r\n\t}\r\n\r\n\tngOnInit() {}\r\n\tconfigChanged(event: any) {\r\n\t\tthis.formGroup.controls.Config.patchValue(event);\r\n\t}\r\n\tedit() {\r\n\t\tif (!this.formGroup.valid) return;\r\n\t\tthis.configService.editConfig(this.formGroup.value).subscribe(config => {});\r\n\t}\r\n}\r\n","import { NgModule, Component, OnInit, Output, EventEmitter, Input, Injector } from \"@angular/core\";\r\nimport { FormGroup, Validators, FormControl } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\n@Component({\r\n\tselector: \"config-app-config\",\r\n\ttemplate: `<div [formGroup]=\"formGroup\">\r\n    <mat-form-field>\r\n        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"ÙØ§Ù Ù¾Ø±ÙÚÙ\" formControlName=\"AppTitle\">\r\n    </mat-form-field>\r\n</div>`\r\n})\r\nexport class ConfigAppConfigComponent {\r\n\tformGroup: FormGroup = new FormGroup({ AppTitle: new FormControl(\"\", [ Validators.required ]) });\r\n\t@Input()\r\n\tset configFormGroup(configFormGroup: FormGroup) {\r\n\t\tthis.formGroup.patchValue(configFormGroup.value);\r\n\t\tconfigFormGroup.valueChanges.subscribe(data => {\r\n\t\t\tthis.formGroup.patchValue(data);\r\n\t\t});\r\n\t}\r\n\t@Output() configChanged = new EventEmitter();\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.configFormGroup = this.injector.get(\"configFormGroup\");\r\n\t}\r\n}\r\n","import { NgModule, Component, OnInit, Output, EventEmitter, Input, Injector } from \"@angular/core\";\r\nimport { FormGroup, Validators, FormControl, FormArray } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n\tselector: \"config-user-module-config\",\r\n\ttemplate: `<h2>Endpoints</h2>\r\n<div [formGroup]=\"formGroup.get('endpoints')\" fxLayout=\"column\">\r\n        <mat-form-field>\r\n            <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"change password\" formControlName=\"changePassword\">\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"edit profile\" formControlName=\"editProfile\">\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"get user info\" formControlName=\"getUserInfo\">\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"Who Am I\" formControlName=\"whoAmI\">\r\n        </mat-form-field>\r\n</div>\r\n<h2>Forms</h2>\r\n<div [formGroup]=\"formGroup.get('forms')\" fxLayout=\"column\">\r\n    <mat-form-field>\r\n        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"profile edit\" formControlName=\"profile_edit\">\r\n    </mat-form-field>\r\n            <!-- <ngs-form-selector (select)=\"setFormId($event,'signIn')\"></ngs-form-selector> -->\r\n</div>\r\n\r\n\r\n<h2 fxFlex=\"100\">\r\n    Dashobard Links\r\n    <button mat-icon-button color=\"primary\" (click)=\"addMenu()\">\r\n        <mat-icon aria-label=\"icon-button icon\">add</mat-icon>\r\n    </button>\r\n</h2>\r\n<div fxFlex=\"100\" *ngFor=\"let item of $any(formGroup.get('dashboardLinks')).controls\">\r\n    <div [formGroup]=\"item\">\r\n        <mat-form-field>\r\n            <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"route\" formControlName=\"route\">\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"icon\" formControlName=\"icon\">\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"title\" formControlName=\"title\">\r\n        </mat-form-field>\r\n    </div>\r\n</div>`\r\n})\r\nexport class UserModuleConfigComponent {\r\n\tformGroup: FormGroup = new FormGroup({\r\n\t\tendpoints: new FormGroup({\r\n\t\t\tchangePassword: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\teditProfile: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\tgetUserInfo: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\twhoAmI: new FormControl(\"\", [ Validators.required ])\r\n\t\t}),\r\n\t\tforms: new FormGroup({\r\n\t\t\tprofile_edit: new FormControl(\"\", [ Validators.required ])\r\n\t\t}),\r\n\t\tdashboardLinks: new FormArray([])\r\n\t});\r\n\t_configFormGroup: FormGroup;\r\n\t@Input()\r\n\tset configFormGroup(configFormGroup: FormGroup) {\r\n\t\tthis._configFormGroup = configFormGroup;\r\n\t\t(configFormGroup.controls.dashboardLinks as FormArray).controls.forEach(control => {\r\n\t\t\t(this.formGroup.controls.dashboardLinks as FormArray).push(\r\n\t\t\t\tnew FormGroup({\r\n\t\t\t\t\troute: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\t\ticon: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\t\ttitle: new FormControl(\"\", [ Validators.required ])\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tthis.formGroup.patchValue(configFormGroup.value);\r\n\t\tconfigFormGroup.valueChanges.subscribe(data => {\r\n\t\t\tthis.formGroup.patchValue(data);\r\n\t\t});\r\n\t}\r\n\tget configFormGroup() {\r\n\t\treturn this._configFormGroup;\r\n\t}\r\n\t@Output() configChanged = new EventEmitter();\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.configFormGroup = this.injector.get(\"configFormGroup\");\r\n\t}\r\n\taddMenu() {\r\n\t\tvar menuItem = new FormGroup({\r\n\t\t\troute: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\ticon: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\ttitle: new FormControl(\"\", [ Validators.required ])\r\n\t\t});\r\n\r\n\t\t(this.formGroup.get(\"dashboardLinks\") as FormArray).push(menuItem);\r\n\t\t(this.configFormGroup.get(\"dashboardLinks\") as FormArray).push(menuItem);\r\n\t}\r\n}\r\n","import { Component, Output, EventEmitter, Input, Injector } from \"@angular/core\";\r\nimport { FormGroup, Validators, FormControl, FormArray } from \"@angular/forms\";\r\n\r\n@Component({\r\n\ttemplate: `<div fxFlexLayout=\"row\" fxLayoutWrap fxLayoutAlign=\"center center\">\r\n    <div fxFlex=\"100\" fxFlexLayout=\"row\">\r\n        <div [formGroup]=\"formGroup\">\r\n            <mat-form-field>\r\n                <mat-select (change)=\"configChanged.emit(formGroup.value)\" placeholder=\"layout mode\" formControlName=\"layoutMode\" >\r\n                    <mat-option *ngFor=\"let item of layoutModes\" [value]=\"item\">{{item}}</mat-option>\r\n                </mat-select> \r\n            </mat-form-field>\r\n            <mat-slide-toggle  (change)=\"configChanged.emit(formGroup.value)\"  formControlName=\"showLeftNavBar\">show left navbar</mat-slide-toggle>\r\n            <mat-form-field>\r\n                <mat-select (change)=\"configChanged.emit(formGroup.value)\" placeholder=\"main side nav mode\" formControlName=\"mainSideNavMode\" >\r\n                    <mat-option *ngFor=\"let item of sideNavModes\" [value]=\"item\">{{item}}</mat-option>\r\n                </mat-select> \r\n            </mat-form-field>\r\n            <mat-slide-toggle  (change)=\"configChanged.emit(formGroup.value)\"  formControlName=\"showMainSidenav\">show main side nav</mat-slide-toggle>\r\n            <mat-slide-toggle  (change)=\"configChanged.emit(formGroup.value)\"  formControlName=\"stickyLeftNavBar\">sticky left navbar</mat-slide-toggle>\r\n            <mat-slide-toggle  (change)=\"configChanged.emit(formGroup.value)\"  formControlName=\"showSecondSideNav\">show second side nav</mat-slide-toggle>\r\n            <mat-form-field>\r\n                <mat-select (change)=\"configChanged.emit(formGroup.value)\" placeholder=\"second side nav mode\" formControlName=\"secondSideNavMode\" >\r\n                    <mat-option *ngFor=\"let item of sideNavModes\" [value]=\"item\">{{item}}</mat-option>\r\n                </mat-select> \r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n\r\n    <h2 fxFlex=\"100\">\r\n        Menu Items\r\n        <button mat-icon-button color=\"primary\" (click)=\"addMenu()\">\r\n            <mat-icon aria-label=\"icon-button icon\">add</mat-icon>\r\n        </button>\r\n    </h2>\r\n    <div fxFlex=\"100\" *ngFor=\"let item of formGroup.controls.menuItems.controls\">\r\n        <div [formGroup]=\"item\">\r\n            <mat-form-field>\r\n                <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"route\" formControlName=\"route\">\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"icon\" formControlName=\"icon\">\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"title\" formControlName=\"title\">\r\n            </mat-form-field>\r\n            <mat-form-field> \r\n                <mat-select (change)=\"configChanged.emit(formGroup.value)\" placeholder=\"roles\" formControlName=\"roles\" multiple>\r\n                    <mat-option *ngFor=\"let role of roleItems\" [value]=\"role\">{{role}}</mat-option>\r\n                </mat-select> \r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n</div>`\r\n})\r\nexport class LayoutModuleConfigComponent {\r\n\tsideNavModes: string[];\r\n\tlayoutModes: string[];\r\n\tformGroup: any = new FormGroup({\r\n\t\tlayoutMode: new FormControl(\"\", [ Validators.required ]),\r\n\t\tshowLeftNavBar: new FormControl(\"\", [ Validators.required ]),\r\n\t\tmainSideNavMode: new FormControl(\"\", [ Validators.required ]),\r\n\t\tshowMainSidenav: new FormControl(\"\", [ Validators.required ]),\r\n\t\tstickyLeftNavBar: new FormControl(\"\", [ Validators.required ]),\r\n\t\tshowSecondSideNav: new FormControl(\"\", [ Validators.required ]),\r\n\t\tsecondSideNavMode: new FormControl(\"\", [ Validators.required ]),\r\n\t\tmenuItems: new FormArray([])\r\n\t});\r\n\t_configFormGroup: FormGroup;\r\n\t@Input()\r\n\tset configFormGroup(configFormGroup: FormGroup) {\r\n\t\tthis._configFormGroup = configFormGroup;\r\n\t\t(configFormGroup.controls.menuItems as FormArray).controls.forEach((control) => {\r\n\t\t\t(this.formGroup.controls.menuItems as FormArray).push(\r\n\t\t\t\tnew FormGroup({\r\n\t\t\t\t\troute: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\t\ticon: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\t\t\t// roles: new FormArray(control.value.roles.map((i) => new FormControl(\"Admin\"))),\r\n\t\t\t\t\troles: new FormControl(),\r\n\t\t\t\t\ttitle: new FormControl(\"\", [ Validators.required ])\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tthis.formGroup.patchValue(configFormGroup.value);\r\n\t\tconfigFormGroup.valueChanges.subscribe((data) => this.formGroup.patchValue(data));\r\n\t}\r\n\tget configFormGroup() {\r\n\t\treturn this._configFormGroup;\r\n\t}\r\n\t@Output() configChanged = new EventEmitter();\r\n\r\n\troleItems: string[] = [ \"Admin\", \"User\" ];\r\n\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.sideNavModes = [ \"over\", \"push\", \"side\" ];\r\n\t\tthis.layoutModes = [ \"with-margin\", \"without-margin\", \"default\" ];\r\n\t\tthis.configFormGroup = this.injector.get(\"configFormGroup\");\r\n\t}\r\n\taddMenu() {\r\n\t\tvar menuItem = new FormGroup({\r\n\t\t\troute: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\ticon: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\troles: new FormControl(),\r\n\t\t\ttitle: new FormControl(\"\", [ Validators.required ])\r\n\t\t});\r\n\r\n\t\t(this.formGroup.get(\"menuItems\") as FormArray).push(menuItem);\r\n\t\t(this.configFormGroup.get(\"menuItems\") as FormArray).push(menuItem);\r\n\t}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\n@Component({\r\n\tselector: \"config-module-container\",\r\n\ttemplate: `<div fxLayoutAlign=\"\" fxflex=\"100\" fxLayout=\"column\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n`\r\n})\r\nexport class ConfigModuleContainerComponent implements OnInit {\r\n\tconstructor() {}\r\n\r\n\tngOnInit() {}\r\n}\r\n","import { NgModule, Component, OnInit, Output, EventEmitter, Input, Injector } from \"@angular/core\";\r\nimport { FormGroup, Validators, FormControl } from \"@angular/forms\";\r\nimport { Store } from \"@ngrx/store\";\r\n\r\n@Component({\r\n\tselector: \"config-authentication-module-config\",\r\n\ttemplate: `<h2>Endpoints</h2>\r\n<div [formGroup]=\"formGroup.controls.endpoints\" fxLayout=\"column\">\r\n    <mat-form-field>\r\n        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"sign in\" formControlName=\"signIn\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"sign out\" formControlName=\"signOut\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"who am i\" formControlName=\"whoAmI\">\r\n    </mat-form-field>\r\n</div>\r\n<h2>Forms</h2>\r\n<div [formGroup]=\"formGroup.controls.forms\" fxLayout=\"column\">\r\n    <mat-form-field>\r\n        <input type=\"text\" (change)=\"configChanged.emit(formGroup.value)\" matInput placeholder=\"SignIn Forms\" formControlName=\"signIn\">\r\n    </mat-form-field>\r\n            <!-- <ngs-form-selector (select)=\"setFormId($event,'signIn')\"></ngs-form-selector> -->\r\n</div>`\r\n})\r\nexport class AuthenticationModuleConfigComponent {\r\n\tformGroup: FormGroup = new FormGroup({\r\n\t\tendpoints: new FormGroup({\r\n\t\t\tsignIn: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\tsignOut: new FormControl(\"\", [ Validators.required ]),\r\n\t\t\twhoAmI: new FormControl(\"\", [ Validators.required ])\r\n\t\t}),\r\n\t\tforms: new FormGroup({\r\n\t\t\tsignIn: new FormControl(\"\", [ Validators.required ])\r\n\t\t})\r\n\t});\r\n\t@Input()\r\n\tset configFormGroup(configFormGroup: FormGroup) {\r\n\t\tthis.formGroup.patchValue(configFormGroup.value);\r\n\t\tconfigFormGroup.valueChanges.subscribe(data => {\r\n\t\t\tthis.formGroup.patchValue(data);\r\n\t\t});\r\n\t}\r\n\t@Output() configChanged = new EventEmitter();\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.configFormGroup = this.injector.get(\"configFormGroup\");\r\n\t}\r\n\tsetFormId(formId: string, formName: string) {\r\n\t\tthis.formGroup.patchValue({ [formName]: formId });\r\n\t}\r\n}\r\n","import {\r\n\tComponent,\r\n\tOnInit,\r\n\tInput,\r\n\tAfterViewInit,\r\n\tComponentFactoryResolver,\r\n\tViewChild,\r\n\tViewContainerRef,\r\n\tReflectiveInjector,\r\n\tOnDestroy,\r\n\tOutput,\r\n\tEventEmitter\r\n} from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { PartialConfig } from \"../../models\";\r\nimport { AuthenticationModuleConfigComponent } from \"../../dumb-components/authentication-module-config/authentication-module-config.component\";\r\nimport { ConfigAppConfigComponent } from \"../../dumb-components/app-config/app-config.component\";\r\nimport { UserModuleConfigComponent } from \"../../dumb-components/user-module-config/user-module-config.component\";\r\nimport { LayoutModuleConfigComponent } from \"../../dumb-components/layout-config/layout-module-config.component\";\r\n\r\n@Component({\r\n\tselector: \"dynamic-config-component-selector\",\r\n\ttemplate: `<div #dynamicComponentContainer></div>`,\r\n\tstyles: [`:host{width:100%}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}`],\r\n\tentryComponents: [\r\n\t\tAuthenticationModuleConfigComponent,\r\n\t\tConfigAppConfigComponent,\r\n\t\tUserModuleConfigComponent,\r\n\t\tLayoutModuleConfigComponent\r\n\t]\r\n})\r\nexport class DynamicConfigComponentSelectorComponent implements AfterViewInit {\r\n\ttypeMapToDiagram: any = {\r\n\t\tauthentication_module_config: AuthenticationModuleConfigComponent,\r\n\t\tapp_config: ConfigAppConfigComponent,\r\n\t\tuser_module_config: UserModuleConfigComponent,\r\n\t\tlayout_config: LayoutModuleConfigComponent\r\n\t};\r\n\t@ViewChild(\"dynamicComponentContainer\", { read: ViewContainerRef })\r\n\tdynamicComponentContainer: ViewContainerRef;\r\n\t@Output() configChanged = new EventEmitter();\r\n\tcurrentComponent: any = null;\r\n\t@Input()\r\n\tset data(data: PartialConfig) {\r\n\t\tif (!data || Object.keys(data).length == 0) return;\r\n\t\tif (!(data.type in this.typeMapToDiagram)) {\r\n\t\t\tif (this.currentComponent) this.currentComponent.destroy();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet _component: any = this.typeMapToDiagram[data.type];\r\n\t\tlet inputProviders = Object.keys(data.inputs).map(inputName => {\r\n\t\t\treturn { provide: inputName, useValue: (data.inputs as any)[inputName] };\r\n\t\t});\r\n\t\tlet resolvedInputs = ReflectiveInjector.resolve(inputProviders);\r\n\r\n\t\tlet injector = ReflectiveInjector.fromResolvedProviders(\r\n\t\t\tresolvedInputs,\r\n\t\t\tthis.dynamicComponentContainer.parentInjector\r\n\t\t);\r\n\t\tlet factory = this.resolver.resolveComponentFactory(_component);\r\n\r\n\t\tlet component = factory.create(injector);\r\n\t\t(<any>component.instance).configChanged.subscribe((data: any) => {\r\n\t\t\tthis.configChanged.emit(data);\r\n\t\t});\r\n\t\tthis.dynamicComponentContainer.insert(component.hostView);\r\n\r\n\t\tif (this.currentComponent) {\r\n\t\t\tthis.currentComponent.destroy();\r\n\t\t}\r\n\r\n\t\tthis.currentComponent = component;\r\n\t}\r\n\tconstructor(private resolver: ComponentFactoryResolver) {}\r\n\tngAfterViewInit() {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Action } from \"@ngrx/store\";\r\nimport { Actions, Effect } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs/observable/of\";\r\n\r\nimport { ConfigActionTypes, ConfigLoadedSucceedAction, ConfigLoadedFailedAction } from \"../actions\";\r\nimport { ConfigService } from \"../services/config.service\";\r\nimport { GetConfigsApiModel } from \"../models\";\r\nimport { map, switchMap, catchError } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class LoadConfigEffects {\r\n\tconstructor(private actions$: Actions<any>, private configService: ConfigService) {}\r\n\r\n\t@Effect()\r\n\tgetConfigs$ = this.actions$\r\n\t\t.ofType(ConfigActionTypes.GET_CONFIGS)\r\n\t\t.pipe(\r\n\t\t\tmap(action => action.payload),\r\n\t\t\tswitchMap((data: GetConfigsApiModel.Request) => this.configService.getConfigs()),\r\n\t\t\tmap(configs => new ConfigLoadedSucceedAction(configs)),\r\n\t\t\tcatchError(() => Observable.of(new ConfigLoadedFailedAction()))\r\n\t\t);\r\n}\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ConfigsComponent, ConfigEditComponent, ConfigModuleContainerComponent } from './smart-components';\r\n\r\nconst routes: Routes = [\r\n        {\r\n                path: 'configs',\r\n                component: ConfigModuleContainerComponent,\r\n                children: [\r\n                        {\r\n                                path: '',\r\n                                component: ConfigsComponent\r\n                        },\r\n                        {\r\n                                path: 'edit/:name',\r\n                                component: ConfigEditComponent\r\n                        }\r\n                ]\r\n        }\r\n];\r\n\r\nexport const RoutingModule: ModuleWithProviders = RouterModule.forChild(routes);\r\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport {\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSnackBarModule,\r\n\tMatSidenavModule,\r\n\tMatExpansionModule,\r\n\tMatSelectModule,\r\n\tMatFormFieldModule,\r\n\tMatListModule,\r\n\tMatMenuModule,\r\n\tMatRadioModule,\r\n\tMatInputModule,\r\n\tMatToolbarModule,\r\n\tMatDatepickerModule,\r\n\tMatProgressBarModule,\r\n\tMatSlideToggleModule\r\n} from \"@angular/material\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\n\r\nimport { GetConfigsApiModel } from \"./models\";\r\nimport { ConfigModuleConfig, MODULE_CONFIG_TOKEN, MODULE_DEFAULT_CONFIG } from \"./config.config\";\r\nimport { ConfigsComponent } from \"./smart-components/configs/configs.component\";\r\nimport { ConfigEditComponent } from \"./smart-components/config-edit/config-edit.component\";\r\nimport { ConfigAppConfigComponent } from \"./dumb-components/app-config/app-config.component\";\r\nimport { UserModuleConfigComponent } from \"./dumb-components/user-module-config/user-module-config.component\";\r\nimport { LayoutModuleConfigComponent } from \"./dumb-components/layout-config/layout-module-config.component\";\r\nimport { ConfigModuleContainerComponent } from \"./smart-components/config-module-container/config-module-container.component\";\r\nimport { AuthenticationModuleConfigComponent } from \"./dumb-components/authentication-module-config/authentication-module-config.component\";\r\nimport { DynamicConfigComponentSelectorComponent } from \"./smart-components/dynamic-config-component-selector/dynamic-config-component-selector.component\";\r\nimport { LoadConfigEffects } from \"./effects/load-config.effects\";\r\nimport { ConfigReducers } from \"./reducers\";\r\nimport { RoutingModule } from \"./config.routing-module\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tRouterModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tHttpClientModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatSidenavModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSelectModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatListModule,\r\n\t\tMatMenuModule,\r\n\t\tMatRadioModule,\r\n\t\tMatInputModule,\r\n\t\tMatSlideToggleModule,\r\n\t\tMatToolbarModule,\r\n\t\tMatDatepickerModule,\r\n\t\tMatProgressBarModule,\r\n\t\tBrowserAnimationsModule,\r\n\t\tRoutingModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tConfigsComponent,\r\n\t\tConfigEditComponent,\r\n\t\tConfigAppConfigComponent,\r\n\t\tUserModuleConfigComponent,\r\n\t\tLayoutModuleConfigComponent,\r\n\t\tConfigModuleContainerComponent,\r\n\t\tAuthenticationModuleConfigComponent,\r\n\t\tDynamicConfigComponentSelectorComponent\r\n\t],\r\n\tproviders: []\r\n})\r\nexport class NgsConfigModule {\r\n\tstatic forRoot(config: ConfigModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: RootNgsConfigModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config } ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tNgsConfigModule,\r\n\t\tStoreModule.forFeature(\"config\", ConfigReducers),\r\n\t\tEffectsModule.forFeature([ LoadConfigEffects ])\r\n\t\t// RoutingModule\r\n\t],\r\n\texports: [ NgsConfigModule ]\r\n})\r\nexport class RootNgsConfigModule {}\r\n"],"names":["GetConfigsApiModel","FormGroup","FormControl","Validators","EditConfigApiModel","InjectionToken","config.ConfigActionTypes","configList.Reducer","createFeatureSelector","createSelector","getConfigs","configList.getConfigs","getAppConfig","configList.getAppConfig","getAuthenticationModuleConfig","configList.getAuthenticationModuleConfig","getUserModuleConfig","configList.getUserModuleConfig","getlayoutModuleConfig","configList.getlayoutModuleConfig","getConfigModuleConfig","configList.getConfigModuleConfig","getFormModuleConfig","configList.getFormModuleConfig","getSocketModuleConfig","configList.getSocketModuleConfig","BehaviorSubject","Injectable","Inject","Store","Observable","HttpClient","Component","FormBuilder","ActivatedRoute","EventEmitter","Injector","Input","Output","FormArray","ReflectiveInjector","ComponentFactoryResolver","ViewChild","ViewContainerRef","map","switchMap","catchError","Actions","Effect","RouterModule","NgModule","CommonModule","FormsModule","ReactiveFormsModule","HttpClientModule","FlexLayoutModule","MatIconModule","MatButtonModule","MatCardModule","MatSnackBarModule","MatSidenavModule","MatExpansionModule","MatSelectModule","MatFormFieldModule","MatListModule","MatMenuModule","MatRadioModule","MatInputModule","MatSlideToggleModule","MatToolbarModule","MatDatepickerModule","MatProgressBarModule","BrowserAnimationsModule","StoreModule","EffectsModule"],"mappings":"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"}
