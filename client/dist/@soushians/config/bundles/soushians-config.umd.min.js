!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/forms"),require("@angular/core"),require("@ngrx/store"),require("@angular/common/http"),require("rxjs"),require("rxjs/operators"),require("rxjs/BehaviorSubject"),require("@angular/common"),require("@angular/router"),require("@angular/flex-layout"),require("@angular/platform-browser/animations"),require("@angular/material"),require("@ngrx/effects"),require("rxjs/observable/of")):"function"==typeof define&&define.amd?define("@soushians/config",["exports","@angular/forms","@angular/core","@ngrx/store","@angular/common/http","rxjs","rxjs/operators","rxjs/BehaviorSubject","@angular/common","@angular/router","@angular/flex-layout","@angular/platform-browser/animations","@angular/material","@ngrx/effects","rxjs/observable/of"],o):o(((t=t||self).soushians=t.soushians||{},t.soushians.config={}),t.ng.forms,t.ng.core,t.store,t.ng.common.http,t.rxjs,t.rxjs.operators,t.rxjs.BehaviorSubject,t.ng.common,t.ng.router,t.ng["flex-layout"],t.ng.platformBrowser.animations,t.ng.material,t.effects,t.rxjs["observable/of"])}(this,(function(t,o,r,e,n,i,a,u,c,f,s,m,l,d,p){"use strict";var g=function(){return(g=Object.assign||function(t){for(var o,r=1,e=arguments.length;r<e;r++)for(var n in o=arguments[r])Object.prototype.hasOwnProperty.call(o,n)&&(t[n]=o[n]);return t}).apply(this,arguments)};function h(t,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,o)}var y=function(){};(function(t){var o=function(){function t(t){var o=this;void 0===t&&(t={}),Object.keys(t).forEach((function(r){return o[r]=t[r]}))}return t.prototype.getRequestBody=function(){return{}},t}();t.Request=o;var r=function(){};t.Response=r})(t.GetConfigsApiModel||(t.GetConfigsApiModel={})),function(t){var r=function(){function t(t){var o=this;void 0===t&&(t={}),Object.keys(t).forEach((function(r){return o[r]=t[r]}))}return t.prototype.getRequestBody=function(){return{Name:this.Name,Config:this.Config}},Object.defineProperty(t,"formGroup",{get:function(){return new o.FormGroup({Name:new o.FormControl("",[o.Validators.required]),Config:new o.FormGroup({})})},enumerable:!0,configurable:!0}),t}();t.Request=r;var e=function(){};t.Response=e}(t.EditConfigApiModel||(t.EditConfigApiModel={}));var v={env:{production:!1,frontend_server:"config/module/front_end/did/not/set"}},C=new r.InjectionToken("UserModuleConfig"),x={GET_CONFIGS:"[CONFIG] get config",CONFIG_LOADED_SUCCEED:"[CONFIG] load config succeed",UPDATE_CONFIG:"[CONFIG] update config",CONFIG_LOADED_FAILED:"[CONFIG] load config failed"},b=function(){this.type=x.GET_CONFIGS};var w=function(t){this.payload=t,this.type=x.CONFIG_LOADED_SUCCEED};var G=function(){this.type=x.CONFIG_LOADED_FAILED};var F={data:[]};function I(t,o){switch(void 0===t&&(t=F),o.type){case x.CONFIG_LOADED_SUCCEED:return g({},t,{data:o.payload});case x.UPDATE_CONFIG:return g({},t,{data:t.data.map((function(t){return t._id==o.payload._id&&(t.Config=o.payload.Config),t}))});default:return t}}var M=function(t){return t.data},L=function(t){return t.data.find((function(t){return"app_config"==t.Name}))},_=function(t){return t.data.find((function(t){return"authentication_module_config"==t.Name}))},N=function(t){return t.data.find((function(t){return"user_module_config"==t.Name}))},j=function(t){return t.data.find((function(t){return"config_module_config"==t.Name}))},O=function(t){return t.data.find((function(t){return"form_module_config"==t.Name}))},S=function(t){return t.data.find((function(t){return"socket_module_config"==t.Name}))};var q={list:I};var E=e.createFeatureSelector("config"),V=e.createSelector(E,(function(t){return t.list})),A=e.createSelector(V,M),k=e.createSelector(V,L),R=e.createSelector(V,_),D=e.createSelector(V,N),P=e.createSelector(V,j),B=e.createSelector(V,O),T=e.createSelector(V,S),U=function(){function t(t,o){var r=this;this.store=o,this.config$=new u.BehaviorSubject(this._config),this._config=Object.assign({},v,t),this.config$.next(this._config),this.store.select(P).subscribe((function(t){t&&(r._config=Object.assign({},r._config,t.Config),r.config$.next(r._config))}))}return Object.defineProperty(t.prototype,"config",{get:function(){return this._config},enumerable:!0,configurable:!0}),t.decorators=[{type:r.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:void 0,decorators:[{type:r.Inject,args:[C]}]},{type:e.Store}]},t.ngInjectableDef=r.ɵɵdefineInjectable({factory:function(){return new t(r.ɵɵinject(C),r.ɵɵinject(e.Store))},token:t,providedIn:"root"}),t}();var $=function(){function o(t,o,r){var e=this;this.http=t,this.store=o,this.configurationService=r,setTimeout((function(){e.store.dispatch(new b)}),999)}return o.prototype.getConfigs=function(){return this.http.get(this.configurationService.config.env.frontend_server+"/api/config").pipe(a.take(1),a.map((function(t){return t.Result})),a.catchError((function(t){return i.Observable.throw(t)})))},o.prototype.getConfigByName=function(t){return this.http.get(this.configurationService.config.env.frontend_server+"/api/config/"+t).pipe(a.map((function(t){return t})),a.catchError((function(t){return i.Observable.throw(t)})))},o.prototype.editConfig=function(o){var r=new t.EditConfigApiModel.Request(o);return this.http.put(this.configurationService.config.env.frontend_server+"/api/config/"+r.Name,r.getRequestBody()).pipe(a.map((function(t){return t})),a.catchError((function(t){return i.Observable.throw(t)})))},o.prototype.getLayoutConfigs=function(){return this.http.get(this.configurationService.config.env.frontend_server+"/api/layout-config").pipe(a.map((function(t){return t})),a.catchError((function(t){return i.Observable.throw(t)})))},o.decorators=[{type:r.Injectable,args:[{providedIn:"root"}]}],o.ctorParameters=function(){return[{type:n.HttpClient},{type:e.Store},{type:U}]},o.ngInjectableDef=r.ɵɵdefineInjectable({factory:function(){return new o(r.ɵɵinject(n.HttpClient),r.ɵɵinject(e.Store),r.ɵɵinject(U))},token:o,providedIn:"root"}),o}();var H=function(){function t(t){this.store=t,this.configs=this.store.select(A)}return t.decorators=[{type:r.Component,args:[{selector:"configs",template:'<div fxLayout="row" fxLayoutAlign="center" fxLayoutGap="25px" class="main-container">\r\n\r\n  <div class="content-action">\r\n    <mat-card class="with-sticky-action">\r\n      <mat-card-header>\r\n        <mat-card-title fxLayout="row" fxLayoutGap="5px">\r\n          <mat-icon>settings_input_component</mat-icon>\r\n          <span>تنظیمات سامانه و ماژول ها</span>\r\n        </mat-card-title>\r\n        \x3c!-- <mat-card-subtitle fxLayout="row" fxLayoutAlign="space-between center">\r\n          <span>\r\n            شامل تمامی درخواست‌ها از قبیل دائری، جمع‌آوری و ...\r\n          </span>\r\n        </mat-card-subtitle> --\x3e\r\n      </mat-card-header>\r\n\r\n      <div fxLayout="row wrap" fxLayoutGap="10px" fxLayoutAlign="start">\r\n\r\n        <button fxFlex.lt-lg="18" fxFlex.lg="23.5" fxFlex.md="31" fxFlex.sm="48" fxFlex.xs="100" class=\'link\'\r\n          mat-raised-button [routerLink]="[\'edit\' ,  config.Name]" *ngFor="let config of (configs | async)">\r\n          <div fxLayout=\'column\' fxLayoutAlign=\'center center\'>\r\n            <mat-icon color=\'primary\'>settings</mat-icon>\r\n            <h3 class=\'title\'>{{config.Name}}</h3>\r\n          </div>\r\n        </button>\r\n\r\n      </div>\r\n\r\n    </mat-card>\r\n  </div>\r\n</div>',styles:[":host{width:100%}.config-box{margin:15px}button.link{padding:25px 15px;margin:.5%;box-sizing:border-box}button mat-icon{font-size:34px;width:34px;height:34px}"]}]}],t.ctorParameters=function(){return[{type:e.Store}]},t}();var z=function(){function t(t){this.injector=t,this.formGroup=new o.FormGroup({endpoints:new o.FormGroup({signIn:new o.FormControl("",[o.Validators.required]),signOut:new o.FormControl("",[o.Validators.required]),whoAmI:new o.FormControl("",[o.Validators.required]),captchaUrl:new o.FormControl("",[o.Validators.required])}),forms:new o.FormGroup({signIn:new o.FormControl("",[o.Validators.required])})}),this.configChanged=new r.EventEmitter,this.configFormGroup=this.injector.get("configFormGroup")}return Object.defineProperty(t.prototype,"configFormGroup",{set:function(t){var o=this;this.formGroup.patchValue(t.value),t.valueChanges.subscribe((function(t){o.formGroup.patchValue(t)}))},enumerable:!0,configurable:!0}),t.prototype.setFormId=function(t,o){var r;this.formGroup.patchValue(((r={})[o]=t,r))},t.decorators=[{type:r.Component,args:[{selector:"config-authentication-module-config",template:'<div fxLayout="row" fxLayoutAlign="center" fxLayoutGap="25px" class="main-container">\r\n\r\n    <div class="content-action">\r\n        <mat-card class="with-sticky-action">\r\n            <mat-card-header>\r\n                <mat-card-title fxLayout="row" fxLayoutGap="5px">\r\n                    <mat-icon>settings_input_component</mat-icon>\r\n                    <span>تنظیمات ماژول احراز هویت</span>\r\n                </mat-card-title>\r\n                \x3c!-- <mat-card-subtitle fxLayout="row" fxLayoutAlign="space-between center">\r\n                    <span>\r\n                        شامل تمامی درخواست‌ها از قبیل دائری، جمع‌آوری و ...\r\n                    </span>\r\n                </mat-card-subtitle> --\x3e\r\n            </mat-card-header>\r\n\r\n            <div>\r\n\r\n                <h2>Endpoints</h2>\r\n                <div [formGroup]="formGroup.controls.endpoints" fxLayout="column">\r\n                    <mat-form-field>\r\n                        <input type="text" (change)="configChanged.emit(formGroup.value)" matInput placeholder="sign in"\r\n                            formControlName="signIn">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input type="text" (change)="configChanged.emit(formGroup.value)" matInput placeholder="sign out"\r\n                            formControlName="signOut">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input type="text" (change)="configChanged.emit(formGroup.value)" matInput placeholder="who am i"\r\n                            formControlName="whoAmI">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input type="text" (change)="configChanged.emit(formGroup.value)" matInput placeholder="captcha url"\r\n                            formControlName="captchaUrl">\r\n                    </mat-form-field>\r\n                </div>\r\n                <h2>Forms</h2>\r\n                <div [formGroup]="formGroup.controls.forms" fxLayout="column">\r\n                    <mat-form-field>\r\n                        <input type="text" (change)="configChanged.emit(formGroup.value)" matInput placeholder="SignIn Forms"\r\n                            formControlName="signIn">\r\n                    </mat-form-field>\r\n                    \x3c!-- <ngs-form-selector (select)="setFormId($event,\'signIn\')"></ngs-form-selector> --\x3e\r\n                </div>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>'}]}],t.ctorParameters=function(){return[{type:r.Injector}]},t.propDecorators={configFormGroup:[{type:r.Input}],configChanged:[{type:r.Output}]},t}();var K=function(){function t(t){this.injector=t,this.formGroup=new o.FormGroup({AppTitle:new o.FormControl("",[o.Validators.required])}),this.configChanged=new r.EventEmitter,this.configFormGroup=this.injector.get("configFormGroup")}return Object.defineProperty(t.prototype,"configFormGroup",{set:function(t){var o=this;this.formGroup.patchValue(t.value),t.valueChanges.subscribe((function(t){o.formGroup.patchValue(t)}))},enumerable:!0,configurable:!0}),t.decorators=[{type:r.Component,args:[{selector:"config-app-config",template:'<div fxLayout="row" fxLayoutAlign="center" fxLayoutGap="25px" class="main-container">\r\n\r\n    <div class="content-action">\r\n        <mat-card class="with-sticky-action">\r\n            <mat-card-header>\r\n                <mat-card-title fxLayout="row" fxLayoutGap="5px">\r\n                    <mat-icon>settings_input_component</mat-icon>\r\n                    <span>تنظیمات سامانه</span>\r\n                </mat-card-title>\r\n                <mat-card-subtitle fxLayout="row" fxLayoutAlign="space-between center">\r\n                    <span>\r\n                        شامل تمامی درخواست‌ها از قبیل دائری، جمع‌آوری و ...\r\n                    </span>\r\n                </mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <div fxLayout="row wrap" fxLayoutGap="10px" fxLayoutAlign="start">\r\n\r\n                <div [formGroup]="formGroup">\r\n                    <mat-form-field>\r\n                        <input type="text" (change)="configChanged.emit(formGroup.value)" matInput placeholder="نام پروژه"\r\n                            formControlName="AppTitle">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n        </mat-card>\r\n    </div>\r\n</div>'}]}],t.ctorParameters=function(){return[{type:r.Injector}]},t.propDecorators={configFormGroup:[{type:r.Input}],configChanged:[{type:r.Output}]},t}();var W=function(){function t(t){this.injector=t,this.formGroup=new o.FormGroup({endpoints:new o.FormGroup({changePassword:new o.FormControl("",[o.Validators.required]),editProfile:new o.FormControl("",[o.Validators.required]),getUserInfo:new o.FormControl("",[o.Validators.required]),whoAmI:new o.FormControl("",[o.Validators.required])}),forms:new o.FormGroup({profile_edit:new o.FormControl("",[o.Validators.required])}),dashboardLinks:new o.FormArray([])}),this.configChanged=new r.EventEmitter,this.configFormGroup=this.injector.get("configFormGroup")}return Object.defineProperty(t.prototype,"configFormGroup",{get:function(){return this._configFormGroup},set:function(t){var r=this;this._configFormGroup=t,t.controls.dashboardLinks.controls.forEach((function(t){r.formGroup.controls.dashboardLinks.push(new o.FormGroup({route:new o.FormControl("",[o.Validators.required]),icon:new o.FormControl("",[o.Validators.required]),title:new o.FormControl("",[o.Validators.required])}))})),this.formGroup.patchValue(t.value),t.valueChanges.subscribe((function(t){r.formGroup.patchValue(t)}))},enumerable:!0,configurable:!0}),t.prototype.addMenu=function(){var t=new o.FormGroup({route:new o.FormControl("",[o.Validators.required]),icon:new o.FormControl("",[o.Validators.required]),title:new o.FormControl("",[o.Validators.required])});this.formGroup.get("dashboardLinks").push(t),this.configFormGroup.get("dashboardLinks").push(t)},t.decorators=[{type:r.Component,args:[{selector:"config-user-module-config",template:'<div fxLayout="row" fxLayoutAlign="center" fxLayoutGap="25px" class="main-container">\r\n\r\n    <div class="content-action">\r\n        <mat-card fxLayout="column" fxLayoutGap="10px" fxLayoutAlign="" class="with-sticky-action">\r\n            <h2>Endpoints</h2>\r\n            <div [formGroup]="formGroup.get(\'endpoints\')" fxLayout="column">\r\n                <mat-form-field>\r\n                    <input type="text" (change)="configChanged.emit(formGroup.value)" matInput placeholder="change password"\r\n                        formControlName="changePassword">\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input type="text" (change)="configChanged.emit(formGroup.value)" matInput placeholder="edit profile"\r\n                        formControlName="editProfile">\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input type="text" (change)="configChanged.emit(formGroup.value)" matInput placeholder="get user info"\r\n                        formControlName="getUserInfo">\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input type="text" (change)="configChanged.emit(formGroup.value)" matInput placeholder="Who Am I"\r\n                        formControlName="whoAmI">\r\n                </mat-form-field>\r\n            </div>\r\n            <h2>Forms</h2>\r\n            <div [formGroup]="formGroup.get(\'forms\')" fxLayout="column">\r\n                <mat-form-field>\r\n                    <input type="text" (change)="configChanged.emit(formGroup.value)" matInput placeholder="profile edit"\r\n                        formControlName="profile_edit">\r\n                </mat-form-field>\r\n                \x3c!-- <ngs-form-selector (select)="setFormId($event,\'signIn\')"></ngs-form-selector> --\x3e\r\n            </div>\r\n\r\n\r\n            <h2 fxFlex="100">\r\n                Dashobard Links\r\n                <button mat-icon-button color="primary" (click)="addMenu()">\r\n                    <mat-icon aria-label="icon-button icon">add</mat-icon>\r\n                </button>\r\n            </h2>\r\n            <div fxFlex="100" *ngFor="let item of $any(formGroup.get(\'dashboardLinks\')).controls">\r\n                <div [formGroup]="item">\r\n                    <mat-form-field>\r\n                        <input type="text" (change)="configChanged.emit(formGroup.value)" matInput placeholder="route"\r\n                            formControlName="route">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input type="text" (change)="configChanged.emit(formGroup.value)" matInput placeholder="icon"\r\n                            formControlName="icon">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input type="text" (change)="configChanged.emit(formGroup.value)" matInput placeholder="title"\r\n                            formControlName="title">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>'}]}],t.ctorParameters=function(){return[{type:r.Injector}]},t.propDecorators={configFormGroup:[{type:r.Input}],configChanged:[{type:r.Output}]},t}();var J=function(){function t(t,e){this.injector=t,this.store=e,this.configChanged=new r.EventEmitter,this.formGroup=new o.FormGroup({layoutMode:new o.FormControl("",[o.Validators.required]),showLeftNavBar:new o.FormControl("",[o.Validators.required]),mainSideNavMode:new o.FormControl("",[o.Validators.required]),showMainSidenav:new o.FormControl("",[o.Validators.required]),stickyLeftNavBar:new o.FormControl("",[o.Validators.required]),showSecondSideNav:new o.FormControl("",[o.Validators.required]),secondSideNavMode:new o.FormControl("",[o.Validators.required]),menuItems:new o.FormArray([])}),this.sideNavModes=["over","push","side"],this.layoutModes=["with-margin","without-margin","default"],this.configFormGroup=this.injector.get("configFormGroup"),this.roleItems$=this.store.select(k).pipe(a.filter((function(t){return null!=t})),a.map((function(t){return t.Config.Roles})))}return Object.defineProperty(t.prototype,"configFormGroup",{get:function(){return this._configFormGroup},set:function(t){var r=this;this._configFormGroup=t,t.controls.menuItems.controls.forEach((function(t){r.formGroup.controls.menuItems.push(new o.FormGroup({route:new o.FormControl("",[o.Validators.required]),icon:new o.FormControl("",[o.Validators.required]),roles:new o.FormControl,title:new o.FormControl("",[o.Validators.required])}))})),this.formGroup.patchValue(t.value),t.valueChanges.subscribe((function(t){return r.formGroup.patchValue(t)}))},enumerable:!0,configurable:!0}),t.prototype.addMenu=function(){var t=new o.FormGroup({route:new o.FormControl("",[o.Validators.required]),icon:new o.FormControl("",[o.Validators.required]),roles:new o.FormControl,title:new o.FormControl("",[o.Validators.required])});this.formGroup.get("menuItems").push(t),this.configFormGroup.get("menuItems").push(t)},t.prototype.removeMenu=function(t){var o=this.formGroup.get("menuItems").controls.indexOf(t);this.formGroup.get("menuItems").removeAt(o)},t.decorators=[{type:r.Component,args:[{template:'<div fxLayout="row" fxLayoutAlign="center" fxLayoutGap="25px" class="main-container">\r\n\r\n    <div class="content-action">\r\n        <mat-card class="with-sticky-action">\r\n            <mat-card-header>\r\n                <mat-card-title fxLayout="row" fxLayoutGap="5px">\r\n                    <mat-icon>settings_input_component</mat-icon>\r\n                    <span>تنظیمات ماژول Layout</span>\r\n                </mat-card-title>\r\n                <mat-card-subtitle fxLayout="row" fxLayoutAlign="space-between center">\r\n                    <span>\r\n                        شامل تمامی درخواست‌ها از قبیل دائری، جمع‌آوری و ...\r\n                    </span>\r\n                </mat-card-subtitle>\r\n            </mat-card-header>\r\n            <div fxLayout="row wrap" fxLayoutAlign="center" fxLayoutGap="25px">\r\n                <mat-card fxFlex="20" fxFlexLayout="row">\r\n                    <div [formGroup]="formGroup">\r\n                        <mat-form-field>\r\n                            <mat-select placeholder="layout mode" formControlName="layoutMode">\r\n                                <mat-option *ngFor="let item of layoutModes" [value]="item">{{item}}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-slide-toggle formControlName="showLeftNavBar">show left navbar</mat-slide-toggle>\r\n                        <mat-form-field>\r\n                            <mat-select placeholder="main side nav mode" formControlName="mainSideNavMode">\r\n                                <mat-option *ngFor="let item of sideNavModes" [value]="item">{{item}}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <mat-slide-toggle formControlName="showMainSidenav">show main side nav</mat-slide-toggle>\r\n                        <mat-slide-toggle formControlName="stickyLeftNavBar">sticky left navbar</mat-slide-toggle>\r\n                        <mat-slide-toggle formControlName="showSecondSideNav">show second side nav</mat-slide-toggle>\r\n                        <mat-form-field>\r\n                            <mat-select placeholder="second side nav mode" formControlName="secondSideNavMode">\r\n                                <mat-option *ngFor="let item of sideNavModes" [value]="item">{{item}}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </mat-card>\r\n\r\n                <mat-card fxFlex fxLayout="column">\r\n                    <h2 fxFlex>\r\n                        Menu Items\r\n                        <button mat-icon-button color="primary" (click)="addMenu()">\r\n                            <mat-icon aria-label="icon-button icon">add</mat-icon>\r\n                        </button>\r\n                    </h2>\r\n                    <div fxFlex="nogrow" *ngFor="let item of $any(formGroup).get(\'menuItems\').controls">\r\n                        <div [formGroup]="item" fxLayout="row" fxLayoutGap="25px">\r\n                            <button mat-icon-button (click)="removeMenu(item)">\r\n                                <mat-icon>delete</mat-icon>\r\n                            </button>\r\n                            <mat-form-field>\r\n                                <input type="text" matInput placeholder="route" formControlName="route">\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                                <input type="text" matInput placeholder="icon" formControlName="icon">\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                                <input type="text" matInput placeholder="title" formControlName="title">\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                                <mat-select placeholder="roles" formControlName="roles" multiple>\r\n                                    <mat-option *ngFor="let role of roleItems$ | async" [value]="role">{{role}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </mat-card>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>'}]}],t.ctorParameters=function(){return[{type:r.Injector},{type:e.Store}]},t.propDecorators={configChanged:[{type:r.Output,args:["configChanged"]}],configFormGroup:[{type:r.Input}]},t}();var Q=function(){function t(t){this.resolver=t,this.typeMapToDiagram={authentication_module_config:z,app_config:K,user_module_config:W,layout_config:J},this.configChanged=new r.EventEmitter,this.currentComponent=null}return Object.defineProperty(t.prototype,"config",{get:function(){return this.currentComponent?this.currentComponent.instance.formGroup.value:{}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"data",{set:function(t){if(t&&0!=Object.keys(t).length)if(t.type in this.typeMapToDiagram){var o=this.typeMapToDiagram[t.type],e=Object.keys(t.inputs).map((function(o){return{provide:o,useValue:t.inputs[o]}})),n=r.ReflectiveInjector.resolve(e),i=r.ReflectiveInjector.fromResolvedProviders(n,this.dynamicComponentContainer.parentInjector),a=this.resolver.resolveComponentFactory(o).create(i);this.dynamicComponentContainer.insert(a.hostView),this.currentComponent&&this.currentComponent.destroy(),this.currentComponent=a}else this.currentComponent&&this.currentComponent.destroy()},enumerable:!0,configurable:!0}),t.prototype.ngAfterViewInit=function(){},t.decorators=[{type:r.Component,args:[{selector:"dynamic-config-component-selector",template:"<div #dynamicComponentContainer></div>",entryComponents:[z,K,W,J],styles:[":host{width:100%}.diagram-box{margin:15px}.diagram-box .c3{direction:ltr}"]}]}],t.ctorParameters=function(){return[{type:r.ComponentFactoryResolver}]},t.propDecorators={dynamicComponentContainer:[{type:r.ViewChild,args:["dynamicComponentContainer",{read:r.ViewContainerRef,static:!1}]}],configChanged:[{type:r.Output}],data:[{type:r.Input}]},t}();var X=function(){function e(o,r,e){var n=this;this.configService=o,this.formBuilder=r,this.route=e,this.formGroup=t.EditConfigApiModel.Request.formGroup,this.route.params.subscribe((function(t){var o=t.name;n.configService.getConfigByName(o).subscribe((function(t){n.partialConfigModel={type:t.Result.Name,inputs:{configFormGroup:n.formGroup.controls.Config}},n.formGroup.patchValue({_id:t.Result._id,Name:t.Result.Name}),Object.keys(t.Result.Config).forEach((function(o){n.addControl(n.formGroup.controls.Config,o,t.Result.Config[o])}))}))}))}return e.prototype.addControl=function(t,r,e){e instanceof Array?t.addControl(r,this.formBuilder.array(e)):e instanceof Object?t.addControl(r,this.formBuilder.group(e)):t.addControl(r,new o.FormControl(e))},e.prototype.ngOnInit=function(){},e.prototype.configChanged=function(t){console.log("-")},e.prototype.edit=function(){this.formGroup.controls.Config.patchValue(this.dynConfig.config),this.formGroup.valid&&this.configService.editConfig(this.formGroup.value).subscribe((function(t){}))},e.decorators=[{type:r.Component,args:[{selector:"config-config-edit",template:'<form [formGroup]="formGroup" (ngSubmit)="edit()" fxLayout="column">\r\n  <dynamic-config-component-selector #dynConfig (configChanged)="configChanged($event)" [data]="partialConfigModel"></dynamic-config-component-selector>\r\n  <button mat-fab  type="submit" mat-raised-button color="primary" (click)="edit">\r\n    <mat-icon>done</mat-icon>\r\n  </button>\r\n  \x3c!-- <button  type="button" routerLink="/configs" mat-raised-button>بازگشت</button> --\x3e\r\n</form>',styles:[""]}]}],e.ctorParameters=function(){return[{type:$},{type:o.FormBuilder},{type:f.ActivatedRoute}]},e.propDecorators={dynConfig:[{type:r.ViewChild,args:["dynConfig",{static:!1}]}]},e}();var Y=function(){function t(){}return t.prototype.ngOnInit=function(){},t.decorators=[{type:r.Component,args:[{selector:"config-module-container",template:'<div fxLayoutAlign="" fxflex="100" fxLayout="column">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n'}]}],t.ctorParameters=function(){return[]},t}(),Z=function(){function t(t,o){var r=this;this.actions$=t,this.configService=o,this.getConfigs$=this.actions$.pipe(d.ofType(x.GET_CONFIGS),a.map((function(t){return t.payload})),a.switchMap((function(t){return r.configService.getConfigs()})),a.map((function(t){return new w(t)})),a.catchError((function(){return p.of(new G)})))}return t.decorators=[{type:r.Injectable}],t.ctorParameters=function(){return[{type:d.Actions},{type:$}]},function(t,o,r,e){var n,i=arguments.length,a=i<3?o:null===e?e=Object.getOwnPropertyDescriptor(o,r):e;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,o,r,e);else for(var u=t.length-1;u>=0;u--)(n=t[u])&&(a=(i<3?n(a):i>3?n(o,r,a):n(o,r))||a);i>3&&a&&Object.defineProperty(o,r,a)}([d.Effect(),h("design:type",Object)],t.prototype,"getConfigs$",void 0),t}();var tt=[{path:"configs",component:Y,children:[{path:"",component:H},{path:"edit/:name",component:X}]}],ot=f.RouterModule.forChild(tt),rt=function(){function t(){}return t.forRoot=function(t){return{ngModule:et,providers:[{provide:C,useValue:t}]}},t.decorators=[{type:r.NgModule,args:[{imports:[c.CommonModule,f.RouterModule,o.FormsModule,o.ReactiveFormsModule,n.HttpClientModule,s.FlexLayoutModule,l.MatIconModule,l.MatButtonModule,l.MatCardModule,l.MatSnackBarModule,l.MatSidenavModule,l.MatExpansionModule,l.MatSelectModule,l.MatFormFieldModule,l.MatListModule,l.MatMenuModule,l.MatRadioModule,l.MatInputModule,l.MatSlideToggleModule,l.MatToolbarModule,l.MatDatepickerModule,l.MatProgressBarModule,m.BrowserAnimationsModule],declarations:[H,X,K,W,J,Y,z,Q],providers:[]}]}],t}(),et=function(){function t(){window.___starter=window.___starter||{},window.___starter.config="8.0.10"}return t.decorators=[{type:r.NgModule,args:[{imports:[rt,e.StoreModule.forFeature("config",q),d.EffectsModule.forFeature([Z]),ot],exports:[rt]}]}],t.ctorParameters=function(){return[]},t}();t.ConfigModel=y,t.ConfigReducers=q,t.ConfigService=$,t.MODULE_CONFIG_TOKEN=C,t.MODULE_DEFAULT_CONFIG=v,t.NgsConfigModule=rt,t.RootNgsConfigModule=et,t.getAppConfig=k,t.getAuthenticationModuleConfig=R,t.getConfigListState=V,t.getConfigModuleConfig=P,t.getConfigs=A,t.getFormModuleConfig=B,t.getSocketModuleConfig=T,t.getUserModuleConfig=D,t.selectConfigState=E,t.ɵa=I,t.ɵb=M,t.ɵc=L,t.ɵd=_,t.ɵe=N,t.ɵf=j,t.ɵg=O,t.ɵh=S,t.ɵk=U,t.ɵl=H,t.ɵm=X,t.ɵn=K,t.ɵo=W,t.ɵp=J,t.ɵq=Y,t.ɵr=z,t.ɵs=Q,t.ɵt=Z,t.ɵu=ot,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=soushians-config.umd.min.js.map