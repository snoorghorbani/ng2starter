{
  "version": 3,
  "file": "linear-diagram-partial-config.component.js",
  "sources": [
    "ng://@soushians/diagram/projects/soushians/diagram/src/lib/dumb-components/linear-diagram-partial-config/linear-diagram-partial-config.component.ts"
  ],
  "sourcesContent": [
    "import { Component, OnInit, Input, Output, EventEmitter, Injector, OnDestroy } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nimport { DiagramModel } from \"../../models\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\n\r\n@Component({\r\n\tselector: \"linear-diagram-partial-config\",\r\n\ttemplate: `<form [formGroup]=\"formGroup\" fxLayout='column'>\r\n  <div>\r\n    <mat-checkbox (change)=\"configChanged()\" formControlName=\"Legend\" fxFlexFill>نمایش توضیحات</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)=\"configChanged()\" formControlName=\"Zoom\" fxFlexFill>بزرگنمایی</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)=\"configChanged()\" formControlName=\"Subchart\" fxFlexFill>نمایش بزرگنمایی در زیر نمودار</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)=\"configChanged()\" formControlName=\"Tooltip\" fxFlexFill>نمایش توضیحات به صورت گروهی</mat-checkbox>\r\n  </div>\r\n  <div>\r\n    <mat-checkbox (change)=\"configChanged()\" formControlName=\"Flow\" fxFlexFill>Flow</mat-checkbox>\r\n  </div>\r\n</form>`,\r\n\tstyles: [`:host{width:100%}.diagram-box{margin:15px}.numeric{font-size:3em;line-height:1.8;font-family:iran-sans-bold,Tahoma}.numeric.title{font-size:1.5em}`]\r\n})\r\nexport class LinearDiagramPartialConfigComponent implements OnInit, OnDestroy {\r\n\tdataSubscribtion: Subscription;\r\n\tdataLoaded = new BehaviorSubject(false);\r\n\t_data;\r\n\t@Input()\r\n\tset data(data) {\r\n\t\tthis._data = data;\r\n\t\tthis.dataLoaded.next(true);\r\n\t}\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\t@Output() ConfigChanged = new EventEmitter();\r\n\tdiagramService: DiagramService;\r\n\tformGroup: FormGroup;\r\n\tconstructor(private injector: Injector) {\r\n\t\tthis.formGroup = this.injector.get(\"formGroup\");\r\n\t\tthis.diagramService = this.injector.get(\"diagramService\");\r\n\t}\r\n\tngOnInit() {\r\n\t\t// this.dataSubscribtion = this.diagramService.getData(this.data.Source.Route)\r\n\t\t//   .subscribe(data => {\r\n\t\t//     debugger;\r\n\t\t//   });\r\n\t}\r\n\tngOnDestroy() {\r\n\t\t// this.dataSubscribtion.unsubscribe();\r\n\t}\r\n\tconfigChanged() {\r\n\t\tthis.ConfigChanged.emit();\r\n\t}\r\n}\r\n"
  ],
  "names": [],
  "mappings": ";;;;AAAA,OAAO,EAAE,SAAS,EAAU,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAa,MAAM,eAAe,CAAC;AAEpG,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AA4BvD,MAAM;;;;IAeL,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;0BAbzB,IAAI,eAAe,CAAC,KAAK,CAAC;6BAUb,IAAI,YAAY,EAAE;QAI3C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;KAC1D;;;;;IAdD,IACI,IAAI,CAAC,IAAI;QACZ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC3B;;;;IACD,IAAI,IAAI;QACP,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;KAClB;;;;IAQD,QAAQ;;;;;KAKP;;;;IACD,WAAW;;KAEV;;;;IACD,aAAa;QACZ,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;KAC1B;;;YAnDD,SAAS,SAAC;gBACV,QAAQ,EAAE,+BAA+B;gBACzC,QAAQ,EAAE;;;;;;;;;;;;;;;;QAgBH;gBACP,MAAM,EAAE,CAAC,oJAAoJ,CAAC;aAC9J;;;;YA7BwD,QAAQ;;;mBAkC/D,KAAK;4BAQL,MAAM"
}
