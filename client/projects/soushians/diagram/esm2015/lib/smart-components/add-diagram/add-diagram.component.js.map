{
  "version": 3,
  "file": "add-diagram.component.js",
  "sources": [
    "ng://@soushians/diagram/projects/soushians/diagram/src/lib/smart-components/add-diagram/add-diagram.component.ts"
  ],
  "sourcesContent": [
    "import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder, AbstractControl } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Route, ActivatedRoute } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { publish } from \"rxjs/operator/publish\";\r\nimport { Effect } from \"@ngrx/effects\";\r\ndeclare var c3: any;\r\n\r\nimport { addDiagramReducer } from \"../../reducers/add-diagram.reducer\";\r\nimport { DiagramService } from \"../../services/diagram.service\";\r\nimport { AddDiagramApiModel, DiagramModel, SourceModel } from \"../../models\";\r\nimport {\r\n\tAddDiagramAction,\r\n\tColumnAdded,\r\n\tDiagramConfigChangedAction,\r\n\tHaveEndpointAction,\r\n\tColumnsMappingChangedAction,\r\n\tDataLoadedAction\r\n} from \"../../actions\";\r\n\r\nimport { FeatureState } from \"../../reducers\";\r\n\r\n@Component({\r\n\tselector: \"diagram-add\",\r\n\ttemplate: `<div fxLayout=\"column\" fxFlex=\"100\">\r\n  <div fxLayout=\"row\" fxLayout.lt-md=\"column\">\r\n    <mat-card fxFlex=\"60\">\r\n      <form [formGroup]=\"formGroup\" fxLayout='column'>\r\n        <mat-card-header>\r\n          <mat-card-title>افزودن نمودار جدید</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"عنوان نمودار\" formControlName=\"Name\">\r\n          </mat-form-field>\r\n          <mat-form-field fxFlexFill>\r\n            <mat-select placeholder=\"نام مسیر\" formControlName=\"Source\" (change)=\"routeEntered($event)\">\r\n              <mat-option *ngFor=\"let item of sources | async\" [value]=\"item\">\r\n                {{item.Endpoint}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field fxFlexFill>\r\n            <input matInput placeholder=\"sync time\" formControlName=\"Sync\">\r\n          </mat-form-field>\r\n          <div>\r\n            <mat-radio-group (change)=\"typeChanged()\" formControlName=\"Type\" fxFlexFill>\r\n              <label>نوع نمودار :</label>\r\n              <mat-radio-button (change)=\"typeChanged()\" *ngFor=\"let item of diagramTypes\" [value]=\"item\" class=\"form-element-margin\">\r\n                {{item}}\r\n              </mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n          <mat-form-field>\r\n            <mat-select placeholder=\"Groups\" formControlName=\"Groups\" multiple>\r\n              <mat-select-trigger>\r\n                {{formGroup.controls.Groups.value ? formGroup.controls.Groups.value[0] : ''}}\r\n                <span *ngIf=\"formGroup.controls.Groups.value?.length > 1\">\r\n                  (+{{formGroup.controls.Groups.value.length - 1}} others)\r\n                </span>\r\n              </mat-select-trigger>\r\n              <mat-option *ngFor=\"let item of groups | async\" [value]=\"item\">{{item}}</mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <div>\r\n            <mat-checkbox (change)=\"configChanged()\" formControlName=\"IsActive\" fxFlexFill>وضعیت</mat-checkbox>\r\n          </div>\r\n          <dynamic-config-component-selector (ConfigChanged)=\"configChanged()\" [data]=\"diagramPartialConfig\"></dynamic-config-component-selector>\r\n        </mat-card-content>\r\n      </form>\r\n    </mat-card>\r\n    <dynamic-component-selector id=\"modify-diagram\" fxFlex=\"40\" [data]=\"diagramModel\"></dynamic-component-selector>\r\n  </div>\r\n\r\n  <div fxLayout=\"row\" fxLayout.lt-md=\"column\">\r\n    <mat-card fxFlex=\"25\">\r\n      <mat-card-header>\r\n        <mat-card-title> ساختار دیتا </mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"item-margin\">\r\n          <data-mapper destination=\"value\" [data]=\"data\"></data-mapper>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card fxLayout=\"column\" fxFlex=\"25\">\r\n      <mat-card-header>\r\n        <mat-card-title>نگاشت داده</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div fxLayout=\"column\" fxLayoutGap=\"5px\">\r\n          <div *ngFor=\"let column of columnsMappings; let i=index\" fxFlex=\"100\" fxLayout=\"column\">\r\n            <div fxLayout=\"column\">\r\n              <div [formGroup]=\"columnsMappings[i]\" fxLayout=\"row\" fxLayout.xs=\"column\">\r\n                <mat-form-field fxFlex=\"50\" fxFlex.xs=\"100\">\r\n                  <mat-select placeholder=\"نام مسیر\" formControlName=\"NamePath\">\r\n                    <mat-option>--</mat-option>\r\n                    <mat-option *ngFor=\"let item of pathOptions\" [value]=\"item.path\" [class]=\"'mat-option depth_' + item.depts\">\r\n                      <!-- <mat-option *ngFor=\"let item of pathOptions\" [value]=\"item.path\" [class]=\"'mat-option depth_' + item.depts\" [disabled]=\"!item.isLastNode\"> -->\r\n                      {{item.path}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field fxFlex=\"50\" fxFlex.xs=\"100\">\r\n                  <mat-select placeholder=\"مقدار مسیر\" formControlName=\"ValuePath\">\r\n                    <mat-option>--</mat-option>\r\n                    <!-- <mat-option *ngFor=\"let item of pathOptions\" [value]=\"item.path\" [class]=\"'mat-option depth_' + item.depts\" [disabled]=\"!item.isLastNode\"> -->\r\n                    <mat-option *ngFor=\"let item of pathOptions\" [value]=\"item.path\" [class]=\"'mat-option depth_' + item.depts\">\r\n                      {{item.path}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                <button (click)=\"removeColumn(i)\" fxFlex mat-button color=\"primary\" type=\"button\">پاک کردن</button>\r\n              </div>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button (click)=\"addColumn()\" fxFlex mat-raised-button color=\"primary\" type=\"button\">افزودن ستون</button>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <mat-card fxFlex=\"25\">\r\n      <mat-card-header>\r\n        <mat-card-title>نتایج داده ها</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content>\r\n        <div class=\"item-margin\">\r\n          <div class=\"list-item\" *ngFor=\"let item of formGroup.controls.columns.value; let i=index\" fxLayoutAlign=\"space-between center\">\r\n            <span>{{item[0]}} : {{item[1]}}</span>\r\n            <span [formGroup]=\"formGroup.controls.Colors\" *ngIf=\"$any(formGroup.controls.Colors).controls[item[0]]\">\r\n              <input placeholder=\"رنگ نمودار\" (change)=\"configChanged()\" [formControlName]=\"item[0]\" type=\"color\">\r\n            </span>\r\n            <mat-form-field [formGroup]=\"formGroup.controls.Types\" *ngIf=\"$any(formGroup.controls.Types).controls[item[0]]\">\r\n              <!-- <input placeholder=\"tipo\" (change)=\"configChanged()\" > -->\r\n              <mat-select placeholder=\"tipo\" [formControlName]=\"item[0]\">\r\n                <mat-option>--</mat-option>\r\n                <mat-option *ngFor=\"let item of diagramTypes\" [value]=\"item\">\r\n                  {{item}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n    <mat-card fxLayout=\"column\" fxFlex=\"25\">\r\n      <mat-card-header>\r\n        <mat-card-title>تنظیمات ظاهری</mat-card-title>\r\n      </mat-card-header>\r\n      <mat-card-content [formGroup]=\"formGroup\">\r\n        <mat-form-field>\r\n          <input matInput placeholder=\"تعداد سطر\" formControlName=\"Cols\">\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <input matInput placeholder=\"تعداد ستون\" formControlName=\"Rows\">\r\n        </mat-form-field>\r\n        <div>\r\n          <label fxFlex=\"50\">رنگ متن :</label>\r\n          <span>\r\n            <input (change)=\"configChanged()\" formControlName=\"TextColor\" type=\"color\">\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <label fxFlex=\"50\">رنگ پس زمینه :</label>\r\n          <span>\r\n            <input formControlName=\"BackgroundColor\" type=\"color\">\r\n          </span>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  <div>\r\n    <mat-card fxLayoutAlign=\"end center\" fxLayout=\"row\" fxFlex=\"100\">\r\n      <mat-card-content>\r\n        <button (click)=\"add($event)\" fxFlex mat-raised-button color=\"primary\" type=\"submit\">ثبت</button>\r\n        <button fxFlex='nogrow' mat-button routerLink='/diagrams'>انصراف</button>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>`,\r\n\tstyles: [`#chart{width:300px;direction:ltr}.form-element-margin{margin:5px 10px}.item-margin{margin:10px 0;display:block}mat-option.depth_2{padding-right:30px}mat-option.depth_3{padding-right:50px}mat-option.depth_4{padding-right:70px}.mat-card{margin:12.5px}`]\r\n})\r\nexport class AddDiagramComponent implements OnInit, OnDestroy {\r\n\tformGroup: FormGroup = AddDiagramApiModel.Request.formGroup;\r\n\tdata: any;\r\n\tcolumns: any;\r\n\tchart;\r\n\tdiagramTypes: string[];\r\n\tpathOptions: {\r\n\t\tpath: string;\r\n\t\tname: string;\r\n\t\ttype: string;\r\n\t\tcolor: string;\r\n\t}[];\r\n\tcolumnsMappings: AbstractControl[];\r\n\tdataSubscription: Subscription;\r\n\tdiagramModel: DiagramModel;\r\n\tcomponentModel: { component: any; inputs: object };\r\n\ttypeMapToDiagram: { [type: string]: any };\r\n\tdiagramPartialConfig: { type: string; inputs: { formGroup: FormGroup; diagramService: DiagramService } };\r\n\tsources: Observable<SourceModel[]>;\r\n\tgroups: Observable<string[]>;\r\n\tsource: SourceModel;\r\n\tconstructor(\r\n\t\tprivate diagramService: DiagramService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate store: Store<FeatureState>,\r\n\t\tprivate route: ActivatedRoute\r\n\t) {\r\n\t\tthis.sources = this.diagramService.getSources();\r\n\t\tthis.groups = this.diagramService.getGroups();\r\n\t\t// this.diagramModel = new DiagramModel();\r\n\t\tthis.columnsMappings = (this.formGroup.controls.ColumnMappings as FormArray).controls;\r\n\t\tthis.route.params.subscribe(params => {\r\n\t\t\tconst diagramId: string = params[\"id\"];\r\n\t\t\tdiagramId &&\r\n\t\t\t\tthis.diagramService.getDiagram(diagramId).subscribe(data => {\r\n\t\t\t\t\tthis.formGroup.patchValue({\r\n\t\t\t\t\t\t_id: data._id,\r\n\t\t\t\t\t\tName: data.Name,\r\n\t\t\t\t\t\tIsActive: data.IsActive,\r\n\t\t\t\t\t\tGroups: data.Groups,\r\n\t\t\t\t\t\tType: data.Chart.data.type,\r\n\t\t\t\t\t\tLegend: data.Chart.legend.show,\r\n\t\t\t\t\t\tSubchart: data.Chart.subchart.show,\r\n\t\t\t\t\t\tZoom: data.Chart.zoom.enabled,\r\n\t\t\t\t\t\tTooltip: data.Chart.tooltip.grouped,\r\n\t\t\t\t\t\tSync: data.Source.Interval,\r\n\t\t\t\t\t\tSource: data.Source,\r\n\t\t\t\t\t\tcolumns: data.Chart.data.columns,\r\n\t\t\t\t\t\tColumnMappings: data.Chart.ColumnMappings,\r\n\t\t\t\t\t\tCols: data.Box.Cols,\r\n\t\t\t\t\t\tFlow: data.Chart.Flow,\r\n\t\t\t\t\t\tRows: data.Box.Rows,\r\n\t\t\t\t\t\tBackgroundColor: data.Box.BackgroundColor,\r\n\t\t\t\t\t\tTextColor: data.Box.TextColor\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst colorsControl = <FormGroup>this.formGroup.controls[\"Colors\"];\r\n\t\t\t\t\tObject.keys(data.Chart.data.colors || {}).forEach(columnKey => {\r\n\t\t\t\t\t\tif (!(columnKey in colorsControl.controls))\r\n\t\t\t\t\t\t\tcolorsControl.addControl(columnKey, new FormControl(data.Chart.data.colors[columnKey]));\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tconst typesControl = <FormGroup>this.formGroup.controls[\"Types\"];\r\n\t\t\t\t\tObject.keys(data.Chart.data.types || {}).forEach(key => {\r\n\t\t\t\t\t\tif (!(key in typesControl.controls))\r\n\t\t\t\t\t\t\ttypesControl.addControl(key, new FormControl(data.Chart.data.types[key]));\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\tdata.Chart.ColumnMappings.forEach(mapping => this.addColumn(mapping.NamePath, mapping.ValuePath));\r\n\t\t\t\t\tthis.source = data.Source;\r\n\t\t\t\t\tthis.store.dispatch(new HaveEndpointAction(this));\r\n\r\n\t\t\t\t\tthis.diagramPartialConfig = {\r\n\t\t\t\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\t\t\t\tinputs: {\r\n\t\t\t\t\t\t\tformGroup: this.formGroup,\r\n\t\t\t\t\t\t\tdiagramService: this.diagramService\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\tthis.diagramPartialConfig = {\r\n\t\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\t\tinputs: {\r\n\t\t\t\t\tformGroup: this.formGroup,\r\n\t\t\t\t\tdiagramService: this.diagramService\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tthis.diagramTypes = [\r\n\t\t\t\"bar\",\r\n\t\t\t\"donut\",\r\n\t\t\t\"pie\",\r\n\t\t\t\"scatter\",\r\n\t\t\t\"line\",\r\n\t\t\t\"area\",\r\n\t\t\t\"area-spline\",\r\n\t\t\t\"numero\",\r\n\t\t\t\"booleano\",\r\n\t\t\t\"tempo\"\r\n\t\t];\r\n\t}\r\n\tngOnInit() {\r\n\t\tthis.formGroup.controls.ColumnMappings.statusChanges.subscribe(status => {\r\n\t\t\tif (\r\n\t\t\t\tstatus == \"VALID\" &&\r\n\t\t\t\t(this.formGroup.controls.ColumnMappings as FormArray).controls.length > 0 &&\r\n\t\t\t\tthis.data\r\n\t\t\t)\r\n\t\t\t\tthis.store.dispatch(new ColumnsMappingChangedAction(this));\r\n\t\t});\r\n\t}\r\n\tngOnDestroy() {\r\n\t\tif (this.dataSubscription) this.dataSubscription.unsubscribe();\r\n\t}\r\n\t// getData() {\r\n\t//   const o$ = this.diagramService.getData(this.source);\r\n\t//   this.dataSubscription = o$.subscribe(data => new DataLoadedAction(this))\r\n\t//   return o$;\r\n\t// }\r\n\tgetDataStructure() {\r\n\t\tconst observer = this.diagramService.getData({ ...this.source, Interval: 0 }, Date.now() - 10000);\r\n\t\tthis.dataSubscription = observer.subscribe(data => {\r\n\t\t\tthis.data = data.Data;\r\n\t\t\tthis.pathOptions = this.diagramService.get_data_report(data.Data);\r\n\t\t});\r\n\t\treturn observer;\r\n\t}\r\n\tconfigChanged() {\r\n\t\tthis.store.dispatch(new DiagramConfigChangedAction(this));\r\n\t}\r\n\ttypeChanged() {\r\n\t\tdebugger;\r\n\t\tconst typesFormGroup = (this.formGroup.controls.Types as FormGroup).controls;\r\n\t\tfor (let cb in typesFormGroup) {\r\n\t\t\tdebugger;\r\n\t\t\ttypesFormGroup[cb].setValue(this.formGroup.value.Type);\r\n\t\t}\r\n\t\tthis.diagramPartialConfig = {\r\n\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\tinputs: {\r\n\t\t\t\tformGroup: this.formGroup,\r\n\t\t\t\tdiagramService: this.diagramService\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.store.dispatch(new DiagramConfigChangedAction(this));\r\n\t}\r\n\taddColumn(NamePath: string = \"\", ValuePath: string = \"\") {\r\n\t\tconst control = <FormArray>this.formGroup.controls[\"ColumnMappings\"];\r\n\t\tcontrol.push(\r\n\t\t\tthis.formBuilder.group({\r\n\t\t\t\tNamePath: [ NamePath ],\r\n\t\t\t\tValuePath: [ ValuePath, Validators.required ]\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\trouteEntered(event) {\r\n\t\tthis.source = event.value;\r\n\t\tthis.formGroup.patchValue({ Source: event.value });\r\n\t\tthis.store.dispatch(new HaveEndpointAction(this));\r\n\t}\r\n\tremoveColumn(i: number) {\r\n\t\tconst control = <FormArray>this.formGroup.controls[\"ColumnMappings\"];\r\n\t\tcontrol.removeAt(i);\r\n\t}\r\n\tcalculateColumns(): Observable<void> {\r\n\t\treturn Observable.create(obser => {\r\n\t\t\tvar columnsMApping = {\r\n\t\t\t\t// NameVAlue:  (this.formGroup.controls.ColumnMappings as FormArray).controls.values\r\n\t\t\t};\r\n\t\t\tlet columns = this.diagramService.extract_columns_from_data(\r\n\t\t\t\tthis.data,\r\n\t\t\t\t(this.formGroup.controls.ColumnMappings as FormArray).value\r\n\t\t\t);\r\n\t\t\tthis.formGroup.controls.columns.setValue(columns);\r\n\t\t\t//add new item to this.formGroup.controls.colors form control\r\n\t\t\tconst colorsControl = <FormGroup>this.formGroup.controls[\"Colors\"];\r\n\t\t\tcolumns.forEach(column => {\r\n\t\t\t\tlet columnKey = column[0];\r\n\t\t\t\tif (!(columnKey in colorsControl.controls))\r\n\t\t\t\t\tcolorsControl.addControl(columnKey, new FormControl(\"#123456\"));\r\n\t\t\t});\r\n\r\n\t\t\tconst typesControl = <FormGroup>this.formGroup.controls[\"Types\"];\r\n\t\t\tcolumns.forEach(column => {\r\n\t\t\t\tlet key = column[0];\r\n\t\t\t\tif (!(key in typesControl.controls))\r\n\t\t\t\t\ttypesControl.addControl(key, new FormControl(this.formGroup.value.Type));\r\n\t\t\t});\r\n\t\t\tobser.next();\r\n\t\t});\r\n\t}\r\n\tgenerateDiagram(): Observable<any> {\r\n\t\tvar temp = new DiagramModel();\r\n\t\ttemp._id = \"template_id\";\r\n\t\ttemp.Name = this.formGroup.value.Name;\r\n\t\ttemp.Source = this.source;\r\n\t\ttemp.Box = {\r\n\t\t\tNumberOfColumns: 1,\r\n\t\t\tOrder: 1,\r\n\t\t\tBackgroundColor: this.formGroup.value.BackgroundColor\r\n\t\t};\r\n\t\ttemp.Widget = {\r\n\t\t\tbooleano: this.formGroup.value.booleano\r\n\t\t};\r\n\t\ttemp.Chart = {\r\n\t\t\tColumnMappings: this.formGroup.value.ColumnMappings,\r\n\t\t\tdata: {\r\n\t\t\t\tcolumns: this.formGroup.controls.columns.value,\r\n\t\t\t\ttype: this.formGroup.value.Type,\r\n\t\t\t\ttypes: this.formGroup.value.Types,\r\n\t\t\t\tcolors: this.formGroup.controls.Colors.value\r\n\t\t\t},\r\n\t\t\tFlow: this.formGroup.value.Flow,\r\n\t\t\tlegend: {\r\n\t\t\t\tshow: this.formGroup.value.Legend\r\n\t\t\t},\r\n\t\t\tsubchart: {\r\n\t\t\t\tshow: this.formGroup.value.Subchart\r\n\t\t\t},\r\n\t\t\tzoom: {\r\n\t\t\t\tenabled: this.formGroup.value.Zoom\r\n\t\t\t},\r\n\t\t\ttooltip: {\r\n\t\t\t\tgrouped: this.formGroup.value.Tooltip\r\n\t\t\t}\r\n\t\t\t// tooltip: {\r\n\t\t\t//         format: {\r\n\t\t\t//                 value: function (value) {\r\n\t\t\t//                         return value + \"%\";\r\n\t\t\t//                 }\r\n\t\t\t//         }\r\n\t\t\t// },\r\n\t\t\t// color: {\r\n\t\t\t//         pattern: ['#60B044', '#F6C600', '#F97600', '#FF0000'],\r\n\t\t\t//         threshold: {\r\n\t\t\t//                 //  unit: 'value', // percentage is default\r\n\t\t\t//                 values: [30, 60, 90, 100]\r\n\t\t\t//         }\r\n\t\t\t// },\r\n\t\t};\r\n\t\t// this.componentModel = {\r\n\t\t//   component: this.typeMapToDiagram[temp.Chart.data.type],\r\n\t\t//   inputs: { data: temp }\r\n\t\t// }\r\n\t\tthis.diagramModel = temp;\r\n\t\treturn Observable.empty();\r\n\t}\r\n\tadd(event) {\r\n\t\tthis.store.dispatch(new AddDiagramAction(this.formGroup.value));\r\n\t}\r\n}\r\n"
  ],
  "names": [],
  "mappings": ";;;;AAAA,OAAO,EAAE,SAAS,EAAqB,MAAM,eAAe,CAAC;AAC7D,OAAO,EAAa,WAAW,EAAE,UAAU,EAAa,WAAW,EAAmB,MAAM,gBAAgB,CAAC;AAC7G,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AACpC,OAAO,EAAS,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAOxD,OAAO,EAAE,cAAc,EAAE,MAAM,gCAAgC,CAAC;AAChE,OAAO,EAAE,kBAAkB,EAAE,YAAY,EAAe,MAAM,cAAc,CAAC;AAC7E,OAAO,EACN,gBAAgB,EAEhB,0BAA0B,EAC1B,kBAAkB,EAClB,2BAA2B,EAE3B,MAAM,eAAe,CAAC;AAuKvB,MAAM;;;;;;;IAqBL,YACS,gBACA,aACA,OACA;QAHA,mBAAc,GAAd,cAAc;QACd,gBAAW,GAAX,WAAW;QACX,UAAK,GAAL,KAAK;QACL,UAAK,GAAL,KAAK;yBAxBS,kBAAkB,CAAC,OAAO,CAAC,SAAS;QA0B1D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;QAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC;;QAE9C,IAAI,CAAC,eAAe,GAAG,mBAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,kBAA4B,EAAC,CAAC,QAAQ,CAAC;QACtF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACpC,uBAAM,SAAS,GAAW,MAAM,CAAC,IAAI,CAAC,CAAC;YACvC,SAAS;gBACR,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC1D,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;wBACzB,GAAG,EAAE,IAAI,CAAC,GAAG;wBACb,IAAI,EAAE,IAAI,CAAC,IAAI;wBACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;wBACvB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;wBAC1B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI;wBAC9B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI;wBAClC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO;wBAC7B,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO;wBACnC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;wBAC1B,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO;wBAChC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc;wBACzC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI;wBACnB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;wBACrB,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI;wBACnB,eAAe,EAAE,IAAI,CAAC,GAAG,CAAC,eAAe;wBACzC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS;qBAC7B,CAAC,CAAC;oBAEH,uBAAM,aAAa,qBAAc,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA,CAAC;oBACnE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;wBAC7D,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,aAAa,CAAC,QAAQ,CAAC,CAAC;4BAC1C,aAAa,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;qBACzF,CAAC,CAAC;oBAEH,uBAAM,YAAY,qBAAc,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA,CAAC;oBACjE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;wBACtD,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC;4BACnC,YAAY,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBAC3E,CAAC,CAAC;oBACH,QAAQ,CAAC;oBACT,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;oBAClG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC1B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;oBAElD,IAAI,CAAC,oBAAoB,GAAG;wBAC3B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI;wBAC/B,MAAM,EAAE;4BACP,SAAS,EAAE,IAAI,CAAC,SAAS;4BACzB,cAAc,EAAE,IAAI,CAAC,cAAc;yBACnC;qBACD,CAAC;iBACF,CAAC,CAAC;YACJ,IAAI,CAAC,oBAAoB,GAAG;gBAC3B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI;gBAC/B,MAAM,EAAE;oBACP,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,cAAc,EAAE,IAAI,CAAC,cAAc;iBACnC;aACD,CAAC;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,GAAG;YACnB,KAAK;YACL,OAAO;YACP,KAAK;YACL,SAAS;YACT,MAAM;YACN,MAAM;YACN,aAAa;YACb,QAAQ;YACR,UAAU;YACV,OAAO;SACP,CAAC;KACF;;;;IACD,QAAQ;QACP,IAAI,CAAC,SAAS,CAAC,QAAQ,mBAAgB,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACvE,EAAE,CAAC,CACF,MAAM,IAAI,OAAO;gBACjB,mBAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,kBAA4B,EAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;gBACzE,IAAI,CAAC,IACN,CAAC;gBACA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,2BAA2B,CAAC,IAAI,CAAC,CAAC,CAAC;SAC5D,CAAC,CAAC;KACH;;;;IACD,WAAW;QACV,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC;YAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;KAC/D;;;;IAMD,gBAAgB;QACf,uBAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,mBAAM,IAAI,CAAC,MAAM,IAAE,QAAQ,EAAE,CAAC,KAAI,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC;QAClG,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClE,CAAC,CAAC;QACH,MAAM,CAAC,QAAQ,CAAC;KAChB;;;;IACD,aAAa;QACZ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,0BAA0B,CAAC,IAAI,CAAC,CAAC,CAAC;KAC1D;;;;IACD,WAAW;QACV,QAAQ,CAAC;QACT,uBAAM,cAAc,GAAG,mBAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,SAAmB,EAAC,CAAC,QAAQ,CAAC;QAC7E,GAAG,CAAC,CAAC,qBAAI,EAAE,IAAI,cAAc,CAAC,CAAC,CAAC;YAC/B,QAAQ,CAAC;YACT,cAAc,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACvD;QACD,IAAI,CAAC,oBAAoB,GAAG;YAC3B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI;YAC/B,MAAM,EAAE;gBACP,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,cAAc,EAAE,IAAI,CAAC,cAAc;aACnC;SACD,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,0BAA0B,CAAC,IAAI,CAAC,CAAC,CAAC;KAC1D;;;;;;IACD,SAAS,CAAC,WAAmB,EAAE,EAAE,YAAoB,EAAE;QACtD,uBAAM,OAAO,qBAAc,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAA,CAAC;QACrE,OAAO,CAAC,IAAI,CACX,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtB,QAAQ,EAAE,CAAE,QAAQ,CAAE;YACtB,SAAS,EAAE,CAAE,SAAS,EAAE,UAAU,CAAC,QAAQ,CAAE;SAC7C,CAAC,CACF,CAAC;KACF;;;;;IACD,YAAY,CAAC,KAAK;QACjB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;KAClD;;;;;IACD,YAAY,CAAC,CAAS;QACrB,uBAAM,OAAO,qBAAc,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAA,CAAC;QACrE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KACpB;;;;IACD,gBAAgB;QACf,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAChC,qBAAI,cAAc,GAAG,EAEpB,CAAC;YACF,qBAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,yBAAyB,CAC1D,IAAI,CAAC,IAAI,EACT,mBAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,kBAA4B,EAAC,CAAC,KAAK,CAC3D,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,QAAQ,YAAS,QAAQ,CAAC,OAAO,CAAC,CAAC;;YAElD,uBAAM,aAAa,qBAAc,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA,CAAC;YACnE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBACxB,qBAAI,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,aAAa,CAAC,QAAQ,CAAC,CAAC;oBAC1C,aAAa,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;aACjE,CAAC,CAAC;YAEH,uBAAM,YAAY,qBAAc,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA,CAAC;YACjE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBACxB,qBAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACpB,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC;oBACnC,YAAY,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;aAC1E,CAAC,CAAC;YACH,KAAK,CAAC,IAAI,EAAE,CAAC;SACb,CAAC,CAAC;KACH;;;;IACD,eAAe;QACd,qBAAI,IAAI,GAAG,IAAI,YAAY,EAAE,CAAC;QAC9B,IAAI,CAAC,GAAG,GAAG,aAAa,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,GAAG,GAAG;YACV,eAAe,EAAE,CAAC;YAClB,KAAK,EAAE,CAAC;YACR,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe;SACrD,CAAC;QACF,IAAI,CAAC,MAAM,GAAG;YACb,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ;SACvC,CAAC;QACF,IAAI,CAAC,KAAK,GAAG;YACZ,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc;YACnD,IAAI,EAAE;gBACL,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,YAAS,KAAK;gBAC9C,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI;gBAC/B,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK;gBACjC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,WAAQ,KAAK;aAC5C;YACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI;YAC/B,MAAM,EAAE;gBACP,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM;aACjC;YACD,QAAQ,EAAE;gBACT,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ;aACnC;YACD,IAAI,EAAE;gBACL,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI;aAClC;YACD,OAAO,EAAE;gBACR,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO;aACrC;SAeD,CAAC;;;;;QAKF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;KAC1B;;;;;IACD,GAAG,CAAC,KAAK;QACR,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;KAChE;;;YA7ZD,SAAS,SAAC;gBACV,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA8JJ;gBACN,MAAM,EAAE,CAAC,2PAA2P,CAAC;aACrQ;;;;YA/KQ,cAAc;YAViC,WAAW;YAE1D,KAAK;YACE,cAAc"
}
