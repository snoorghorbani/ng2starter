{
  "version": 3,
  "file": "soushians-layout.umd.min.js",
  "sources": [
    "ng://@soushians/layout/projects/soushians/layout/src/lib/actions/layout.ts",
    "ng://@soushians/layout/projects/soushians/layout/src/lib/reducers/layout.reducer.ts",
    "ng://@soushians/layout/projects/soushians/layout/src/lib/actions/toolbar.ts",
    "ng://@soushians/layout/projects/soushians/layout/src/lib/reducers/toolbar.reducer.ts",
    "ng://@soushians/layout/projects/soushians/layout/src/lib/reducers/index.ts",
    "ng://@soushians/layout/projects/soushians/layout/src/lib/layout.config.ts",
    "ng://@soushians/layout/projects/soushians/layout/src/lib/services/layout-configuration.service.ts",
    "ng://@soushians/layout/projects/soushians/layout/src/lib/dumb-components/main-menu/main-menu.component.ts",
    "ng://@soushians/layout/projects/soushians/layout/src/lib/dumb-components/search-box/search-box.component.ts",
    "ng://@soushians/layout/projects/soushians/layout/src/lib/dumb-components/logo-container/logo-container.component.ts",
    "ng://@soushians/layout/projects/soushians/layout/src/lib/dumb-components/toolbar-menu/toolbar-menu.component.ts",
    "ng://@soushians/layout/projects/soushians/layout/src/lib/dumb-components/footer/footer.component.ts",
    "ng://@soushians/layout/projects/soushians/layout/src/lib/dumb-components/title/title.component.ts",
    "ng://@soushians/layout/projects/soushians/layout/src/lib/dumb-components/main/main.component.ts",
    "ng://@soushians/layout/projects/soushians/layout/src/lib/layout.module.ts"
  ],
  "sourcesContent": [
    "import { Action } from \"@ngrx/store\";\r\nimport { LayoutConfigModel } from \"@soushians/config\";\r\n\r\nexport const OPEN_SIDENAV = \"[Layout] Open Sidenav\";\r\nexport const CLOSE_SIDENAV = \"[Layout] Close Sidenav\";\r\n\r\nexport enum LayoutActionTypes {\r\n\tUPDATE_LAYOUT_CONFIG = \"[Layout] UPDATE_LAYOUT_CONFIG\",\r\n\tSIGNOUT = \"[Layout] signout\",\r\n\tTITLE_CHANGED = \"[LAYOUT] TITLE_CHANGED\",\r\n\tCHANGE_LAYOUT = \"[Layout] Change Layout\",\r\n\tCHANGE_MAIN_SIDENAVE_MODE = \"[Layout] Change main sidenav mode\",\r\n\tOPEN_SECOND_SIDEBAR = \"[Layout] Open Second Sidebar\",\r\n\tCLOSE_SECOND_SIDEBAR = \"[Layout] Close Second Sidebar\",\r\n\tCHANGE_SECOND_SIDENAV_MODE = \"[Layout] Change second sidenav mode\"\r\n}\r\n\r\nexport class UpdateLayoutConfigAction implements Action {\r\n\treadonly type = LayoutActionTypes.UPDATE_LAYOUT_CONFIG;\r\n\tconstructor(public payload: LayoutConfigModel) {}\r\n}\r\nexport class OpenSidenavAction implements Action {\r\n\treadonly type = OPEN_SIDENAV;\r\n}\r\n\r\nexport class CloseSidenavAction implements Action {\r\n\treadonly type = CLOSE_SIDENAV;\r\n}\r\n\r\nexport class ChangeLayout implements Action {\r\n\treadonly type = LayoutActionTypes.CHANGE_LAYOUT;\r\n\tconstructor(public name: \"with-margin\" | \"without-margin\" | \"default\") {}\r\n}\r\n\r\nexport class ChangeSideNavMode implements Action {\r\n\treadonly type = LayoutActionTypes.CHANGE_MAIN_SIDENAVE_MODE;\r\n\tconstructor(public mode: \"over\" | \"push\" | \"side\") {}\r\n}\r\nexport class ChangeSecondSidenavMode implements Action {\r\n\treadonly type = LayoutActionTypes.CHANGE_SECOND_SIDENAV_MODE;\r\n\tconstructor(public mode: \"over\" | \"push\" | \"side\") {}\r\n}\r\nexport class SignoutAction implements Action {\r\n\treadonly type = LayoutActionTypes.SIGNOUT;\r\n}\r\n\r\nexport class TitleChangedAction implements Action {\r\n\treadonly type = LayoutActionTypes.TITLE_CHANGED;\r\n\tconstructor(public title: string) {}\r\n}\r\nexport class OpenSecondSidenavAction implements Action {\r\n\treadonly type = LayoutActionTypes.OPEN_SECOND_SIDEBAR;\r\n}\r\n\r\nexport class CloseSecondSidenavAction implements Action {\r\n\treadonly type = LayoutActionTypes.CLOSE_SECOND_SIDEBAR;\r\n}\r\nexport type Actions =\r\n\t| UpdateLayoutConfigAction\r\n\t| OpenSidenavAction\r\n\t| CloseSidenavAction\r\n\t| ChangeSideNavMode\r\n\t| ChangeLayout\r\n\t| SignoutAction\r\n\t| TitleChangedAction\r\n\t| OpenSecondSidenavAction\r\n\t| CloseSecondSidenavAction\r\n\t| ChangeSecondSidenavMode;\r\n",
    "import * as layout from \"../actions/layout\";\r\nimport { LayoutConfigModel } from \"@soushians/config\";\r\n\r\nexport interface State extends LayoutConfigModel {}\r\n\r\nconst initialState: State = {\r\n\tshowMainSidenav: false,\r\n\tshowSecondSideNav: false,\r\n\tsecondSideNavMode: \"over\",\r\n\tmainSideNavMode: \"over\",\r\n\tshowLeftNavBar: false,\r\n\tstickyLeftNavBar: false,\r\n\tlayoutMode: \"default\",\r\n\ttitle: \"\",\r\n\tmenuItems: []\r\n};\r\n\r\nexport function Reducer(state = initialState, action: layout.Actions): State {\r\n\tswitch (action.type) {\r\n\t\tcase layout.LayoutActionTypes.UPDATE_LAYOUT_CONFIG:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload\r\n\t\t\t};\r\n\t\tcase layout.CLOSE_SIDENAV:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowMainSidenav: false\r\n\t\t\t};\r\n\r\n\t\tcase layout.OPEN_SIDENAV:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowMainSidenav: true\r\n\t\t\t};\r\n\r\n\t\tcase layout.LayoutActionTypes.TITLE_CHANGED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttitle: action.title\r\n\t\t\t};\r\n\t\tcase layout.LayoutActionTypes.CHANGE_LAYOUT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlayoutMode: action.name\r\n\t\t\t};\r\n\r\n\t\tcase layout.LayoutActionTypes.CHANGE_MAIN_SIDENAVE_MODE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmainSideNavMode: action.mode\r\n\t\t\t};\r\n\r\n\t\tcase layout.LayoutActionTypes.CLOSE_SECOND_SIDEBAR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowSecondSideNav: false\r\n\t\t\t};\r\n\r\n\t\tcase layout.LayoutActionTypes.OPEN_SECOND_SIDEBAR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tshowSecondSideNav: true\r\n\t\t\t};\r\n\t\tcase layout.LayoutActionTypes.CHANGE_SECOND_SIDENAV_MODE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsecondSideNavMode: action.mode\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const getShowSidenav = (state: State) => state.showMainSidenav;\r\nexport const getTitle = (state: State) => state.title;\r\nexport const getShowMainSidenav = (state: State) => state.showMainSidenav;\r\nexport const getMainSideNavMode = (state: State) => state.mainSideNavMode;\r\nexport const getLayoutMode = (state: State) => state.layoutMode;\r\nexport const getShowSecondSidebarStatus = (state: State) => state.showSecondSideNav;\r\nexport const getSecondSidebarMode = (state: State) => state.secondSideNavMode;\r\n",
    "import { Action } from \"@ngrx/store\";\r\n\r\nexport enum ToolbarActionTypes {\r\n\tCOMPORTABLE = \"[Layout][TOOLBAR] COMPORTABLE\",\r\n\tCOMPACT = \"[Layout][TOOLBAR] COMPACT\",\r\n\tSUMMARY = \"[Layout][TOOLBAR] SUMMARY\",\r\n\tENABLE_COMFORTABLE_MODE = \"[Layout][TOOLBAR] ENABLE_COMFORTABLE_MODE\",\r\n\tDISBALE_COMFORTABLE_MODE = \"[Layout][TOOLBAR] DISBALE_COMFORTABLE_MODE\"\r\n}\r\n\r\nexport class ChangeToolbatToComfortableModeAction implements Action {\r\n\treadonly type = ToolbarActionTypes.COMPORTABLE;\r\n}\r\nexport class ChangeToolbatToCompactModeAction implements Action {\r\n\treadonly type = ToolbarActionTypes.COMPACT;\r\n}\r\nexport class ChangeToolbatToSummaryModeAction implements Action {\r\n\treadonly type = ToolbarActionTypes.SUMMARY;\r\n}\r\nexport class EnableComfortableModeAction implements Action {\r\n\treadonly type = ToolbarActionTypes.ENABLE_COMFORTABLE_MODE;\r\n}\r\nexport class DisableComfortableModeAction implements Action {\r\n\treadonly type = ToolbarActionTypes.DISBALE_COMFORTABLE_MODE;\r\n}\r\nexport type ToolbarActions =\r\n\t| ChangeToolbatToComfortableModeAction\r\n\t| ChangeToolbatToCompactModeAction\r\n\t| ChangeToolbatToSummaryModeAction\r\n\t| EnableComfortableModeAction\r\n\t| DisableComfortableModeAction;\r\n",
    "import { ToolbarActionTypes, ToolbarActions } from \"../actions\";\r\n\r\nexport interface State {\r\n\tmode: \"comfortable\" | \"compact\" | \"summary\";\r\n\tenableComfortableMode: boolean;\r\n\tcomfortableModeHaveBeenDone: boolean;\r\n}\r\n\r\nconst initialState: State = {\r\n\tmode: \"compact\",\r\n\tenableComfortableMode: false,\r\n\tcomfortableModeHaveBeenDone: false\r\n};\r\n\r\nexport function Reducer(state = initialState, action: ToolbarActions): State {\r\n\tswitch (action.type) {\r\n\t\tcase ToolbarActionTypes.COMPACT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmode: \"compact\"\r\n\t\t\t};\r\n\t\tcase ToolbarActionTypes.COMPORTABLE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmode: state.enableComfortableMode ? \"comfortable\" : \"compact\"\r\n\t\t\t};\r\n\t\tcase ToolbarActionTypes.SUMMARY:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmode: \"summary\"\r\n\t\t\t};\r\n\t\tcase ToolbarActionTypes.ENABLE_COMFORTABLE_MODE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tenableComfortableMode: true\r\n\t\t\t};\r\n\t\tcase ToolbarActionTypes.DISBALE_COMFORTABLE_MODE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmode: \"compact\",\r\n\t\t\t\tenableComfortableMode: false\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const getToolbarMode = (state: State) => state.mode;\r\n",
    "import { createSelector, createFeatureSelector, MemoizedSelector } from \"@ngrx/store\";\r\n\r\nimport * as layout from \"./layout.reducer\";\r\nimport * as fromToolbar from \"./toolbar.reducer\";\r\n\r\nexport interface LayoutState {\r\n\tlayout: layout.State;\r\n\ttoolbar: fromToolbar.State;\r\n}\r\n\r\nexport const LayoutReducers = {\r\n\tlayout: layout.Reducer,\r\n\ttoolbar: fromToolbar.Reducer\r\n};\r\nexport interface FeatureState {\r\n\tlayout: LayoutState;\r\n\ttoolbar: fromToolbar.State;\r\n}\r\n\r\n//#region selectors\r\n\r\nexport const selectLayoutState = createFeatureSelector<LayoutState>(\"layout\");\r\n\r\n//#endregion\r\n\r\nexport const getLayout = createSelector(selectLayoutState, (state: LayoutState) => state.layout);\r\n\r\nexport const getTitle = createSelector(getLayout, layout.getTitle);\r\n\r\nexport const getShowMainSidenav = createSelector(getLayout, layout.getShowMainSidenav);\r\n\r\nexport const getMainSideNavMode = createSelector(getLayout, layout.getMainSideNavMode);\r\n\r\nexport const getLayoutMode = createSelector(getLayout, layout.getLayoutMode);\r\n\r\nexport const getShowSecondSidebarStatus = createSelector(getLayout, layout.getShowSecondSidebarStatus);\r\nexport const getSecondSidebarMode = createSelector(getLayout, layout.getSecondSidebarMode);\r\n\r\n//#region toolbar\r\n\r\nexport const getLayoutToolbar = createSelector(selectLayoutState, (state: LayoutState) => state.toolbar);\r\nexport const getLayoutToolbarMode = createSelector(getLayoutToolbar, fromToolbar.getToolbarMode);\r\n\r\n//#endregion\r\n",
    "import { InjectionToken } from \"@angular/core\";\r\n\r\nimport { LayoutConfigModel } from \"@soushians/config\";\r\n\r\nexport interface LayoutModuleConfig extends LayoutConfigModel {}\r\n\r\nexport const MODULE_DEFAULT_CONFIG: LayoutModuleConfig = {\r\n\tshowMainSidenav: false,\r\n\tshowSecondSideNav: true,\r\n\tsecondSideNavMode: \"over\", //| \"push\" | \"side\",\r\n\tmainSideNavMode: \"over\", //| \"push\" | \"side\",\r\n\tshowLeftNavBar: false,\r\n\tstickyLeftNavBar: false,\r\n\tlayoutMode: \"with-margin\", // | \"without-margin\" | \"default\",\r\n\ttitle: \"\",\r\n\tmenuItems: [\r\n\t\t{\r\n\t\t\troute: \"/\",\r\n\t\t\ticon: \"multiline_chart\",\r\n\t\t\troles: [ \"Admin\", \"User\" ],\r\n\t\t\ttitle: \"صفحه اصلی\"\r\n\t\t},\r\n\t\t{\r\n\t\t\troute: \"/configs\",\r\n\t\t\ticon: \"settings\",\r\n\t\t\troles: [ \"Admin\" ],\r\n\t\t\ttitle: \"تنظیمات\"\r\n\t\t},\r\n\t\t{\r\n\t\t\troute: \"/source\",\r\n\t\t\ticon: \"device_hub\",\r\n\t\t\troles: [ \"Admin\" ],\r\n\t\t\ttitle: \"آدرس سرویس ها\"\r\n\t\t}\r\n\t]\r\n};\r\n\r\nexport const MODULE_CONFIG_TOKEN = new InjectionToken<LayoutModuleConfig>(\"LayoutModuleConfig\");\r\n",
    "import { Injectable, Inject } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\nimport { getlayoutModuleConfig } from \"@soushians/config\";\r\n\r\nimport { MODULE_CONFIG_TOKEN, MODULE_DEFAULT_CONFIG } from \"../layout.config\";\r\nimport { UpdateLayoutConfigAction } from \"../actions\";\r\nimport { LayoutModuleConfig } from \"../layout.config\";\r\nimport { FeatureState } from \"../reducers\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\"\r\n})\r\nexport class LayoutConfigurationService {\r\n\t// private _config: LayoutConfigModel;\r\n\tprivate _config: any;\r\n\tget config() {\r\n\t\treturn this._config;\r\n\t}\r\n\tconfig$ = new BehaviorSubject<LayoutModuleConfig>(this._config);\r\n\r\n\tconstructor(@Inject(MODULE_CONFIG_TOKEN) configFile, private store: Store<FeatureState>) {\r\n\t\tthis._config = Object.assign({}, MODULE_DEFAULT_CONFIG, configFile);\r\n\t\tthis.config$.next(this._config);\r\n\r\n\t\tthis.store.select(getlayoutModuleConfig).subscribe(config => {\r\n\t\t\tif (!config) return;\r\n\t\t\tthis.store.dispatch(new UpdateLayoutConfigAction(config.Config));\r\n\t\t\tthis._config = Object.assign({}, this._config, config.Config);\r\n\t\t\tthis.config$.next(this._config);\r\n\t\t});\r\n\t}\r\n}\r\n",
    "import { Component, Output, EventEmitter, Input, OnInit, ViewChild, ElementRef } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Routes } from \"@angular/router\";\r\nimport { trigger, state, style, transition, animate } from \"@angular/animations\";\r\n\r\nimport { responseStatusTypes } from \"@soushians/shared\";\r\nimport { SigninService } from \"@soushians/authentication\";\r\n\r\nimport { FeatureState } from \"../../reducers\";\r\nimport { LayoutConfigurationService } from \"../../services/layout-configuration.service\";\r\nimport { LayoutModuleConfig } from \"../../layout.config\";\r\n\r\n@Component({\r\n\tselector: \"ngs-layout-main-menu\",\r\n\ttemplate: `<mat-list class=\"main-menu-container\">\r\n  <div *ngIf=\"authenticated | async\">\r\n    <a *ngFor=\"let item of routes | async\" (click)=\"closeSidebar.emit()\" routerLinkActive=\"active\" mat-list-item [routerLink]=\"[item.route]\">\r\n      <mat-icon mat-list-icon>{{item.icon}}</mat-icon>\r\n      <span mdLine>{{item.title}}</span>\r\n    </a>\r\n  </div>\r\n</mat-list>`,\r\n\tstyles: [`.active{background:rgba(0,0,0,.15)}.mat-list-item.active mat-icon{color:#0072ae}a.mat-list-item.child{margin-right:20px}#clearUserMenuItem{position:absolute;left:13px;top:13px}`],\r\n\tanimations: [\r\n\t\ttrigger(\"childMenu\", [\r\n\t\t\tstate(\r\n\t\t\t\t\"inactive\",\r\n\t\t\t\tstyle({\r\n\t\t\t\t\t// transform: 'scale(1)',\r\n\t\t\t\t\theight: \"0px\",\r\n\t\t\t\t\topacity: \"0\"\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t\tstate(\r\n\t\t\t\t\"active\",\r\n\t\t\t\tstyle({\r\n\t\t\t\t\t// transform: 'scale(1.1)',\r\n\t\t\t\t\theight: \"48px\",\r\n\t\t\t\t\topacity: \"1\"\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t\ttransition(\"inactive => active\", animate(\"100ms ease-in\")),\r\n\t\t\ttransition(\"active => inactive\", animate(\"100ms ease-out\"))\r\n\t\t]),\r\n\t\ttrigger(\"menuItem\", [\r\n\t\t\tstate(\r\n\t\t\t\t\"inactive\",\r\n\t\t\t\tstyle({\r\n\t\t\t\t\theight: \"48px\"\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t\tstate(\r\n\t\t\t\t\"active\",\r\n\t\t\t\tstyle({\r\n\t\t\t\t\theight: \"100px\"\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t\ttransition(\"inactive => active\", animate(\"100ms ease-in\")),\r\n\t\t\ttransition(\"active => inactive\", animate(\"100ms ease-out\"))\r\n\t\t])\r\n\t]\r\n})\r\nexport class MainMenuComponent {\r\n\t@Output() closeSidebar = new EventEmitter();\r\n\r\n\t@Input() authenticated: Observable<boolean>;\r\n\r\n\tcustomerStatus$: Observable<responseStatusTypes>;\r\n\troutes: any = this.configurationService.config$.map(config => config.menuItems);\r\n\r\n\t@ViewChild(\"customerMobileInput\") customerMobileInput: ElementRef;\r\n\tconstructor(\r\n\t\tprivate store: Store<FeatureState>,\r\n\t\tpublic signinService: SigninService,\r\n\t\tpublic configurationService: LayoutConfigurationService\r\n\t) {}\r\n}\r\n",
    "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n        selector: 'app-search-box',\r\n        template: `<div class=\"search-box\">\r\n  <!--<td-search-box class=\"search-box-container\" backIcon=\"arrow_back\" placeholder=\"جستجو\" [showUnderline]=\"false\" [debounce]=\"500\" [alwaysVisible]=\"false\"\r\n                 (searchDebounce)=\"searchInputTerm = $event\" (search)=\"searchInputTerm = $event\" (clear)=\"searchInputTerm = ''\">\r\n  </td-search-box>-->\r\n</div>`,\r\n        styles: [``]\r\n})\r\nexport class SearchBoxComponent implements OnInit {\r\n\r\n        constructor() { }\r\n\r\n        ngOnInit() {\r\n        }\r\n\r\n}",
    "import { Component, ViewChild, AfterViewInit, ElementRef } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { LayoutConfigurationService } from \"../../services/layout-configuration.service\";\r\n\r\n@Component({\r\n\tselector: \"app-logo-container\",\r\n\ttemplate: `<div id=\"background\"></div>\r\n  <img class=\"shatelLogoAnimation\" routerLink='/' src='../../../assets/images/shatel-logo.png' />\r\n<!--<img class=\"logoTypeAnimation\" src='../../../assets/images/logo-type.png' />-->`,\r\n\tstyles: [`.shatelLogoAnimation{height:35px;cursor:pointer;z-index:2}#background{position:absolute;top:0;right:0;width:300px;height:70px}`]\r\n})\r\nexport class LogoContainerComponent {\r\n\ttoolbarAnimationState: string;\r\n\r\n\tconstructor(private sdf: LayoutConfigurationService) {}\r\n}\r\n",
    "import { Component, Input, HostListener, Inject } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Location } from \"@angular/common\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { from } from \"rxjs/observable/from\";\r\nimport { DOCUMENT } from \"@angular/platform-browser\";\r\nimport { fromEvent } from \"rxjs/observable/fromEvent\";\r\nimport { of } from \"rxjs/observable/of\";\r\nimport { trigger, state, transition, style, animate } from \"@angular/animations\";\r\n\r\nimport { UserModel } from \"@soushians/user\";\r\nimport { LayoutConfigModel } from \"@soushians/config\";\r\n\r\nimport * as fromLayout from \"../../reducers\";\r\nimport {\r\n\tSignoutAction,\r\n\tOpenSecondSidenavAction,\r\n\tCloseSecondSidenavAction,\r\n\tCloseSidenavAction,\r\n\tOpenSidenavAction,\r\n\tChangeToolbatToComfortableModeAction,\r\n\tChangeToolbatToCompactModeAction,\r\n\tChangeToolbatToSummaryModeAction\r\n} from \"../../actions\";\r\nimport { FeatureState, getShowSecondSidebarStatus, getLayoutToolbar } from \"../../reducers\";\r\n\r\nimport { LayoutConfigurationService } from \"../../services/layout-configuration.service\";\r\nimport { State as toolbarState } from \"../../reducers/toolbar.reducer\";\r\n\r\n@Component({\r\n\tselector: \"layout-toolbar\",\r\n\ttemplate: `<mat-toolbar [@toolbarAnimation]=\"toolbarAnimationState | async\">\r\n  <mat-toolbar-row>\r\n    <app-logo-container fxFlex=\"none\" fxLayoutAlign=\"end center\"></app-logo-container>\r\n\r\n    <button type=\"button\" *ngIf='showSidebarMenu' (click)=\"toggleMainSidebar()\" mat-icon-button fxFlex=\"nogrow\" fxLayoutAlign=\"center center\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <span id='app-name'>\r\n      {{app_config?.Config.AppTitle}}\r\n    </span>\r\n    <app-title fxFlex fxLayoutAlign=\"start center\"></app-title>\r\n    <app-search-box fxFlex fxLayoutAlign=\"end center\"></app-search-box>\r\n    \r\n    <button *ngIf=\"!user.DisplayName\" mat-button routerLink=\"auth/signin\">\r\n      ورود\r\n    </button>\r\n    <button *ngIf=\"user.DisplayName\" mat-button [matMenuTriggerFor]=\"toolbarMenu1\">\r\n      <mat-icon>account_circle</mat-icon>\r\n      <span>\r\n        {{user?.DisplayName}}\r\n      </span>\r\n    </button>\r\n    <mat-menu #toolbarMenu1>\r\n      <button routerLink='/user/panel' mat-menu-item>\r\n        <mat-icon>fingerprint</mat-icon>\r\n        <span>\r\n          مدیریت کاربری\r\n        </span>\r\n      </button>\r\n      <button (click)='signout()' mat-menu-item>\r\n        <mat-icon>exit_to_app</mat-icon>\r\n        <span>خروج</span>\r\n      </button>\r\n    </mat-menu>\r\n    <button mat-icon-button type=\"button\" (click)=\"toggleSecondSidebar()\" fxFlex=\"nogrow\" fxLayoutAlign=\"center center\">\r\n      <mat-icon>notifications</mat-icon>\r\n    </button>\r\n    <button mat-icon-button (click)='goback()'>\r\n      <mat-icon>arrow_back</mat-icon>\r\n    </button>\r\n    \r\n  </mat-toolbar-row>\r\n  <mat-toolbar-row>\r\n    <button mat-button \r\n    *ngFor=\"let menu of menuItems$ | async\"\r\n    routerLinkActive=\"active\"\r\n    [routerLink]=\"[menu.route]\" \r\n    >\r\n    <!-- <mat-icon mat-list-icon>{{menu.icon}}</mat-icon> -->\r\n    <span>{{menu.title}}</span>\r\n  </button>\r\n</mat-toolbar-row>\r\n</mat-toolbar>`,\r\n\tstyles: [``],\r\n\tanimations: [\r\n\t\ttrigger(\"toolbarAnimation\", [\r\n\t\t\tstate(\r\n\t\t\t\t\"comfortable\",\r\n\t\t\t\tstyle({\r\n\t\t\t\t\tbackgroundColor: \"rgba(119,181,63,1)\",\r\n\t\t\t\t\tcolor: \"rgba(256,256,256,1)\",\r\n\t\t\t\t\theight: \"33vh\",\r\n\t\t\t\t\ttop: \"0\",\r\n\t\t\t\t\tboxShadow: \"1px 1px 3px rgba(0,0,0,0)\"\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t\tstate(\r\n\t\t\t\t\"compact\",\r\n\t\t\t\tstyle({\r\n\t\t\t\t\tbackgroundColor: \"rgba(256,256,256,1)\",\r\n\t\t\t\t\theight: \"128px\",\r\n\t\t\t\t\ttop: \"0\",\r\n\t\t\t\t\tboxShadow: \"1px 1px 3px rgba(0,0,0,0.5)\"\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t\tstate(\r\n\t\t\t\t\"summary\",\r\n\t\t\t\tstyle({\r\n\t\t\t\t\tbackgroundColor: \"rgba(256,256,256,1)\",\r\n\t\t\t\t\theight: \"128px\",\r\n\t\t\t\t\ttop: \"-64px\",\r\n\t\t\t\t\tboxShadow: \"1px 1px 3px rgba(0,0,0,0.5)\"\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t\ttransition(\"comfortable => compact\", animate(\"400ms ease-in\")),\r\n\t\t\ttransition(\"comfortable => summary\", animate(\"400ms ease-in\")),\r\n\t\t\ttransition(\"summary => compact\", animate(\"400ms ease-out\")),\r\n\t\t\ttransition(\"summary => comfortable\", animate(\"400ms ease-out\")),\r\n\t\t\ttransition(\"compact => comfortable\", animate(\"400ms ease-out\")),\r\n\t\t\ttransition(\"compact => summary\", animate(\"400ms ease-in\"))\r\n\t\t])\r\n\t]\r\n})\r\nexport class ToolbarMenuComponent {\r\n\tshowSecondSidenav: Observable<boolean>;\r\n\t@Input() showSidebarMenu;\r\n\t@Input(\"app-config\") app_config;\r\n\t@Input() user: UserModel;\r\n\tshowMainSidenav: Observable<boolean>;\r\n\ttoolbarAnimationState: Observable<\"comfortable\" | \"compact\" | \"summary\">;\r\n\tmenuItems$: Observable<any[]>;\r\n\tlastScroll: number;\r\n\tconfig: toolbarState;\r\n\tconfig$: Observable<toolbarState>;\r\n\tconstructor(\r\n\t\t@Inject(DOCUMENT) private document: any,\r\n\t\tprivate _location: Location,\r\n\t\tprivate store: Store<FeatureState>,\r\n\t\tpublic configurationService: LayoutConfigurationService\r\n\t) {\r\n\t\tthis.store.dispatch(new ChangeToolbatToComfortableModeAction());\r\n\t\tthis.config$ = this.store.select(getLayoutToolbar);\r\n\t\tthis.config$.subscribe(config => (this.config = config));\r\n\t\tthis.lastScroll = this.document.body.scrollTop;\r\n\t\tthis.showSecondSidenav = this.store.select(getShowSecondSidebarStatus);\r\n\t\tthis.showMainSidenav = this.store.select(fromLayout.getShowMainSidenav);\r\n\t\tthis.toolbarAnimationState = this.store.select(fromLayout.getLayoutToolbarMode);\r\n\t\tthis.menuItems$ = this.configurationService.config$.map(config => config.menuItems);\r\n\t\tfromEvent(this.document.body, \"scroll\").subscribe(() => {\r\n\t\t\tlet scrolledAmount = this.document.body.scrollTop;\r\n\t\t\tlet scrollToTop =\r\n\t\t\t\tscrolledAmount - this.lastScroll < 0 && this.document.body.scrollHeight - scrolledAmount < 100;\r\n\t\t\t// let scrollToTop = scrolledAmount - this.lastScroll < 0;\r\n\t\t\tthis.lastScroll = this.document.body.scrollTop;\r\n\t\t\tif (scrolledAmount == 0) {\r\n\t\t\t\tif (this.config.mode == \"comfortable\") return;\r\n\t\t\t\tthis.store.dispatch(new ChangeToolbatToComfortableModeAction());\r\n\t\t\t} else if (scrolledAmount < 128 || scrollToTop) {\r\n\t\t\t\tif (this.config.mode == \"compact\") return;\r\n\t\t\t\tthis.store.dispatch(new ChangeToolbatToCompactModeAction());\r\n\t\t\t} else {\r\n\t\t\t\tif (this.config.mode == \"summary\") return;\r\n\t\t\t\tthis.store.dispatch(new ChangeToolbatToSummaryModeAction());\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t@HostListener(\"body:scroll\", [])\r\n\tonWindowScroll() {\r\n\t\t// of(1)\r\n\t}\r\n\tsignout() {\r\n\t\tthis.store.dispatch(new SignoutAction());\r\n\t}\r\n\tgoback() {\r\n\t\tthis._location.back();\r\n\t}\r\n\ttoggleSecondSidebar() {\r\n\t\tlet action;\r\n\t\tthis.showSecondSidenav.subscribe(state => {\r\n\t\t\taction = state ? new CloseSecondSidenavAction() : new OpenSecondSidenavAction();\r\n\t\t});\r\n\t\tthis.store.dispatch(action);\r\n\t}\r\n\ttoggleMainSidebar() {\r\n\t\tlet action;\r\n\t\tthis.showMainSidenav.subscribe(state => {\r\n\t\t\taction = state ? new CloseSidenavAction() : new OpenSidenavAction();\r\n\t\t});\r\n\t\tthis.store.dispatch(action);\r\n\t}\r\n}\r\n",
    "import { Component, OnInit, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n\tselector: \"app-footer\",\r\n\ttemplate: `<div fxLayoutAlign=\"center center\" class=\"footer-text\">\r\n    {{app_config?.Config.FooterCopyright}}\r\n</div>`,\r\n\tstyles: [`:host{position:absolute;bottom:0;left:0;right:0;border-top:1px solid #e5e5e5;padding:8px;overflow:hidden}.footer-text{position:relative;top:12px}`]\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\t@Input(\"app-config\") app_config;\r\n\r\n\tconstructor() {}\r\n\r\n\tngOnInit() {}\r\n}\r\n",
    "import { Component } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Location } from '@angular/common';\r\n\r\nimport { SignoutAction, TitleChangedAction } from \"../../actions\";\r\nimport { FeatureState, getTitle } from \"../../reducers\";\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Route, Router, NavigationEnd } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-title',\r\n    template: `<div id=\"title\">\r\n    {{title$ | async}}\r\n</div>`,\r\n    styles: [`#title{margin-right:-30px;font-weight:bolder;font-size:13px;padding:18px 40px}`]\r\n})\r\nexport class TitleComponent {\r\n    title$: Observable<string>;\r\n    mapper: { (val: NavigationEnd): string }[]\r\n\r\n    constructor(\r\n        private store: Store<FeatureState>,\r\n        private router: Router\r\n\r\n    ) {\r\n        this.mapper = [];\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.endsWith('profile-edit')) ? 'ویرایش اطلاعات کاربری' : null;\r\n        // });\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.endsWith('success-payment-report')) ? 'گزارش پرداخت های موفق' : null;\r\n        // });\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.endsWith('failed-login-report')) ? 'گزارش خطاها' : null;\r\n        // });\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.endsWith('active-session-info')) ? 'جزئیات بسته فعال' : null;\r\n        // });\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.endsWith('session-detail-report')) ? 'جزئیات اتصال' : null;\r\n        // });\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.endsWith('daily-session-report')) ? 'گزارش تجمیعی روزانه' : null;\r\n        // });\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.endsWith('monthly-session-report')) ? 'گزارش تجمیعی ماهانه' : null;\r\n        // });\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.startsWith('/packages/user-packages')) ? 'لیست پکیج ها' : null;\r\n        // });\r\n        // this.mapper.push((event: NavigationEnd) => {\r\n        //     return (event.url.endsWith('/change-password')) ? 'تغییر کلمه عبور' : null;\r\n        // });\r\n\r\n        this.title$ = this.store.select(getTitle);\r\n\r\n        this.router.events.subscribe((event) => {\r\n            if (event instanceof NavigationEnd) {\r\n                var title = \"\";\r\n                this.mapper.forEach(mapper => {\r\n                    let res = mapper(event);\r\n                    if (res) {\r\n                        title = res;\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                this.store.dispatch(new TitleChangedAction(\"/ \" + title || \"\"));\r\n            }\r\n        });\r\n\r\n    }\r\n}",
    "import { Component, ElementRef, ViewChild, AfterViewInit, OnDestroy, Input } from \"@angular/core\";\r\nimport { Router, NavigationEnd } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n// import { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { SwPush } from \"@angular/service-worker\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { MatSidenav, MatSidenavContainer } from \"@angular/material\";\r\n\r\nimport { ConfigModel, getAppConfig } from \"@soushians/config\";\r\nimport { UserModel, getUserInfo } from \"@soushians/user\";\r\n\r\nimport {\r\n\tFeatureState,\r\n\tgetShowMainSidenav,\r\n\tgetMainSideNavMode,\r\n\tgetShowSecondSidebarStatus,\r\n\tgetSecondSidebarMode,\r\n\tgetLayoutMode,\r\n\tgetLayoutToolbarMode\r\n} from \"../../reducers\";\r\n\r\nimport {\r\n\tCloseSecondSidenavAction,\r\n\tChangeSecondSidenavMode,\r\n\tOpenSecondSidenavAction,\r\n\tChangeSideNavMode,\r\n\tCloseSidenavAction,\r\n\tOpenSidenavAction,\r\n\tChangeLayout,\r\n\tChangeToolbatToComfortableModeAction\r\n} from \"../../actions\";\r\n\r\n@Component({\r\n\tselector: \"layout-main\",\r\n\ttemplate: `<div #mainSideNav [className]=\"toolbarAnimationState | async\">\r\n  <!-- <mat-progress-bar *ngIf='progressStatus$ | async' color=\"primary\" mode=\"query\"></mat-progress-bar> -->\r\n  <layout-toolbar [user]=\"user$ | async\" [showSidebarMenu]='showSidebarMenu | async' [app-config]=\"app_config\"></layout-toolbar>\r\n  \r\n  <mat-sidenav-container id=\"layout-sidnav\">\r\n    <mat-sidenav [mode]=\"mainSidenavMode | async\" [opened]='showMainSidenav | async' #sidebar (closedStart)=\"onSidebarClosedStart()\">\r\n      <mat-nav-list>\r\n        <ngs-layout-main-menu [authenticated]='showSidebarMenu' (closeSidebar)=\"sidebar.close()\" (click)=\"onSecondSidebarClosedStart()\"></ngs-layout-main-menu>\r\n      </mat-nav-list>\r\n    </mat-sidenav>\r\n    <!-- <mat-sidenav [mode]=\"secondSidenavMode | async\" [opened]='showSecondSidenav | async' (closedStart)=\"onSecondSidebarClosedStart()\"\r\n      position=\"end\" #second_sidebar class=\"second_sidebar\">\r\n      <mat-nav-list fxLayout='column'>\r\n      </mat-nav-list>\r\n    </mat-sidenav> -->\r\n    <div fxFlexLayout='column' id=\"app-main-container\" fxLayoutAlign='center center'>\r\n      <div fxFlex='0 0 100'>\r\n        <router-outlet></router-outlet>\r\n        <router-outlet name=\"footer_A\"></router-outlet>\r\n        <router-outlet name=\"footer_B\"></router-outlet>\r\n        <footer>\r\n          <app-footer [app-config]=\"app_config\"></app-footer>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  </mat-sidenav-container>\r\n</div>`,\r\n\tstyles: [`#purchase-fab-button{position:fixed;bottom:23px;left:31px}md-progress-bar{position:absolute!important}.with-margin #app-main-container{margin-top:25px;padding-right:25px;padding-left:25px}.second_sidebar{width:380px}.more-detail{margin:8px;box-sizing:border-box;padding:10px;text-align:center;width:96%;border:1px solid #dedede;outline:0;cursor:pointer;transition:all .3s ease}.more-detail:hover{background:#eee}`]\r\n})\r\nexport class MainComponent {\r\n\tuser$: Observable<UserModel>;\r\n\tprogressStatus$: Observable<boolean>;\r\n\tshowSidebarMenu = new BehaviorSubject(true);\r\n\t//user$: Observable<UserModel>;\r\n\tshowMainSidenav: Observable<boolean>;\r\n\tmainSidenavMode: Observable<\"side\" | \"over\" | \"push\">;\r\n\tlayoutMode: Observable<\"with-margin\" | \"without-margin\" | \"default\">;\r\n\t@Input(\"app-config\") app_config: ConfigModel<any>;\r\n\twidth = 100;\r\n\tshowSecondSidenav: Observable<boolean>;\r\n\tsecondSidenavMode: Observable<\"side\" | \"over\" | \"push\">;\r\n\ttoolbarAnimationState: Observable<string>;\r\n\t@ViewChild(\"mainSideNav\") mainSideNav: ElementRef;\r\n\r\n\tconstructor(private store: Store<FeatureState>, private router: Router) {\r\n\t\tthis.store.dispatch(new ChangeSideNavMode(\"push\"));\r\n\t\tthis.user$ = this.store.select((s) => (s as any).user.user.data);\r\n\t\tthis.user$.subscribe((data) => {\r\n\t\t\tdebugger;\r\n\t\t});\r\n\t\tthis.showMainSidenav = this.store.select(getShowMainSidenav);\r\n\t\tthis.mainSidenavMode = this.store.select(getMainSideNavMode);\r\n\t\tthis.toolbarAnimationState = this.store.select(getLayoutToolbarMode);\r\n\r\n\t\t//#region manage second sidebar\r\n\t\tthis.store.dispatch(new ChangeSecondSidenavMode(\"push\"));\r\n\t\tthis.showSecondSidenav = this.store.select(getShowSecondSidebarStatus);\r\n\t\tthis.secondSidenavMode = this.store.select(getSecondSidebarMode);\r\n\t\t//#endregion manage second sidebar\r\n\r\n\t\tthis.layoutMode = this.store.select(getLayoutMode);\r\n\r\n\t\tthis.router.events.filter((data) => data instanceof NavigationEnd).subscribe((event) => {\r\n\t\t\tvar hideSituations = [\r\n\t\t\t\t(event as NavigationEnd).urlAfterRedirects == \"/auth/signin\",\r\n\t\t\t\t(event as NavigationEnd).urlAfterRedirects == \"/auth/signup/register\",\r\n\t\t\t\t(event as NavigationEnd).urlAfterRedirects == \"/auth/signup/verification\",\r\n\t\t\t\t(event as NavigationEnd).urlAfterRedirects == \"/user/password/reset\"\r\n\t\t\t];\r\n\t\t\tif (hideSituations.some((i) => i)) this.showSidebarMenu.next(false);\r\n\t\t\telse this.showSidebarMenu.next(true);\r\n\t\t});\r\n\r\n\t\tthis.layoutMode.subscribe((mode) => {\r\n\t\t\tif (!this.mainSideNav) return;\r\n\t\t\t(this.mainSideNav.nativeElement as HTMLDivElement).className = \"\";\r\n\t\t\t(this.mainSideNav.nativeElement as HTMLDivElement).classList.add(mode);\r\n\t\t});\r\n\t}\r\n\r\n\t// ngAfterViewInit() {\r\n\t// \tthis.store.dispatch(new ChangeLayout(\"with-margin\"));\r\n\t// }\r\n\r\n\tonSecondSidebarClosedStart() {\r\n\t\tthis.store.dispatch(new CloseSecondSidenavAction());\r\n\t}\r\n\r\n\tonSidebarClosedStart() {\r\n\t\tthis.store.dispatch(new CloseSidenavAction());\r\n\t}\r\n}\r\n",
    "import { NgModule, ModuleWithProviders } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport {\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatSnackBarModule,\r\n\tMatSidenavModule,\r\n\tMatExpansionModule,\r\n\tMatSelectModule,\r\n\tMatFormFieldModule,\r\n\tMatListModule,\r\n\tMatMenuModule,\r\n\tMatRadioModule,\r\n\tMatInputModule,\r\n\tMatToolbarModule,\r\n\tMatDatepickerModule,\r\n\tMatProgressBarModule\r\n} from \"@angular/material\";\r\n\r\nimport { NgsConfigModule } from \"@soushians/config\";\r\n\r\nimport { LayoutReducers } from \"./reducers\";\r\n\r\nimport { MODULE_CONFIG_TOKEN, LayoutModuleConfig } from \"./layout.config\";\r\nimport { MainMenuComponent } from \"./dumb-components/main-menu/main-menu.component\";\r\nimport { SearchBoxComponent } from \"./dumb-components/search-box/search-box.component\";\r\nimport { LogoContainerComponent } from \"./dumb-components/logo-container/logo-container.component\";\r\nimport { ToolbarMenuComponent } from \"./dumb-components/toolbar-menu/toolbar-menu.component\";\r\nimport { FooterComponent } from \"./dumb-components/footer/footer.component\";\r\nimport { TitleComponent } from \"./dumb-components/title/title.component\";\r\nimport { MainComponent } from \"./dumb-components/main/main.component\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tBrowserModule,\r\n\t\tRouterModule,\r\n\t\tFormsModule,\r\n\t\tHttpClientModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatSnackBarModule,\r\n\t\tMatSidenavModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatSelectModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatListModule,\r\n\t\tMatMenuModule,\r\n\t\tMatRadioModule,\r\n\t\tMatInputModule,\r\n\t\tMatToolbarModule,\r\n\t\tMatDatepickerModule,\r\n\t\tMatProgressBarModule,\r\n\t\tRouterModule,\r\n\t\tNgsConfigModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tMainMenuComponent,\r\n\t\tSearchBoxComponent,\r\n\t\tLogoContainerComponent,\r\n\t\tToolbarMenuComponent,\r\n\t\tFooterComponent,\r\n\t\tTitleComponent,\r\n\t\tMainComponent\r\n\t],\r\n\texports: [\r\n\t\tMainMenuComponent,\r\n\t\tSearchBoxComponent,\r\n\t\tLogoContainerComponent,\r\n\t\tToolbarMenuComponent,\r\n\t\tFooterComponent,\r\n\t\tTitleComponent,\r\n\t\tMainComponent\r\n\t]\r\n})\r\nexport class NgsLayoutModule {\r\n\tstatic forRoot(config?: LayoutModuleConfig): ModuleWithProviders {\r\n\t\treturn {\r\n\t\t\tngModule: RootNgsLayoutModule,\r\n\t\t\tproviders: [ { provide: MODULE_CONFIG_TOKEN, useValue: config } ]\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\timports: [ NgsLayoutModule, StoreModule.forFeature(\"layout\", LayoutReducers) ],\r\n\texports: [ NgsLayoutModule ]\r\n})\r\nexport class RootNgsLayoutModule {}\r\n"
  ],
  "names": [
    "OPEN_SIDENAV",
    "CLOSE_SIDENAV",
    "UPDATE_LAYOUT_CONFIG",
    "SIGNOUT",
    "TITLE_CHANGED",
    "CHANGE_LAYOUT",
    "CHANGE_MAIN_SIDENAVE_MODE",
    "OPEN_SECOND_SIDEBAR",
    "CLOSE_SECOND_SIDEBAR",
    "CHANGE_SECOND_SIDENAV_MODE",
    "UpdateLayoutConfigAction",
    "payload",
    "this",
    "type",
    "LayoutActionTypes",
    "OpenSidenavAction",
    "CloseSidenavAction",
    "ChangeLayout",
    "ChangeSideNavMode",
    "mode",
    "title",
    "initialState",
    "showMainSidenav",
    "showSecondSideNav",
    "secondSideNavMode",
    "mainSideNavMode",
    "showLeftNavBar",
    "stickyLeftNavBar",
    "layoutMode",
    "menuItems",
    "ChangeToolbatToComfortableModeAction",
    "ToolbarActionTypes",
    "ChangeToolbatToCompactModeAction",
    "ChangeToolbatToSummaryModeAction",
    "enableComfortableMode",
    "comfortableModeHaveBeenDone",
    "LayoutReducers",
    "layout",
    "state",
    "action",
    "layout.LayoutActionTypes",
    "Object",
    "assign",
    "layout.CLOSE_SIDENAV",
    "layout.OPEN_SIDENAV",
    "name",
    "toolbar",
    "selectLayoutState",
    "createFeatureSelector",
    "getLayout",
    "createSelector",
    "getTitle",
    "getShowMainSidenav",
    "getMainSideNavMode",
    "getLayoutMode",
    "getShowSecondSidebarStatus",
    "getSecondSidebarMode",
    "getLayoutToolbar",
    "getLayoutToolbarMode",
    "MODULE_DEFAULT_CONFIG",
    "route",
    "icon",
    "roles",
    "MODULE_CONFIG_TOKEN",
    "InjectionToken",
    "LayoutConfigurationService",
    "configFile",
    "store",
    "_this",
    "config$",
    "BehaviorSubject",
    "_config",
    "next",
    "select",
    "getlayoutModuleConfig",
    "subscribe",
    "config",
    "dispatch",
    "Config",
    "get",
    "enumerable",
    "configurable",
    "decorators",
    "Injectable",
    "args",
    "MainMenuComponent",
    "signinService",
    "configurationService",
    "closeSidebar",
    "EventEmitter",
    "routes",
    "map",
    "Component",
    "selector",
    "height",
    "opacity",
    "style",
    "transition",
    "animate",
    "trigger",
    "ctorParameters",
    "Store",
    "SigninService",
    "authenticated",
    "Input",
    "customerMobileInput",
    "ViewChild",
    "SearchBoxComponent",
    "prototype",
    "ngOnInit",
    "styles",
    "LogoContainerComponent",
    "sdf",
    "template",
    "ToolbarMenuComponent",
    "document",
    "_location",
    "lastScroll",
    "body",
    "scrollTop",
    "showSecondSidenav",
    "fromLayout.getShowMainSidenav",
    "toolbarAnimationState",
    "fromLayout.getLayoutToolbarMode",
    "menuItems$",
    "fromEvent",
    "scrolledAmount",
    "scrollToTop",
    "scrollHeight",
    "onWindowScroll",
    "signout",
    "SignoutAction",
    "goback",
    "back",
    "toggleSecondSidebar",
    "CloseSecondSidenavAction",
    "OpenSecondSidenavAction",
    "toggleMainSidebar",
    "FooterComponent",
    "propDecorators",
    "TitleComponent",
    "router",
    "title$",
    "events",
    "event",
    "NavigationEnd",
    "mapper",
    "forEach",
    "res",
    "TitleChangedAction",
    "MainComponent",
    "showSidebarMenu",
    "width",
    "user$",
    "s",
    "user",
    "data",
    "mainSidenavMode",
    "ChangeSecondSidenavMode",
    "secondSidenavMode",
    "filter",
    "urlAfterRedirects",
    "some",
    "i",
    "mainSideNav",
    "className",
    "classList",
    "add",
    "onSecondSidebarClosedStart",
    "onSidebarClosedStart",
    "NgsLayoutModule",
    "forRoot",
    "ngModule",
    "RootNgsLayoutModule",
    "providers",
    "provide",
    "useValue",
    "NgModule",
    "imports",
    "CommonModule",
    "BrowserModule",
    "RouterModule",
    "FormsModule",
    "HttpClientModule",
    "FlexLayoutModule",
    "MatIconModule",
    "MatButtonModule",
    "MatCardModule",
    "MatSnackBarModule",
    "MatSidenavModule",
    "MatExpansionModule",
    "MatSelectModule",
    "MatFormFieldModule",
    "MatListModule",
    "MatMenuModule",
    "MatRadioModule",
    "MatInputModule",
    "MatToolbarModule",
    "MatDatepickerModule",
    "MatProgressBarModule",
    "NgsConfigModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
