{
  "version": 3,
  "file": "time-unit.pipe.js",
  "sources": [
    "ng://@soushians/shared/projects/soushians/shared/src/lib/pipes/time-unit.pipe.ts"
  ],
  "sourcesContent": [
    "import { PipeTransform, Pipe } from \"@angular/core\";\r\n\r\ninterface TimeUnitExtractor {\r\n    count: number;\r\n    value: string;\r\n    remaining: number;\r\n}\r\n\r\n@Pipe({ name: 'timeUnit' })\r\nexport class TimeUnitPipe implements PipeTransform {\r\n\r\n    private getDays(value: number): TimeUnitExtractor {\r\n        let rate = 60 * 60 * 24\r\n        let count = Math.floor(value / rate);\r\n        return {\r\n            count,\r\n            value: count + ' روز',\r\n            remaining: value - count * rate\r\n        };\r\n    }\r\n    private getHours(value: number): TimeUnitExtractor {\r\n        let rate = 60 * 60;\r\n        let count = Math.floor(value / rate);\r\n        return {\r\n            count,\r\n            value: count + ' ساعت',\r\n            remaining: value - count * rate\r\n        };\r\n    }\r\n    private getMinuts(value: number): TimeUnitExtractor {\r\n        let rate = 60;\r\n        let count = Math.floor(value / rate);\r\n        return {\r\n            count,\r\n            value: count + ' دقیقه',\r\n            remaining: value - count * rate\r\n        };\r\n    }\r\n    private getSeconds(value: number): TimeUnitExtractor {\r\n        let count = Math.floor((value));\r\n        return {\r\n            count,\r\n            value: count + ' ثانیه',\r\n            remaining: value - count\r\n        };\r\n    }\r\n\r\n\r\n    transform(value: number, exponent: string): string {\r\n        if (value === 0) return '0 دقیقه';\r\n        if (!value) return '';\r\n\r\n        const connector = ' و ';\r\n\r\n        let daysData = this.getDays(value);\r\n        let hoursData = this.getHours(daysData.remaining);\r\n        let minutsData = this.getMinuts(hoursData.remaining);\r\n        // let secondssData = this.getSeconds(minutsData.remaining);\r\n\r\n        return [daysData, hoursData, minutsData/*, secondssData*/]\r\n            .filter(i => i.count)\r\n            .map(i => i.value).join(connector);\r\n\r\n    }\r\n}"
  ],
  "names": [],
  "mappings": ";;;;AAAA,OAAO,EAAiB,IAAI,EAAE,MAAM,eAAe,CAAC;;;;;;;;;;;;;AASpD,MAAM;;;;;IAEM,OAAO,CAAC,KAAa;QACzB,qBAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;QACvB,qBAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;QACrC,MAAM,CAAC;YACH,KAAK;YACL,KAAK,EAAE,KAAK,GAAG,MAAM;YACrB,SAAS,EAAE,KAAK,GAAG,KAAK,GAAG,IAAI;SAClC,CAAC;;;;;;IAEE,QAAQ,CAAC,KAAa;QAC1B,qBAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;QACnB,qBAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;QACrC,MAAM,CAAC;YACH,KAAK;YACL,KAAK,EAAE,KAAK,GAAG,OAAO;YACtB,SAAS,EAAE,KAAK,GAAG,KAAK,GAAG,IAAI;SAClC,CAAC;;;;;;IAEE,SAAS,CAAC,KAAa;QAC3B,qBAAI,IAAI,GAAG,EAAE,CAAC;QACd,qBAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;QACrC,MAAM,CAAC;YACH,KAAK;YACL,KAAK,EAAE,KAAK,GAAG,QAAQ;YACvB,SAAS,EAAE,KAAK,GAAG,KAAK,GAAG,IAAI;SAClC,CAAC;;;;;;IAEE,UAAU,CAAC,KAAa;QAC5B,qBAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC;YACH,KAAK;YACL,KAAK,EAAE,KAAK,GAAG,QAAQ;YACvB,SAAS,EAAE,KAAK,GAAG,KAAK;SAC3B,CAAC;;;;;;;IAIN,SAAS,CAAC,KAAa,EAAE,QAAgB;QACrC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,SAAS,CAAC;QAClC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;YAAC,MAAM,CAAC,EAAE,CAAC;QAEtB,uBAAM,SAAS,GAAG,KAAK,CAAC;QAExB,qBAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACnC,qBAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAClD,qBAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;;QAGrD,MAAM,CAAC,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAmB;aACrD,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;aACpB,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAE1C;;;YAvDJ,IAAI,SAAC,EAAE,IAAI,EAAE,UAAU,EAAE"
}
